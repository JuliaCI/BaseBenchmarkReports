cset: moving following pidspec: 29221
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.548511772 seconds)
loading group "shootout"... done (took 1.185407415 seconds)
loading group "string"... done (took 0.39512873 seconds)
loading group "linalg"... done (took 7.556530803 seconds)
loading group "parallel"... done (took 0.151718166 seconds)
loading group "find"... done (took 1.354239297 seconds)
loading group "tuple"... done (took 1.816118932 seconds)
loading group "union"... done (took 12.154286764 seconds)
loading group "dates"... done (took 1.261462788 seconds)
loading group "micro"... done (took 0.191028916 seconds)
loading group "simd"... done (took 4.112064915 seconds)
loading group "io"... done (took 0.982372952 seconds)
loading group "random"... done (took 8.458498945 seconds)
loading group "problem"... done (took 1.481554217 seconds)
loading group "array"... done (took 18.1386341 seconds)
loading group "misc"... done (took 1.433293214 seconds)
loading group "scalar"... done (took 37.523121725 seconds)
loading group "sort"... done (took 2.856486311 seconds)
loading group "sparse"... done (took 11.226834855 seconds)
loading group "collection"... done (took 16.543520978 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.493537276 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124776147 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.127941742 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.116245204 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.144190194 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118473018 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123433882 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084158956 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.901939998 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.138371994 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.112531589 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.431371918 seconds)
done (took 5.212042369 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.161226615 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085752665 seconds)
    (2/2) benchmarking "String"...
    done (took 0.075805711 seconds)
  done (took 1.242148417 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.061459259 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122938299 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.061875583 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.062998999 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06379102 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06333121 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.062822583 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.063251506 seconds)
  done (took 1.582740299 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.06842431 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.063681112 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.062761227 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.064843121 seconds)
  done (took 1.340056734 seconds)
done (took 5.483391106 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.230283725 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.097961244 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.279824997 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.389853127 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.450851974 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.088858679 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.071268154 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.067294617 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.127632161 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.327135433 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106769293 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.182734188 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089613685 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.176953364 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.954294516 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.115405633 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081001636 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.118887467 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089209104 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128792876 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.408005231 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.075323261 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.071273446 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.06790973 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.064590246 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.62378321 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.648861633 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.128731486 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080772774 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.099066089 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.112373178 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.63586828 seconds)
  done (took 10.307867728 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.090206038 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.087829494 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.065543643 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123198477 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.092569836 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.067312091 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073659063 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.064497217 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089556431 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12311981 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088725785 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.098734063 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.063440161 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.066476643 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.074323672 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.196218451 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.077688669 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.078116664 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.065834786 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078158004 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105547794 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077324662 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077404597 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07715302 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127611092 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.16863859 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095743272 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.0958714 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.064976339 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.078920747 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11214507 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124981404 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.061972555 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.063323636 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.118400609 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09297216 seconds)
  done (took 4.433112506 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.941263088 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.08761352 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.102071618 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.610313171 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.061677965 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.152334282 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244103419 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.070993043 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.45345075 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.110197672 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.144603065 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.110048395 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.142932233 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.111823402 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.068022316 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.239343367 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.11527187 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.39500967 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.06678862 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.065417125 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.063297647 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.066748558 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066165149 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.061063912 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068401157 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.089941724 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.085355599 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.157850089 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.940412241 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.254995888 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.065947981 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161737564 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.081007373 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.356469212 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.068974964 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.08277034 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.062643418 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.401417611 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.121585005 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064794868 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174332969 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.116361236 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.062978439 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.115120855 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.078843625 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.068198979 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.067473628 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.069476858 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070056241 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.078072963 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.101282018 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063645325 seconds)
    (52/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066188093 seconds)
    (53/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.063066304 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.163088277 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063328322 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065224541 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.066423163 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.147736267 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063753905 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.143726451 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063412412 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06706707 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.095980999 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.067493809 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.089899368 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.103732307 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.331728676 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.035236358 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.065202136 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.213029683 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.074443684 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.064073861 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070773796 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065526856 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.066999895 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066757569 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.074660758 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.06927981 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067895755 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.108747365 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.063959542 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.067155876 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.06484194 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.071178641 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.099955403 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06223268 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.457638874 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.09817301 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064044485 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.077527838 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065059664 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.104966837 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064170779 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.072844692 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.066843126 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.065650844 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064524199 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066542419 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069725458 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.092723637 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068509512 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.217303594 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.051224019 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.066088645 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065307669 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.071943676 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069619804 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068364333 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065924791 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069667593 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067085946 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063755415 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.116674785 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.066452689 seconds)
  done (took 21.701821234 seconds)
done (took 38.465631715 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.254054545 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083483299 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.084233606 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083818316 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083535381 seconds)
  done (took 1.768965064 seconds)
done (took 2.933757478 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.106951254 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.062841047 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.100738217 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.099524488 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.065593068 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.062724238 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.097261374 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.063247757 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.097022392 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.100061285 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.102562294 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.100779166 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.063202057 seconds)
  done (took 2.303119662 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.067103444 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079678104 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083611237 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061542482 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.070672122 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080734391 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060981722 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.079512707 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.088070164 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080887275 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080834669 seconds)
  done (took 1.993643798 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.066523838 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080605427 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.084333739 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061651513 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.07235582 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080937196 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061386285 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080839369 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.08634326 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080972086 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.081386517 seconds)
  done (took 1.990902542 seconds)
done (took 7.442574717 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.066146324 seconds)
  done (took 1.208800467 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.545051702 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.724353918 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.068578817 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.091279541 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.191384021 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.104162127 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.241158156 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.076467724 seconds)
  done (took 8.364655345 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.100320058 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070162348 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070195798 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.069604635 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070071915 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069245404 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069350474 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.068956629 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.068171201 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070011583 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069447638 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069126291 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068470756 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069030685 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069148057 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.068599756 seconds)
  done (took 2.377430124 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095845105 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.097080651 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073851707 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07617745 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07275295 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072761944 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075144598 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088056182 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.067348481 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.068994654 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071955372 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07009347 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.069274744 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.060370578 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.070493563 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.072320486 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.067554429 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.070342633 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.070817966 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.071933979 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.071425618 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06022001 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.069752686 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.070220858 seconds)
  done (took 3.015393423 seconds)
done (took 16.121700742 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.108947818 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072796834 seconds)
  done (took 1.341097455 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.065859469 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.067472759 seconds)
  done (took 1.304849746 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.07410902 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.057173844 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.083888026 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.071134794 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.059104731 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.058424955 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.081027393 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.059013401 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.058858723 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.058648786 seconds)
  done (took 1.834597044 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.060012385 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.067609238 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066313111 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.068907809 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.066350708 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.060453638 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.063546223 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.060341899 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.069744348 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.059400533 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.065123387 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080122869 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.064257363 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.081770275 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.064025644 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.065523374 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067551162 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064265072 seconds)
  done (took 2.371824403 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.057555407 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.058870917 seconds)
  done (took 1.296359767 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.0622562 seconds)
    (2/7) benchmarking "second"...
    done (took 0.058535207 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063452706 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063016135 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.059794009 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.059020079 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.060421892 seconds)
  done (took 1.601796619 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.342624182 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.114435565 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.307534755 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.066022001 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.076241414 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.241333976 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06003167 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.065361439 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.065183212 seconds)
  done (took 2.556995916 seconds)
done (took 13.496808581 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.075482087 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08017214 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.086311959 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.415976878 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.089635146 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.063378415 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.109653776 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.163834875 seconds)
done (took 2.277444113 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.207446211 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.441712324 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.941755662 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.06335065 seconds)
  done (took 3.630212315 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.314155631 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.080616135 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073776071 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064146985 seconds)
  done (took 1.727821642 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.060716951 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067901994 seconds)
  done (took 1.319121329 seconds)
done (took 8.077554059 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.085717211 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.059975436 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.060220293 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.060106704 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.060428441 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.060201452 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.060341091 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06062804 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.060328506 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.060286113 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.060613088 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.060389605 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.05991232 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060391843 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060431365 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060514289 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060323278 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060675696 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06034071 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060343215 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060053749 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060841962 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.060812486 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.060352368 seconds)
  done (took 2.690950686 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.076030165 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.062952123 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.064992133 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.064249944 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.064501753 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.064024165 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.064518694 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.062681107 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.064802558 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.062524742 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064368799 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.064852203 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.062572068 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.064861899 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062659225 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.065050197 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.064169861 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063189941 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062751017 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.06452967 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.063926814 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062691275 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.064586749 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064315378 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.064854893 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064583048 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.062704008 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06328367 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064766665 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.065001829 seconds)
  done (took 3.128249056 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.060164446 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.057043649 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.058027875 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.065894625 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.057214841 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.05798337 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.058065149 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.057214299 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.057404887 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.058803637 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.058240919 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.057053647 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.058293522 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.057531903 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.057372036 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.057958016 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.061091938 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.074541905 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.057341052 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.057066227 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.061213214 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.057079375 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.057151166 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.05696045 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.058274908 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.056933648 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.056843726 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.058052382 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.057038572 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.057987117 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057290658 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.060714964 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.061674367 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.057437857 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066467532 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.061365237 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.057033988 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.060946131 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.05857282 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.056958564 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.057003427 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.056864144 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.057241919 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.057245516 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.066335365 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.057687235 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.059106291 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.057993429 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.057268996 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.057054519 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.057348432 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.059766003 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.062081891 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.058952161 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.057298712 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.058614876 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.057300212 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.058123909 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.057223557 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.056892568 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.057131032 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060416146 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.059186618 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.058467068 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.074604188 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.059332885 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.06589852 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.057019765 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060548155 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.060237758 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.058038632 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.072454291 seconds)
  done (took 5.467735214 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083265315 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083793861 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.061997569 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.061829105 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058165911 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.058502779 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066116031 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058161378 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062375722 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078358399 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058235216 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062545015 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061970912 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062466213 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058557219 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062406801 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066748006 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.05841682 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.058229278 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062627751 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.057979775 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.065738694 seconds)
  done (took 2.620450125 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.134524203 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063131966 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.100288473 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075573259 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067109438 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074973939 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063705163 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06396554 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064024015 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064767629 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064191362 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064057194 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066431859 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064086158 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064397911 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064693493 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063885439 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06426073 seconds)
  done (took 2.491559721 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.073370672 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.062636687 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08564643 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063113207 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06275494 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062796595 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067643846 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068804002 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.063512397 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.063356292 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.068984085 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062850757 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.062799182 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062784184 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062808732 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.063052027 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06295092 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062903601 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06846515 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067750405 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06739283 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069164312 seconds)
  done (took 2.661222928 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071521136 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.061779229 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075869592 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063944243 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058181296 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058178325 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.063793171 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.061925116 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.063299198 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.061966128 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062354555 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058401873 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.064007157 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062800413 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.064716462 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062333048 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.061909621 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06245051 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061902201 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058141163 seconds)
  done (took 2.465801766 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082388657 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060346781 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061053243 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080127486 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060873765 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.062279293 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07915444 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.060971108 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.060737152 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082150123 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060774352 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061284299 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079272598 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079025232 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06094054 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079401143 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078826665 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079328641 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061049842 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061145332 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082823033 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.061506197 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079276687 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061192173 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061328437 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.061279535 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0613599 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078971973 seconds)
  done (took 3.145816031 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.059820364 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068120225 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.060487753 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.060537053 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.060616095 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.060439635 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.061007402 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.061143411 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061429061 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.060832154 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.060390027 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.060401999 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060498071 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.060312945 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.060429084 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.060580202 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060220406 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.060639637 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060473048 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060490232 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.060016844 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059937878 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.059904826 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.060545407 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06096464 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060148316 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060425691 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.060063443 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.05993767 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.060262284 seconds)
  done (took 3.033164653 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.06986812 seconds)
    (2/2) benchmarking "in"...
    done (took 0.069055711 seconds)
  done (took 1.350754123 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.059125904 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074139 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.058326692 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067054889 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067161783 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061361067 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.067547903 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066935949 seconds)
  done (took 1.728530181 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.064081039 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.087552987 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.060149046 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.060407464 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.064355686 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.118217711 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.073664706 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.068633919 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073617967 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.060589337 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.060036794 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.071938303 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.059269738 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.070153295 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061236316 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068492251 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066576818 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071301331 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070260395 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.057515028 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072701792 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062785988 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.058174205 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.060582057 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.05956247 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.064713221 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.073251365 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.069594267 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066260387 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.056642803 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.079828158 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.058004283 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.059833207 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066625959 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.063081 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.058411211 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093550568 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.058713447 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.064861397 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.057807238 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069384548 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07970677 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.070993118 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.075792268 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.059830135 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.061008947 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.057761407 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.06037027 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.061281779 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.066502834 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.057914659 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064282088 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.057552956 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.060488078 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.067350122 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.058279387 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.064763276 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.066157617 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072228958 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.067568983 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.065355477 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072190041 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.066309169 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.068568506 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.059542864 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077328222 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.060429722 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069549471 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071464298 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.060293167 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072272 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.058078105 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.057298316 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.058487218 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090876362 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06011318 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.060186667 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.058802507 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.058127587 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.059852017 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06679436 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064926457 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064213023 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062605758 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074404147 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067700629 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.057934129 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.067626624 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.075551711 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.060242754 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.058294767 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.073233955 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06061737 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.058108439 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075238026 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.06631594 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.060660345 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.060782943 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.061402754 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070635307 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.059785416 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.057128986 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065271269 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.060178523 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.061850076 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.063780739 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064466419 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.057994408 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067377922 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.06417558 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.059834813 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.056259673 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.060858084 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.058530146 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.055973233 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065274007 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.057099418 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071051581 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.063262592 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.06984243 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071346523 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.066774933 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073725132 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.057787906 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.055976894 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.075680621 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.065266667 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.05880428 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075677173 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.056810789 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.197877487 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.059485015 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.062240706 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.068108705 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058470106 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062346351 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.059267634 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.065884834 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.061120867 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061172731 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06170852 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.065789557 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.069737135 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.059953217 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.065820332 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.059030038 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072994432 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.066832772 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.062306186 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063550818 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.05947358 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.069841958 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.064815354 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068185829 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.058106647 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.058968357 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.058292795 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068418684 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.066767353 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.061209987 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.068421549 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.062212753 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.059138326 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.058300095 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.059777657 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061378703 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062703898 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.05913616 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066785216 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068133153 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.071671506 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069942799 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.066063195 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.058674362 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.058152296 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.060912274 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.058201431 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06326897 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067142671 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072306699 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.069124635 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07710962 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.058392641 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.066874232 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.0607594 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074194815 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.069517189 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.059392821 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064360866 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.056978017 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060396672 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067473471 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068727249 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.071898741 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071631108 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.063132933 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.062071527 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.057936205 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071437674 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.058969397 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065801547 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.068579942 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.064623718 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.05937785 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.060963088 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.066548608 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06213549 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.058806306 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.074137069 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.066564648 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.058139687 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071063791 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.058958788 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.068663579 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.058197903 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.060859657 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.061957224 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.060765755 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.066790286 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075611798 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057433919 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.059615597 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075951766 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.060394183 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060257184 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064507725 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.072921453 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.062740352 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.064659969 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067557106 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.066213076 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.061639258 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.066097872 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.059361543 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.067940797 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.062666182 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.068764158 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.058341357 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07443971 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.056891047 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.071474566 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.058489812 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.068184545 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.059224757 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066809371 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.05879048 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.073112976 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.059781931 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.059186126 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.069112171 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.056101911 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.067306614 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.05665844 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.061070123 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.062515147 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.066967612 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.059460098 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.065488384 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.059592176 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.064835282 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.061150062 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.064399908 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.067106674 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.060962087 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.05666967 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.20252937 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070465073 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.066742175 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.061387508 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.061705709 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.060419212 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069185425 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.061529674 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.060474083 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066811213 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.063478318 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.063697299 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060847726 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.060870688 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.060601414 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068430422 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068043464 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075322458 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065632698 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.064889456 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068170558 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.05805736 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076276222 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.058393427 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.064181967 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.057897127 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.066367339 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068037491 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.058769309 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076199302 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.060484327 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.0654901 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0707718 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066297459 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.061051956 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075611342 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.063066443 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066516033 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.065084432 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.062049308 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.064315517 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.060646741 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065657049 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068256203 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.068304029 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.059605035 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065032837 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066708299 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060322712 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.068813202 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.060304929 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065961791 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.060832604 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.057657795 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06360622 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.069178816 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064301834 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.062403083 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.058514779 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.056942737 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.058807733 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.067457209 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.0623825 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.065643428 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072161816 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.05719094 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.059759157 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.058556529 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063104346 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.07530792 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067510386 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06520305 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.063075624 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.057846132 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.060839331 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.06094036 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.058826342 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.062778 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.057760155 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.058124909 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067938327 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.0608322 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.062189997 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058906154 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.059945296 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066820277 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.064604422 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.059742549 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06399303 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.058591894 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.062395693 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.058096576 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.060551248 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.062305461 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.057746653 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.061294651 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.067744685 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.073681051 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.064164622 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065996536 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.060814274 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065054656 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07314156 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.067654076 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060499546 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.066200597 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.057653232 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.078092084 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.066579886 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06520491 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066940773 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.060753354 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07399053 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.061656912 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.067148809 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.075580952 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059906947 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.067176961 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.057539967 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.074940161 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.061055441 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.057474533 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.065006641 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06436341 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.062232656 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.068780224 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.05840106 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.064659804 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063687379 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.059838542 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.0593214 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.059421499 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.064807866 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07152369 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.058221538 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.204556465 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066422869 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067361441 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.063259687 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070643027 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.066756657 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060924153 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.061068348 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.0611731 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.059661293 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.069747086 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060037157 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.063012564 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.062212695 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.058679536 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064144033 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072956644 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068705525 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067416013 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.05829383 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.058291832 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.076811598 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.060823129 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.06313588 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.065838686 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.066956942 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069728218 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.06784841 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074475111 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.059619492 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.063628523 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069366295 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.059980896 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.058499855 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.061471442 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06117385 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.066678817 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067701255 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065009578 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062971065 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.064445235 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070452386 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.060424884 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.062394692 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.065299533 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.059835282 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.067345105 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.065449142 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066161809 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.060783349 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.058665757 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.061237806 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067883088 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.064452332 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068010309 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.05971437 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.068010418 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.071827326 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.064586855 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063121217 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058579296 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062964365 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.065917748 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.064559368 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.058080197 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.062150797 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.061123617 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.067592687 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06718669 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.062137401 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.058288438 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074510676 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066033898 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.066786637 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.060944084 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.062352992 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059363616 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.058692427 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069086815 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.058543775 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.060806578 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.062261204 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.061354405 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.075155774 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.065609795 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.076374195 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059858144 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.062145365 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.05833851 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067166883 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.062843433 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.058715543 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067430328 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.058403448 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075597185 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.070429468 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.068623962 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.058214642 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.062234436 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.065782964 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073297947 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067371383 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068324979 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.063374307 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067558221 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.060584005 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.068141611 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.058121637 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.057057364 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.067343989 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065356529 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.069382118 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.057924471 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.06744148 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.060464027 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.064870658 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.065586631 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.060432132 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.06044596 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.060036702 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066419615 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.061724901 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.066377898 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06162572 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074280195 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.059022668 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.067212994 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06516498 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.06721279 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069925208 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069643152 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.065118929 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.058634168 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064328126 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.064717959 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.05894436 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.061372996 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.061926807 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080376193 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.060004269 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06005787 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.07118845 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.066228166 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.057634847 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.066599688 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06095787 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.066237054 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.058360854 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.066790163 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.062834261 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.058465528 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.061161095 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.061274728 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.056033829 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.057110359 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.057456733 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.066266242 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.061447974 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.057684175 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.074826228 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.059555141 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.064703872 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.067295423 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.062721405 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.05914443 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.056254238 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.060029696 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068151392 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071085528 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.060343877 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064702027 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.059742016 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.066863098 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.056731044 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.064992506 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06468468 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065047104 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.056993622 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058008804 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.070482882 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.070959501 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.061216854 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.066163232 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.065356071 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.059299352 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.080554321 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.065564598 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058971903 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.067589442 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060411806 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.059245593 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.056779507 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.059757157 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.068013314 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.057455183 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.060890354 seconds)
  done (took 39.985059561 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102489885 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060879388 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060539567 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061249084 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073245738 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061813501 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060235401 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060984585 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061088622 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063091047 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060070868 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059994767 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072317732 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076539221 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071350421 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064559581 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059226933 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060821002 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.059604468 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060747156 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070698813 seconds)
  done (took 2.799402382 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.066111718 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.075277619 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071367718 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077179446 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067529773 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064224344 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071967232 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064261314 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072665026 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069581942 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07280886 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064196447 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.069874488 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069283388 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06963836 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064469007 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072569344 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067834944 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.064969029 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071989313 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06484147 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072040371 seconds)
  done (took 2.846106775 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.05983275 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.059549671 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066100424 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.058390812 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.058318558 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.062624774 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.057982229 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.061710137 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.061725409 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.062139895 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.065827525 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.059225382 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.057839833 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.062653796 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.05782253 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.059449853 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.102671159 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.059468817 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.059646986 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.057803655 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.063828502 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068717935 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.057980625 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058552082 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.061527699 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.062438204 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.058331827 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.06219606 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.059302775 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.062141072 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.059744792 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.058375192 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.065930298 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067399792 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.061881372 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06178172 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.060161425 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.059412621 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.058277439 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.05825107 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066432661 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.060039606 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.058648095 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.060481032 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067514285 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.058764722 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.058278601 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.065883194 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.057891945 seconds)
  done (took 4.354581177 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.070953537 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108404181 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.063950665 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088500196 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.073592281 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.067293309 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.0640799 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089495803 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06007896 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.061149354 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.07493922 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.075776557 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062503276 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.064291695 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.065680733 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062498568 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063563466 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061833032 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.066226846 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062694163 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.066621495 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.066490954 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.074038647 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.074687354 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063896183 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061969605 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062094011 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.064866381 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.074035661 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068038222 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.064787876 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065429764 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.074243934 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066314885 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061892888 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.062456741 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.075684912 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.062878783 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.062668244 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.060486545 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.061832462 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.064869659 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.066259502 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.075386365 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062741085 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.066538372 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062696648 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.059957438 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.074216525 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06167183 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.067547264 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.075401214 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063889995 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.063175077 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064651267 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.074290721 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062612556 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.060559391 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.062829253 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.073808566 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.060476304 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063585038 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.074791724 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.061617167 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.066720399 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.075216924 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.066359897 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063854272 seconds)
  done (took 6.06110361 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067042388 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.08933145 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071527063 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071219883 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069671011 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.069857792 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069714407 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.069541274 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.069517916 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070838925 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070035144 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109476158 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.064939396 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076264931 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069667851 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069691763 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070190452 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06987491 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069616661 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069630817 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.069653841 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070700748 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069496397 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070315016 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073553455 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064860066 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069306241 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069530376 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070864597 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069823357 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.073333018 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.069666277 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.06984151 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070804678 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.074090608 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.069620608 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.059280768 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06971695 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070060807 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069574775 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065046244 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071016669 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069407602 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.0652186 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069846968 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.06953928 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071171946 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07397933 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07940022 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070570083 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070042786 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070934848 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069849377 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070204814 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070059085 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.077941132 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070876367 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070718351 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069940281 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071004545 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071045922 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.079324149 seconds)
  done (took 5.777044769 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072878818 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065444575 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077309341 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060524055 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.058841838 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068883359 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.057975582 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.058280061 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067144919 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.067170617 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069210518 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068910102 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071306635 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069645932 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068651124 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071510763 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069285843 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068795255 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0675596 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068753288 seconds)
  done (took 2.70112135 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.069199271 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.076838279 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.064600183 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068752453 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.064343983 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068081521 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.062800216 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064350842 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064506287 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064173434 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070406092 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070352245 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064742256 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068814089 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069832767 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068682048 seconds)
  done (took 2.41945703 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.063998874 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.067463742 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.067331439 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.060145783 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063154328 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.058910349 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.059848636 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058053584 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.058536232 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.072864821 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.059843575 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070885067 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.059901886 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.058347313 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.058854124 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.065278344 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.059043995 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059622463 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.059664953 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.065487805 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.066533174 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.061066592 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.063528144 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.060104091 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064983054 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.06722283 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061498043 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063052316 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.0597359 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.060195972 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065554323 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.066646036 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.059805474 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.060310929 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.058601355 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.060067132 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.059744465 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.060012296 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.065148864 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.059724067 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.057832112 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064699998 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.059846979 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.060628956 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.05871707 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.060306648 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.05950823 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.065148635 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060143805 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064908309 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.059862365 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.062248283 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.060322175 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.067126057 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.062656582 seconds)
  done (took 4.755168775 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071654933 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064120611 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.05857544 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058047699 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.063587098 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.064284546 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063793804 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.063641208 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064296696 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.057868745 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063843957 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.063168819 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064263428 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063743778 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064549932 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06361793 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057669796 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.063391401 seconds)
  done (took 2.488606269 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.067835845 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063191992 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.068562176 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063074582 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.062929721 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062938036 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058686989 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.058314 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.05860616 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.062883658 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062926983 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.062398443 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058356583 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.062571103 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.062688774 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062891461 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.062532218 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058424512 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062815928 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058930755 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062647727 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058809512 seconds)
  done (took 2.707050951 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.083298151 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.078833293 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.119265744 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07505149 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083163861 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.067968092 seconds)
  done (took 1.851170272 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0854602 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100859516 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062691185 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.063317017 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074846831 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06691371 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067188227 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067364838 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074492002 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072736558 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067010199 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074855924 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074763369 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069727731 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074797331 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077651226 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067749846 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067111204 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.062998618 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077558713 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067482906 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074657832 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0674615 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067016636 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067319013 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086168967 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078228464 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072813448 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068905016 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074930012 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081263785 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067379576 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074545195 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072635969 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.063668324 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074531576 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067160412 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078096775 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074582172 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069386716 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063517043 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074642172 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074860263 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068655361 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078094401 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067285272 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06965672 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067153437 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067732429 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081817068 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074997456 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068724596 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074820543 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078046402 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07799773 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081185686 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0727229 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068716789 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074856666 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07324092 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069807099 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074565986 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069336025 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072673737 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078074577 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069310922 seconds)
  done (took 6.139963911 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092798733 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063359438 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066721495 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073104304 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069329392 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067727525 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067518831 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067179223 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067390145 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.063495698 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102211344 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067380174 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069634963 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069464894 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067363597 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067140056 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067176185 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069770402 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063649548 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081564994 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067391961 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070072995 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070197061 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070063993 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073085737 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078135708 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06735062 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067154069 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067187313 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067335865 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069204881 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067111032 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069439582 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063552259 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069321023 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067126704 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06697361 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069360723 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067186888 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074913965 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069849689 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077925744 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067177156 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06709537 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072875428 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067018036 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067193852 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063706479 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067039001 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063526793 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073351218 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073039214 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07271185 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069348533 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067289093 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066868613 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06734412 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067210274 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06757272 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078321607 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069598712 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066887377 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080245531 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066559718 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067309018 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069389079 seconds)
  done (took 5.982911233 seconds)
done (took 122.844520412 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.203977749 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.179054332 seconds)
  done (took 1.717380038 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.06878664 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09280332 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.071466079 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130211462 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.0662953 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101602965 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098590033 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.069839094 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066659463 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.0671383 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066751882 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069640518 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.1330095 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066134175 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066619556 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069826667 seconds)
  done (took 2.657348891 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098595133 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.174756739 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103249697 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065128061 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101415072 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073219635 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064829641 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075961235 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069025093 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068055465 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073401223 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071078621 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06802735 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071409488 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069407525 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073071732 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068345279 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073229338 seconds)
  done (took 2.81849365 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.08847204 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.082711885 seconds)
  done (took 1.532377393 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.15017885 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.100243677 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.138645836 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.317459258 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.136589229 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.273509518 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.130277385 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.124902849 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.109974328 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.12115407 seconds)
  done (took 2.957146998 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.095820506 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.159914313 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.294753403 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114741049 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071714255 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.084279093 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116735815 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076973024 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077300924 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076669991 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.076967733 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075647568 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.093872882 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073073052 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07283896 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.073300928 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.096734602 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071751749 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.072338036 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.072771426 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.095899329 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065580156 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073119266 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071645797 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075008148 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074688231 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067394618 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065224959 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072474481 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.071498471 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075425173 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.080927542 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.074625905 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.100868545 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069868369 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.101642085 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.071260349 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070347598 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.071385176 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.06986967 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07375263 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.073894431 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074081495 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.073172712 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066635783 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.071474623 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066785226 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065429168 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076089346 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066868516 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.075467727 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075258176 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.100883117 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066856931 seconds)
  done (took 5.875640722 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103448574 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103965835 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06980769 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11317634 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105828647 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070372752 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.104820956 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098232281 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.106471797 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069550869 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067437731 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069340357 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080670631 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.080501098 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113796646 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106322766 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070116581 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069792766 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107060542 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107080689 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067490061 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101266606 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.095728303 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105776284 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.065101857 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068953752 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066723982 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068751473 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072800257 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.075231548 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067527782 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078680686 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085340675 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07519225 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065506309 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066416932 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066453421 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.076647687 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076587429 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075354563 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.074779681 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065587228 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066537124 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068089069 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068342204 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065370641 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.074929833 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.076994147 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.075849743 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067167059 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068811619 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.066399611 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067909666 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076599197 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.074200512 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.07813732 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07693758 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066554591 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066436299 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071168833 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076694884 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076453141 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077158231 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068953188 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075831374 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066610248 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076911465 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080457404 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066868588 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068642089 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066619667 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067064339 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068144063 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074137209 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.074471108 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068906208 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067336294 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066904479 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076463335 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075006216 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066775372 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073474294 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065574389 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067237191 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068261166 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068273708 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.073338993 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077106148 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068991044 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066728456 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067580461 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066689462 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065638015 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.073540668 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077268998 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077265551 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.075211726 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068209506 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07619402 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075724937 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069013893 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076127697 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066733077 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068375249 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067651722 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075326051 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.073691441 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07557014 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067490152 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066395921 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.074025115 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076174963 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066409499 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074183414 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075702507 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.074600815 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065687341 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079392089 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067010058 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075559882 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067051236 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074914015 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066490299 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074485548 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065971962 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.065129392 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065776979 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.074143113 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06766356 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065976464 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067571335 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06649058 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.073922799 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077148776 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068383962 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073225117 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.073565959 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068035305 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.072855364 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065919435 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.073237603 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066726408 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066858715 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064606209 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076349205 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066257322 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066341397 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066573354 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075414728 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069367788 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075784112 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073228355 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064769718 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078813035 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075303178 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.072352035 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.075428631 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068003773 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066060315 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065566764 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066524825 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072175459 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074988731 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068250876 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06605099 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.072923334 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.072832991 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.063492624 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.072635538 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.071349215 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.071268412 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.064572678 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066665137 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07660461 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.072697014 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.070097619 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.069760399 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.069373551 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.063807276 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.069012491 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.069229931 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063438873 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076952426 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.062581265 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.075425456 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.070071231 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.068224899 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.069970544 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.071848949 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.071200139 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.071728569 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.074420518 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.062477696 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065425613 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.0759698 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06583342 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066767897 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.074405022 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068073491 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068250337 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.079309359 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064581071 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.074405568 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065663343 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.075137128 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065098081 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067858305 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078840006 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066453403 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067529244 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074071317 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066885961 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.073170466 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076320284 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.06960987 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065136458 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06791449 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074057973 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.073996175 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066147481 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065746168 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068276218 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.072742195 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.0717471 seconds)
  done (took 17.718801723 seconds)
done (took 36.64886257 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.212539962 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.161214171 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.198378274 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.120232301 seconds)
  done (took 2.191873777 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.097957339 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10005835 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.080396392 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06443448 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.085800138 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064526527 seconds)
  done (took 1.927425357 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278818364 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.201153609 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.180775351 seconds)
  done (took 2.090278932 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.218830302 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.197842234 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.465412353 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.293655457 seconds)
  done (took 2.705842651 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.133240191 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.081001595 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.062301601 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.073180203 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.115192553 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.147867533 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.091645202 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.115740528 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.073510055 seconds)
  done (took 2.381915039 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.133390842 seconds)
done (took 13.002007877 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.182491775 seconds)
    (2/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.309810946 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.199307732 seconds)
    (4/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.107000779 seconds)
    (5/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.074535118 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070080486 seconds)
    (7/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067800842 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.066120453 seconds)
    (9/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072825079 seconds)
    (10/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.193286598 seconds)
    (11/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.080745416 seconds)
    (12/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072569833 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.109654375 seconds)
    (14/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.195316736 seconds)
    (15/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.076147741 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075681076 seconds)
    (17/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.112765424 seconds)
    (18/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07227438 seconds)
    (19/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.162586309 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.148779144 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.083110071 seconds)
    (22/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.075300822 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.072340769 seconds)
    (24/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.074730724 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.079499749 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071415357 seconds)
    (27/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.230045893 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128036396 seconds)
    (29/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.186576785 seconds)
    (30/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.218768361 seconds)
    (31/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.165724902 seconds)
    (32/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.077548137 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.070774388 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120031855 seconds)
    (35/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070003502 seconds)
    (36/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.062209518 seconds)
    (37/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.187913834 seconds)
    (38/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.176115125 seconds)
    (39/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.076990598 seconds)
    (40/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.169666813 seconds)
    (41/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.17873946 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072791561 seconds)
    (43/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.186265729 seconds)
    (44/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.154132337 seconds)
    (45/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063251267 seconds)
    (46/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.199381536 seconds)
    (47/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072547174 seconds)
    (48/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.0624123 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.08286997 seconds)
    (50/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.147140922 seconds)
    (51/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.170822146 seconds)
    (52/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.077079382 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 0.152914665 seconds)
    (54/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.078639774 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.062788382 seconds)
    (56/309) benchmarking ("sort", Float32, false)...
    done (took 0.131340441 seconds)
    (57/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.214850983 seconds)
    (58/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.072166785 seconds)
    (59/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.180990174 seconds)
    (60/309) benchmarking ("sort", Int64, false)...
    done (took 0.064629673 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.083785637 seconds)
    (62/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.168563741 seconds)
    (63/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075428953 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074419845 seconds)
    (65/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.19792174 seconds)
    (66/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.072584264 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.113152937 seconds)
    (68/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.173023983 seconds)
    (69/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.062958995 seconds)
    (70/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072425706 seconds)
    (71/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.173602077 seconds)
    (72/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076106588 seconds)
    (73/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.167987187 seconds)
    (74/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.064784525 seconds)
    (75/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.167789302 seconds)
    (76/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.062189485 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.116811079 seconds)
    (78/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.134524178 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.116989266 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090942597 seconds)
    (81/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.163121358 seconds)
    (82/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.074455674 seconds)
    (83/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070579704 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.122443119 seconds)
    (85/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.073515971 seconds)
    (86/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.062959837 seconds)
    (87/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.214275384 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.063532624 seconds)
    (89/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.06970582 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090698564 seconds)
    (91/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.139751047 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090396137 seconds)
    (93/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.06289692 seconds)
    (94/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.160832162 seconds)
    (95/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.206115668 seconds)
    (96/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.162863038 seconds)
    (97/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.188142101 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.063546255 seconds)
    (99/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.207062356 seconds)
    (100/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.063162448 seconds)
    (101/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.066642833 seconds)
    (102/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.160905298 seconds)
    (103/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.062726518 seconds)
    (104/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071918792 seconds)
    (105/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.195566183 seconds)
    (106/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072037282 seconds)
    (107/309) benchmarking ("sort", BigInt, false)...
    done (took 0.246891369 seconds)
    (108/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.202154382 seconds)
    (109/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071520503 seconds)
    (110/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070610184 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.069709695 seconds)
    (112/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.170151612 seconds)
    (113/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072809232 seconds)
    (114/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.203480837 seconds)
    (115/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.061967773 seconds)
    (116/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.073923706 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.14501504 seconds)
    (118/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.062557292 seconds)
    (119/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.157282695 seconds)
    (120/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067096447 seconds)
    (121/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.074361785 seconds)
    (122/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.06187926 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.12562525 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.062807478 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.080014784 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074080852 seconds)
    (127/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.195567631 seconds)
    (128/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.204609374 seconds)
    (129/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072623181 seconds)
    (130/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.16704511 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.063265482 seconds)
    (132/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.064793936 seconds)
    (133/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.134500044 seconds)
    (134/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.064647104 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.063329937 seconds)
    (136/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.063997746 seconds)
    (137/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.063551531 seconds)
    (138/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.063844342 seconds)
    (139/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.063523008 seconds)
    (140/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.064174366 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.063875037 seconds)
    (142/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072969799 seconds)
    (143/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.166292964 seconds)
    (144/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.15286218 seconds)
    (145/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.070804837 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.13696118 seconds)
    (147/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.063376509 seconds)
    (148/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.135116153 seconds)
    (149/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.062795058 seconds)
    (150/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073192747 seconds)
    (151/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.062398507 seconds)
    (152/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137616207 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.084313172 seconds)
    (154/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.061727614 seconds)
    (155/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.071197238 seconds)
    (156/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073166811 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.084712511 seconds)
    (158/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.077661517 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.084881663 seconds)
    (160/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.192029459 seconds)
    (161/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.070446014 seconds)
    (162/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.061602191 seconds)
    (163/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.061825124 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.084091104 seconds)
    (165/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.067004748 seconds)
    (166/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.063852003 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.062636038 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.062313321 seconds)
    (169/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.062221243 seconds)
    (170/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.061959754 seconds)
    (171/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.062016095 seconds)
    (172/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.071936786 seconds)
    (173/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.216953755 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.082628583 seconds)
    (175/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.062010646 seconds)
    (176/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.138516709 seconds)
    (177/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072224954 seconds)
    (178/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.061582996 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13204696 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141591317 seconds)
    (181/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.062752556 seconds)
    (182/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.061991544 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.085930225 seconds)
    (184/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.063277964 seconds)
    (185/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.079786927 seconds)
    (186/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.069293319 seconds)
    (187/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.073055013 seconds)
    (188/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.063465089 seconds)
    (189/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.061198036 seconds)
    (190/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.064362822 seconds)
    (191/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.191801636 seconds)
    (192/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.062513362 seconds)
    (193/309) benchmarking ("sort", Float64, false)...
    done (took 0.127583604 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.083778591 seconds)
    (195/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.071189138 seconds)
    (196/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.061663836 seconds)
    (197/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.067268947 seconds)
    (198/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.134668576 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.090176578 seconds)
    (200/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.222754213 seconds)
    (201/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067040601 seconds)
    (202/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.070130815 seconds)
    (203/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.075973009 seconds)
    (204/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.069821341 seconds)
    (205/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.062488152 seconds)
    (206/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.072437144 seconds)
    (207/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.064501586 seconds)
    (208/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.064601003 seconds)
    (209/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.06296272 seconds)
    (210/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.138720374 seconds)
    (211/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.06322825 seconds)
    (212/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.072766386 seconds)
    (213/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.067854116 seconds)
    (214/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066566835 seconds)
    (215/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.137013938 seconds)
    (216/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.062849895 seconds)
    (217/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.064043765 seconds)
    (218/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.065278941 seconds)
    (219/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.07091598 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085181674 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.133212199 seconds)
    (222/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.063627194 seconds)
    (223/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.063996764 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094881253 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.131433297 seconds)
    (226/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088845252 seconds)
    (227/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.063689576 seconds)
    (228/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092128838 seconds)
    (229/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.070547483 seconds)
    (230/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.062981688 seconds)
    (231/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.06434463 seconds)
    (232/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.062819547 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.116104439 seconds)
    (234/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074288189 seconds)
    (235/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074646043 seconds)
    (236/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.062963822 seconds)
    (237/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.062575159 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137072547 seconds)
    (239/309) benchmarking ("sort", Int8, false)...
    done (took 0.16909065 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.112279956 seconds)
    (241/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.065569765 seconds)
    (242/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.06954209 seconds)
    (243/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071553332 seconds)
    (244/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.065295151 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.106662372 seconds)
    (246/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07099334 seconds)
    (247/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.062686286 seconds)
    (248/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.062292995 seconds)
    (249/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.064280001 seconds)
    (250/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.063901265 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.128651095 seconds)
    (252/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.061861867 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.088710193 seconds)
    (254/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.063327822 seconds)
    (255/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.170061995 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.061837564 seconds)
    (257/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068161847 seconds)
    (258/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.162538856 seconds)
    (259/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071025805 seconds)
    (260/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.061948479 seconds)
    (261/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.061738293 seconds)
    (262/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.063514609 seconds)
    (263/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06565389 seconds)
    (264/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070478444 seconds)
    (265/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.091268837 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.120168544 seconds)
    (267/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.063966235 seconds)
    (268/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.063562835 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.062994979 seconds)
    (270/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.071058362 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.069260811 seconds)
    (272/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.062074616 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.062887229 seconds)
    (274/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.064188496 seconds)
    (275/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.061721647 seconds)
    (276/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.063966015 seconds)
    (277/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.064220527 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.115679773 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.062518251 seconds)
    (280/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.062353321 seconds)
    (281/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.063862759 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.130771675 seconds)
    (283/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.062212086 seconds)
    (284/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.061791497 seconds)
    (285/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.063894945 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07358263 seconds)
    (287/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.063310576 seconds)
    (288/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.061935684 seconds)
    (289/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.07396615 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.086721572 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.084645974 seconds)
    (292/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.063904871 seconds)
    (293/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.061798388 seconds)
    (294/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.062457515 seconds)
    (295/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.075053403 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.069133276 seconds)
    (297/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087628319 seconds)
    (298/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.063512883 seconds)
    (299/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.063706948 seconds)
    (300/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.063802047 seconds)
    (301/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.078016248 seconds)
    (302/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.062278948 seconds)
    (303/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.064353609 seconds)
    (304/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.062879797 seconds)
    (305/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090678078 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.061913601 seconds)
    (307/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.062731808 seconds)
    (308/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.062039889 seconds)
    (309/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.116795082 seconds)
  done (took 32.012286305 seconds)
done (took 33.459309638 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081858491 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08644812 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.070942941 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.084271902 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080016329 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.096597857 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071856448 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077097363 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079293435 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.078418279 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077857749 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.069821301 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072509006 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073296178 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.070494781 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086543515 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076783224 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071713734 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071684052 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06267929 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071476265 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.062794959 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.062426463 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069944769 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.074395812 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070042265 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072916272 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072148628 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.063108941 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06377247 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067828172 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.071822107 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065390175 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076473626 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072081735 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071686796 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073346115 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076188389 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.062268996 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.062983707 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.072695392 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.063036969 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071179389 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.069255377 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.068040357 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.069477206 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071642987 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.075748285 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086820161 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067178959 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.072555017 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07423521 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.074957825 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.068009004 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.06762497 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071842769 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.068962199 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086282559 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.071500494 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066744418 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072833762 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.071966732 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069661496 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071438837 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071423007 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073447395 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075671605 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.06924231 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073330154 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069568137 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.062578095 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071375663 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067227724 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.062374481 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.073932268 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075231906 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.061446881 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.067440149 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071129149 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07080642 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.062635576 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066700126 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.061868023 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.067708619 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067089469 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069279816 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067422933 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.069971051 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.062346727 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071183632 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.069674035 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070940988 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.062558475 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076151786 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065249027 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.068739527 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.062694558 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.062591478 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06191659 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068114078 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.062779839 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066760478 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.071498152 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.061569491 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.067430732 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.076377004 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.062284741 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070055826 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.062471337 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.062498285 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.074536835 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073438669 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.062972536 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066833372 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.062229469 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.06821944 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06236382 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.062399061 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.062296801 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.062757767 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.067103788 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063081666 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06706442 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.067828962 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076210922 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062295727 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067196892 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066710184 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.062624407 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069624298 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06290025 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06218889 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.061801481 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077112475 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066426549 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.062167329 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.06796929 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066404515 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.070658286 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.062166985 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07102178 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068048203 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.06647495 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.068363617 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.061112932 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.072744826 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065783122 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.206089982 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.063779075 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.063024992 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06213446 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.062659981 seconds)
done (took 12.250177315 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.061516753 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.104363189 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.072838132 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.080104119 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.076073908 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.063576643 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.068622545 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.082618724 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066193768 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.08358957 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.084261038 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083483423 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.091141921 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.062130407 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.062763819 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.063556666 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.062104093 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.069696055 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.079442522 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.084638175 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.093586299 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06340169 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.073063378 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.078664879 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.074681017 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.081359045 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.064560148 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.064164986 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.065450949 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.082082794 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086447651 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.062825638 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.064436527 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.078913428 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.078238545 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.072972633 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.063571375 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.068701926 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.063710729 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.063019883 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.064520667 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.080651324 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.068246241 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.070413371 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.064127947 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.064592313 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.064366869 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.068393253 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.07759048 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.068670734 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.072128411 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.0768348 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.066034994 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.063385065 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.062022511 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.06840709 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.06328129 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.064094815 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.063495192 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.063486064 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.062949846 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.065071066 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.063910861 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.063940641 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.066930913 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.067409758 seconds)
  done (took 6.182390344 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.078443362 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091259785 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.079550337 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.079868304 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.062668772 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.063300007 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.063472144 seconds)
  done (took 2.055336286 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.062132096 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.076667405 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079840756 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079738497 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.072429953 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.081323611 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.063499142 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.09345586 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.062570019 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.075897192 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.11195849 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080725657 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066849997 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075948064 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.063407851 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.071982244 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06352184 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07122267 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072664673 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079940318 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068224407 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.090791779 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07672391 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.064202667 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.084484481 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.069013 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.063217699 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.063913006 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06504721 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.064846895 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064544519 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.103105188 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.068365265 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075851938 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064606942 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.063292231 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.069718185 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066810758 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.067388834 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071743852 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.069599759 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.064828125 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.062478314 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064639572 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.066441172 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.067872264 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.062605842 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.064809952 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.064508764 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.075834322 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.062570983 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.068791187 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067024286 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068923797 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069271786 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068371026 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07156157 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.065220238 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.075556191 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.071649318 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065127313 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.072925957 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.072475778 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.069917995 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.072778846 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.067949208 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.068445163 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.070620179 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.064424729 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.065359685 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.064958292 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.072278787 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.063387661 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.065824131 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066693986 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.065256587 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.067900625 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.080396043 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.078731297 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.076545522 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065746217 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065241224 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06807613 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.080237555 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068777297 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064740709 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066967665 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.062602501 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.067986746 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065127298 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069631645 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.065144421 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.07180131 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.065743889 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067147417 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072795079 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.063083933 seconds)
  done (took 8.349436815 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06463933 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.065120655 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.066788902 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.064812751 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.064875316 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.064673896 seconds)
  done (took 1.956522356 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.086095068 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.06509836 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.078525683 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.065282166 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.098693553 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.072071825 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.072508993 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074614547 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.077955473 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077456458 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.072363439 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.075579927 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.071677014 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.066776943 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.072604696 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.06638678 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.072052146 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068728774 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.076864357 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067249981 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.07893181 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.066473049 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067131968 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.076922823 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.067694636 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.066601343 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064164607 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077142473 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077269326 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07607506 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.066392277 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.067804876 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071758378 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.073544808 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.072420333 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072070023 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064866798 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070485356 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066821911 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.067957583 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.074660473 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067204141 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.067728716 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.070370593 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.073917314 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071987232 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.070666307 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069068883 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.071809991 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.070337006 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.070667623 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.065927931 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.067626043 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.070398169 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072251113 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073904324 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.070747105 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.072106975 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.066487064 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071871248 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.065076955 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.067560771 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075620244 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.067618029 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.071272212 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.070731957 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072007508 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.067061826 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067307929 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.065079939 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.070899247 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.065047774 seconds)
  done (took 6.661432051 seconds)
done (took 26.727664941 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.9924724 seconds)
  done (took 2.509154055 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.564013983 seconds)
  done (took 2.113165502 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.250665822 seconds)
  done (took 8.797849876 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.285986649 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.328154241 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.707137085 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132901912 seconds)
  done (took 3.03581335 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.702427725 seconds)
  done (took 2.260490397 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.227519548 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.221238697 seconds)
  done (took 2.013904109 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.34289102 seconds)
  done (took 1.893269401 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.066017499 seconds)
  done (took 2.613738258 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.228957764 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.158236497 seconds)
  done (took 1.945589565 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.446014497 seconds)
  done (took 2.000106918 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.267024219 seconds)
  done (took 5.824295056 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.228945138 seconds)
  done (took 1.822005179 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.22882928 seconds)
  done (took 1.784814938 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.700862949 seconds)
  done (took 3.255839378 seconds)
done (took 43.43318851 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.077514311 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08231916 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08255047 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078542192 seconds)
  done (took 1.851565773 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.069687324 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.067228537 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.07116819 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.071096494 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.069256365 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.069897524 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.070370613 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.066884778 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.069070888 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.067389907 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.065773474 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.067065707 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.069943344 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.068042401 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.069963038 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.07131229 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.067483208 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.067211481 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.069633924 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.067258398 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.070071629 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.067152712 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.064994202 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.066159915 seconds)
  done (took 3.200001265 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.073527574 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.069727742 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.071797172 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.068660796 seconds)
  done (took 1.846833336 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.072096471 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.083316843 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.084968046 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.090080737 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07370614 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.074149276 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.081858252 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.082911095 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.062484069 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.08589179 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.065147639 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.063701932 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.063739344 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.08411862 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.08158122 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.060526621 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.061870422 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.074355244 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.073312668 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.075346153 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.064870535 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.062791586 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.073374608 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.073499596 seconds)
  done (took 3.33046539 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.074955483 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.062392998 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077183737 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089691971 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091031901 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.062617828 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.078422275 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091100656 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.138092434 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06261814 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.068430165 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.062812583 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.104312576 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.062706062 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079446117 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107903911 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11122644 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.066211654 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095249991 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.062547188 seconds)
  done (took 3.222219724 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072133153 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.066088903 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067128689 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06231298 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.073933173 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.070587778 seconds)
  done (took 1.987400258 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06426718 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.064673397 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.064430746 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.063329895 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.068916261 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.063929518 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.062665139 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.064085023 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.064032304 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.063981382 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.063721645 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.062581097 seconds)
  done (took 2.339978583 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.156902224 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.066601482 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067982376 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06540503 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.068523632 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.063451844 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078497379 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.065295356 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.08261402 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.063529871 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06340945 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.066148414 seconds)
  done (took 2.479179929 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096680451 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129842104 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095158342 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.070169391 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169801644 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094343266 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.089666326 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.121450219 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092769077 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.067076624 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091137617 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134315209 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09419871 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.096172861 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080491891 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124195476 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108155435 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086013439 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112555488 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080420169 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.068202362 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132627158 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.067745121 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091552366 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100570533 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.098006701 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10972389 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132571516 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082726564 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.0882233 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08122133 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.073095571 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.103559431 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.082812856 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.096272533 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092377348 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096758622 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084668428 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.085359783 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119199876 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158345573 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100982126 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099486551 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133989967 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077327007 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.107771783 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079835101 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098575753 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10323921 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092401481 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07412242 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090627936 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.1060327 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101342723 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.080703016 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08059737 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117432326 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.097067888 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095414111 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079198484 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106405609 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.086844973 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107188608 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118138206 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281548858 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10155923 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137077129 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121870652 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095562649 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.088397365 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.090903666 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0743424 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110847861 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097414329 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136043245 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108474959 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099578158 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.093834977 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081198666 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106624877 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113950859 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095260001 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093956139 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146596597 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110989896 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090892055 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092103737 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.139254575 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.069671405 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147236561 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088078321 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119710548 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097071666 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139061759 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089900124 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.082405886 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105979681 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104499857 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089171768 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102612688 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083817454 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114209366 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091968061 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102166654 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081446019 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090016659 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086028307 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.096603466 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.074055364 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103953288 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115396135 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113654603 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07370655 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107804523 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085280269 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.075624488 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092047652 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140402498 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082612086 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.074710661 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151534479 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.093253528 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.118231613 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111279484 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.083554404 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115809846 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134981062 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090314043 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235660184 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076385549 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15497584 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075674554 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11820051 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080902902 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102151835 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105418803 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136747492 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139699788 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096357472 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077633221 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090970582 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.106362664 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086404986 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085638075 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076414846 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.108913764 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125546038 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.099491366 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079312067 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.091433786 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.068024144 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114258163 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075605866 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08366527 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095995414 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.08669622 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.088604253 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143356958 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.083958056 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109040569 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097413395 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.065871156 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089964954 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157215272 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082407677 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.110430713 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11636031 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083700108 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067139046 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.094827002 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.072239089 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108845232 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.092686939 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1067254 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078613043 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106983478 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.067409774 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073383268 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133575545 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101671037 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088832693 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.13355224 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105813036 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.089499312 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.105737542 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.096705751 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096810904 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102653833 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.106511762 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105350515 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.072616599 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128485714 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090337025 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.075550674 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235671556 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078557055 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.077304874 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100912581 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114991352 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088354898 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100597748 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10294698 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09083875 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.108760266 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088727027 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078083593 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132048263 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075233936 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.073967874 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08736519 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.105157607 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088174896 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.134192728 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.079350088 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136360861 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092215369 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081175313 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115849046 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.067776483 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.069322444 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.080907036 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091569048 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118159605 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078285672 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077288965 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11847962 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132783395 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097568045 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104214867 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.06733572 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091107063 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13635648 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.112455368 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081313361 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109468817 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082974222 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130635282 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09742903 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119341459 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106026618 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110661493 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.091100919 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.080488843 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.072814324 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086808559 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111867798 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085445354 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081584426 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.066589556 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073264781 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093545728 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09159478 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113368398 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088863038 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13746819 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072226409 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103942843 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107455577 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106620843 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090365684 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094055358 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.090510574 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090208496 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089862123 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090534439 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07309529 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274241757 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100534936 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077902053 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088847783 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095800828 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106159849 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109902794 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109646315 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093156134 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106242724 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121706024 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097834976 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08202577 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083442083 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.094224915 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.084555427 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080967749 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.104027593 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112755965 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098668132 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110121915 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.09393808 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.09119134 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10750867 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092950973 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088394694 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.11851583 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153899075 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.101946562 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.104166778 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085133014 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107951549 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105588636 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113545539 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.111732875 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109455481 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070014043 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.074523309 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.069396184 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105130946 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078477057 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1189089 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076053354 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106914781 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097712539 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07976615 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.066583583 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101388413 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092684219 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.081776068 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124099982 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.113051329 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.072531245 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090757306 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107227957 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082737058 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125165006 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.103862279 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101830662 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.070911387 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09218757 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.073497927 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110395523 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.101161195 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.077364725 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.07582816 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.069147871 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107131915 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083227921 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1086389 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08928674 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100104672 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270176722 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137561126 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086980058 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096925968 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118438924 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113539538 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.081544813 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113450978 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136738116 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.120636859 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.081273448 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.084204369 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106636771 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105989597 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101567663 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0756431 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079233639 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10923208 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11434019 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.06697201 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084437535 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069574228 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.084248818 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11267407 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09593795 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082039196 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117513303 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074566989 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108511424 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096496367 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123707918 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12341884 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14517262 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096598088 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084985293 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076801522 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125471154 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.070483372 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116204401 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113168813 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087323415 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.067533555 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083270911 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.095720688 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.627307387 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108949855 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075075148 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136800429 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088164538 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114786582 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08463017 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.119582162 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091318637 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102504984 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092148022 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134443161 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.082038546 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110181154 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.172901193 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112738868 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.107184048 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073090059 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.084093559 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.073093948 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.077716808 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.081213662 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085893665 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260021771 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085645653 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10592097 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.079701282 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.107211681 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091769992 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088863297 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.09880056 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081250365 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139237154 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087068882 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125081029 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107419286 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078021357 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074177304 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.086357388 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.100842026 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081465949 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093949499 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078560256 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.075962752 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153725768 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103896428 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084766481 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102184822 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.090680538 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.087584199 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090869135 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117880564 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11063889 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07327181 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.08814137 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102597136 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078954108 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.074702208 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096826678 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.069073781 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09086663 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100657028 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096182566 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091264898 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.10425292 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077736953 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088213184 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109426307 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085562229 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.076457152 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07602241 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.07652032 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.075795164 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103609226 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108788038 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115282698 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10979165 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091332852 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096009042 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.078442247 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.219106915 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079901674 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096885288 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.104785783 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.074987159 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.131482291 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088668437 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090196509 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097912073 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101496508 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153542261 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072932879 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108894495 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09188163 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108615548 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238843704 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108463587 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096052001 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093987128 seconds)
  done (took 50.432873166 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.089678167 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.146743564 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.153934487 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.077177642 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.090728203 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.115366889 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204420236 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.18766211 seconds)
  done (took 2.740447329 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071754018 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.077397352 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100399463 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.080526076 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.063677347 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072540721 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.203585688 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078773292 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.063601071 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.093132071 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.074186726 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.065899324 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.413875932 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.062598775 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.063965515 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.073215851 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.064362421 seconds)
  done (took 3.384448921 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.358286701 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.597831692 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.340670164 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072737619 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.928657524 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087363156 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.154810311 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.134823016 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.075751048 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.547316946 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.365470705 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.12621854 seconds)
  done (took 18.465256066 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075706806 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.074290973 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.078657244 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.078776081 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074311112 seconds)
  done (took 2.050971237 seconds)
done (took 98.901720584 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.076633278 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.163022408 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.065077308 seconds)
  done (took 1.93298473 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.078186408 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.078931464 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.078619813 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.076919835 seconds)
  done (took 1.992263545 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.069280052 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.073023046 seconds)
  done (took 1.816757166 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.224129234 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.161785759 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090904599 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.077850919 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077720765 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078020894 seconds)
  done (took 1.914377909 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.067089433 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.067806656 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.069350387 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.070643968 seconds)
  done (took 1.947936058 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.063018346 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.063304451 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.065547236 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.068626726 seconds)
  done (took 1.936155341 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.078607808 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080340389 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.075489667 seconds)
  done (took 1.910055382 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.09098889 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.092054591 seconds)
  done (took 1.859520946 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.075276514 seconds)
  done (took 1.748953521 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.083175822 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.095898563 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.116918102 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.100119554 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.117719091 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.100092828 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.077007583 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.077783899 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.072471723 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.07042826 seconds)
  done (took 2.587180548 seconds)
done (took 21.874358348 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072803837 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.361313338 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.357723449 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083835374 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669408158 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.353546575 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.966876396 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089034252 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.096736648 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065918146 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082739071 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646578849 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.958735743 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.321680855 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.945830768 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.320408929 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648393393 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065377703 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064915028 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066163957 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.951834657 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065179821 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065988452 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065742254 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.680611959 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370885029 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066618295 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.320347652 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065818331 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067760661 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353097416 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067176298 seconds)
  done (took 16.029981299 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.06490329 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.11466394 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.068543902 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.081030366 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.068021788 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06703817 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.068670874 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.066432597 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.106900159 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065913492 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082848923 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065130207 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.069527391 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06733789 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085476485 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065899592 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067787658 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066697669 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066249708 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069522234 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.084288478 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066122144 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067374692 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066711962 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067247306 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079695353 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068146509 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066475984 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066509424 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069316317 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070270897 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068557558 seconds)
  done (took 4.006904086 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114704257 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123755921 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070927686 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104354347 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117511208 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067488289 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146739494 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.08968597 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111605029 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066526888 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083420431 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065678139 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100693544 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068375358 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087004926 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066715066 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068649702 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066682139 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066261533 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068576147 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.084965084 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066033226 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067366056 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067023394 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067294418 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081470183 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068131029 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066472669 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066617424 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069130051 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07060846 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068365859 seconds)
  done (took 4.288430961 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.064917961 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.067944798 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.076728615 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.078175578 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.064891097 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.066257869 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.068178136 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.064375081 seconds)
  done (took 2.243568787 seconds)
done (took 28.25727928 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.072999282 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.064572538 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.068360755 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083996481 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.070666602 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.067819829 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.061614033 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07155536 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.068679963 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.068866919 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.069697215 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.063515733 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.066950028 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.062180709 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.069042124 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.063120472 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.070000103 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.068030341 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.069551158 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.06989926 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.066493755 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.069141658 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.071330403 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.068909107 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.06892162 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.069118057 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.073512375 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.069392606 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.064668039 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.067267185 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.066946901 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.076854673 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070888296 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.071254004 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06379361 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.064440941 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068141637 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.066326252 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.070906601 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07333956 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.065603365 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.073423622 seconds)
  done (took 4.549726759 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.079815756 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.085107122 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.080538459 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.078553294 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.097795353 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079196225 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.084701979 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.075859362 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.074801692 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.084404348 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.070368008 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.077762673 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.075859018 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.069606566 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.074029747 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.071878355 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.076186826 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.071094471 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07427266 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.074558838 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.085805539 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.069731929 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.076956295 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.076397232 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.071542561 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.077344428 seconds)
  done (took 3.715282557 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.067745946 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.079456864 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088384288 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144402232 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.108996464 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076569223 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077351802 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087806339 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.093610153 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.064961371 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.068724929 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.089966735 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089297553 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.071646838 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.104728578 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.081131582 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.080091435 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067264582 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.071772164 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093952109 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085408953 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083377665 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091746374 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081489813 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.064901562 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.06744068 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072110044 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.07921939 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07221579 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076800957 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.069948345 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069300654 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.066499137 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.076802949 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070241169 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.065026022 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089454977 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077549722 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077734187 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.106836682 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074359161 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.066343094 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093180737 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.125086049 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.064450232 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.067907573 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.067699717 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076114475 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.065302859 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092440174 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078467703 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.064212901 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.065043125 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065236773 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.065548926 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079683798 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.066013278 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.06641379 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075425208 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070084456 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085486456 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.069858462 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083932863 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.064608428 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074708186 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065377246 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067762392 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.062967998 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094451341 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070715852 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112173307 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.06536868 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.063117802 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075681146 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074649907 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.071003427 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.064064237 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082272005 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074819807 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.067828252 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075544898 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.067008118 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.06752753 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.094794972 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.064774964 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.063632582 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.063408084 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.067894729 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.067105258 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06495466 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.078131342 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.063415614 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.067149928 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.078804113 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.063952358 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.064648863 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.067625236 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.066391448 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.063763759 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077635423 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.068581838 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.065679665 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076240579 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.065047985 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.067304901 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077267699 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.071293788 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.063718705 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.066570432 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.067567856 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.066216377 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068294642 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.067775969 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.066508129 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.071644768 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.071453771 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.069845219 seconds)
  done (took 10.494433827 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.155134385 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.14961025 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.066870366 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.142858234 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.071982667 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.070535751 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.144141099 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.084021737 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.065280131 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.065552302 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.064434724 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.094159286 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.090488338 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.102532927 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.070226372 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.065422282 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.087957775 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.097547132 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.144975502 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141803513 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.088117843 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.071904333 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.067484938 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.06660577 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.066128205 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.073276697 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.082385416 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.072872267 seconds)
  done (took 4.297572621 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.073733352 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.086340789 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.068531078 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.075441971 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.084922337 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066263303 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.066207441 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.066451664 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.078840466 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.075453253 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.065354673 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.06992692 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.068750206 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.067797942 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.065752004 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.071435963 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.071468968 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.064262366 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.068407969 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.070132295 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.075148258 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091274347 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.069511724 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.064487556 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.067200414 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.064422815 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.075079597 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.078191099 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.065158963 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.07931266 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.063098227 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.069840976 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.079000662 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.065896916 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.064703977 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.065311218 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06534755 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06513646 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.064848327 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.063784058 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.063818038 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.06948207 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.063938488 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.074826751 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.078381844 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.072536938 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.066976676 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.067443089 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.068109306 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.062376501 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.067579641 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.067405639 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.067339397 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.072393029 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.068480729 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.067654055 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.065643686 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.094003109 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.070672231 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.064975474 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064508662 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.063611509 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.066874277 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.076086757 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.081372676 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.067312201 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.063714552 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.065719759 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070148163 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078485695 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.064094154 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069529745 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06246538 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.065531157 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.067396069 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.067380726 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.066078324 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.063777173 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.063147874 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.064372866 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.065332162 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.0646888 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.064707473 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.067137058 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.063298287 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.063533299 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.065388644 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.066775448 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.075084447 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.064227317 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.067315402 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.065829241 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.063739032 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.067232279 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.070298876 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.067514598 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.077635798 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.077461878 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06519303 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.063424561 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.07777699 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.067547878 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.064740076 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.071806298 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.068915551 seconds)
  done (took 8.989267713 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.084712164 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.066563873 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.081222267 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.087662919 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.075200552 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.070588082 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075555056 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066929573 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081277339 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.064148618 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.073138502 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.063962001 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.075614307 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.074637451 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.066530854 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075695462 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.067552032 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082081162 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.079315501 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.063775858 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07390129 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.076870859 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.076929084 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.079078045 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078186753 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.079403585 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.077057122 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.068213318 seconds)
  done (took 3.828793916 seconds)
done (took 37.563260276 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.768072511 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.936643997 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.760183622 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.947625562 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.806840829 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.840706907 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.907567934 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.758482612 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.956906494 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.815424216 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.102688408 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.278425692 seconds)
done (took 65.633200078 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.848078388 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.92169841 seconds)
    (2/2) benchmarking "String"...
    done (took 2.016972391 seconds)
  done (took 5.637743819 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.018263851 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.407827408 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.025179296 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.759844699 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.766104684 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.187751424 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.553123052 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.209808087 seconds)
  done (took 30.608324989 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.926732173 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.001086337 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.442783961 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.487862568 seconds)
  done (took 15.601629606 seconds)
done (took 63.50273201 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.774101491 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.76024347 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.819515672 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.791146015 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.767145721 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.765105528 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.762555738 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.762212993 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.799782215 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.008011194 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.761903732 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.771220635 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.762885509 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.785448286 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.211932923 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.813521888 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.781576658 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.773094625 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.771430367 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.821737314 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.762345962 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.765225122 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.233984437 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.920388618 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.364959746 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.063140494 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.122081657 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.124389358 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.763767503 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.926539127 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.847048164 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.150515591 seconds)
  done (took 205.007961926 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.761561335 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.661447983 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.651123665 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.809307759 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.053117591 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.94473019 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.859619993 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.132197518 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.769263386 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.791401249 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.906997835 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.766600159 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.937147374 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.713071079 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.798202783 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.847590596 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.919561559 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.947092594 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.806967755 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.92152087 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.780300026 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.859750771 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.888973371 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.892465513 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.803123871 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.85170806 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.767930833 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.788749626 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.949225404 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.885744987 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.805373934 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.778278578 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.95177218 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.631990183 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.766486805 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.771417639 seconds)
  done (took 168.872384521 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.957431601 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.770678728 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.762623452 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.819598795 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.88481445 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.766428787 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.4398028 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.772830274 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.412256797 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.767776295 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.766292241 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.763652009 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.764736629 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.763131122 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.777655906 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.861555586 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.767039119 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.780565247 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.766371553 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.789033884 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.767919576 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.763921061 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.764228847 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.763999545 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.763110801 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.7644804 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.765404541 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.91171874 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.014780655 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.766810815 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.76505844 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.651102344 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.777924079 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.889575107 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.76592304 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.857531882 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.764378223 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.821548506 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.895202187 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.769821286 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.98334606 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.852831066 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.765881815 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.764479369 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.829995831 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.777713565 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.765808776 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.766669424 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.771854276 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.830406844 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.019125725 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.770397947 seconds)
    (52/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.767382292 seconds)
    (53/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.886598199 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.260730884 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.767860895 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.766955398 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.766120127 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.364410754 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.767344931 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.766901256 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.771792701 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.772969531 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.766846233 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.766005031 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.154045082 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.836714323 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.780330056 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.923841753 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.768482642 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.946743594 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.999645744 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.766816161 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.768088792 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.768236919 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.769319179 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.768254058 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.768738669 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.889462523 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.776996917 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.88326519 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.852291791 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.887006949 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.771401328 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.777794736 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.58349062 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.840231456 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.803333352 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.594529552 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.771818782 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.141279047 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.768062482 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.530021471 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.768379788 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.767681588 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.780790907 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.772187106 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.770062096 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.771723687 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.847160641 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.769554226 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.887584491 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.492321183 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.972834188 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.77272765 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.769505433 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.775794649 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.848920222 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.890161933 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.772863266 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.834694423 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.775894492 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.772930553 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.86194383 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.772263545 seconds)
  done (took 399.351377624 seconds)
done (took 776.95153622 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.346037483 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.321430455 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.413875837 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.337565373 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.307178591 seconds)
  done (took 13.433023886 seconds)
done (took 15.140466117 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.783557885 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.776176613 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.829602 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.857526978 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.788401255 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.789675041 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.853526895 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.792952686 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.826203694 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.827404568 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.85921647 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.858343013 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.798571258 seconds)
  done (took 25.348060753 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.778318794 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.916835997 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.001341054 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.812390425 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.779267402 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.002290704 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.834154471 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.910475524 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.91939082 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.005564182 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.011124109 seconds)
  done (took 22.679943135 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.779892521 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.928864267 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.007198893 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.816180021 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.780864407 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.010736229 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.845762716 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.914622224 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.926622629 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.008088855 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.019408265 seconds)
  done (took 22.755781568 seconds)
done (took 72.490632595 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.775353246 seconds)
  done (took 3.483588146 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.80233241 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.935762914 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.773138821 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.773380829 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.774775439 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.77540945 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.773183102 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.77406277 seconds)
  done (took 16.092683737 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.774616085 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.773734303 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.772228389 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.774837883 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.774602575 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.773571401 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.777462514 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.773102696 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.774070967 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.773399484 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.773205359 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.773426865 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.773868451 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.773584622 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.773741638 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.773766228 seconds)
  done (took 30.09225262 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.775624296 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.773974794 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.774690994 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.773468722 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.773815743 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.774959461 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.774881315 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.774487546 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.774620931 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.774898174 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.774539584 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.774369147 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.773785475 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.774027108 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.774696458 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.775465873 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.774356252 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.776313559 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.780863306 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.775432995 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.774804099 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.777105899 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.776150044 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.775745747 seconds)
  done (took 44.313916826 seconds)
done (took 95.701299326 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.524654674 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.534617938 seconds)
  done (took 9.768570052 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.775669045 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.776645434 seconds)
  done (took 5.26671641 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.775129737 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.77533042 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.776893703 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.77583913 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.775735624 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.775865783 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.775153027 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.775552647 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.775515963 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.776706265 seconds)
  done (took 19.468715799 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.777154339 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.776959265 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.776306259 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.776950743 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.776528544 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.775962147 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.776282739 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.776798521 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.776301324 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.777014864 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.776480379 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.777145785 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.777159314 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.776548705 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.776947426 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.776831146 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.776763763 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.777875924 seconds)
  done (took 33.693849506 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.776895416 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.777131722 seconds)
  done (took 5.265226858 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.777032351 seconds)
    (2/7) benchmarking "second"...
    done (took 1.776956303 seconds)
    (3/7) benchmarking "month"...
    done (took 1.777647221 seconds)
    (4/7) benchmarking "year"...
    done (took 1.777955926 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.776372545 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.777340277 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.777092046 seconds)
  done (took 14.152052667 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.777955328 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.932541812 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.989803176 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.614223596 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.780635116 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.780688884 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.134728071 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.780768474 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.782691126 seconds)
  done (took 20.285844561 seconds)
done (took 109.613001387 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.589824512 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.779440163 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.086332294 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.838319533 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.814911701 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.070155387 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.785872094 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.059839153 seconds)
done (took 42.738427265 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.785985012 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.776625405 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.805641745 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.803981814 seconds)
  done (took 22.100430168 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.77825749 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.244545428 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.802314925 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.67464398 seconds)
  done (took 22.417187819 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.163607684 seconds)
    (2/2) benchmarking "read"...
    done (took 2.128392427 seconds)
  done (took 6.01099951 seconds)
done (took 59.030105319 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.779365714 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.78106234 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.779526948 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.779350911 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.779666088 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.779920847 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.78025259 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.78041265 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.780181673 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.779296153 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.780995825 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.78068602 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.781098417 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.780295152 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.781325331 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780534192 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.780995949 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.780470216 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.78123719 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.780724725 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.781130756 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.781534474 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.780555698 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.782017866 seconds)
  done (took 44.448669348 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.780879686 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.780924596 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.780828828 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.781493449 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.781797335 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.781546134 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.781621457 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.782204514 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.78095212 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.781861828 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.781646238 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.782066018 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.781574077 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.782630009 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.781806102 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.780740397 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.782339889 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782396383 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781978098 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.782181255 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.781676199 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784587184 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.782914822 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.78259104 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.782574943 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.782092363 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.783225037 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.782677201 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.782078024 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.784423205 seconds)
  done (took 55.180386302 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.782703422 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.783040672 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.78319268 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.782561103 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.783492113 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.78405308 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.784300157 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.784166389 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.783759039 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.78332925 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.784738804 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.78288147 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.782483622 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.785203961 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.784243714 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.783102442 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.783906701 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.782804004 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.784526817 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.784313915 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.784052007 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.784199658 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.785274418 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.784363247 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.783960327 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.782936757 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.784307388 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.784554712 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.785105557 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.784717676 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.7851587 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.78463476 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.784659733 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.784062865 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.783714389 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.784123949 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.785866502 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.783395343 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.784260213 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.784683875 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.785329653 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.784327299 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.784699287 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.784842269 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.784679673 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.785091346 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.785031464 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.785712874 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.785500927 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.785183705 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.786119811 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.785808485 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.785949665 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.784798159 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.785244112 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.786242558 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.786374838 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.787197132 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.78631334 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.786844931 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.786104793 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.786250178 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.786155633 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.78660912 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.786210622 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.786779168 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.785861186 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.786986264 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.787357767 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.78786361 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.786702275 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.786039274 seconds)
  done (took 130.230981873 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.786736966 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.7879874 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.785852946 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.786404728 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.786831599 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.786932458 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.785831591 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.786410347 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.787132732 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.786869441 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.787563302 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.786727274 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.787735818 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.789145433 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.787908615 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.78710568 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.786978935 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.786885957 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.788131303 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.787673611 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.788350466 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.788259552 seconds)
  done (took 41.040772928 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.788641376 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.789923659 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.787980925 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.788267742 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.788164447 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.788826694 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.788154117 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.788779399 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.78780343 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.788287953 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.787310974 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.787270742 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.788827915 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788330861 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.789408214 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.788915542 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.788605822 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.78852457 seconds)
  done (took 33.914813257 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.78876741 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.789777659 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.788299597 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.789074216 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.79190922 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.788758746 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.789516022 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.788425088 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.789095847 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.789377703 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.790279333 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.789364704 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.790184133 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.788846858 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789325032 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.79113419 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.789391834 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79035242 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.789701167 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.789541403 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.790602798 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.790722989 seconds)
  done (took 41.096750264 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.789465586 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.790165369 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.789881733 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.789891395 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.790535153 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.79092065 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.791366932 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.790860486 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.790506645 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.79051225 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.789968705 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.791325623 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.790463525 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.79090717 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.790901527 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.791602705 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.790927703 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.790448693 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.789738461 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.794244261 seconds)
  done (took 37.540161954 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.792034166 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.792091554 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.792133025 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.791961818 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.791274035 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.792696074 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.791240035 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.792855979 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.792100858 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.792551378 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.792676442 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.792050916 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.792408315 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.792345736 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.792123883 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.792833858 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.792451528 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.792975276 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.792068276 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.792427157 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.792693705 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.792373103 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.793415933 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.793648574 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.792734448 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.792756848 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.79256313 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.792705024 seconds)
  done (took 51.915896928 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.791546541 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.791711299 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.790798019 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.791835486 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.793323398 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.793459875 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.792701176 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.792480832 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.792119836 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.79336438 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.793186851 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.792813479 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.793896693 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.793761302 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.792588426 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.794652824 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.792556331 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.793177118 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.792882057 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.792249234 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.793546979 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794915205 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.794140093 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.794241191 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795247218 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.793848817 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.795734829 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.794674431 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.794868776 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.793894753 seconds)
  done (took 55.528306964 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.814905465 seconds)
    (2/2) benchmarking "in"...
    done (took 1.815762633 seconds)
  done (took 5.359428425 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.794258493 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.795324097 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.795410286 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.794287415 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.794052755 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.794212269 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.794726444 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.795239774 seconds)
  done (took 16.08674399 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.795298733 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.796674725 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.795523375 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.794215119 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.795336965 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.802109473 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.79617892 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.796307654 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.79651911 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.796281619 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.798642379 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.800122445 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.802419937 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.799533215 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.795535352 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.796928443 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.797609061 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.799133807 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.796624358 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.796237368 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.799680536 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.796483931 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.796621211 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.79591264 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.795572779 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.798763117 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.804125372 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.798040761 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.799341546 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.79598704 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.804381488 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.79656077 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.796469898 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.799758748 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.795608215 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.796228728 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.802864862 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.796201523 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.798177514 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.797558336 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.800029736 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.800269523 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.799865973 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.803946445 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.797076799 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.797969424 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.797493374 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.798311799 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.798349026 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.803993071 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.805892736 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.798492153 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.798241039 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.798210676 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.80026916 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.798658338 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.800158424 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.800616574 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.805112861 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.804797376 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.801487958 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.817754496 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.807884334 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.799287521 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.798238842 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.807534406 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.820377944 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.80081363 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.801234033 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.797342949 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.807315813 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.798939829 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.79916934 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.798165178 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.810186811 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.807159984 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.799340549 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.798632692 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.79916787 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.799454982 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.801186034 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.798800582 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.800135982 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.799073339 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.808224934 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.822782083 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.799556871 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.798520014 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.8012125 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.801122979 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.803626973 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.802031995 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.800804704 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.800377229 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.80254525 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.802898529 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.800158859 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.799771657 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.800325372 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.808040289 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.80239442 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.799823553 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.80439131 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.808736181 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.80035931 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.79980387 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.802674773 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.801473254 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.808662827 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.801309934 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.800532954 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.801514281 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.801514266 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.804737237 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.801876887 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.805849751 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.808953957 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.809052722 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.803700635 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.805013659 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.805160557 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.804572773 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.810268395 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.822581963 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.801372008 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.805698645 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.806735177 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.812299851 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.806576816 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.801799674 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.804966248 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.802390396 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.801426719 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.804757602 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.802503854 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.802403529 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.802495636 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.802543963 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.802008251 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.80337599 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.805076944 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.80478981 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.804818296 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.802657331 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.806568973 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.803227685 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.806038067 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.81116438 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.804098208 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.802599625 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.803876522 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.805649653 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.805792878 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.804141235 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.802767675 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.803215997 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.80377589 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.805119545 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.806473005 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.804101946 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.804328536 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.805689504 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.807442377 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.804250915 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.805552968 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.804438503 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.804838613 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.803533078 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.806190946 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.805452187 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.807314853 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.804082841 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.808758891 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.803573627 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.803971177 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.804262304 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.803896622 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.804275467 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.807503969 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.815330399 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.807893473 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.814857624 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.804747334 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.811496563 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.803913985 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.806936778 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.805648206 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.805741694 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.804469027 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.804880975 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.804455329 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.809421535 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.824155672 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.814609258 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.807649452 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.805897045 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.810357447 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.80932372 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.810966765 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.806107856 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.807145169 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.808270926 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.805599921 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.804896621 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.805274009 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.808125697 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.80544662 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.806494935 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.810826081 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.807105534 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.805562805 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.808353278 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.806306592 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.809445559 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.806899582 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.807267418 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.807919882 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.806296848 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.813442373 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.808549583 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.806851353 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.807781568 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.810113181 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.80658463 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.80723939 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.808016175 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.810560888 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.806864451 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.80891304 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.81403129 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.80744007 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.807815666 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.807008202 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.808183251 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.809008615 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.806385184 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.810700937 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.814323254 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.811729877 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.807299589 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.811991175 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.807917841 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.810342056 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.807808357 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.80895731 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.807150842 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.81034747 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.807599783 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.808425473 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.815046297 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.808012164 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.809928347 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.808730672 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.809709996 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.809101663 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.810807336 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.807851982 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.811488633 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.816892649 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.813184238 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.809396235 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.810994455 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.811517617 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.811612955 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.813599805 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.810875464 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.82176319 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.818283729 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.809140974 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.809254182 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.808810082 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.811957493 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.809728205 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.809260662 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.816605098 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.809115334 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.811357867 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.813064956 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.80982766 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.809699103 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.816391267 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.811123726 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.812480243 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.81233539 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.811188594 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.809738306 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.809904732 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.811662631 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.811386468 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.811803829 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.813980302 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.810523549 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.811084918 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.810050728 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.819944513 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.810203653 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.810803425 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.817085953 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.812301174 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.811272269 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.812147067 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.810801402 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.812402578 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.81199472 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.812802549 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.813456808 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.812044301 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.814903249 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.821382651 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.814580676 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.818835477 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.815555223 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.820411403 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.810647541 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.81032222 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.811964464 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.815697361 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.818335716 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.811746429 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.811566096 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.818919278 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.813229698 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.813592343 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.816302837 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.81207086 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.812376707 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.812254806 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.813815884 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.81804748 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.81633059 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.814133067 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.811863192 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.814511881 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.812170743 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.816235847 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.814853244 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.813320512 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.81336033 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.813158136 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.812756478 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.813465312 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.81306516 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.813390515 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.812937164 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.813003588 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.820475326 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.813620621 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.81463063 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.816401899 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.813545155 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.821492276 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.81392774 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.812910858 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.814212767 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.813905858 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.815463168 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.812505857 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.813650118 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.814073985 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.814368451 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.815222887 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.824823461 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.821440917 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.816147225 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.815835799 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.814668492 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.81598756 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.823315201 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.836456129 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.814458489 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.816535627 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.820375054 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.823450826 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.817544933 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.822666475 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.819018631 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.824441225 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.816869763 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.816109076 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.819307737 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.827303076 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.814849046 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.816427203 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.814895079 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.820767939 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.816811418 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.813848739 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.818352255 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.818124591 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.816453195 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.824383804 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.814580064 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.817870481 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.8154225 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.816083068 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.815614974 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.815945589 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.817155066 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.818230727 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.816272769 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.815813669 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.817926385 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.822206889 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.815893677 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.820005769 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.825281984 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.816713572 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.816464979 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.817841264 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.816741873 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.820152894 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.816944001 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.816578914 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.817890029 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.816207136 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.819153093 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.820783954 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.826228923 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.819609472 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.816436063 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.817879048 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.821912572 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.81730751 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.817404729 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.819664458 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.824596155 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.821797756 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.828321761 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.827778019 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.818400535 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.818846227 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.825266733 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.825084441 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.818148414 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.818523801 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.817079652 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.820458986 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.821263681 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.819211182 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.818259273 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.819238851 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.825041622 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.819561244 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.819486308 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.819325399 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.81848942 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.820964711 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.820001317 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.824034146 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.818309765 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.818101374 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.818196242 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.819948354 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.820473413 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.821410238 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.819423686 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.819692578 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.821503849 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.819759031 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.82333228 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.81875413 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.819098598 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.82131374 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.820080075 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.819057945 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.819629108 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.82112044 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.81976655 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.822388981 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.827570207 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.819963105 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.820937538 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.82080559 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.823841523 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.819882407 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.819395986 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.819662355 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.82009061 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.827979681 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.819138482 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.820466389 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.821956772 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.821292739 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.825613762 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.823079531 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.826199127 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.821955431 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.82182014 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.821134999 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.824928871 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.830610184 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.826126296 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.824286216 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.829022113 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.825357729 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.824992123 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.82100427 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.821003489 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.82215103 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.823926936 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.825144947 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.823935188 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.824381969 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.821943522 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.824048899 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.821797296 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.823487492 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.821662522 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.82223651 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.824573722 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.830868697 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.828675836 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.821991225 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.82418591 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.822102176 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.824715108 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.831055623 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.821570048 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.822177351 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.822924294 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.824516726 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.822797549 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.829510172 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.831020612 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.826180133 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.822983776 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.828062642 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.837774267 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.824972078 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.83224024 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.852264444 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.824950154 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.823213546 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.824229563 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.823874725 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.82351422 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.825091058 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.823511674 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.831406135 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.823819597 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.823187999 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.831898773 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.823330612 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.824190796 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.824374274 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.825647935 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.830560805 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.823454672 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.83045205 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.824133108 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.823726566 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.825284057 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.826925716 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.824753833 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.823064652 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.824016017 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.826134834 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.823801747 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.823478482 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.832703764 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.824626511 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.826780573 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.835811319 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.834852664 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.824633895 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.824838488 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.824662675 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.829234846 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.828430489 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.823964613 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.827729686 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.833173236 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.828489583 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.832518564 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.828275873 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.827627945 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.82713054 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.825217968 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.825863577 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.838052453 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.83673082 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.827034944 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.826928184 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.832207735 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.824009758 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.832370853 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.830880541 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.826008951 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.828951023 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.826626003 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.825713265 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.826396717 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.826145512 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.8300424 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.834598481 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.826609516 seconds)
  done (took 1082.445071002 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.827398722 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.827352716 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.827520185 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.82696447 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.827089896 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.828041152 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.827699002 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.828186757 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.827396983 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.827749361 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.826622815 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.828513322 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.827240437 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.828254416 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.82823555 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.827917547 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.827782382 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.827613869 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.827725019 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.827734432 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.828679113 seconds)
  done (took 40.141942223 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.827361643 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.82777376 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.82802957 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.827950863 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.827725347 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.828610257 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.82839624 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.828558316 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.828663763 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.828189461 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.827667706 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.827654761 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.828468072 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.828374894 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829220391 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.828500493 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.828919007 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.829079319 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.828950654 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.828321094 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.829427216 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.828704984 seconds)
  done (took 41.98576478 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.829088501 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.829133159 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.829353468 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.828850463 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.828882534 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.829153853 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.828967447 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.83096585 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.831300585 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.831647845 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.836046371 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.837472293 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.829534483 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.833063593 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.830708774 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.830134438 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.988752788 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.830475851 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.829560784 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.829646276 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.829929615 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.835650366 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.829778349 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.830294321 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.829658348 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.829925296 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.830034522 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.831159979 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.829253204 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.830817171 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.83396305 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.830348981 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.832998812 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.833915919 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.831475834 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.831479662 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.835249806 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.831182491 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.830511051 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.831098271 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.83965373 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.853061643 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.830836063 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.831391375 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.837503515 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.830645475 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.831113363 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.833761809 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.837949669 seconds)
  done (took 91.689405211 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.83141922 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.830851896 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.831694652 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.831642635 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.832623663 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.831321613 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.831143951 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.830827261 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.832784885 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.831693651 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.831447068 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.831377952 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.832129008 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.831205503 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.831496225 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.832076047 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.83191225 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.83255375 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.831929283 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.832639194 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.832606629 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.830500499 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.831743661 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.831888002 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.832923028 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.83208554 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.832084956 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.833023711 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.832608933 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.833120557 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.832287807 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.831778179 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.831979028 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.83244598 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.831994871 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.833653661 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.832300327 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.832966639 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.832770801 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.833322708 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.832881994 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.833667072 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.833651278 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.832937346 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.833413031 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.833370664 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.833795792 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.833639967 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.832332476 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.833103716 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.834546756 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.834255067 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.834340367 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.833358736 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.834238954 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.834179954 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.834311974 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.83379213 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.833339014 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.833976616 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.834388934 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.833305063 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.834260136 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.833981286 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.834161396 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.834441718 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.834552425 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.835617694 seconds)
  done (took 126.396120269 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.834732714 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.835534499 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.835046598 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.836638039 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.835797887 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.835331238 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.835200915 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.835428012 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.835206586 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.836511719 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.836518841 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.835309422 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.835209579 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.835158888 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.836434809 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.834864321 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.835813118 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.836318007 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.83567484 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.835624028 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.836297669 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.836095802 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.835720854 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.835107383 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.836421101 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.836176411 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.836607857 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.836177208 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.836742873 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.834932064 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.837534137 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.836383714 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.837038358 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.836661525 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.837515674 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.837783795 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.837050572 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.836714125 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.83761434 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.837824199 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.836543274 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.83733918 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.837443478 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.837210323 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.83741168 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.837993513 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.838647498 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.837617675 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.836819391 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.837279568 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.837834215 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.838372036 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.839112661 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.838873833 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.837538711 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.837541255 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.83811116 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.837753129 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.837331167 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.838575866 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.837793145 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.837295855 seconds)
  done (took 115.645102365 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.837174391 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.837279738 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.837859297 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.838248629 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.837585779 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.839164009 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.839858526 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.839023585 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.83902388 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.83821848 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.837982289 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.837468344 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.839425785 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.838992834 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.838388117 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.8399052 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.840185819 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.839775541 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.839437659 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.837975041 seconds)
  done (took 38.544170175 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.839265174 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.839352685 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.83956749 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.839516843 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.839053725 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.839839323 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.838835912 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.839711629 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.839996354 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.839917455 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.840074937 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.839252805 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.838769271 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.840456459 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.83952958 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.839390925 seconds)
  done (took 31.204088585 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.838816281 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.840472994 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.839920078 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.840370623 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.840287222 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.840709322 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.840533755 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.84086185 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.840766095 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.840732368 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.840849367 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.841229127 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.841322829 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.84011468 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.841632581 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.840662251 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.841907533 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.840668864 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.84117359 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.841394318 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.842266673 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.841139806 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.841810835 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.841385843 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.841583348 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.840941304 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.841321056 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.841446887 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.84153183 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.841506018 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.841728768 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.84112843 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.841892495 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.841537257 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.84180735 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.841633004 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.841635176 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.841727866 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.841246794 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.842576614 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.841656205 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.841550403 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.84209149 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.842784377 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.842067781 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.842431692 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.842373916 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.843374318 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.843030792 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.84318356 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.842690422 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.842965107 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.843005551 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.842376847 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.84333036 seconds)
  done (took 103.059337645 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.842239075 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.842853136 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.842182411 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.842858885 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.843814392 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.843626626 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.843298125 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.842950782 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.84383537 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.843663888 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.844101194 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.843468162 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.844256063 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.843708701 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.844595125 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.843102956 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.843774744 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.844467282 seconds)
  done (took 34.958783819 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.844312635 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.844583624 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.843745604 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.842700602 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.843961473 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.844405847 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.84385986 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.844124115 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.843850427 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.845089379 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.843469492 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.844533629 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.844037291 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.845311306 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.844225677 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.844296716 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.844630717 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.846384699 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.84502229 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.84483011 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.844830016 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.844749089 seconds)
  done (took 42.353417672 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.845750294 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.845127238 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.859826019 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.866153613 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.864737854 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.878760882 seconds)
  done (took 12.937465666 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845368085 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84593432 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.845346214 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84617388 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845296768 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845391611 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845552783 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845897515 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845177075 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846412137 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846946618 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845996125 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845033423 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846133427 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846862805 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845688535 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847009269 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846230198 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846351626 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846869481 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846539889 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846166644 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846482491 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847082638 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846849219 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84666849 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84665722 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847160828 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847237141 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846437274 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846370738 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847663708 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846754951 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847236658 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847464224 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847350574 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847139343 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846363739 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847877417 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847548791 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.846760082 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846470642 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847583023 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847266408 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847248035 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847888341 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847459755 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847775619 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847662464 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846980377 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847382978 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847699864 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846874377 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848970555 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847375476 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848451719 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848646749 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847209521 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847912647 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848611928 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847626318 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848645085 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848596264 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848636746 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848384156 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849581126 seconds)
  done (took 123.681834179 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848619176 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.84897058 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849140896 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849677327 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849267216 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849181384 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849605436 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849505268 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849601732 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848903896 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849392997 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850103784 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849477714 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850270378 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849199004 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849728768 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849510747 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849849548 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849574238 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84984993 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850145581 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850235098 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851000507 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850618518 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849963291 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850610362 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849916862 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850428839 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849548217 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850199702 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850245806 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849663274 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850715111 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.849861443 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851077216 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850151421 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850781997 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850674033 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849805274 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850076496 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851183577 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850693861 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851393165 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850894795 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850904355 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850558021 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851240748 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851227014 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851592851 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851092767 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8519544 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853640911 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852356727 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850914769 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852266861 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851191732 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85255295 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851621977 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851372461 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852417141 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851580449 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852278386 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852031352 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852040156 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851651367 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852205381 seconds)
  done (took 123.921527295 seconds)
done (took 2523.027040048 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.878901663 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.888114656 seconds)
  done (took 15.551035512 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.016303697 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.968649035 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.854271049 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.896605592 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.854403811 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.880080832 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.877167949 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.854616838 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.854247894 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.853788033 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.853891459 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.039043634 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.907749555 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.854527736 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.854147174 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.947043797 seconds)
  done (took 52.155382916 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.860331938 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.859202877 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.870219114 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.859656098 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.860082044 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.872424208 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.891955588 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.863860365 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.895238053 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.872182517 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.930555571 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.871454355 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.8605785 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.912063265 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.873648559 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.874819829 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.959701601 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.938435276 seconds)
  done (took 35.711674536 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.938028797 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.866311145 seconds)
  done (took 10.597397684 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.859549289 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.868343441 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.870394248 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.868422581 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.882236021 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.877184946 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.881420883 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.883781825 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.857456859 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.868768578 seconds)
  done (took 70.507769351 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.861689383 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.861184055 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.860798997 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.857862221 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.854473342 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.860412419 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.856382349 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.859229755 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.541388234 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.899941714 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.867570079 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.867526555 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.857642853 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.859627833 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.855740704 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.883508946 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.988495102 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.854826852 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.854534669 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.863861144 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.857118246 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.908388404 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.871949497 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.85948904 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.890881094 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.542044144 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.873490082 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.863227507 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.964141952 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.856918007 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.857530507 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.069343487 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.863497543 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.325594215 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.129485128 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.863929999 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.869764137 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.865776419 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.857470858 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.971056985 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.86048352 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.865266106 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.840535832 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.100740012 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.956588248 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.904947789 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.207764876 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.863228055 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.860136563 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.893113494 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.86316038 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.860310759 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.877995696 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.37952311 seconds)
  done (took 132.352003831 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.859575154 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.203636021 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.024329004 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.860964689 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.143530679 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.064233921 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.861518041 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.904014949 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.866950505 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.085686704 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.114555434 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.965041854 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.860243553 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.860039362 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.861681814 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.858576495 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.013562099 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.928762468 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.862020955 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.857744611 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.885843066 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.100016327 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.980790481 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.86227979 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.884695456 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.067344709 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.979502901 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.962511609 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.668050888 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.858434657 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.920503466 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.861911084 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.857655326 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.858461178 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.014616733 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.954911532 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.944306411 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.861268515 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.858573846 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.860190148 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.515521226 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.058116977 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.954619628 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.989844135 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.116545095 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.068232426 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.636764368 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.859713813 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.592878137 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.021718436 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.086813116 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.087532838 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.980371467 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.867793149 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.386352407 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.859669666 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.857954603 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.106768797 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.079152623 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.963054764 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.860989358 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.858415673 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.858804323 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.095776637 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.86246076 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.951574244 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.859587079 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.855641298 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.951615966 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.956618057 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.082931755 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.07088342 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.884318883 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.193239933 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.352434863 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.099626823 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.919552103 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.104185735 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.856444637 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.851924078 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.930402726 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.690629079 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.104331317 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.099415469 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.095806163 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.885635217 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.569376343 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.849465763 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.073357348 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.069243723 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.108094023 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.099137382 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.088166335 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.173407027 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.848073512 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.847664035 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.069700289 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.971385331 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.85353695 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.188268344 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.07911538 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.413999126 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.871958241 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.151906458 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.976385693 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.853397476 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.473462415 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.847631454 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.073661387 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.88482763 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.847364132 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.846417225 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.062928641 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.832142049 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.846187837 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.484732463 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.906102111 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.848702042 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.076658456 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.84813806 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.113425133 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.850643063 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.076247382 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.418880471 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.87521726 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.07313027 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.092421058 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.854358359 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.087046589 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.089073232 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.964794744 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.065625378 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.456743801 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.848370203 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.131149546 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.847850129 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.844052032 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.018089796 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.846075154 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.985702675 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.850804697 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.135856978 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.865095325 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.076436193 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.850873563 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.09843701 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.876920951 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.894220041 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.85262859 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.964153228 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.851822102 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.76311207 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.000223214 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.852016458 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.845499208 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.636687255 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.848065387 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.99799383 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.071712397 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.864813531 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.915213544 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.503640965 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.843457482 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.928461338 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.86600301 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.231972667 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.843303299 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.093998713 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.850690031 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.840231012 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.84588431 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.075295901 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.022090427 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.841943369 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.843802554 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.744309243 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.840769312 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.836543872 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.017562307 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.359676613 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.839166833 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.036994936 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.834931423 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.958993457 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.837497354 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.901220505 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.169136922 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.830593142 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.83110432 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 7.27581836 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.828778627 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.828585194 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.085781727 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.855526323 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.355087704 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.960823053 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.098480347 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.136882065 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.061882407 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.864046553 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.825245428 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.074607658 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.822458598 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.879321315 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.821577639 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.83719965 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.047879257 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.821201476 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.027962902 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.086464753 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.693233381 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.863598879 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.824907674 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.814681827 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.815996879 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.960400632 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.902584863 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.816899205 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.813774853 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.927010334 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.932955586 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.026820634 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.815289074 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.874508484 seconds)
  done (took 898.555941946 seconds)
done (took 1217.21665342 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.814574833 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.817307581 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.820685949 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.818286547 seconds)
  done (took 29.018885671 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.813085498 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.813297117 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.813115943 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.811646242 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.811468831 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.811883398 seconds)
  done (took 12.622114348 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.894573859 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.814911093 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.812779461 seconds)
  done (took 21.267077644 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.887582113 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.219777965 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.95343707 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.247119044 seconds)
  done (took 10.052646432 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.812265506 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.808558899 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.808967623 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.808779731 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.80978303 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.813042592 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.807019221 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.807833349 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.809465884 seconds)
  done (took 18.030508892 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.519330962 seconds)
done (took 97.259711808 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.757279465 seconds)
    (2/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.73526397 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.956690516 seconds)
    (4/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.738876365 seconds)
    (5/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.052501255 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.937396879 seconds)
    (7/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.928201778 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.960684514 seconds)
    (9/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.944624827 seconds)
    (10/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.116051223 seconds)
    (11/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.870564186 seconds)
    (12/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.890495436 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.166736608 seconds)
    (14/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.048729795 seconds)
    (15/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.53227469 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.896551779 seconds)
    (17/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.878786294 seconds)
    (18/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.867060731 seconds)
    (19/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.023586208 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.995467443 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.16612915 seconds)
    (22/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.176773232 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.02679307 seconds)
    (24/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.253899604 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.207868728 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.890999965 seconds)
    (27/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.861666885 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 3.731168299 seconds)
    (29/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.250006255 seconds)
    (30/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.164898254 seconds)
    (31/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.992451488 seconds)
    (32/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.4213396 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.962863396 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.488834041 seconds)
    (35/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.069670932 seconds)
    (36/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.183778334 seconds)
    (37/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.874928802 seconds)
    (38/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.949201668 seconds)
    (39/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.048352408 seconds)
    (40/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.120647307 seconds)
    (41/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.053310897 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.046245538 seconds)
    (43/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.052121211 seconds)
    (44/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.968228645 seconds)
    (45/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.871674688 seconds)
    (46/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.24653655 seconds)
    (47/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.891175656 seconds)
    (48/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.972508644 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.201014718 seconds)
    (50/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.871834395 seconds)
    (51/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.016673057 seconds)
    (52/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.293980942 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 2.085577895 seconds)
    (54/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.87450755 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.319739074 seconds)
    (56/309) benchmarking ("sort", Float32, false)...
    done (took 5.617416464 seconds)
    (57/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.87238469 seconds)
    (58/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.025697221 seconds)
    (59/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.070820046 seconds)
    (60/309) benchmarking ("sort", Int64, false)...
    done (took 5.509735232 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.204546488 seconds)
    (62/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.970666857 seconds)
    (63/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.444690247 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.261132376 seconds)
    (65/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.113220085 seconds)
    (66/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.975881072 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.644146545 seconds)
    (68/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.025879169 seconds)
    (69/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.035369814 seconds)
    (70/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.893114485 seconds)
    (71/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.146783783 seconds)
    (72/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.873328604 seconds)
    (73/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.095481456 seconds)
    (74/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.182473642 seconds)
    (75/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.877728443 seconds)
    (76/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.961742559 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.49510169 seconds)
    (78/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.054751803 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.877783671 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.790201504 seconds)
    (81/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.331203408 seconds)
    (82/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.004363931 seconds)
    (83/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.950658842 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.995292514 seconds)
    (85/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.888309167 seconds)
    (86/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.448708359 seconds)
    (87/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.066585066 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.138396466 seconds)
    (89/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.891029642 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.539024827 seconds)
    (91/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.156279331 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.489437495 seconds)
    (93/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.273365147 seconds)
    (94/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.74831449 seconds)
    (95/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.189549154 seconds)
    (96/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.126823763 seconds)
    (97/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.184982795 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.200411618 seconds)
    (99/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.348778257 seconds)
    (100/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.263903627 seconds)
    (101/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.932424702 seconds)
    (102/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.951766686 seconds)
    (103/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.204855567 seconds)
    (104/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.905575173 seconds)
    (105/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.091406231 seconds)
    (106/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.449036278 seconds)
    (107/309) benchmarking ("sort", BigInt, false)...
    done (took 6.985540484 seconds)
    (108/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.076853078 seconds)
    (109/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.00605039 seconds)
    (110/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.079051798 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.892191356 seconds)
    (112/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.873382451 seconds)
    (113/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.952584095 seconds)
    (114/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.873163641 seconds)
    (115/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 3.854585022 seconds)
    (116/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.877636868 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.921303831 seconds)
    (118/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.993676948 seconds)
    (119/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.138577043 seconds)
    (120/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.934902296 seconds)
    (121/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.116731107 seconds)
    (122/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.348021371 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.007386686 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.187207261 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.875803472 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 3.926038053 seconds)
    (127/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.214546377 seconds)
    (128/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.216170926 seconds)
    (129/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.902391596 seconds)
    (130/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.873837469 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.228684743 seconds)
    (132/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.189282147 seconds)
    (133/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.026123776 seconds)
    (134/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.21691828 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.277048994 seconds)
    (136/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.99336812 seconds)
    (137/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.876231631 seconds)
    (138/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 5.802168883 seconds)
    (139/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.95512225 seconds)
    (140/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.21925752 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.880643409 seconds)
    (142/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 3.691325936 seconds)
    (143/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.019055885 seconds)
    (144/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.024902463 seconds)
    (145/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.962551482 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.011390818 seconds)
    (147/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.875730038 seconds)
    (148/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.191809798 seconds)
    (149/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.410424527 seconds)
    (150/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.228813259 seconds)
    (151/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.729282899 seconds)
    (152/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.938665293 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.024813364 seconds)
    (154/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.975528334 seconds)
    (155/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.901618828 seconds)
    (156/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.127019455 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.919718045 seconds)
    (158/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.723775128 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.034641001 seconds)
    (160/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.140167979 seconds)
    (161/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.902900515 seconds)
    (162/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.962209711 seconds)
    (163/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.008649981 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.769179097 seconds)
    (165/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.016223283 seconds)
    (166/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.25936518 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.184296786 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.173303744 seconds)
    (169/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.900689007 seconds)
    (170/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.127011286 seconds)
    (171/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.007979244 seconds)
    (172/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.878980702 seconds)
    (173/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.874551132 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.905238056 seconds)
    (175/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.265534479 seconds)
    (176/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.177857289 seconds)
    (177/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.00682051 seconds)
    (178/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.981306657 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.880511704 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.877730913 seconds)
    (181/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.879804332 seconds)
    (182/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.259952397 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.852314424 seconds)
    (184/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.021941112 seconds)
    (185/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.562731103 seconds)
    (186/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.88130211 seconds)
    (187/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.876967944 seconds)
    (188/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.01826576 seconds)
    (189/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.090295965 seconds)
    (190/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.751028351 seconds)
    (191/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.212122829 seconds)
    (192/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.011852588 seconds)
    (193/309) benchmarking ("sort", Float64, false)...
    done (took 5.640231235 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.772000333 seconds)
    (195/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.900010197 seconds)
    (196/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.879419524 seconds)
    (197/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.953061745 seconds)
    (198/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.355593823 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.901526891 seconds)
    (200/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.87975466 seconds)
    (201/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 10.460347047 seconds)
    (202/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.037934759 seconds)
    (203/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.370508022 seconds)
    (204/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.897696588 seconds)
    (205/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.06265338 seconds)
    (206/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.040555395 seconds)
    (207/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.281026602 seconds)
    (208/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.676539027 seconds)
    (209/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.991133861 seconds)
    (210/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.046751855 seconds)
    (211/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.192997333 seconds)
    (212/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.611041649 seconds)
    (213/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.079440126 seconds)
    (214/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.938212773 seconds)
    (215/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.351768601 seconds)
    (216/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.877579749 seconds)
    (217/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.215398231 seconds)
    (218/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.878990723 seconds)
    (219/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.966089493 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.847026648 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.915352565 seconds)
    (222/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.954017189 seconds)
    (223/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.882519736 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.502450464 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.885984232 seconds)
    (226/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.571801281 seconds)
    (227/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.982199505 seconds)
    (228/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.881678349 seconds)
    (229/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.156798601 seconds)
    (230/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.575454302 seconds)
    (231/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.975852317 seconds)
    (232/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.776657806 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.004901418 seconds)
    (234/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.535179516 seconds)
    (235/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.197208462 seconds)
    (236/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.057886883 seconds)
    (237/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.032257069 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.879774542 seconds)
    (239/309) benchmarking ("sort", Int8, false)...
    done (took 4.752809588 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.012411787 seconds)
    (241/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.970295443 seconds)
    (242/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.891648561 seconds)
    (243/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.887084207 seconds)
    (244/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.837088251 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.062245919 seconds)
    (246/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.892601233 seconds)
    (247/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.138524963 seconds)
    (248/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.970671312 seconds)
    (249/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.167502195 seconds)
    (250/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.681387956 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.90856194 seconds)
    (252/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.947731449 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.238173954 seconds)
    (254/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.539438484 seconds)
    (255/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.95941958 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.00357254 seconds)
    (257/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.961963435 seconds)
    (258/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.86383395 seconds)
    (259/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.890438686 seconds)
    (260/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.96734589 seconds)
    (261/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.075527343 seconds)
    (262/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.962617753 seconds)
    (263/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.945457731 seconds)
    (264/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.885971911 seconds)
    (265/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.897206047 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.995179988 seconds)
    (267/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.861692428 seconds)
    (268/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 8.405856352 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.192631829 seconds)
    (270/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.889721167 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.877163905 seconds)
    (272/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.61212278 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.262869859 seconds)
    (274/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.253632163 seconds)
    (275/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.127542525 seconds)
    (276/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.253047697 seconds)
    (277/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.202674839 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.866784257 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.266607294 seconds)
    (280/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.607459842 seconds)
    (281/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.2520737 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 1.978801139 seconds)
    (283/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.986910746 seconds)
    (284/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.061658463 seconds)
    (285/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.369168838 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.691010395 seconds)
    (287/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.854027629 seconds)
    (288/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.176854363 seconds)
    (289/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.546687669 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.681623152 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.758939966 seconds)
    (292/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.097784581 seconds)
    (293/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.019595211 seconds)
    (294/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.492508487 seconds)
    (295/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.329257876 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.886457713 seconds)
    (297/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.855829309 seconds)
    (298/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.931247529 seconds)
    (299/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.958022019 seconds)
    (300/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.053290956 seconds)
    (301/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.688273505 seconds)
    (302/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.848673446 seconds)
    (303/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.855689782 seconds)
    (304/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.854428682 seconds)
    (305/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.881587403 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.048665698 seconds)
    (307/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.837078581 seconds)
    (308/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.066323617 seconds)
    (309/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.842819384 seconds)
  done (took 1013.750929238 seconds)
done (took 1015.630950879 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.858366252 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.852069516 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.831800744 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.854688426 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.945592269 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.876778538 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.847121499 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.834743997 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.882063736 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.880731341 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.82955872 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.872990131 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.830852312 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.830507786 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.829503666 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.846371119 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.133572238 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.859043013 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.847906031 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.842033995 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.847328174 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.827555598 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.8797119 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.870558979 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.833528483 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.835133925 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.833517533 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.84922142 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.943314504 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.83394137 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.834808722 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.842811127 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.134051748 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.856360268 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.828637636 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.849702268 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.844173123 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.842141665 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.834612546 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.864724327 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.273650778 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.835614872 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.831924815 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.831538178 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.83068194 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.83690201 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.831256597 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.84063147 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.846215409 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.846385953 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.268559464 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.852751405 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.834834932 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.831712745 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.845220375 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.832434779 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.836314242 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.848411773 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.85126993 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.848454027 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.123583504 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.865408709 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.835970866 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.849639849 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.841638277 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.303056904 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.836493333 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.838785267 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.273562261 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.845195697 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.303438846 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.847768991 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.834919758 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.847995213 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.865293272 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.134470275 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.85714092 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.830778306 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.841870835 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.830665227 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.845173177 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.848106297 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.838045194 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.834084492 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.850757735 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.87630607 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.846855261 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.834418015 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.845624819 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.852760961 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.843209668 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.847351657 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.838516975 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.832649967 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.846687036 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.839308606 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.836997953 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.837762079 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.839314806 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.847064451 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.273586711 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.858057562 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.831861614 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.830943549 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.833470287 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.848766805 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.273993536 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.839810164 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.856781229 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.883808978 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.836757901 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.123846064 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.865772734 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.852790163 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.84744699 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.838332142 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.831993552 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.123096401 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.297635883 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.856743644 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.835174729 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.832820232 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.851970099 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.836704231 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.833205585 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.136695017 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.865235465 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.8514846 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.958384567 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.84811717 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.868101067 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.833248037 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.839391813 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.880671021 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.853081106 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.868451164 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.837653271 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.852727888 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.854016068 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.833360011 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.848032783 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.849061119 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.835771173 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.844794909 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.834602429 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.88234573 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.852271347 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.851812959 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.858081178 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.95991785 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.834841234 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.128333777 seconds)
done (took 288.543377403 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.910523825 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.83195608 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.956431976 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.834050345 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.921064829 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.906942258 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.834093347 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.834205735 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.8345622 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.33256907 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.834382162 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.840909489 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.835336451 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.835126251 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.903212325 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.834378627 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.83503021 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.27843225 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.8364315 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.913289769 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.834531242 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.835652324 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.835606186 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.35245323 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.835445585 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.834016185 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.914213513 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.834850258 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.283451769 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.834791652 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.835471276 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.297965731 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.915967924 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.862053369 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.843690745 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.840772523 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.92305809 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.84753296 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.901681091 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.902755796 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.953945885 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.869948102 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.835121615 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.836064221 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.839399319 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.837539363 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.836410555 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.868924617 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.835724108 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.841438964 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.279079821 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.844032886 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.84131903 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.836995518 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.836829254 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.865190264 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.837051746 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.838214066 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.915679908 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.838261432 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.903462808 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.339474435 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.336829537 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.837299364 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.835223448 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.837280462 seconds)
  done (took 183.053376365 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.903464428 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.910597297 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.904567332 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.846500132 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.886204467 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.905400695 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.846975527 seconds)
  done (took 14.97373722 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.844312537 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.837588246 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.886939622 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.887468847 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.8380181 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.055104939 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.848687003 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.843085706 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.864817599 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.838446399 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.503633631 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.886176441 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.845304175 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.834075355 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.846907032 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.896060037 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.834803164 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.833434588 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.948211295 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.981334691 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.83747965 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.837729354 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.85798107 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.843032948 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.830873502 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.832550319 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.829150271 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.836937362 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.829471482 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.82887654 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.82915314 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.881814177 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.829552094 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.829107224 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.832183907 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.83163382 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.830368176 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.830801792 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.829630894 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.831064622 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.830116832 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.829597169 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.83103996 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.829740639 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.82956073 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.853701732 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.829496904 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.832338884 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.830003932 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.83137221 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.857355619 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.831400531 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.830721965 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.835451577 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.87203549 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.835164845 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.831780522 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.832271219 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.831067617 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.830117496 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.831701325 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.979645109 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.880211505 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.832389496 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.880379248 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.984577123 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.830284994 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.831916033 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.831322455 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.920385294 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.831173872 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.880278662 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.83099985 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.95386451 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.831854704 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.050189349 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.855228567 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.834827123 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.834944188 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.83233887 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.83841889 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.83145797 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.832669216 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.836612765 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.835366063 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.830547919 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.830138163 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.834212312 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.839275826 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.828702215 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.874584181 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.828208685 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.828081432 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.970425699 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.825595187 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.941183483 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.853079309 seconds)
  done (took 202.357765816 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.831483872 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.829177838 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.823313502 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.836912849 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.822072621 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.823334175 seconds)
  done (took 12.723911636 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.823146387 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.823933672 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.820017861 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.820438036 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.820977075 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.823456732 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.822235158 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.822437941 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.825540282 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.821363472 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.822148329 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.820805021 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.821597561 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.821865875 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.821081985 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.821051945 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.821525444 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.821649097 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.821877007 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.82149178 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.026021609 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.822441562 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.822552619 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.82410479 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.825879982 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.822241274 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.834943747 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.820870108 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.821463 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.82975097 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.826292198 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.822779817 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.825980171 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.829451118 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.827049703 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.826114723 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.827006807 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.82272392 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.823440393 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.823080321 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.822776588 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.822807145 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.822004418 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.822053712 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.822185323 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.827129101 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.825124058 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.833387974 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.820551433 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.816815673 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.817113517 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.816891499 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.816233146 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.817079771 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.816170287 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.819767315 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.81773867 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.814070179 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.813806508 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.818421911 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.814580802 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.811946707 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.812589328 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.814993096 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.818059067 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.810390723 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.814384121 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.814465422 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.810832264 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.810721758 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.812252772 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.811632989 seconds)
  done (took 134.057339726 seconds)
done (took 548.948937917 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.014724438 seconds)
  done (took 8.75779229 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.872997252 seconds)
  done (took 8.711107686 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.488803407 seconds)
  done (took 10.232893165 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.81730031 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.8167744 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.821183746 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.819433959 seconds)
  done (took 29.029502863 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.170412117 seconds)
  done (took 8.914310524 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.822918865 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.816280034 seconds)
  done (took 15.456420809 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.979461239 seconds)
  done (took 8.722485745 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.147312211 seconds)
  done (took 8.905986478 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.813444688 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.832053194 seconds)
  done (took 15.411141591 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.813173451 seconds)
  done (took 8.556726358 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.020993907 seconds)
  done (took 9.848052527 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.832662217 seconds)
  done (took 8.621531271 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.833186648 seconds)
  done (took 8.578324226 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.115095519 seconds)
  done (took 9.858972777 seconds)
done (took 161.348959518 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.816765992 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.814666216 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.815546563 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.815293982 seconds)
  done (took 29.007031303 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.847264767 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.846766162 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.856237563 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.847878945 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.838787392 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.837873046 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.847800886 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.846904279 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.839234084 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.84525948 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.848431849 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.845337865 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.84734292 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.85757096 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.857150482 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.844987872 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.847111655 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.848813991 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.838826728 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.856466979 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.846320922 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.846957119 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.813205372 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.813904213 seconds)
  done (took 46.011494612 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.005184598 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.883746319 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.967869966 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.865124701 seconds)
  done (took 9.467105407 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.812891723 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.876547217 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.864823353 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.862318806 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.864831957 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.916033179 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.867241183 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.952575394 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.941590702 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.940059633 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.821246812 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.835331753 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.837340418 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.86199881 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.919441575 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.814241284 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.813962573 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.985814661 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.875668975 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.001168289 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.813784017 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.869673865 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.866490218 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.866936137 seconds)
  done (took 46.828100556 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.815529877 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.824008574 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.822227677 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.815769225 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.816001333 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.816247548 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.82193774 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.819090517 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.837750676 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.819063298 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.816308035 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.816280463 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.822948681 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.817053297 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.816506296 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.829445066 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.829977254 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.816795623 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.820555869 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.822350967 seconds)
  done (took 38.163327525 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.814466243 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.661137857 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.160887695 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.06743867 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.814914907 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.81895649 seconds)
  done (took 31.085682565 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.82894395 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.825474918 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.816370533 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.873201644 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.959959434 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.822474671 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.817609453 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.82734546 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.863162627 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.884229204 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.835598022 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.843995799 seconds)
  done (took 23.947750571 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.817295668 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.818142797 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.818413965 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.83054789 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.825951757 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.826860435 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.824157332 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.816005712 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.832176832 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.838606161 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.829001747 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.829417266 seconds)
  done (took 43.658682122 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.523306866 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891770988 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.81691081 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.690413907 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.269325685 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.369477303 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.709992865 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.588393585 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.289449373 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.743521328 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.019405926 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.817622422 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.901378999 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.81795825 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.088244698 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.203678045 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013597933 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.061297553 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.651141544 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.857227721 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.020582746 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035419417 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.109622359 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818889557 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820313925 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.827074501 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.492137154 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.637390994 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.858214971 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.228823115 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.067163073 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.76791962 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874890894 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.820656634 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.831409993 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.821708375 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824609136 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.090760611 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.931876494 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953005493 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893354303 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.066193621 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823743528 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.237953714 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.52670237 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.150551329 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.935420094 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.818924119 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82190935 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.820284695 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.745809152 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901786102 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.821997491 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.824076914 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.520014539 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.819827887 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893567578 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.821011084 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023988623 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.627194548 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.509396711 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.822963881 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822545472 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.369038295 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.920333955 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.935207622 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.596803529 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206348351 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.236488895 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.91743112 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.821151551 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.821382033 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.062966643 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792078436 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.547463905 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.8631918 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.957454588 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.838019345 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.461195845 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112742748 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.267783339 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.382200118 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.741417479 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096773748 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.622568994 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.81804687 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.037867981 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.670711748 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.748005334 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03704505 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857682323 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.826148288 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.085014681 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.595215707 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.935686029 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.83406975 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.257495869 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839919233 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.827839933 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824229829 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.035847743 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323594293 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86098782 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.941762738 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83938357 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.905390043 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.748597134 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.835078689 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.824446229 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.727029887 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.827442508 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.822649341 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.870944685 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.590950479 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.868575151 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.761202782 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.826600541 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.927910552 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865552718 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.768136997 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072540969 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.127978554 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.499405741 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.852859707 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.955895788 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.22179677 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.053277229 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.831854201 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.037373763 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351363508 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.259200596 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.872700419 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.112578198 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.883037029 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.115187144 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.252177948 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901233552 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.613594478 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.453799935 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.040526042 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.838368119 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.82434623 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.828697555 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.830252434 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.758628806 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.474008805 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.222748284 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.993023588 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.039569622 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.25607714 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.811079803 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.824775875 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.131729354 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.961560792 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.841085691 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.481191415 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.326489146 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.644854036 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.854806226 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.059746592 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.108617342 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.790383194 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838698406 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901771577 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842087651 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.82932524 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.216927207 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.191185904 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.82801282 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.827389122 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.776311967 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833249742 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.83020153 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.361133532 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.795314851 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.833867122 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.839028687 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.700903135 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901045219 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.829272429 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.830016073 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.36630854 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.330272301 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.831975417 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.492818668 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.962209695 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904299711 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.098705911 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.218700403 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.961488962 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.526944751 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.258687076 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.940769095 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.527107602 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.754489232 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.827949515 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.766840507 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829981585 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.831973444 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.833300657 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.014373315 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.103480641 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129003136 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.28938412 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895092318 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030275785 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.558205144 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.787343362 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.828985845 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.833169397 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.831389881 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829415474 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.342612635 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.122309464 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.925289163 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858575723 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.834790113 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957297525 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.840871847 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.755329683 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.830098156 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.831688288 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352190736 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.862632098 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.776030074 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.155927493 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.725954031 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.95327029 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877482133 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.841277046 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.835725322 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.550197267 seconds)
    (233/481) benchmarking "4d"...
    done (took 2.875117658 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.757365745 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35323505 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87045707 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.606105636 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323390498 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.389192823 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120325039 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.14784419 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.160542813 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.900555964 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.044422715 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.914831288 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.887987138 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.921403795 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.768574515 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.75823033 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.485798952 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.16485683 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.097792802 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842870863 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047249523 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.548121775 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.06206891 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861485616 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.605826386 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141350197 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.811471964 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849604279 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.255840458 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.942176987 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913152834 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.835117674 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.784865367 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.172318896 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872852395 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.534217742 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.846327126 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.18485557 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.351027014 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.05161391 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.227310983 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.041486871 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.838919932 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185401348 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.129760121 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.87489278 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.837455553 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.822962578 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.048866235 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.411126433 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.683665014 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842035194 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.086950037 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.131282452 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.737867416 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.835865621 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.080993984 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095971576 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.83338593 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.211435528 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200104105 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.935620191 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892645537 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060434976 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.605864472 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14032986 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.386889801 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.326050638 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841146025 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.760989909 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.533986862 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.036067175 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.837393969 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.799113356 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.04745005 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069650121 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.516557412 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.056573737 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.077648515 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.846777334 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.10636378 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908244749 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.93239455 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.171837982 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.266041499 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.081946302 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.062884834 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.374344721 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.054939683 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.286943373 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.00403843 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.838367386 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.041424452 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.053589074 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.050311613 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.241983898 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010000099 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.545675817 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.841418466 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.0435646 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127727292 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89585882 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.245839884 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.01285884 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.92054801 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842670965 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901664915 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.841604535 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845243305 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.246621797 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.367594226 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.852602133 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914136191 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.947403126 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.356180467 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.842005675 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.843450333 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110408756 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.1908744 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.175011008 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824170623 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.840790923 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842863947 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967687495 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.765963165 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.844910228 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.110577414 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.84216129 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.349827169 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.995344549 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8558185 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.194689167 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228788059 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.59857015 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.806220614 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.844905554 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057407674 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146626025 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.117067547 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.95837218 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.111238115 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179628262 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.875054602 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.245940053 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083775543 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.844170814 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.714993142 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.844459227 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969214328 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.043843197 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.113889303 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.348191842 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.61868782 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.113193467 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.690558797 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.845833592 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.565995914 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117102124 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.113186614 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.896693886 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90743885 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.847733228 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369864968 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.565649834 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974648408 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.713019164 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772397036 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.84389122 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.176061588 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.083721854 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.552724081 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.845326323 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.117599436 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149858907 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113977584 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.895080426 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.747123424 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062326573 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845617231 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.858376102 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.113313006 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.060485532 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.091014941 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.84682247 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.847466468 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.651398315 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.770786217 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.845626853 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898516089 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.069979493 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.863666217 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.360106441 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.54432893 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121218851 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893371223 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.847074079 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.114398356 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.375957665 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.404351037 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.850595254 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057890212 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.875728892 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.141277587 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.845977566 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.373083065 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151512009 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.84525802 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.468403794 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.093415869 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.111284283 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.780505305 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.854087962 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.059591718 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.753133048 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.849773361 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.827775922 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376269349 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081444097 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.579931602 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.404200599 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.8488123 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.848769696 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.381598963 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880667914 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381539134 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877267972 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86329136 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.366428037 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.558242915 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.133238879 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.089283515 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.484347546 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.433388649 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.847461178 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.846221432 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847111408 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.765531434 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.028822251 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.033146503 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126395824 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.880444148 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378146231 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884718073 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.24569247 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.963917167 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.11162537 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.888185539 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.368127385 seconds)
  done (took 1644.978687803 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.857116944 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.870451015 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.906429032 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.857928591 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.861443213 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.859918552 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.953593854 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.87889357 seconds)
  done (took 56.826025815 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.862703562 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.864097069 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.85332668 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.850683753 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.853363524 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.849743232 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.010077647 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.861294489 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.853294074 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.853867288 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.850591791 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.849091075 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.130268131 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.870501282 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.850138314 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.853755547 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.855559172 seconds)
  done (took 73.756964484 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.851469794 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.095239323 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.910257364 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.850746109 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.798691312 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.859756727 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.824619554 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.896671525 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.858075939 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.09300764 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.152258613 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.88526155 seconds)
  done (took 89.859596169 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.856668533 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.852683708 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.852238137 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.852862766 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.853079221 seconds)
  done (took 11.054497573 seconds)
done (took 2146.427856772 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.219002665 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.908634318 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.949470115 seconds)
  done (took 5.640133244 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 1.996990347 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.043927968 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.155988632 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.917229643 seconds)
  done (took 9.902893952 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.155799629 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.216138986 seconds)
  done (took 6.155532558 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.206440844 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.858300705 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.263038578 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.856184404 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.856149065 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.855436503 seconds)
  done (took 22.355799847 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.854439445 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.852872004 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.854277402 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.853040763 seconds)
  done (took 9.198158602 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.850996677 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.556231014 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.851508263 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.861643764 seconds)
  done (took 20.903522266 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.003524781 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.967502289 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.994444133 seconds)
  done (took 7.748467759 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.992848926 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.693005913 seconds)
  done (took 6.469436392 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.997758803 seconds)
  done (took 3.781269715 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.879707474 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.122723367 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.356691748 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.390629484 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.503541049 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.645199186 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.161697928 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.089939371 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.268759421 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.283521213 seconds)
  done (took 24.48652773 seconds)
done (took 131.971930634 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.196597469 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.865976872 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.05017518 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.212492958 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.074761154 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.050229601 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.074144834 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.202784179 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.881463441 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.871126453 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.207785189 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.079777129 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.02705069 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.865432919 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.032726709 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.866396115 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.074443246 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.208214254 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.895853152 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.112033511 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.084540346 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.862245548 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.05969885 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.872746775 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.076016016 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.004296641 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.404122044 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.86867593 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.04568482 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.414374325 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.004194774 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.259711805 seconds)
  done (took 167.590894116 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.856560269 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.857692049 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.858906109 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.856823184 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.418945353 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.859119633 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.860034981 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.857375175 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.299940595 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.296139179 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.85822513 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.414590682 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.858917509 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.857296989 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.861176669 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.856917171 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.476777986 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.85892881 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.857575017 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.858276502 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.85815705 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.245110204 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.858441974 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.266945065 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.470850032 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.860200437 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.860349648 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.858534085 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.858937195 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.864650768 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.865681109 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.859100603 seconds)
  done (took 209.2966047 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.860831503 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.858996277 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.858435527 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.859787643 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.860475704 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.860928213 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.859502504 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.860983284 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.7048129 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.690780292 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.8632798 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.865994461 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.868623181 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.860698988 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.871694057 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.859539127 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.872982314 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.871940927 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.861228262 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.868031909 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.861971153 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.527411218 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.86049011 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.550872655 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.86338644 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.859964876 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.860406025 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.860028056 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.859717373 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.862008936 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.862347773 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.861624794 seconds)
  done (took 220.42751654 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.099379918 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.863740985 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.863786638 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.850435033 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.863794267 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.86242838 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.846179614 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.10712213 seconds)
  done (took 19.148243098 seconds)
done (took 618.261201772 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.210490139 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.050066952 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.038048754 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.885573464 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.124507464 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.930576649 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.881816956 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.944582883 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.710502403 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.955515495 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.514348264 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.902633367 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.610409372 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.90780765 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.01105806 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.944062956 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.445199398 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.541686724 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.026205279 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.938008008 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.063946952 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.792272792 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.95894628 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.754610818 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.527523098 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.83955414 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.910111239 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.448742809 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.893954081 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.055691605 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.562196315 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.190779267 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.897877313 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.882945357 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.934724995 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.914659712 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.10780234 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.893105525 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.009378059 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.582166928 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.939579238 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.624783118 seconds)
  done (took 102.151411511 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.872612032 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.868655758 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.868942255 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.868894653 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.877761797 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.867540957 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.869516572 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.869651586 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.868441741 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.869227071 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.869590598 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.878781996 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.868690188 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.878254465 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.868780786 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.870408935 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.869541707 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.878851617 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.87007669 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.868839823 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.869038537 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.868762685 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.866694126 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.869517957 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.870127957 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.869956417 seconds)
  done (took 50.445627022 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.865126377 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.018076464 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.10663699 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.885074497 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.866610097 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.869561239 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.88378999 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.870692918 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.869422883 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.86887166 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.958283307 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.874243672 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.884095778 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.106054924 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.881047941 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.865531823 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.867145423 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.86776446 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.02416969 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.881470625 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.886568147 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.870829046 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.887048414 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.88166216 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.869653374 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.868430503 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.871529846 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.310412071 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.877452143 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.959242039 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.910655578 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.893331263 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.247269225 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.114208598 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.920941654 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.880397135 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.867143639 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.964598751 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.874007487 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.868251176 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.885721306 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.872002756 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.11119766 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.376669668 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.880846135 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.867692088 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.323243076 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.973602882 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.909638691 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.876964578 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.115908032 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.88292151 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.869123302 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.870268377 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.905122434 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.881263237 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.869488481 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.179331683 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.881957048 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.885069401 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.873515226 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.871663799 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.04064632 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.876930115 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.023328106 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.877788477 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.877328458 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.871445768 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.115142582 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.88455379 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.394391291 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.882959234 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.86904795 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.962432247 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.027229895 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.348706108 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.882942209 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.034684951 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.264198259 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.89269082 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.882610605 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.298899718 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.896009547 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.876707155 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.871273779 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.87094239 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.870022593 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.918822066 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.886600339 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.307487322 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.387888153 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.197192056 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.898948424 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.881838107 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.872033974 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.179563115 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.882932261 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.871723574 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.10473691 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.402009421 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.884734099 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.878100686 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.37103748 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.88678361 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.890421456 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.879908975 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.119905711 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.886682981 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.918222344 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.871234238 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.878536924 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.874579724 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.889986096 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.879973669 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.872030094 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.361932232 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.979288559 seconds)
  done (took 231.907945996 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.875006 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.87376523 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.873595948 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.874549501 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.873097779 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.874476126 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.873022166 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.872827534 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.875360668 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.873215576 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.871720626 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.873502294 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.873687844 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.881293587 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.408470516 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.877279129 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.477066338 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.875897664 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.875177612 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.875805214 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.558530035 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.882568436 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.876138977 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.875509771 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.8764339 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.874562605 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.879113178 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.928757712 seconds)
  done (took 168.185192126 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.87603486 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.060852269 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.895626328 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.909248777 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.885047294 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.878939552 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.029699851 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.900608435 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.885009103 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.878776794 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.878800019 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.939238495 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.893937913 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.977060583 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.912072559 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.985611834 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.983857853 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.886732734 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.879480453 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.879583193 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.908104989 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.885404168 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.940853378 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.006381566 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.897351415 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.993204091 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.895568957 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.880357833 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.880532688 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.994159624 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.898869181 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.942508443 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.912800042 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.898951759 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.9985194 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.996965938 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.985014211 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.984547327 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.887104358 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.880093266 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.87990926 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.879346482 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.992936702 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.898976282 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.882160593 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.994593959 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.899902526 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.880522606 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.881233395 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.881220668 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.894118028 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.899123018 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.945965174 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.011113551 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.915901386 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.905048168 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.978638805 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.999367151 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.879778507 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.979170803 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.88586403 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.99584703 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.905155363 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.880326569 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.883313845 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.88630705 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.912077569 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.989473348 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.986778095 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.889286502 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.980542401 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.91683659 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.890085146 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.882797121 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.882621669 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.995800247 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.003381095 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.917616693 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.919469437 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.913000706 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.889116856 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.882929221 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.880877025 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.899740515 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.887621418 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.996483167 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.002479691 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.888899461 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.883578437 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.88358538 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.883620668 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.908438098 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.00327889 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.921977792 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.988249895 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.948815653 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.956631692 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.895634734 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.895996201 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.887947746 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.945934608 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.89675129 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.894894308 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.164362012 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.944694341 seconds)
  done (took 204.120609651 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.260075102 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.930217694 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.939670552 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.195878159 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.271794142 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.800991993 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.928745021 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.931371452 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.964111374 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.15806826 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.004768529 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.946727055 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.922066483 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.90510391 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.928767851 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.966093363 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.939822623 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.267293287 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.151568952 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.385496952 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.923802614 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.219608618 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.267060359 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.511126023 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.980663592 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.338638448 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.51762613 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.091761729 seconds)
  done (took 63.466711097 seconds)
done (took 822.070884205 seconds)
SAVING RESULT...
DONE!
