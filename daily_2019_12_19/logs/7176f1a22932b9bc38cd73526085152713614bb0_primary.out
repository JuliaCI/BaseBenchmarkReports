cset: moving following pidspec: 4280
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.382916546 seconds)
loading group "string"... done (took 0.565012426 seconds)
loading group "linalg"... done (took 7.199480191 seconds)
loading group "parallel"... done (took 0.159955011 seconds)
loading group "find"... done (took 1.141919962 seconds)
loading group "tuple"... done (took 1.754195375 seconds)
loading group "dates"... done (took 1.229089126 seconds)
loading group "micro"... done (took 0.217169863 seconds)
loading group "io"... done (took 1.017584331 seconds)
loading group "scalar"... done (took 37.59615683 seconds)
loading group "sparse"... done (took 11.831733811 seconds)
loading group "broadcast"... done (took 0.943108539 seconds)
loading group "union"... done (took 12.168799025 seconds)
loading group "simd"... done (took 4.48511339 seconds)
loading group "random"... done (took 9.055540526 seconds)
loading group "problem"... done (took 1.840872496 seconds)
loading group "array"... done (took 20.801424743 seconds)
loading group "misc"... done (took 1.684012575 seconds)
loading group "sort"... done (took 3.324243642 seconds)
loading group "collection"... done (took 17.311789456 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.524488052 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125737441 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118640814 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120419668 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.148185678 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112183796 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125328859 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086626539 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.795522621 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148630356 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117362431 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.430281417 seconds)
done (took 5.173345206 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17662443 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083044028 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082913704 seconds)
  done (took 1.309673292 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065831847 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122426154 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067680624 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067672494 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067585468 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066896361 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066166082 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066555532 seconds)
  done (took 1.669861098 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073756153 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068821803 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06597472 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068390204 seconds)
  done (took 1.421677882 seconds)
done (took 5.798912443 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.788857255 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.206659986 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188356883 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.413762002 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131373754 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.159587858 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.645718482 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.304254389 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.189876655 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081561103 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.109466209 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.329774293 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.11124294 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.642177446 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077769591 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091612206 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136717642 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.43682237 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067468882 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082859031 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089057866 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130082796 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088719186 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075151882 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146770819 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067896067 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.137171247 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080164374 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06683525 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.21426718 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172420028 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.654153685 seconds)
  done (took 10.302374586 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098401058 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097653608 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068741 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123368078 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097251192 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069898686 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071782192 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067367439 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086784082 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12799381 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088257813 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102244324 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066360532 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068942285 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085554197 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204346973 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082238636 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081945454 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071496463 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.0756045 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105897622 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078612674 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077659754 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077135989 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129454263 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180217647 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097443805 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097927885 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06673665 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079372313 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115302212 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125347087 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065705942 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066139586 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124085739 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095060903 seconds)
  done (took 4.601766837 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.002598549 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.144335706 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090179525 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135059679 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064880417 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.10965379 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065607683 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081663157 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.210162752 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.479168173 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.589376121 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111724217 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104335514 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067698894 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069110859 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084641291 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063684933 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067141377 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.505033673 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.096060616 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107271008 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081536595 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070631294 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068510995 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.353347697 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067732902 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064051605 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068396824 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057697258 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125657524 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069145937 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.954161696 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.127155684 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067491749 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101638425 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.167033039 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092061118 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.277967458 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068614043 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064988947 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153865444 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070553702 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066765449 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084427124 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103938716 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113599175 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06620059 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067898709 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.165507827 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065130163 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079578633 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.645635051 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152367819 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078889917 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064679426 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.254398516 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088929473 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069228773 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065009137 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.182370382 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132962672 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068048745 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067092268 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068632249 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069103897 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.388022013 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066794123 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.944945908 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070381499 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078104093 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069641918 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070285006 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07357943 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073016737 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.088599698 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067333393 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076441283 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067081778 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066182104 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066989364 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.092313325 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083776216 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064865612 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.375374192 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067268274 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068787037 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065056879 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.090033738 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097828098 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068781128 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065752222 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100978096 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06840862 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066795703 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107630525 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067122145 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083534888 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069812972 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113369028 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066467118 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.191238934 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068040646 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097322601 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070211325 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099428684 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081160748 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068257404 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.419152952 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065066561 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065901193 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068470605 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065858562 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067742649 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066954568 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079709976 seconds)
  done (took 21.286812068 seconds)
done (took 38.33728492 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.237167695 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078268412 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074723424 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077663824 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074579666 seconds)
  done (took 1.777291889 seconds)
done (took 2.991206239 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122308207 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101121867 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064533758 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097564781 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064222443 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102822602 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101419401 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082265292 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102600938 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064885312 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097623692 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065184669 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064188175 seconds)
  done (took 2.364704403 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083713504 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085034147 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070297151 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083402508 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063861925 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083054705 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082296716 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089635581 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082522604 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073296922 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063883017 seconds)
  done (took 2.069109249 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083307221 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084714301 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06988616 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083869384 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064809201 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083431887 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082665332 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086816389 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082157547 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074382607 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06402596 seconds)
  done (took 2.065551959 seconds)
done (took 7.701998421 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078080324 seconds)
  done (took 1.276036698 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.595276692 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.1226652 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082205377 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111845113 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.191938756 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119447008 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.273200949 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087094425 seconds)
  done (took 8.963381812 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102762038 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06958767 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069041709 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070992931 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071281027 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073246399 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068988849 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070261848 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069421234 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072053718 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069188662 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072722931 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068925783 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071604395 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069705746 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072140505 seconds)
  done (took 2.436184274 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092433853 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091911806 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074618309 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075443973 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073567445 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072066498 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074254141 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073755794 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07129427 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07257764 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074816393 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073607222 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071998475 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065101611 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073920203 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075060267 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071246681 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074506858 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074731646 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075529818 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075236371 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064267709 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071508644 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07441817 seconds)
  done (took 3.09900423 seconds)
done (took 16.980511723 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114896586 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072272724 seconds)
  done (took 1.396488241 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081260965 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083531172 seconds)
  done (took 1.378473982 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08304301 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06587354 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090556369 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078063152 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06674271 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066240796 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089258795 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066463362 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066100678 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066285156 seconds)
  done (took 1.953340388 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068354357 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078454561 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070692322 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081209843 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073629976 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064403255 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071906718 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067817315 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077319897 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063352959 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071932069 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082820484 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071377533 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084550846 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072029078 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068746898 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071060048 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068236088 seconds)
  done (took 2.526751322 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065903803 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066578289 seconds)
  done (took 1.35454599 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067499399 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063480191 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067096979 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066798936 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063424661 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062732476 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063919868 seconds)
  done (took 1.673569136 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.384907418 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11451334 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.312452862 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070878598 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081878573 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.258418619 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065678266 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070992052 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071661894 seconds)
  done (took 2.695175001 seconds)
done (took 14.202046483 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079745907 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086598465 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096463983 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.376274896 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092165358 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066448582 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114845905 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.188772398 seconds)
done (took 2.330275638 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.214403275 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.640463127 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404473346 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.205257039 seconds)
  done (took 2.468271127 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344360647 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088771606 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059017896 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06736854 seconds)
  done (took 1.786621843 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066844311 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069230341 seconds)
  done (took 1.362316635 seconds)
done (took 7.0602396 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066256487 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066278102 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063781639 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066294916 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.086126683 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063423188 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064117693 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063591742 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066251368 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06626513 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068692442 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063704918 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.066005088 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.066310213 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066349014 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063994137 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063499798 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06661628 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064452063 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06406449 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064320347 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066765151 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063827951 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063825287 seconds)
  done (took 2.847272102 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08532946 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066012694 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071404857 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07191749 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070431024 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071465642 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071412243 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065837826 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071356484 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068908666 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069187184 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069680101 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068707555 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069544585 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068588474 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069741816 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071902071 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066231584 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068570445 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070001164 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071435205 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066129139 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070060535 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07119613 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069745114 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071199908 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06879369 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066607 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072105084 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069279587 seconds)
  done (took 3.337593857 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070636114 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063098928 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063965331 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07149673 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064186465 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064316114 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063236253 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064270928 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064313719 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063249579 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064944585 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06330523 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063505966 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064963504 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064234834 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067419114 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.07957202 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064026916 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063478018 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064463542 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06765307 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064441427 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063705068 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063571802 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063509282 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063600739 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064279656 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063836395 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064243404 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063900533 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067148263 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067947526 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063891157 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07061363 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067772577 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063719565 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067800156 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06353033 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064278606 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06388431 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063577734 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06342392 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063987476 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070361384 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064556188 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065054057 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064323921 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064599235 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064888818 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.178438658 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063161047 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063687795 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065917385 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065375319 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067923528 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063199386 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064795284 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063131774 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064664893 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063160027 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063164333 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063212974 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066282299 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064235396 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078783865 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070569382 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063393252 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065799281 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064877557 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.0665502 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06493721 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077503082 seconds)
  done (took 6.070592204 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089628637 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087687507 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065577714 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06522468 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061504083 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06405101 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069950003 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06492463 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065548232 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082518611 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063965628 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065284756 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065533974 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067714784 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064528986 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065601849 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072212057 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061676871 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064323796 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067324672 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06457447 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069941571 seconds)
  done (took 2.757958389 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156061079 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070660805 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106770219 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075871301 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070028879 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076389536 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070101126 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070422108 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069775681 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068002306 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06738928 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070018135 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069659039 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067899768 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067623975 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067456324 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07019728 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067706007 seconds)
  done (took 2.624106757 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.0764143 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066791177 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087319093 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066268039 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066381242 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068415421 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070832868 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074076612 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06886602 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065842115 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074310002 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068376456 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068334578 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066581991 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068863935 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066314691 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06805252 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066102379 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073908807 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070441767 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070687383 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073907274 seconds)
  done (took 2.790974012 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07955255 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068074513 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081719289 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068254841 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061955271 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06432813 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070686823 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066006799 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069988813 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067764284 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065463974 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064740889 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068539214 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065535082 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.06907132 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066229813 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067726991 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065991783 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067794094 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062125965 seconds)
  done (took 2.605394974 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086437627 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068097191 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068376623 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075899833 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067638562 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067783916 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075713839 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067834117 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067825444 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088797544 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067698147 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068106409 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075468697 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072714694 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067626423 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075746905 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075013632 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075715042 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0681477 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068112164 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089615829 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068106663 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075670428 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067690043 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068023896 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067715796 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067820806 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072550786 seconds)
  done (took 3.271176317 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067411341 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065625231 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06392653 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063446457 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063455215 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063276992 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063830333 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063624905 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066067635 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064269617 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067002289 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066097208 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066320675 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065993247 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066281884 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066387024 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066179195 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064440572 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063545749 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064016231 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066519542 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066762777 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066837483 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063646162 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06386313 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066245242 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063878841 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06387716 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066211911 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063333895 seconds)
  done (took 3.200023515 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07635616 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073500079 seconds)
  done (took 1.398557239 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063120662 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081105844 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063371917 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070680407 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069310212 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066819178 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074197613 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069230927 seconds)
  done (took 1.803164355 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082283081 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078139987 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067983145 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079808029 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077952884 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083761955 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135730986 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068183295 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073594626 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06547298 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080780762 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06606574 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072668989 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06751864 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072953007 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073074569 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064364787 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072436359 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068602993 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06524109 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067719111 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075248193 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069240012 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062419804 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068055087 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088470433 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078057771 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065688304 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069654872 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073877911 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071893756 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059894458 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066915289 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066917299 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064221077 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076289497 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081527946 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069185375 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075436196 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067605824 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076610822 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061301406 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071475779 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073325848 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076976058 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066782765 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066912586 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06073738 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064700761 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068811819 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061466598 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068964703 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060862521 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073477308 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070286753 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077409583 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065187784 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067818881 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068977012 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069820473 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072941908 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068535903 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069403756 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066331145 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076355356 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071161906 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075045015 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061410935 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060343539 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064441314 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075655082 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089455838 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072796707 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067695189 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067657194 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064054436 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070016704 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067224949 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072290929 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07336609 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066392893 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071471607 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073911544 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066923703 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069188706 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074001139 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065592552 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068878169 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064211834 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082370309 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065558634 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064406742 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064526327 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076913081 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070108749 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066718463 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064704894 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074355391 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060563116 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066681475 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06746793 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067275617 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076653485 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070452564 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071175014 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073769702 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072457271 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065133912 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068399605 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062330444 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065838969 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064298307 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072493293 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.05957677 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068000199 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06643613 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065913423 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.074225405 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063560721 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064935178 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072851272 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071359254 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.192486403 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.0639865 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07085133 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067064735 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071122304 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075099713 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065813622 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062297749 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062363826 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069683471 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066395443 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070724693 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070679983 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070227148 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060710755 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065662073 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071859282 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075919177 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067955273 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068503721 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073068755 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068840941 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066183786 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073863796 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070114869 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065760266 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073041513 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068949618 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061688762 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069743076 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.0695469 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066088343 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07095136 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0701137 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068483488 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067035642 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06502111 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074579022 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067903419 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066403532 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067128275 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066399612 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078021303 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069242959 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062538589 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063813136 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075563191 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064757253 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066010787 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065985455 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068793482 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067463241 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065042664 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065972362 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.06917028 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076539237 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071679346 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067821523 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072724314 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07844916 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066721041 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069562307 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066630094 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068114061 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067214269 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076263119 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072120447 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071576974 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069771886 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064310565 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071653449 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074122559 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066660982 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063993328 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066057152 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070693297 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072646876 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070818664 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067526804 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064657536 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068104244 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069796627 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069705596 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066038897 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065708824 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072518576 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064686364 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073171334 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067343461 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076750151 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070015469 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061125626 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069240573 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064812705 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073317176 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061633121 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06431697 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065850639 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066760354 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065523484 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070086109 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06104863 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073428444 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074153021 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06735024 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066900528 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066450041 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073536454 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067974348 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069924831 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069862436 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071421666 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076663603 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065237023 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069125235 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.076466633 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065252304 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059657109 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071178714 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065209001 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064872536 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064896143 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063836668 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068521658 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072944355 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072334929 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.191681524 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070823414 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065949835 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066412159 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062423875 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072963513 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070468097 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068602844 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.0747593 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067781643 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067093066 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070735495 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067185342 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067987235 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068184932 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070104713 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067856626 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069722989 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066986199 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069811342 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067376805 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064796468 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068695342 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067523942 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06831497 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073094435 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.06693604 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067669121 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069959873 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067632361 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068442611 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06766638 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067211454 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069901226 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067100598 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068215229 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069832029 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061952373 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073651121 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06634855 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074889671 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067745469 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063457941 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072902223 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069774343 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072367008 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06741933 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068201366 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068608872 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066515621 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070053044 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073262503 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064530948 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077780406 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074879364 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068074426 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070764806 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066890586 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068523989 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066672509 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068101709 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067976644 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067951611 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067000281 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072043243 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069981356 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067198751 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068471147 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067972686 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06766113 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067790304 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061415859 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066033114 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066066673 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06656831 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075759347 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067190772 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066474098 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066047888 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067857608 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066065913 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063437656 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074777458 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075327409 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067203557 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074066578 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066082922 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069130882 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077666346 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060742058 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064974419 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064697216 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065243329 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074623742 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068273712 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076727032 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067254469 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066179521 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064867843 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068198894 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065784488 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061649049 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064938083 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071156779 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066536117 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066222005 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066894404 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069841467 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067956215 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076355474 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066855449 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067833468 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067150405 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063520502 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065898601 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065222741 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068354678 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066228991 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064067861 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063642511 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065183814 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067675588 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067522663 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068162655 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067207333 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073010298 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06543323 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068719194 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068486108 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06070084 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.204284452 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06810585 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068532071 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067660473 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071942416 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071526966 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069821113 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077509884 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067241672 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067965901 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067687931 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065164435 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067472986 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066688996 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067653205 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066953234 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.0694746 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076094104 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065737784 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070779235 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067922409 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068030847 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074233716 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068401839 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071631295 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073432751 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067832119 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069207446 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075448752 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071665607 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070911189 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068053713 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069076307 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073277079 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066131451 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073841114 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067950898 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068201431 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068599197 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065482907 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068052126 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068221689 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066798017 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072943571 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067880071 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066158446 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066078118 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065190572 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068566423 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070203946 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074761328 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069374605 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070887841 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061804125 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064035351 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068661477 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06479575 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068971795 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069947046 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072986541 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.07026289 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067127494 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066868953 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076314574 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073388325 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070812041 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065421999 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070906619 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069065552 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070002421 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068584791 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067612499 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068721133 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070648235 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068409099 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066794467 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073671145 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070313961 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067839484 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068655245 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068106287 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067977062 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061896828 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067268425 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068554463 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071713879 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06979153 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067465965 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077812424 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064859314 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067605495 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069833949 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066129144 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071816758 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062005162 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068883404 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067817294 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067521331 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061938964 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066425121 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065151843 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069027218 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066194247 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062155394 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077357325 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076010337 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070253621 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066667471 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066294383 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062304476 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061769524 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066481316 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068175532 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068349901 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076952617 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066009012 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065169185 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060861808 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065690227 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068733458 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069227694 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062772483 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060846239 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064908709 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068689634 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070978139 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064016893 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06527526 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068893413 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067393279 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.196896083 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070836509 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064765879 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072153848 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080498949 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068321287 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068919421 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073509324 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07540622 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067837189 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061914553 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068133925 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070318057 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068178198 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068189447 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068239793 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082694877 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070763038 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066282117 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066897725 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069922057 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06710659 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074953507 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068792971 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068351466 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072637002 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069605038 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075918512 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070642344 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075236154 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070397037 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070417463 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06682298 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067848081 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066039581 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065890597 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068704743 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06730577 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07150407 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075088718 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066318886 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078248423 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07652223 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069531257 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06371736 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066590165 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066935818 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062023795 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068021126 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06577059 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066191405 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065139572 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066966765 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068315193 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072233357 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069268793 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068412329 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066629844 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060748083 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069922057 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070380905 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067799914 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064032039 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067278075 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067812716 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071058824 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071068473 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064891885 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069742934 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068657661 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068116569 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062573409 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074689418 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066400603 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068571417 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066310861 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066472134 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06698376 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070471927 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07109654 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067896541 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069021037 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070008456 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069082259 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063367558 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063856772 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071781718 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064425596 seconds)
  done (took 42.872833288 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10115723 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064273547 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063165759 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062231661 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073719842 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063632768 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061910836 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063517522 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062995932 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065211297 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061784366 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062043612 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070626276 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077673673 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073995252 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066890532 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062058256 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062627555 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061892371 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063594191 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.0706412 seconds)
  done (took 2.756599246 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073580205 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077512593 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075213921 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082774207 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071063871 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070346868 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075821263 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070400027 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078542028 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072506039 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078673034 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070818102 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072680042 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073266585 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073392089 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071085694 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07866905 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070606972 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07044305 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075158818 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070472173 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075706292 seconds)
  done (took 2.952313894 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06793085 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066795898 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06879451 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061260218 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066778288 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061468296 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.0696203 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064332783 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069300059 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066258971 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066107897 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065679781 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068271157 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061676512 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066463233 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06383494 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107555361 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069394661 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066807418 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067323395 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061294301 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068593795 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061635968 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061857584 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065538981 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069485523 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066160065 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063902331 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066159637 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065251852 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065848515 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063698105 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067590746 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066640516 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065559476 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065078212 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065140657 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065790181 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061317484 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063694937 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066837486 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061774134 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066434492 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067355646 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064007584 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063556286 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067757734 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065162882 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060857653 seconds)
  done (took 4.576903085 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078101451 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109627247 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066844206 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09137205 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.08013336 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072323456 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070065874 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090974103 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063469605 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064875948 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08134749 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078810367 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066021146 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069945662 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072750235 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065231723 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067406536 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064769316 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069104057 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065394122 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069560621 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07191076 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079682936 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078322324 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069739426 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064438557 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064819938 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069964765 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077754426 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069754375 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070045587 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070716194 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079970423 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070355234 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064361271 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06748286 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080680561 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065632754 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067617557 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062921851 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067327367 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069533917 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072352573 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081497434 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065788786 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070806078 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065403128 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062771319 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078211337 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068610372 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073224872 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079294526 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069226878 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06591279 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070157942 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080490356 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065726235 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064004767 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068485189 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077463379 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063676607 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069379582 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079083871 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068003743 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07240124 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078615396 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070431282 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06936636 seconds)
  done (took 6.361787379 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075772325 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095330665 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084335698 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083193224 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075763753 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075814962 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.077058353 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076406228 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075815747 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080438883 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076262441 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116443078 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071078552 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078653618 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075788929 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076362518 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075779011 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076096624 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075879908 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075658304 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075433451 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083149279 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075949133 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082637724 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079690004 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071000227 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07586617 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075350759 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083334273 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083450459 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079661538 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076431045 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075389312 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082604471 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080008847 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074778131 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065246498 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07478644 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075454594 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075359251 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070818989 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082342158 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074804652 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070415028 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075535648 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074991691 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082663331 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080047483 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077351962 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079529647 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075316451 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082584431 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07472505 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075443909 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082964846 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085221886 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082372147 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082859536 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075406446 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083249286 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083007631 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086021907 seconds)
  done (took 6.231308249 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08276606 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073922397 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081046964 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061850196 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064908311 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071590972 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06414149 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06431121 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073941476 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074100075 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075793802 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071512011 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075166245 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076260818 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07158083 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074589653 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07176365 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07217047 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07392697 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071470414 seconds)
  done (took 2.797458283 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074082479 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083526107 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06657791 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07144192 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069552279 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071163666 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068590973 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069321426 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0665626 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068897626 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075979805 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075655813 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06706342 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071632895 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075986717 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071572874 seconds)
  done (took 2.490922474 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083666925 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073604644 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080283424 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066817674 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066446324 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062433318 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065781145 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061394579 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062078233 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078048557 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06579925 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076379485 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066347236 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064726614 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062516286 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071827507 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062223879 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063317479 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065541512 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077899614 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069721188 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063786008 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068768259 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065404478 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067891796 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070066086 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064923696 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066232582 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063075445 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066050123 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068365833 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069155941 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062727573 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063831274 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064236241 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062758161 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065829917 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065963638 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070979906 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065916075 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063564684 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067727395 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065457751 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066710482 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061736638 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066046999 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061678047 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06773675 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063232187 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068455352 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065360296 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067820975 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066251835 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072355003 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068809796 seconds)
  done (took 5.040734431 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079299955 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06886035 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062397232 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063797939 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069171965 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067608938 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068911658 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067601839 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067672773 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064143667 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067662127 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069224232 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06686566 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069474457 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067389356 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06997009 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061379012 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066997178 seconds)
  done (took 2.574056253 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07061568 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066199432 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073639958 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066046333 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066027913 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067869057 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061881521 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064162629 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064309912 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06641198 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06581287 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068184057 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06412657 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068432262 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065456234 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066283096 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068213614 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064778104 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066028428 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062063045 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067969924 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064528184 seconds)
  done (took 2.809948615 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094813573 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083614368 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139515295 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07898244 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08529933 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071822866 seconds)
  done (took 1.90725676 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090783424 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100598181 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066486822 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069593456 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075684794 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069816918 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069843269 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069729042 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078478689 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076033722 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069675752 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078540986 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078121365 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077443412 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075550009 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075814323 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069888282 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069814277 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065899275 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083397505 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069566387 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078186077 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069910136 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069878283 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069699142 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077338231 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077886621 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075677125 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069212357 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07814394 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075433527 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069682391 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078199739 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076043067 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069377091 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077744298 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069891253 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083277102 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075631795 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077462631 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068652058 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075623884 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078050555 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074429817 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078204845 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069966334 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074526596 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06968922 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070122324 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085508998 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075426298 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077478016 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077709372 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078494207 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078434797 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08578033 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076375065 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077602396 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075499983 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076286345 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07775217 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075987832 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077976033 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076117337 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075105451 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077412546 seconds)
  done (took 6.33853469 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103732493 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067648646 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070071333 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075511734 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077626293 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070358212 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070752331 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070182508 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069858678 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067044723 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108373557 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070957739 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077577506 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077678749 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070334398 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070112812 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070377915 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077532712 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066590349 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086226531 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069622497 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07750351 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077475313 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077795804 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076235225 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075707619 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070162667 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069861902 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070186795 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069930925 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074836171 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06997287 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077419964 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066971722 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077390277 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070280907 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069793659 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074779823 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06965282 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075409517 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077556133 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083292282 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070291733 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070055377 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076084338 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070026832 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070041842 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066532585 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069964231 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066827494 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075990938 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075828954 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075773228 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077269712 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07042243 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070460918 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06992574 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069680063 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070317585 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075859144 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077481108 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070211916 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086083648 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070109148 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070191245 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077825775 seconds)
  done (took 6.252865016 seconds)
done (took 129.895343261 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.186804573 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164930877 seconds)
  done (took 1.701283727 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069459036 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098668773 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07662269 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.12889335 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067073782 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100672538 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100083213 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077860063 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066273853 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.06649364 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066148792 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068467868 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131709148 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066269721 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.0663037 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068941748 seconds)
  done (took 2.682088839 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.09850395 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.162337776 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102531798 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06528556 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100227085 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07291308 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064732733 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075394769 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071154093 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065267264 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073416814 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070560438 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065706093 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071712204 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071128576 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073257676 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064885458 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072526018 seconds)
  done (took 2.807565698 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100248035 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092231233 seconds)
  done (took 1.557888035 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156555939 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106407999 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.147090273 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.351769988 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164621506 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.148564601 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.144839044 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.144224705 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116767036 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.139254325 seconds)
  done (took 2.984698243 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099962156 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.154785266 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.268065113 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117471977 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073344854 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094322816 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118719379 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078271165 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080550891 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079925293 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080141752 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076679306 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099775062 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073510571 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073910081 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076288047 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103205355 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072896275 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07489228 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076573714 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.101072768 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065696113 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073740976 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072743826 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077518005 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077152722 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065941835 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066230187 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076267865 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075803292 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076715284 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093600196 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077273287 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106975656 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.071098811 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107004455 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076675881 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073721632 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074696659 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07372141 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078756458 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078890546 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073385371 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076527522 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065719506 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076890545 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066073047 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066121878 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077813596 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067040726 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078221607 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076802968 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106544258 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067019086 seconds)
  done (took 6.00089082 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10394431 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107007802 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071596354 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112860353 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102667466 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072319461 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103324723 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095906512 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103800944 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070519438 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06862924 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070871632 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082045073 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083343273 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114926626 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107047677 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07388361 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07162189 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107844808 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105128837 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068348361 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09763738 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091194141 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103787585 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067876388 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070226881 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068234411 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070391483 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076645614 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079573006 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069633348 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080582915 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085682124 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078510617 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06809092 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068092828 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068710036 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080236262 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079453977 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078904244 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077918396 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067976838 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067846999 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069718998 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070223457 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068199631 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078775456 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080215571 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078708241 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069662957 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07026386 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068782431 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069926379 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080537222 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077720401 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080618059 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080207842 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069536706 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068954043 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072465073 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081089407 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079860261 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079596729 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070738206 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079216449 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069129725 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080555541 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084574804 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069035383 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070642402 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069118366 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070191835 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070077952 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077766087 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077605821 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069765767 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069872638 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068768893 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080137711 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.0780124 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068246468 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077157807 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068015159 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068776031 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071005174 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070741773 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078279432 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080942721 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070308817 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068607326 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06990817 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06897282 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067202131 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07750442 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080383719 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079368069 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078440008 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068452574 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07738118 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077204628 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069407346 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077676833 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067625205 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069605964 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06872572 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077356057 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075984742 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.20698309 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070552949 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068918535 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.084725933 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081622572 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069589715 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079472863 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081474409 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079995741 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068981899 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082617754 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069394038 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080192869 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069659426 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080548593 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069634242 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080634239 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069867283 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069055279 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069374268 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080451498 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073035471 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068454719 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070453753 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070539165 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079369857 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083215636 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07152848 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079163199 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078670325 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070873113 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078898248 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069738498 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079281719 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070212091 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070646544 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06810922 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082668831 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068961189 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069132339 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070186572 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080905584 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069103558 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079291929 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07884325 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069158496 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081893865 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080636004 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077558038 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080687644 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070423492 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068762324 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068811056 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069561361 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077832359 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081086436 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070708717 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069657368 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078292163 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079896477 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06785826 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078835888 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079560921 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079104092 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069413596 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070926783 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082027488 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081326768 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078327508 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078736406 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078450089 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068806881 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077414742 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078360136 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068589906 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084581284 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068506083 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083278104 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078831594 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076653438 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07869303 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081876532 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080340504 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080484664 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08404342 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069170138 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068976445 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080105297 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068760082 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069894823 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078725652 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070584737 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069714256 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082980487 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068727759 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079953405 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067978055 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078989026 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067619111 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070476162 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082084075 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068465962 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068745802 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077871556 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068749234 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076217945 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079233816 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077013441 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067287518 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069615654 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.212301385 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079952276 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069315426 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069263059 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071142704 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078999949 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077898266 seconds)
  done (took 18.745526011 seconds)
done (took 37.85257289 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210702322 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154154222 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.184054733 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119985402 seconds)
  done (took 2.139696387 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.117892389 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102019122 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093821201 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06589506 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100294672 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065651219 seconds)
  done (took 1.951150367 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313750817 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212723746 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.189457075 seconds)
  done (took 2.117918525 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203541063 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189942235 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.423364001 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.264845927 seconds)
  done (took 2.591502853 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145551103 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089507893 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067885874 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.08487983 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.135041594 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161588991 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101044063 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126134796 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080324599 seconds)
  done (took 2.44513437 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.150235914 seconds)
done (took 12.806908512 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.127342392 seconds)
    (2/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.1045265 seconds)
    (3/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.195038523 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.113890333 seconds)
    (5/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.212339001 seconds)
    (6/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.217959242 seconds)
    (7/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.242094778 seconds)
    (8/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.080408936 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.148297893 seconds)
    (10/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.205253115 seconds)
    (11/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.077438175 seconds)
    (12/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.216559532 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.072618309 seconds)
    (14/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.16425313 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.129255472 seconds)
    (16/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.206896085 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07946314 seconds)
    (18/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.183939932 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074467633 seconds)
    (20/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.077832693 seconds)
    (21/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.111459893 seconds)
    (22/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.151411133 seconds)
    (23/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.074302234 seconds)
    (24/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074584292 seconds)
    (25/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073873313 seconds)
    (26/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073712036 seconds)
    (27/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078738414 seconds)
    (28/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.219157392 seconds)
    (29/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.07650257 seconds)
    (30/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075412922 seconds)
    (31/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077476468 seconds)
    (32/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.178417194 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090152202 seconds)
    (34/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.22909047 seconds)
    (35/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065560022 seconds)
    (36/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073899537 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.090171476 seconds)
    (38/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076844801 seconds)
    (39/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071869545 seconds)
    (40/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.172881366 seconds)
    (41/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.101800369 seconds)
    (42/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.150601996 seconds)
    (43/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051558481 seconds)
    (44/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.166190897 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071682715 seconds)
    (46/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051305487 seconds)
    (47/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.112409698 seconds)
    (48/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050927453 seconds)
    (49/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178009072 seconds)
    (50/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.092044066 seconds)
    (51/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074286883 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.09141362 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.102344984 seconds)
    (54/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072614518 seconds)
    (55/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.179341841 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073531261 seconds)
    (57/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.154934311 seconds)
    (58/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074451949 seconds)
    (59/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.164154411 seconds)
    (60/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072622797 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.147318547 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.086428909 seconds)
    (63/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069213872 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090399893 seconds)
    (65/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072750165 seconds)
    (66/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.19267102 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130618366 seconds)
    (68/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077028517 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.090425216 seconds)
    (70/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.154838023 seconds)
    (71/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.196165501 seconds)
    (72/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075151742 seconds)
    (73/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067217638 seconds)
    (74/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073464902 seconds)
    (75/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.174036031 seconds)
    (76/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051975046 seconds)
    (77/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.192742039 seconds)
    (78/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.213934222 seconds)
    (79/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.101657032 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.077022918 seconds)
    (81/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087281176 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065425417 seconds)
    (83/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.109089561 seconds)
    (84/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.05152226 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065358476 seconds)
    (86/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.062626402 seconds)
    (87/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.35383972 seconds)
    (88/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.053309727 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 0.067974232 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.152676995 seconds)
    (91/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.120711288 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.117326619 seconds)
    (93/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.114770627 seconds)
    (94/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072951826 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091599703 seconds)
    (96/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.192997346 seconds)
    (97/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.09254491 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066847691 seconds)
    (99/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.125090957 seconds)
    (100/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.090094862 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.179165976 seconds)
    (102/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.052307358 seconds)
    (103/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073891309 seconds)
    (104/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069158434 seconds)
    (105/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051477017 seconds)
    (106/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07839957 seconds)
    (107/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.074391022 seconds)
    (108/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072053108 seconds)
    (109/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090468151 seconds)
    (110/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051497186 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074564574 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.091260494 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.095678857 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.143933446 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.113790648 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.149279164 seconds)
    (117/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.202324627 seconds)
    (118/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.062579688 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065892891 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091166404 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.09007267 seconds)
    (122/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075729547 seconds)
    (123/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069883083 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.109644019 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 0.138103159 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074420159 seconds)
    (127/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083006892 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073554481 seconds)
    (129/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054384786 seconds)
    (130/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062423242 seconds)
    (131/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052088258 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07203092 seconds)
    (133/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.154782358 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073037039 seconds)
    (135/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053459199 seconds)
    (136/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088954288 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.093844752 seconds)
    (138/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051917565 seconds)
    (139/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.0661894 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072292328 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066219514 seconds)
    (142/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.12028151 seconds)
    (143/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.108548533 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065379729 seconds)
    (145/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073182446 seconds)
    (146/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075092787 seconds)
    (147/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080569014 seconds)
    (148/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076390653 seconds)
    (149/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072430719 seconds)
    (150/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074342864 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065401872 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073060804 seconds)
    (153/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052642513 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.130073247 seconds)
    (155/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.18557527 seconds)
    (156/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073969412 seconds)
    (157/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072638291 seconds)
    (158/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060925546 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074107389 seconds)
    (160/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.142253614 seconds)
    (161/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070315765 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065915263 seconds)
    (163/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051322504 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066364026 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.110008418 seconds)
    (166/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.181742694 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068875353 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.319873324 seconds)
    (169/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067516592 seconds)
    (170/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066840014 seconds)
    (171/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.081270182 seconds)
    (172/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.08157622 seconds)
    (173/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071140331 seconds)
    (174/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.156517031 seconds)
    (175/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.183599206 seconds)
    (176/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075451887 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093245691 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091986529 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065824743 seconds)
    (180/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.111016034 seconds)
    (181/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.16186543 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072773251 seconds)
    (183/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068762241 seconds)
    (184/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073054482 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065476968 seconds)
    (186/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050984825 seconds)
    (187/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066670096 seconds)
    (188/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053042483 seconds)
    (189/309) benchmarking ("sort", Int8, false)...
    done (took 0.142234607 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074308556 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.139098426 seconds)
    (192/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.161967719 seconds)
    (193/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051264356 seconds)
    (194/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052495982 seconds)
    (195/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.099967592 seconds)
    (196/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068195911 seconds)
    (197/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050965206 seconds)
    (198/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065336208 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090776611 seconds)
    (200/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050357409 seconds)
    (201/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.115920935 seconds)
    (202/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.05091818 seconds)
    (203/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.237945115 seconds)
    (204/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.052356295 seconds)
    (205/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.052476575 seconds)
    (206/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.17693999 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065268485 seconds)
    (208/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.053840554 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.094989126 seconds)
    (210/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.06720073 seconds)
    (211/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.053013487 seconds)
    (212/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052300424 seconds)
    (213/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062958212 seconds)
    (214/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.112920426 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075685452 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.087122662 seconds)
    (217/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051633304 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.095523825 seconds)
    (219/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.079054339 seconds)
    (220/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068916825 seconds)
    (221/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.155127081 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.077953395 seconds)
    (223/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052418689 seconds)
    (224/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066558513 seconds)
    (225/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053247703 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072990076 seconds)
    (227/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051292569 seconds)
    (228/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.053290347 seconds)
    (229/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051158111 seconds)
    (230/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052661547 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093843251 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065125326 seconds)
    (233/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.0518176 seconds)
    (234/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053894455 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091554215 seconds)
    (236/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051358369 seconds)
    (237/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.186003691 seconds)
    (238/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077203612 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.101753633 seconds)
    (240/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080429737 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.143847034 seconds)
    (242/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073607399 seconds)
    (243/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052349727 seconds)
    (244/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.062048806 seconds)
    (245/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173911631 seconds)
    (246/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052312975 seconds)
    (247/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050891953 seconds)
    (248/309) benchmarking ("sort", BigInt, false)...
    done (took 0.190324781 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068526945 seconds)
    (250/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051241734 seconds)
    (251/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052065482 seconds)
    (252/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066667508 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.1403889 seconds)
    (254/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.099689775 seconds)
    (255/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071946183 seconds)
    (256/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.052949092 seconds)
    (257/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061369114 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067399675 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065636436 seconds)
    (260/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.0659443 seconds)
    (261/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065900342 seconds)
    (262/309) benchmarking ("sort", Float64, false)...
    done (took 0.131217663 seconds)
    (263/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.05295353 seconds)
    (264/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071731123 seconds)
    (265/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074208435 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073703854 seconds)
    (267/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067052461 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07372832 seconds)
    (269/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052640318 seconds)
    (270/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081676556 seconds)
    (271/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.06632289 seconds)
    (272/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061687044 seconds)
    (273/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066928796 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065406085 seconds)
    (275/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068602591 seconds)
    (276/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052237268 seconds)
    (277/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065394004 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.140470023 seconds)
    (279/309) benchmarking ("sort", Float32, false)...
    done (took 0.133525082 seconds)
    (280/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.196412887 seconds)
    (281/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.104772852 seconds)
    (282/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051595808 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074501468 seconds)
    (284/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.0666154 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064629068 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.0643319 seconds)
    (287/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073943237 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088065577 seconds)
    (289/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052402585 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065739543 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073486163 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094875722 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.095860509 seconds)
    (294/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.150697973 seconds)
    (295/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064281215 seconds)
    (296/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080572412 seconds)
    (297/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051231408 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071678589 seconds)
    (299/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051389546 seconds)
    (300/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067693791 seconds)
    (301/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051689822 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065529674 seconds)
    (303/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051290386 seconds)
    (304/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052203267 seconds)
    (305/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064602674 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071255681 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066034113 seconds)
    (308/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064565677 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091488063 seconds)
  done (took 31.170880861 seconds)
done (took 32.581490445 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085932606 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093529606 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075393787 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09410788 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081836182 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077330113 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073522297 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079664421 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080596211 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082692504 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07863492 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054652716 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074617542 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075009452 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075324138 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091991849 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079499981 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073537484 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074062821 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065116452 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073680365 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065969467 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067179417 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054647748 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078803841 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071820084 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073282706 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074630169 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066261878 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066619656 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069936063 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074153647 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066262379 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079344386 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072659484 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073647989 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075383387 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077710406 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067869181 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065956667 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074935199 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066921786 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073555834 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074798894 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072516488 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071909392 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074174334 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078213545 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091471299 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068141053 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075306345 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076524825 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076375688 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073359762 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070168925 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073582032 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071293623 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09157199 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074470069 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068087076 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075208474 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074981341 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07190984 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073792001 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073471455 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075935614 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07666318 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07184985 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07505013 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071934269 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065547451 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074071633 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069338363 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065874177 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076418032 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078026685 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064489008 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071981115 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07338957 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071135992 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064699929 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067637872 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067477425 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072028654 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067148752 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054930431 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069443485 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072461161 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064937891 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073435512 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072139824 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072848603 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067008577 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076707719 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064768037 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07099118 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066259832 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065377678 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067410954 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069511448 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065418335 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067444618 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075015336 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067199975 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071952162 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079292203 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065582564 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072290972 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065001658 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065369851 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07980683 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075883094 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065530243 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067757635 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064740048 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073519101 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064703597 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066132562 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065576369 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065538294 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071472387 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065636207 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067548772 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073295352 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078685818 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065350108 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069093183 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066379835 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064861126 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070673294 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064733003 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064593743 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065960838 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061030059 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066509851 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065046243 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072863319 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066470951 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.209253011 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068144952 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07485509 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071553918 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073266038 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072492143 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064863611 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059705584 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068265321 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068031932 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067562488 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066060102 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067369454 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065678001 seconds)
done (took 12.536560183 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066815626 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140611956 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.09822684 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096369146 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086538132 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067168934 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07693431 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102117813 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068252629 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102185966 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088413945 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086187993 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114764369 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064721202 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066564506 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069830837 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068009198 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081885817 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101968662 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087759656 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116216415 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065637557 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093862022 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089982914 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.089581853 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103939382 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070245371 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070388799 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070386214 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.093716866 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08984113 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070553745 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067337732 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099343487 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.094557091 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084385445 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066959308 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08358397 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067484934 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066728078 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06808912 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100076315 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081301746 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081669574 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070552056 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070162441 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068421944 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08446774 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090683418 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079612698 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087583148 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102205207 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069508165 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.06578846 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064784952 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.087109103 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065326908 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069838164 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06667852 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.069136483 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066698625 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069575862 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081835615 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081425483 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070782491 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079993626 seconds)
  done (took 6.859720465 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084499182 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092672272 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084273815 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08398789 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06588717 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066978127 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066607139 seconds)
  done (took 2.051736984 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06659053 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088888861 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090019203 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089474828 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081462558 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088093407 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076220131 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066771578 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.088604818 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067729942 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087976134 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101421711 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070078607 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073931562 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091213117 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066497636 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090935775 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067227191 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069911895 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.0911158 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069123625 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.096585664 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070475948 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067404411 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081181312 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066641474 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114550672 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071435834 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068448584 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070007182 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064597405 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.108056402 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081039055 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075127679 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066971013 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082376043 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081961568 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065189844 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084118577 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.075605776 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081473345 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067385983 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067980977 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064653444 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071371353 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077712371 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068129195 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067338547 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.06914769 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087237612 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067397281 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080798852 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.06963271 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072234111 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068652962 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073333421 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077667387 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067972235 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086583515 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068149316 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084018166 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082994805 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080529165 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083840053 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069027805 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080395421 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080689981 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069545284 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069047612 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070682656 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083037308 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065175708 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069249535 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077568355 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068756401 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090402485 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090446347 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069076712 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080397047 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067988389 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067386985 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067508659 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090805864 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072686924 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06722095 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071499733 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070714316 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065456731 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066480446 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071037687 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064969385 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068571992 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070138337 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069939258 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06971787 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08343534 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069289874 seconds)
  done (took 8.86521411 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068541911 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067839338 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.06980748 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068645691 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068267159 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068208519 seconds)
  done (took 1.938489047 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093736431 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069017826 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080854239 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072681821 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105302281 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087243534 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087630698 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079195392 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084078408 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078541847 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087613558 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08878675 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092879815 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072677548 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086898304 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072134027 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087184589 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075421718 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078336865 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072746242 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086954095 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072772476 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072997392 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082111527 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076088849 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072095684 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067846331 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079339606 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078836583 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078699328 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072472732 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076872418 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07082272 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078425498 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087093073 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070847841 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071771657 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077228703 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072594774 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076211505 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.08826557 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072714256 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074100642 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077557459 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078479051 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070736441 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07800252 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075183156 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086740453 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077009856 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07717549 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071646214 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075785826 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076984022 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071066499 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077923098 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077528118 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086914081 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072400239 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070442496 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068806192 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.076337339 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077880948 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.076519612 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.07902121 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.0772202 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07070105 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072804075 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072982642 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072057071 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077809169 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068977228 seconds)
  done (took 7.108556974 seconds)
done (took 28.319424861 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.537091564 seconds)
  done (took 2.032466208 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.619069257 seconds)
  done (took 2.13818212 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.601852875 seconds)
  done (took 8.118760895 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.400610583 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.526176868 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.72242317 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132737355 seconds)
  done (took 3.342104786 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.696030347 seconds)
  done (took 2.221190458 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.215388861 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.202790626 seconds)
  done (took 1.95306681 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.375676833 seconds)
  done (took 1.893694397 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.13480234 seconds)
  done (took 2.657253795 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.257916838 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176336998 seconds)
  done (took 1.961754851 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.475197651 seconds)
  done (took 2.000646356 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.857399071 seconds)
  done (took 6.385315595 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.213312858 seconds)
  done (took 1.777536812 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.242537229 seconds)
  done (took 1.766166068 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.712571743 seconds)
  done (took 3.241774999 seconds)
done (took 43.013506177 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080600845 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082272678 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.082067513 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078988683 seconds)
  done (took 1.839967333 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078377572 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073231834 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077223275 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074497247 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.078054706 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073712278 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.075306309 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076471882 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073453678 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07415956 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074025986 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073654241 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075656316 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075371021 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072257053 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075786491 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077234494 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073539138 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076216004 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073878792 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071095953 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075909356 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075718932 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072495769 seconds)
  done (took 3.328392315 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079142267 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073804364 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075650245 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07314692 seconds)
  done (took 1.840261878 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07880505 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094878188 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090530463 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079590016 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.094714517 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.088080776 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069869028 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069518901 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071469447 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078568909 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068916842 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097198335 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089819316 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078770252 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080953876 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066191274 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069138679 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088502823 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078924256 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078925872 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071386462 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078413615 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068484429 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089682766 seconds)
  done (took 3.455865987 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.087019669 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.106098042 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082413132 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089804423 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09213983 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066101085 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088323618 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092360986 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127801595 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06598768 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071000065 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066128868 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073915534 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066105249 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082602563 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109203046 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112425373 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069413671 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098050326 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065986597 seconds)
  done (took 3.260721253 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073363261 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070834431 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067340516 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069778682 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078047776 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073820194 seconds)
  done (took 1.982160785 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069692815 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068273117 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068838952 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068296041 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073078491 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068092837 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066982488 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068279049 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068445679 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068456617 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067216948 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066826249 seconds)
  done (took 2.367732269 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.203660251 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070004345 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069575012 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066627688 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071282653 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067276453 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081746483 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068467812 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.092436804 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066970629 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06730288 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.06922118 seconds)
  done (took 2.540664501 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209031509 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077038202 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241654595 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151683331 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112147523 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116722377 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114168486 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114895446 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.14258871 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101727014 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17009605 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169043786 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108911422 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138009237 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089776519 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.101588006 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15566376 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164591506 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106601099 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169072801 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146871825 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127379977 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155238616 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102975529 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106777933 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122906536 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071953463 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080816639 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171021937 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133939084 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145488558 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111763498 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092721947 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178296329 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173261095 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142108184 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14764784 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084939791 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105705074 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.13558627 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203843854 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088777182 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161619971 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10922331 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.222185477 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134522479 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122534199 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122877515 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106625596 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091277763 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148276386 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186377952 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137154899 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088143498 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12574092 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115023696 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116354182 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115298448 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183691007 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163453958 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130239208 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072252581 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109331645 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155514227 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13565175 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109509414 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126477969 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093406343 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135782514 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157144343 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120702496 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145890127 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.118285548 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089803386 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120879419 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141529334 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128481746 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16269066 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12550015 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073851466 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125209987 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103159339 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081573864 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.146571616 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07600904 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178660211 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099701735 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109978153 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126925904 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110486921 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10990463 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160530775 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145393837 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103392032 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065845346 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250278668 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.12391861 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147968228 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087711531 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111009822 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118388149 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079225282 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139485608 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076910654 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125177784 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.07806782 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129423904 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131750147 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07759897 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123368983 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105132408 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101992158 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134482228 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163280267 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088744496 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082691058 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17230444 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122433806 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10472715 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145791241 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158727412 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102470706 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101727263 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15073347 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181502392 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090570862 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1652058 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107816722 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08425343 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088940492 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125259441 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112678246 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124622043 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082635018 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.11899948 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170589964 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075658309 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096899015 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136213528 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079647173 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081881042 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106942524 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105781719 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096120663 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101092358 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103632343 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137070954 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124326353 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106332776 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124804295 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098922814 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.3204047 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09024748 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.103316567 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105334875 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070513642 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137248457 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159494761 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080008451 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165200574 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.125925148 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117549822 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121256734 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085147466 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142746894 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080168846 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071205785 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146300395 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112085279 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110467961 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152460166 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118211227 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127947083 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120402094 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134344212 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132743735 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131690787 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106419442 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089414059 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11393766 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127609636 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074383846 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092009461 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081202043 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10566187 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096651063 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083432882 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142506322 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125591328 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110436959 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113054331 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097614479 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149594722 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076942022 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129454118 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120826754 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096705827 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.154736329 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154014355 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132292456 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099742408 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137627974 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070771631 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074614873 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.08857828 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123849385 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08314006 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083686007 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.264073772 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150270774 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132006852 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138145186 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125366483 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12325647 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15880607 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071273479 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119542342 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148944519 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123260294 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105685955 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090908406 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099322792 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145463879 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108881882 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184312518 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117252948 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125569503 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155950546 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.10227333 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080350393 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104937375 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136787323 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104995523 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14492016 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100577827 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089079304 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110903743 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075270421 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099507805 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128108678 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11985132 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135931991 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116828115 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133772723 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078416041 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117092313 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122852294 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123229952 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065237614 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121989425 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16379069 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095977421 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119460981 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154356472 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080109726 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.135112112 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176768115 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145419324 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085609577 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256442045 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121508178 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130783866 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122776221 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143000014 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109374735 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139234726 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11122325 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087226275 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088778447 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098772816 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107274478 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096540847 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109350616 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115531131 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096447322 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13423772 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105357889 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111445466 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119898369 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099947027 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092637837 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097221485 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179882558 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119958034 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172686026 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.101365107 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.1461182 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165878055 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075664637 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079949941 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078807002 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141771064 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084849415 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130956072 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.107983761 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118469418 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12453284 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144458018 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096822477 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069253034 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110427806 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133955186 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125660072 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099603733 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105122502 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166204253 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102267381 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080653414 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11482881 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11697028 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103907962 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172681336 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061796063 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106666308 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077092324 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081161639 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128952329 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.299411595 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081321147 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.105269545 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121580862 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112804122 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129925754 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104457349 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110132055 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128096671 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151775558 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130042763 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090949898 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113164204 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130384288 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158503456 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105337305 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09745248 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174544968 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154869868 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162800716 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089012211 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116162753 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115462427 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110993884 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139989034 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084828837 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164415613 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082901562 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137574616 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104433105 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089466569 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130343097 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108891777 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089374817 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149818015 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118561389 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083799371 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078302226 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119002821 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12097244 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107466183 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076244114 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140939834 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074353469 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133911816 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161103292 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08125043 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108481898 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097133248 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080009787 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106788552 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102663618 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087719127 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.242044371 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179057224 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089369727 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152848561 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135949789 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116060391 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137963637 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103710157 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.641332842 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07982314 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155365825 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11831337 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176694852 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101242514 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120343254 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111003245 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125001742 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146334592 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10634562 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.182542128 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134690727 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116856763 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081146219 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103113873 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105211265 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088629681 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108437735 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115154048 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116089515 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094041222 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116432022 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126408842 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082854563 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096900693 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158179646 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117711566 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144917345 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141995852 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086303651 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119988948 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140235858 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080874152 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121808744 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153225683 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106598443 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100089289 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081311225 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100993784 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159568606 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073609027 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159590622 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118472791 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.259818905 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11662846 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114558076 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132983886 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108536313 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12285287 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094204268 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.112124203 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115025423 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082830205 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077871509 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106785488 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112801505 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099618838 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098586746 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099905882 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154602205 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072562303 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09965781 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117336074 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145520095 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176012957 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089128297 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083603204 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119952866 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114563097 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113697629 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121939263 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080455434 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082796638 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081270045 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.078710083 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109752768 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113904861 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116574519 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112652248 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16450323 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083860047 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.231515227 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096622239 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106411185 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071124471 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079127387 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097612391 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099069541 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108829022 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11113503 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161383215 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096380378 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090896558 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092386362 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074778284 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084563807 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130402591 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110686152 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119334735 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098986516 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062567235 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10779443 seconds)
  done (took 59.594003609 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110954965 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.084014863 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095073276 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.14553235 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123369576 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203447236 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154857614 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189832386 seconds)
  done (took 2.775310797 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068622946 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096763063 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104353582 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084064463 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067385681 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069553519 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.23461732 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082658443 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068366333 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.100049198 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.08000196 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069761443 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.431287207 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067258054 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067996556 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063061527 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067996331 seconds)
  done (took 3.465868021 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.392536846 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.614258675 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.35513051 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073026779 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.469235024 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.08576096 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.151555854 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.129424375 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074037205 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.539252307 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.409232489 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125000836 seconds)
  done (took 18.074621289 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076821004 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070285347 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084734802 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084279352 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073646127 seconds)
  done (took 2.041714305 seconds)
done (took 108.151810166 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082128954 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.609053171 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053379464 seconds)
  done (took 2.340359676 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084158569 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086619891 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086419749 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084824853 seconds)
  done (took 1.998828667 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074771637 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076686012 seconds)
  done (took 1.802609742 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.236012189 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.165937192 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.097511118 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084231399 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080636594 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.08085203 seconds)
  done (took 1.902659407 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073626743 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07669806 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073465845 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077249772 seconds)
  done (took 1.952223928 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078023103 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053245922 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055601824 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.059086565 seconds)
  done (took 1.898285709 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087981691 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080852387 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079204792 seconds)
  done (took 1.901956754 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103703471 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.08718316 seconds)
  done (took 1.844186635 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082476384 seconds)
  done (took 1.737981766 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100888911 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.103046903 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133475033 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112477748 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141414342 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.111163079 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085458109 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087109207 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078217607 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087795234 seconds)
  done (took 2.697278688 seconds)
done (took 22.306846401 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080190933 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.369803156 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361345141 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091346422 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669375793 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357651036 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.996759574 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093638686 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116737077 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068285436 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085768252 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648125052 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.023038178 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.325334784 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.008031546 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32052502 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650692544 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068990706 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06937355 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06869951 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.984262 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068367505 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068586011 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069498596 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651426483 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373946448 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069163272 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.320736064 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068839783 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07052415 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35643143 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069306884 seconds)
  done (took 16.287036874 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071386844 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122030731 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074004977 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086580239 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07177489 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070160825 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072847789 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069826728 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123380056 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068778504 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086449378 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068873737 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.090439165 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069597395 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089473333 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068797371 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069796163 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069158196 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068898237 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069496014 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088015514 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068839742 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069178978 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069677 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068918919 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08135685 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070218095 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069284642 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069293462 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070983493 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072497795 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069452537 seconds)
  done (took 4.116472943 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119867517 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128929617 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074870982 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107433283 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116330495 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071090735 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149574149 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094752599 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.13232176 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068842582 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08700424 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069169285 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103682217 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069410975 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089557837 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069364877 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070204901 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070236412 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069222211 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069718778 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089181499 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069021186 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069761379 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069844222 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06987572 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082951272 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069602267 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068977736 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069126839 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071068452 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072487113 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069377688 seconds)
  done (took 4.373104853 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073791113 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076154178 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083996058 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085457229 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070740456 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072597997 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073932706 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070543742 seconds)
  done (took 2.281532437 seconds)
done (took 28.719564723 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080548322 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069845537 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073871999 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083652153 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074357793 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080061837 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06836332 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076395837 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073387249 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074094907 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075817827 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068578316 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072274871 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067745924 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074905372 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069225215 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079769968 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07289136 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080480024 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.08040925 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070566479 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074149316 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075743618 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080039902 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080397438 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.07970083 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078717998 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073986885 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070032208 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071097649 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077934787 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084802584 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069693816 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080857068 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068906024 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068238105 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.073000073 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068503292 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081072908 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077509633 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070432088 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077221468 seconds)
  done (took 4.798285938 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089405049 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093849002 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08566302 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.0619296 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067622575 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066111769 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090824932 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060640318 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060043754 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089506901 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056620366 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060241917 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06743619 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05462422 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.061788631 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057616801 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062636116 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056081272 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061329306 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060638359 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.090216009 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053987819 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079400185 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064420618 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056486553 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062501026 seconds)
  done (took 3.449452769 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075681172 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086888383 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090298737 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133415397 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106970144 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080574274 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.0805776 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09644842 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.089857801 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067769058 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071873045 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094308826 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090934476 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074365404 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068726952 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087616357 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084623028 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070651131 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074866357 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096366648 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089068009 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087605473 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097066595 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085143702 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.0685044 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071024045 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072806404 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082887692 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07419121 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078698431 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07278502 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071994013 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071121641 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080463654 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072278113 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.07046785 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.094045985 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080013636 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080428764 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069647703 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077079545 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070812147 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.095124526 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12901247 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068385678 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07515601 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072781684 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079026761 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068826034 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090847883 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08088117 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06852064 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072794068 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068635715 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069099548 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083163641 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072119906 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071886894 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078784704 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075339832 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.095030544 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073724326 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085358128 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068579765 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076595028 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068237781 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070631407 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068574652 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097558446 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070753213 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113316051 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070406809 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070198443 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078867749 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076986108 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075297435 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069378815 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084737855 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.08060098 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073155133 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078738206 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073154154 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07150211 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.093349205 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.072184035 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070797488 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06994873 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07633946 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071719758 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070053354 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082396263 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068365656 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07239041 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086476313 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068781121 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070446059 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07470274 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073418435 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068937273 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080282997 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074019367 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069646961 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078672619 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068913756 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071874883 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08300302 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074911469 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068840146 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07328334 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074365569 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070307506 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070499257 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071963521 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070689049 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077996554 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076649407 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073827123 seconds)
  done (took 10.852862353 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.167649469 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.160630024 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071409207 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.153648255 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078124019 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080773671 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.15337763 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095932141 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06881386 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069413676 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069710748 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111860879 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107796565 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.117720994 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079811088 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068945506 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086559506 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116285489 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.155155028 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.149758824 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.086040635 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078732342 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070567086 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070340372 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072047894 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079830574 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087615165 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078188328 seconds)
  done (took 4.494020883 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081212103 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.10718471 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075633226 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092720761 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091485011 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068484528 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071386768 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071697505 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.083106497 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079857117 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068916428 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074746591 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07564057 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072040191 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069783529 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076970527 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076153819 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069898218 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072195317 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07417015 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079872068 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093153945 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072893418 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068673429 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07363494 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068296931 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064275655 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086057796 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069072358 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.096544404 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066600177 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074700912 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083744052 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.07022495 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068736976 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068759843 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068599194 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068228118 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070632347 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067223641 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067261002 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058757045 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068317043 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080929926 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076277177 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057906987 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073169306 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074136608 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074961909 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066576237 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071508761 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071861643 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07237026 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076925569 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073125366 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074274595 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070798477 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.075502707 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078025696 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069038319 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066685329 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067379867 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073724573 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066183518 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.077680371 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073877892 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067180362 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068432076 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070658157 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.075856343 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068846262 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073310707 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066831235 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071147831 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073717831 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071179108 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069935963 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067249521 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068992469 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069077121 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056225022 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069262549 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054723097 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072442514 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066831116 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067439338 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069701499 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074005272 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081597543 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.07032955 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074925852 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070156578 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067830075 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071823292 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06159374 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07201541 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084771271 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083781866 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069213143 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066938752 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08296987 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073792705 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068073569 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056761802 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074359926 seconds)
  done (took 9.341200865 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092729919 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070780326 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085395741 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09256948 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.089431273 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075999059 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078856122 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070350183 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084213533 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074840328 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078033459 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068742831 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079449611 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078683436 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071134736 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079329045 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073950629 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086749378 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.085041431 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.06942116 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078317185 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08170298 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091867014 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083488005 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082501812 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084068798 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091577795 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079357217 seconds)
  done (took 3.975878166 seconds)
done (took 38.575566148 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.767297577 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.932268471 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.753179677 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.121590014 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.037908414 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.774992577 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.941319567 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.74798027 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.868501503 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.790089277 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.955252625 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.915841629 seconds)
done (took 65.293900836 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.833647437 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.885778144 seconds)
    (2/2) benchmarking "String"...
    done (took 1.987211476 seconds)
  done (took 5.559693954 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.021407263 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.310718207 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.996538196 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.748004837 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.754700138 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.085247002 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.558874377 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.2583169 seconds)
  done (took 30.400018827 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.896732186 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.98846543 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.434441924 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.472209262 seconds)
  done (took 15.527288303 seconds)
done (took 63.118593274 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.756349805 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.781014938 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.756278739 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.732762937 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.807666261 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.764841834 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.9840847 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.756889751 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.750392135 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.736062198 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.750646154 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.190382322 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.762971279 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.113002423 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.75170748 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.758267998 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.783388825 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.218418832 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.910330693 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.7633098 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.754083291 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.808615247 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.750727762 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.756641613 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.777583355 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.748861784 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.186775124 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.760803461 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.575103223 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.751088889 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.809570976 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.329252812 seconds)
  done (took 203.524721984 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.749658883 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.905487276 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.913441369 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.775817531 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.378342109 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.929129899 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.86965526 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.39125777 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.751703772 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.759114685 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.031305473 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.751432009 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.058637513 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.734328003 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.780138748 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.749530125 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.91544449 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.040685121 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.786071549 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.925079645 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.776163727 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.099841973 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 4.063520033 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.989627052 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.755321636 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.770044421 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.773810727 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.758367333 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.944229413 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.890339088 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.785291427 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.788765445 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.955574795 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.623093318 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.77509211 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.753328832 seconds)
  done (took 170.387780519 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.137851263 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.751932854 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.750104422 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.750622827 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.757993254 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.751269229 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.874047 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.878022517 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.342858341 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.501748515 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.802790462 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.594074901 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.750377728 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.819160155 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.763580961 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.751579815 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.751198302 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.751621709 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.766929568 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.780241153 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.750800894 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.750865794 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.876750322 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.76528791 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.832060792 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.761039799 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.753391024 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.758942586 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.122650438 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.752699999 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.757865143 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.996496128 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.752344888 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.751734697 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.650862739 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.924193648 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.843916383 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.755152095 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.759997571 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.753009951 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.973173349 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.753145891 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.754538013 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.755352985 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.937419163 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.754146652 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.87946678 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.754032454 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.261882411 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.753296728 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.753225036 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.447310193 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.4445911 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.755711613 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.752802656 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.757239915 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.754560954 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.754151932 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.7601401 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.455635661 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.827448616 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.756849906 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.757782573 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.76092849 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.756007801 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.980442737 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.754926216 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.347000645 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.816159353 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.991798248 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.87578566 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.756273194 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.822270221 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.850329443 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.755301729 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.754253736 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.755006062 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.754950641 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.836066711 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.755051416 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.755111895 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.876039102 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.755770694 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.763119203 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.755719004 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.805974978 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.825059335 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.755793124 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.648788168 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.756932191 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.756444154 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.08706801 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.823709644 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.755698482 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.754631063 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.755692773 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.87781859 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.877709272 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.546458548 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.75577038 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.603292077 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.757308754 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.893591466 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.756316646 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.949003306 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.75945657 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.838397879 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.760719896 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.757784283 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.754701277 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.788854697 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.758924074 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.812741242 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.756731637 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.129650024 seconds)
  done (took 401.306888236 seconds)
done (took 779.10147634 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.426436261 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.379592338 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.496804702 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.402098732 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.37687568 seconds)
  done (took 13.776833447 seconds)
done (took 15.470414939 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.844246088 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.848456481 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.781621065 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.847418393 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.777783236 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.846744875 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.83181088 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.783541537 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.814068859 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.782263934 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.816865637 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.783629462 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.770378597 seconds)
  done (took 25.223432301 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.990442962 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.995163679 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.830763908 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.991276266 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.80590259 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.992197132 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.922298515 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.911469636 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.910712733 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.775237364 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.771711452 seconds)
  done (took 22.593923707 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.999875308 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.000666239 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.835457074 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.022012583 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.808648661 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.99846801 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.921078913 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.913649772 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.9181168 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.773525675 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.77254295 seconds)
  done (took 22.66098964 seconds)
done (took 72.171991932 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.767160735 seconds)
  done (took 3.46405237 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.79262969 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.953789214 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.773299348 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.77184459 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.767650367 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.769080788 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.771465941 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.768390836 seconds)
  done (took 16.06651598 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.767998 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.764473365 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.764970532 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.767980114 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.767115605 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.766958477 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.76602915 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.765516431 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.764811265 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.769576558 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.7657599 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.768230516 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.765774848 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.768044879 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.766166468 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.767703095 seconds)
  done (took 29.964955056 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.767587742 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.764828583 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.765759165 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.767172437 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.765860965 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.765782737 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.765797081 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.766055263 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.765147978 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.765675239 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.766364616 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.766088347 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.766627579 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.766202836 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.765872561 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.767011474 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.765460084 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.765956485 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.770742181 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.766151766 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.768400974 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.766157547 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.766994851 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.76729987 seconds)
  done (took 44.095844379 seconds)
done (took 95.287248091 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.624346213 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.358563428 seconds)
  done (took 8.681902731 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.772422129 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.769603977 seconds)
  done (took 5.283745418 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.769129488 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.770419155 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.769913261 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.769884349 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.771607369 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.769868646 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.769931533 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.769728607 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.770770326 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.769890656 seconds)
  done (took 19.400986693 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.770671562 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.769809035 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.766737954 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.771221094 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.771389834 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.768105282 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.77136684 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.770703157 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.772257957 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.767892143 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.770866321 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.768542036 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.770863139 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.768801166 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.770778398 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.767906355 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.768696454 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.768711849 seconds)
  done (took 33.555734399 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.770374857 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.772744511 seconds)
  done (took 5.2447199 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.768952727 seconds)
    (2/7) benchmarking "second"...
    done (took 1.768297342 seconds)
    (3/7) benchmarking "month"...
    done (took 1.768277937 seconds)
    (4/7) benchmarking "year"...
    done (took 1.768773816 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.768847124 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.76873952 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.769347998 seconds)
  done (took 14.081917109 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.772226226 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.935570792 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.007897667 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.422684767 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.772849266 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.775335682 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.735363633 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.775625754 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.776198032 seconds)
  done (took 19.675546239 seconds)
done (took 107.623340467 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.611328518 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.766992251 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.140566695 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.830006433 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.816781981 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.112228854 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.796306226 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.0689793 seconds)
done (took 42.844424456 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.81878217 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.345488708 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.382314326 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.477987134 seconds)
  done (took 12.909002459 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.752694447 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.289784448 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.807207765 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.346142906 seconds)
  done (took 19.920763654 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.13653066 seconds)
    (2/2) benchmarking "read"...
    done (took 2.118641271 seconds)
  done (took 5.962423324 seconds)
done (took 47.314604017 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.772864277 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.773196177 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.770512097 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.772612078 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.772046903 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.77039237 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.770618286 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.771154347 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.773839528 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.773658189 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.77281193 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.769813416 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.773787563 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.773130147 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773772969 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.770468772 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769939581 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774841686 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.771638095 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.771142368 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.770294116 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.774105407 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.771329704 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.770538346 seconds)
  done (took 44.230560722 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.774203987 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.772692766 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.774340571 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.775880246 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.772527779 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.77522826 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.776409448 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.772130283 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.775578578 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.77602691 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.772528749 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.773009223 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.774309322 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.772222959 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.775616934 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.771566964 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.775307121 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.772331267 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774341303 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.773140556 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.775723468 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.772738583 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.772427337 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.775715329 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.772859963 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.7739109 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.775741464 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.774340869 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.775913748 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.773146075 seconds)
  done (took 54.926730665 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.782091285 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.782797364 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.775405191 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.776554019 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.775968551 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.775769342 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.776290807 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.77488382 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.776650639 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.776431334 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.776204164 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.776369079 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.776126734 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.776670742 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.776744447 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.776368044 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.777168076 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.776904077 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.777109231 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.777378816 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.778038361 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.776300427 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.777639668 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.777173301 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.778437952 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.7777489 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.777008621 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.77728697 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.777880476 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.779966811 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.778256573 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.778127549 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.777219451 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.777671372 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.777947299 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.778072387 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.782139627 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.786094024 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.779052698 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.777715033 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.778917042 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.777626971 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.778050734 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.778270179 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.778231229 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.778249164 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.778092779 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.777651926 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.777807592 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.777737421 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.777521281 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.778709487 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.778540671 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.77901097 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.778790483 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.778464198 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.779764001 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.778900518 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.778467762 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.778644755 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.778865593 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.778871158 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.779458232 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.779784417 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.77874225 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.779457902 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.778900711 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.779878056 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.779511872 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.779673843 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.779989389 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.779581272 seconds)
  done (took 129.737764142 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.779060546 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.776800133 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.776815051 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.776990074 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.776365425 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.779578538 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.778122019 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.781152913 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.776982746 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.780892463 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78095575 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.778218335 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.777500654 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.780316729 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.780307759 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.777033602 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.782064312 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.777404314 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.782804554 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.780873238 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.780059315 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.77736339 seconds)
  done (took 40.847176877 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.781582964 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.781502876 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.778251711 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.780346903 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.77768492 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.781033224 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.780375642 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.77966641 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.781659485 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.778933326 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.778479751 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781207248 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.778426786 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778481276 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.778327675 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.779229045 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.780063806 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.779217776 seconds)
  done (took 33.745152441 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.779930884 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.77920019 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.781632575 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.779193878 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.780160036 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.782553178 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.779111988 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.782292819 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.78173985 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.780346074 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.782534457 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.782562539 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.781909411 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780285833 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781870131 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.782546845 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.78192817 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.780400135 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.782263728 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.780443351 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.779348011 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.783957025 seconds)
  done (took 40.897394483 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.783063598 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.782531545 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.781430359 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.780298242 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.780017545 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.78274651 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.783647674 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.780763676 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.784175104 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.783395008 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.780986767 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.784283446 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.781553357 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.783400369 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.781025764 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.780287629 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.784424807 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.782045572 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.784529401 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.780703353 seconds)
  done (took 37.359278852 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.784299486 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.784195672 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.784677967 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.785589594 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.785486873 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.784850505 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.785796067 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.785958779 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.784992535 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.784877087 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.785713232 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.786399904 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.785571002 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.784380114 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.785342164 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.786130408 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.785138672 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.785190625 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.786615415 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.786312556 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.785658042 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.785372595 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.785883716 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.785532457 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.785664855 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.786064104 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.785895813 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.786577552 seconds)
  done (took 51.708542182 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.78627623 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.786450399 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.782527362 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.78284403 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.782798562 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.782399827 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.784555812 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.784165258 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.785573135 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.782285432 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.787033776 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.785411051 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.786915877 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.78608686 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.787138738 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.786058473 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787284269 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.782767161 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.783598242 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782454669 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.785444904 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785133632 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.787701995 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.783863819 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782415501 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.786294677 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.784678418 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.784933569 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.786878682 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.784325143 seconds)
  done (took 55.262204167 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.804178732 seconds)
    (2/2) benchmarking "in"...
    done (took 1.805948315 seconds)
  done (took 5.325800711 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.78468591 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.786347773 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.787005307 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.784383453 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.78391856 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.787170138 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.786943961 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.78420009 seconds)
  done (took 16.001920525 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.786909005 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.78883898 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.78795861 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.787802885 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.787777971 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.787114271 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.794385971 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.788844789 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.789697652 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.788986683 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.794591156 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.795360765 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.791557889 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.787310857 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.787630364 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.7887151 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.788283146 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.78867127 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.789436143 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.787738266 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.789394401 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.789896821 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.790185262 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.785881889 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.789889544 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.799097486 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.792351698 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.788818148 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.78762991 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.791989027 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.788254243 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.786503885 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.789915313 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.790161033 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.790319793 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.792114171 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.797531413 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.789505196 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.794981642 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.789545086 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.790238193 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.786941814 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.789681218 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.790548667 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.790595735 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.790065802 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.788821867 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.787174701 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.788758685 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.792843302 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.794725238 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.789421993 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.787384742 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.794642499 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.790810854 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.796125676 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.791034317 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.793580401 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.798872253 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.799042568 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.803434705 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.79792384 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.792127176 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.7910737 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.800236593 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.814339312 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.796561499 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.787214843 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.788706018 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.793009743 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.797128526 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.804420491 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.800366709 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.792567151 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.792444829 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.792228972 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.792095779 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.792359729 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.797147403 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.794649535 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.791871745 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.792518472 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.802023739 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.815345083 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.79053695 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.792194354 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.793363408 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.791912839 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.793401525 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.803524558 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.793317294 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.792120716 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.791869135 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.791444926 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.79445262 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.794046899 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.791269978 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.792939188 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.790164092 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.791911536 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.794102612 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.796295427 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.80257006 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.794386965 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.793222991 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.800043648 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.79259723 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.792200695 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.799187404 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.793098697 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.793254144 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.794626407 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.799290393 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.790444053 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.797008308 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.802358844 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.793405279 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.79413424 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.795154812 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.793883291 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.803262853 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.820734487 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.794052444 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.793585944 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.799111103 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.805345962 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.793891143 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.796830003 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.795793953 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.790816748 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.791927285 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.796188615 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.794434108 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.794857796 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.795638661 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.796634853 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.792037933 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.794279292 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.795250277 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.795063629 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.795101434 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.793546552 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.795746631 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.796062082 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.79422129 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.796771605 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.801052507 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.795274629 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.79506843 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.796049234 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.793168447 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.795293043 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.795695761 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.796526041 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.796625498 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.795666167 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.794855018 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.796600813 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.795635845 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.795512604 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.795436706 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.796541907 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.799908742 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.79649736 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.799837742 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.79620179 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.792689625 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.795760495 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.796777552 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.795909758 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.797193084 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.79598632 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.798439491 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.805003774 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.796593659 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.7973972 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.799190951 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.797821052 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.79755996 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.797431317 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.799590719 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.804833933 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.797006854 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.80366488 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.797847699 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.798295371 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.797449311 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.798184395 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.797445778 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.799344163 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.800722091 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.806330099 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.811307271 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.806201641 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.799916494 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.801489211 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.799251485 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.802708245 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.80237718 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.798987572 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.79813063 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.799100059 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.797992254 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.800792062 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.797882202 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.798810601 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.796409512 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.798820952 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.797275616 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.799304731 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.797603496 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.798657853 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.799798064 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.795044725 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.799302252 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.798947019 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.798930099 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.796014988 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.797854812 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.798709694 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.798652594 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.800123685 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.804675627 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.7968699 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.798768332 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.799979621 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.798373227 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.798850212 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.799264478 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.801547094 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.799081349 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.805634553 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.799134923 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.80025207 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.805798668 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.798914696 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.800563564 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.802481962 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.799975667 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.797765676 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.802608032 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.809504051 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.801341631 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.801385064 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.800187676 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.799905617 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.801741182 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.805766807 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.798335777 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.801063578 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.802278563 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.80342582 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.798821262 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.801833527 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.800204673 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.801551409 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.802150724 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.801442429 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.80095981 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.802115969 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.801169932 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.801931776 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.801693753 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.805432069 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.810592211 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.804979745 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.80188676 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.803246055 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.802921606 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.811309033 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.801679227 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.802882809 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.800948829 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.816803958 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.811644449 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.806993762 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.802559597 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.802313712 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.80615684 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.802466996 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.805877949 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.801215968 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.802244295 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.802325235 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.801757325 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.799891233 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.803422298 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.803092447 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.802125345 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.803884563 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.806103746 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.803091207 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.802256542 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.804031845 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.804307145 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.803514923 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.802289747 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.804894394 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.804335965 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.804318899 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.801818259 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.802126713 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.811385743 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.803647149 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.803551042 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.801229207 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.803546259 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.80293542 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.807174537 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.804120293 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.809276815 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.812775948 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.807084033 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.812748821 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.805437186 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.812738201 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.804131339 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.806850988 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.81310285 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.8018447 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.804119188 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.803495137 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.804281144 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.810953087 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.806168778 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.805262303 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.809884551 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.804696436 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.80436431 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.804153735 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.805602187 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.805030535 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.805175704 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.812584233 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.80667401 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.808534146 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.806706359 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.802084294 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.805663421 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.805535756 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.80536249 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.807779811 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.806535953 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.805526626 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.804736112 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.805590061 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.805648907 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.806129419 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.805741437 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.803530161 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.806601834 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.810949179 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.806861113 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.81037096 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.806279125 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.813719872 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.807950466 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.811256065 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.808458997 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.806170633 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.80705024 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.806222055 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.807585785 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.80575303 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.809239563 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.808199893 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.808089894 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.811085398 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.808215609 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.810029608 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.806786871 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.808220588 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.806441621 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.816868962 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.832454728 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.808687185 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.811571951 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.804126042 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.808026881 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.813406141 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.808039173 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.806876663 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.810816081 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.818349209 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.815298526 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.8079629 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.80939115 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.80785479 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.809044456 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.807846048 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.807927852 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.810040454 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.807364978 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.808366694 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.808557288 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.811307043 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.807984493 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.809386514 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.808631574 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.809788178 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.819565948 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.809227703 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.810001867 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.808532351 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.808225193 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.809384753 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.808803725 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.8103155 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.810090815 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.808935505 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.808836674 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.816790816 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.816928617 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.812400829 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.809784744 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.810719816 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.809641816 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.810281425 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.809816082 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.810954821 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.810360033 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.809031151 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.811006731 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.810172692 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.809015853 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.810142704 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.81106792 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.810076563 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.812874991 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.816950324 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.810289065 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.806670286 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.809788699 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.809830848 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.809883796 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.811468213 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.819086923 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.812823183 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.822109597 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.81918248 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.815777281 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.811044418 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.814093586 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.818494866 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.809250703 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.811824819 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.811525086 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.812490861 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.811591356 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.814377625 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.812089315 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.817366063 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.811266462 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.810507278 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.818875634 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.811846955 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.81256869 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.812836146 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.814948653 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.811343026 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.8087736 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.812385858 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.810588523 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.817253461 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.813138585 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.812195038 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.81332078 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.809729774 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.813736455 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.817536442 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.81153347 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.812826874 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.808172257 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.813439613 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.813982382 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.812501677 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.810039503 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.811935337 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.813653849 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.815001386 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.820621054 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.808883044 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.81390051 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.812232672 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.81363616 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.813848749 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.813709073 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.809568472 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.808879785 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.813570689 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.813300693 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.812691221 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.816953351 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.813133237 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.814873317 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.814666135 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.813627345 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.817337955 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.823641574 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.821458274 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.811177794 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.813181837 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.814552597 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.816611883 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.814831138 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.814152469 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.813416329 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.815734638 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.814107387 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.814244277 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.814071743 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.817842626 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.830143719 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.814887278 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.814357116 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.813928703 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.818056804 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.814665299 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.812130031 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.813901883 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.81628389 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.816693391 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.823790591 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.815123826 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.821335416 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.814773947 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.816944782 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.820111804 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.818257738 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.8234273 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.819504695 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.815670647 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.816627555 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.819683808 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.83186661 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.815790624 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.825571756 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.846396206 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.816904177 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.817567113 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.816835759 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.814267067 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.816283465 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.818180881 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.815727867 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.815545773 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.817080967 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.816509711 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.816545493 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.821764405 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.818201931 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.816656825 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.816365956 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.816428046 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.817928792 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.812966161 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.817321932 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.817180695 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.816750473 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.817684761 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.818101631 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.817071812 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.831340293 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.826803655 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.816321858 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.818871165 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.814952063 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.820545047 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.822198778 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.828049804 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.825188733 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.817599879 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.818711825 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.818733588 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.817057723 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.815168401 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.817559305 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.817858109 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.817554172 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.815450186 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.831572726 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.826354876 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.822792136 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.819731187 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.820052819 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.819189455 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.818609064 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.818581447 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.819005656 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.81971076 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.819727884 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.823279117 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.818822323 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.819018313 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.82075975 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.826840953 seconds)
  done (took 1077.536224189 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.815851094 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.815684299 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.815025738 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.81625799 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.816633308 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.815649556 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.81562256 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.816156429 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.816258865 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.816374552 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.816484297 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.816327735 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.81659701 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.817340455 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.816995278 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.816949403 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.816210723 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.81634869 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.817492633 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.816723628 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.816008225 seconds)
  done (took 39.890211811 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.818759514 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.816844948 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.817645675 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.820313727 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.817863536 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.819068869 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.81723811 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.820458666 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.819646711 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.818125212 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.821301446 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.821109447 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.817573042 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.816959202 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.817286296 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.820817992 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.821387854 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.818004415 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.820155263 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.818334494 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.820746854 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.820202258 seconds)
  done (took 41.769763111 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.822096572 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.822351155 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.820181207 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.818616488 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.820558454 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.818342385 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.821593535 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.821732685 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.821875348 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.823069731 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.821611098 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.823163403 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.828278073 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.826792291 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.823657618 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.821104369 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.965855345 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.821083488 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.822886382 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.82308038 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.81964039 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.825409595 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.81897574 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.81928921 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.820995883 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.822732054 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.822786879 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.82184463 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.823392761 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.824060526 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.827911598 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.823129233 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.822337 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.824260509 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.821801454 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.823633118 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.82663001 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.823602565 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.820315713 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.823596984 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.833250972 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.844582366 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.824388065 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.829103148 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.822768279 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.823423894 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.826779946 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.831613595 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.820281354 seconds)
  done (took 91.251575385 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.823043067 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.82344144 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.821417178 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.822936294 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.824675434 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.824076379 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.823834541 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.823034919 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.821646815 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.820704401 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.824353495 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.821573332 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.821040133 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.824854125 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.823908629 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.82135399 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.82171357 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.822411873 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.820562613 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.821093635 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.820852265 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.82480827 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.825041021 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.822347268 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.824212109 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.822639731 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.82191242 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.825471992 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.822420486 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.821739206 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.824969667 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.824336248 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.825016375 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.82183519 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.823099615 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.825099188 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.825104828 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.821312189 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.8246134 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.822529563 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.824632112 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.825243061 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.827049988 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.826796538 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.822300391 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.82323587 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.823158268 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.822190361 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.823744033 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.825774842 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.825303615 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.824374639 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.826855212 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.823278941 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.82664017 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.82650171 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.823021404 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.823608778 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.82714432 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.824580477 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.823394393 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.826018468 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.824787361 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.826772403 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.827210059 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.823109724 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.825088839 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.826605963 seconds)
  done (took 125.77369396 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.827440114 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.826603216 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.827898591 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.826795245 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.828696358 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.827136069 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.828137837 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.82816267 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.828250784 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.827681033 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.828752851 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.829136645 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.828178476 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.827666341 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.827888825 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.828445559 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.828842214 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.828746555 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.828355568 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.827845232 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.828279836 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.829812703 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.830349203 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.829325282 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.829152821 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.828784124 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.828472911 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.829312065 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.828764723 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.830028024 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.829878157 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.830396818 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.830050513 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.8297493 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.830355868 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.829669628 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.830034676 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.829699486 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.829760114 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.830347192 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.830628216 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.829622804 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.82958846 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.83024265 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.829939854 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.830497448 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.829676467 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.83076387 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.829012732 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.829468957 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.83007797 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.831343392 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.830138727 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.830656001 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.831357467 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.829466135 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.830630074 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.831103352 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.831339371 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.831637198 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.830109042 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.830791 seconds)
  done (took 115.177666562 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.829818333 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.829532352 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.828220509 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.827122247 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.831099327 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.828337188 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.831048664 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.830761337 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.830407806 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.831325707 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.831216991 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.828142301 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.827848423 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.830694431 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.828869857 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829225898 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.828029589 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.828478152 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.831404655 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.828989954 seconds)
  done (took 38.349645068 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.828105542 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.831435705 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.828915772 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.828968701 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.833194292 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.829682496 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.831642005 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.832580135 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.829802301 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.831589112 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.831675651 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.831199106 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.82865529 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.82981353 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.831781332 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.829720743 seconds)
  done (took 31.048321075 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.828928475 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.832858122 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.833213917 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.832893792 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.830468606 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.830104621 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.833828018 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.830033538 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.830108867 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.832966021 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.83297453 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.832389128 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.832741523 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.833810263 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.829009013 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.831254309 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.828964913 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.828690618 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.832167247 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.833350281 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.827994641 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.829163071 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.83159606 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.83160828 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.828859721 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.829125397 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.827868361 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.829199555 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.829823665 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.832214715 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.828477936 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.829569081 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.829100713 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.828403209 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.833256389 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.829648523 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.83256115 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.831690504 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.832378117 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.831970943 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.833761485 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.828756668 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.832454457 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.832598985 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.828894087 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.832882536 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.829818193 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.830662713 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.830876375 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.830094587 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.8327402 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.833922506 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.832264324 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.833354288 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.832509502 seconds)
  done (took 102.472548167 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.833216731 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.829675485 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.827193048 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.829839277 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.828683624 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.827048714 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.830789645 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.824650628 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.825985581 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.828790523 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.828293025 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.82931594 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.822907473 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.825853592 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.824709901 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.82584104 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.823428613 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.824109109 seconds)
  done (took 34.652146484 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.822134058 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.823097001 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.826074164 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.823698175 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.821596908 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.824323141 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.821707794 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.824556842 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.825558496 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.822723831 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.822829576 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.825130225 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.825209372 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.824963627 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.822323797 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.822784386 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.825499327 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.8250788 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.822267136 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.821989086 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.826436756 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.826129238 seconds)
  done (took 41.881235277 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.824829352 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.82376822 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.841891351 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.847895642 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.847009346 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.859740143 seconds)
  done (took 12.798155402 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823768563 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825159141 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.822987837 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826317618 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82606029 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823240578 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823519185 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823921852 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826473439 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824362864 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824224848 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826439543 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826931326 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824472352 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826457835 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826489533 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824555779 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824151961 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823871008 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826594294 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824024343 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82670641 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824667458 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825465166 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823760965 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823547364 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827068099 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82384056 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82620254 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827791697 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826907478 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823688997 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826800808 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825208393 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827685567 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827917666 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826412844 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82732392 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8279626 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826847951 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.826085242 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827368109 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828082293 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824280725 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827378403 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825256225 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824693768 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826141276 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825967687 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828123547 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829164757 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826244657 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828393614 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828463952 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828801543 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829386699 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826561259 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826515293 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829073352 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826055619 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826660857 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828512801 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827139714 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825803596 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828906293 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825226147 seconds)
  done (took 122.280261376 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825823816 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.824753939 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823062673 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824275658 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823433882 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8243375 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820498343 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819445212 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819972445 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820606014 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822282267 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819639979 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818793261 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819064017 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819547363 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819476238 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819398518 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820030928 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819570445 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82296231 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819608448 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819609052 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819637364 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817897441 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819468953 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821524347 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818451408 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818270488 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818126959 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819175564 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819441889 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819149216 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818964314 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.819917288 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819726291 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819877241 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819015557 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819278142 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820503356 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822321111 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82006882 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821734117 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819184608 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81859068 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820167229 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818153951 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818224083 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819408344 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818663347 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81880972 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819687897 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819685804 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818940465 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820068377 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818610074 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819804642 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819675755 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819893468 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819622748 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822467061 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819798993 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819388003 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822407465 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819356683 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81951305 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819999679 seconds)
  done (took 121.889486982 seconds)
done (took 2508.515630144 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.877558028 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.882004154 seconds)
  done (took 15.510395154 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.984305594 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.934953214 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.818455236 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.860406125 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.818668933 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.828352753 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.817700453 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.818875221 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.818560989 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.817616928 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.817827657 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.006532086 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.831986554 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.816950974 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.815890338 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.910561031 seconds)
  done (took 51.472850723 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.819821873 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.820650876 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.830438504 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.82056483 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.819403725 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.83091259 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.850275861 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.819182295 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.850763981 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.830644816 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.88712421 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.830159196 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.81569755 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.864213337 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.830955635 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.831972116 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.912850875 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.893258671 seconds)
  done (took 34.908093331 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.89546394 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.818288229 seconds)
  done (took 10.465258278 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.840720157 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.828574519 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.815577131 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.825063557 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.831146962 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.839046464 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.81705176 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.81563005 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.837631668 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.843716128 seconds)
  done (took 70.039494933 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.816560201 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.81311893 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.81409021 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.810092442 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.803973049 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.809336143 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.811167048 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.805310537 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.505420836 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.847041493 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.818685837 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.815622853 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.810107695 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.811825181 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.809223417 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.833923865 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.9496578 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.807705921 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.807086713 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.81551018 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.809994902 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.883629819 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.821595323 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.811715194 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.840073668 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.500228707 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.819329891 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.815349409 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.919781727 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.807243903 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.808794595 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.813053258 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.812878275 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.191988047 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.100483709 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.8116612 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.82065366 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.817334396 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.807684936 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.942092228 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.808242206 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.814391543 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.732845693 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.095275292 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.922296127 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.853696573 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.183447194 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.814505901 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.811744947 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.840275294 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.811751191 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.809841947 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.824273593 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.319552808 seconds)
  done (took 129.459590242 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.80370359 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.066596433 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.959763857 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.805857368 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.095622967 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.012382987 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.805867131 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.853914689 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.806684362 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.035284959 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.968220239 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.915262571 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.807610254 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.801166336 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.80456895 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.802175481 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.964896794 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.882090041 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.804369345 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.800703571 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.83384292 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.047957594 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.931012292 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.80521726 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.823790161 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.015339128 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.928658359 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.911928092 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.091671829 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.801801723 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.867154645 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.803598772 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.801300439 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.801006143 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.959162214 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.902619964 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.891623651 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.803044436 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.80017351 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.800850609 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.476816149 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.999373044 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.900054227 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.947927606 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.050828043 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.008492169 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.591870826 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.80262352 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.539370571 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.963446006 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.038987615 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.034502602 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.929655652 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.805018803 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.054762746 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.803395579 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.800425713 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.038518857 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.034810889 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.906819128 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.806237534 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.802881983 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.802838804 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.050442834 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.805390685 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.899845454 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.807496994 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.803129682 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.900137519 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.910422982 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.037210671 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.019717511 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.837568592 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.10578976 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.280554161 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.053771458 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.874233369 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.038971762 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.805168324 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.802683055 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.889010037 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.651406201 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.96274024 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.055426071 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.06033897 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.843110036 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.533265734 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.802797483 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.034197353 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.028634521 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.104852254 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.048687423 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.956965426 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.992104456 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.804188802 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.802425646 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.044195226 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.943337892 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.807542304 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.163853861 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.040995048 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.372365746 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.834755161 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.115081871 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.939640301 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.807286562 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.448527781 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.806977317 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.031399948 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.848481071 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.813313362 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.806061521 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.027283329 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.883874231 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.804904336 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.454849513 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.869889824 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.808118981 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.043062369 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.810375324 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.071546107 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.808794656 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.044625733 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.240740089 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.839246935 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.977889865 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.048460688 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.807408827 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.069412734 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.052196315 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.924820242 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.026940877 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.432034359 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.805796612 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.097454447 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.807510592 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.80459619 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.978831155 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.807540626 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.954995152 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.808844764 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.141480457 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.833722177 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.961395372 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.809536068 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.066748059 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.843954535 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.863154198 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.808529919 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.935601804 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.812797466 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.842887883 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.964982474 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.811080038 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.807068522 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.356527678 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.805270455 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.964228416 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.044345488 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.832459486 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.882007343 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.479871505 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.807649451 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.89569813 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.835483743 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.157332456 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.809535583 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.965395804 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.813062862 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.333413001 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.806515302 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.055271225 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.991000956 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.810517103 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.80600657 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.715076956 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.810015494 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.805005918 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.968931893 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.278005213 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.806480707 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.015030319 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.808936449 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.939441507 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.817905248 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.887337196 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.16137007 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.806453176 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.80804328 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.80701194 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.806107029 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.805668787 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.017751625 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.840077664 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.330154377 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.944235794 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.077679731 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.129940648 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.056334337 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.852804539 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.808003739 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.057610125 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.809974168 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.872266496 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.807624595 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.830889002 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.0387025 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.808099534 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.020529903 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.088210787 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.801256908 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.857765721 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.808077212 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.807619749 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.765865029 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.96061006 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.899585415 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.808699884 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.80771739 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.924227822 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.930978753 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.023682523 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.805781441 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.93404443 seconds)
  done (took 889.37445724 seconds)
done (took 1202.98070925 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.807052826 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.808763512 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.797248622 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.807530993 seconds)
  done (took 28.963211862 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.814951472 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.812566924 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.816320731 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.812062008 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.814503553 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.811442142 seconds)
  done (took 12.623500625 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.904460498 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.805886183 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.807967361 seconds)
  done (took 21.259944164 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.885439155 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.224469002 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.924280975 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.251780568 seconds)
  done (took 10.028718621 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.817495152 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.814938788 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.814326844 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.816027082 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.816171745 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.817570827 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.816093539 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.816426483 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.81701879 seconds)
  done (took 18.089548655 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.234640802 seconds)
done (took 96.940671208 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.109133258 seconds)
    (2/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.048613478 seconds)
    (3/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.088538499 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.590830103 seconds)
    (5/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.746761307 seconds)
    (6/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.098758861 seconds)
    (7/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.796602063 seconds)
    (8/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.81519118 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.854045873 seconds)
    (10/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.865387725 seconds)
    (11/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.693663376 seconds)
    (12/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.882952213 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.966238063 seconds)
    (14/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.360275004 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.907330081 seconds)
    (16/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.794685459 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.854097902 seconds)
    (18/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.93908705 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.836759576 seconds)
    (20/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.89431566 seconds)
    (21/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.726767803 seconds)
    (22/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.895960262 seconds)
    (23/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.897382704 seconds)
    (24/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.830946157 seconds)
    (25/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.834592657 seconds)
    (26/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.834959317 seconds)
    (27/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.808708145 seconds)
    (28/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.311088382 seconds)
    (29/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.796706666 seconds)
    (30/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.13232418 seconds)
    (31/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.015734026 seconds)
    (32/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.013243599 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.74155184 seconds)
    (34/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.519252465 seconds)
    (35/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.887221267 seconds)
    (36/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.911742307 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.717360351 seconds)
    (38/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.816160479 seconds)
    (39/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.010106781 seconds)
    (40/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.274296315 seconds)
    (41/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.328351329 seconds)
    (42/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.815342234 seconds)
    (43/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.436310201 seconds)
    (44/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.881753185 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.943518468 seconds)
    (46/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.17601946 seconds)
    (47/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.952984517 seconds)
    (48/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.976358747 seconds)
    (49/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.815674886 seconds)
    (50/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.8940527 seconds)
    (51/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.896942727 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.724423108 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.010401183 seconds)
    (54/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.83978124 seconds)
    (55/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.005283741 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.930418714 seconds)
    (57/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.014038055 seconds)
    (58/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.943430975 seconds)
    (59/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.907402964 seconds)
    (60/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.938396455 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.914677938 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.062036642 seconds)
    (63/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.875637745 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.724980723 seconds)
    (65/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.007262553 seconds)
    (66/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.113898402 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.845439829 seconds)
    (68/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.811245487 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.147982174 seconds)
    (70/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.909887826 seconds)
    (71/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.798865394 seconds)
    (72/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.961449926 seconds)
    (73/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.869239908 seconds)
    (74/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.837903342 seconds)
    (75/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.066402643 seconds)
    (76/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.16855216 seconds)
    (77/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.799246511 seconds)
    (78/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 3.867135654 seconds)
    (79/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.158534254 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.109518806 seconds)
    (81/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.832282203 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.106757591 seconds)
    (83/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.748399406 seconds)
    (84/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.804472012 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.032504431 seconds)
    (86/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.919212643 seconds)
    (87/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.294555335 seconds)
    (88/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.135817714 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 5.589046202 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.816428374 seconds)
    (91/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.801069323 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.949179715 seconds)
    (93/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.06670309 seconds)
    (94/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.847147364 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.904007538 seconds)
    (96/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.12193105 seconds)
    (97/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.81776119 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.200651826 seconds)
    (99/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.971784886 seconds)
    (100/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.825231604 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.812439517 seconds)
    (102/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.121420378 seconds)
    (103/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.844973971 seconds)
    (104/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.876782775 seconds)
    (105/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.98367913 seconds)
    (106/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.825910603 seconds)
    (107/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.060348259 seconds)
    (108/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.836924998 seconds)
    (109/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.840336211 seconds)
    (110/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.418442954 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.022666433 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.141114383 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.816376888 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.927525971 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.890982396 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.813895108 seconds)
    (117/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.801526662 seconds)
    (118/309) benchmarking ("map", abs, Int8, true)...
    done (took 3.645323349 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.06246839 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.796416752 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.022904332 seconds)
    (122/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.827637053 seconds)
    (123/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.878657874 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.874141145 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 2.355104375 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.838213095 seconds)
    (127/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.378814459 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.087126537 seconds)
    (129/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.801045399 seconds)
    (130/309) benchmarking ("map", abs, Float64, true)...
    done (took 3.457502728 seconds)
    (131/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.292521491 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.033172864 seconds)
    (133/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.119243965 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.067871598 seconds)
    (135/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.678156266 seconds)
    (136/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.918399872 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.504955147 seconds)
    (138/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.949739956 seconds)
    (139/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.360374274 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.030095289 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.961009015 seconds)
    (142/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.820205269 seconds)
    (143/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.986725276 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.909594604 seconds)
    (145/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.090112273 seconds)
    (146/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.869252327 seconds)
    (147/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.503854192 seconds)
    (148/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.976147389 seconds)
    (149/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.901593353 seconds)
    (150/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.702072974 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.1487802 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.845720467 seconds)
    (153/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.800430434 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.956638932 seconds)
    (155/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.8160943 seconds)
    (156/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.828957442 seconds)
    (157/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.216591659 seconds)
    (158/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.985203721 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.842034941 seconds)
    (160/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.98315882 seconds)
    (161/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.946879131 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.055006103 seconds)
    (163/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.917881854 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.202194419 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.43707537 seconds)
    (166/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.110197428 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.452864533 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.868428825 seconds)
    (169/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.920909769 seconds)
    (170/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.816834704 seconds)
    (171/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.079700086 seconds)
    (172/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.327609233 seconds)
    (173/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.844693557 seconds)
    (174/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.922251204 seconds)
    (175/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.18359751 seconds)
    (176/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.917470489 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.502658006 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.221038714 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.509506781 seconds)
    (180/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.032615218 seconds)
    (181/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.403234757 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.845927294 seconds)
    (183/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.882699682 seconds)
    (184/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.148404828 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.120477717 seconds)
    (186/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.004130922 seconds)
    (187/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.907186241 seconds)
    (188/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.004187251 seconds)
    (189/309) benchmarking ("sort", Int8, false)...
    done (took 4.920351726 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.854093203 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.923697872 seconds)
    (192/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.01151533 seconds)
    (193/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.804428357 seconds)
    (194/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.802530876 seconds)
    (195/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.9634672 seconds)
    (196/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.961743763 seconds)
    (197/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.192377048 seconds)
    (198/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.073384741 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.464742743 seconds)
    (200/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.062909289 seconds)
    (201/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.366725937 seconds)
    (202/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.949324228 seconds)
    (203/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.657003896 seconds)
    (204/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.919246511 seconds)
    (205/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.137173042 seconds)
    (206/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.055575499 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.881192104 seconds)
    (208/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.281025825 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.823725933 seconds)
    (210/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 8.092438983 seconds)
    (211/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.049050162 seconds)
    (212/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.203166655 seconds)
    (213/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.138151302 seconds)
    (214/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.320066256 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.605265013 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.035703531 seconds)
    (217/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.192524027 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.92142571 seconds)
    (219/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.928374022 seconds)
    (220/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.905932863 seconds)
    (221/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.897572891 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.146151072 seconds)
    (223/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.311010665 seconds)
    (224/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.4593774 seconds)
    (225/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.315625814 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.843910511 seconds)
    (227/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.012304915 seconds)
    (228/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.405090095 seconds)
    (229/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.00930504 seconds)
    (230/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.153717356 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.922457234 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.86240348 seconds)
    (233/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.121318373 seconds)
    (234/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.813849466 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 3.818083022 seconds)
    (236/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.747584415 seconds)
    (237/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.820393523 seconds)
    (238/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.839828511 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.894765931 seconds)
    (240/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.500366535 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.825940042 seconds)
    (242/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.853234983 seconds)
    (243/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.031210995 seconds)
    (244/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.330469438 seconds)
    (245/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.823157973 seconds)
    (246/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.808104824 seconds)
    (247/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.052954506 seconds)
    (248/309) benchmarking ("sort", BigInt, false)...
    done (took 6.825970377 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.824266648 seconds)
    (250/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 3.534675799 seconds)
    (251/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.385740063 seconds)
    (252/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.924044325 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.822475146 seconds)
    (254/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.952932156 seconds)
    (255/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.840115192 seconds)
    (256/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.152671816 seconds)
    (257/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.002406082 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.827207531 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 3.626203756 seconds)
    (260/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.82753055 seconds)
    (261/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.194897148 seconds)
    (262/309) benchmarking ("sort", Float64, false)...
    done (took 5.567169817 seconds)
    (263/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.904482491 seconds)
    (264/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.907818561 seconds)
    (265/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.854177593 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.943753579 seconds)
    (267/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.821001355 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.274033289 seconds)
    (269/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.28898337 seconds)
    (270/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.742328974 seconds)
    (271/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.433860565 seconds)
    (272/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.235745894 seconds)
    (273/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.901832246 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.159253419 seconds)
    (275/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.595099811 seconds)
    (276/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.314239485 seconds)
    (277/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.226433691 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.824322405 seconds)
    (279/309) benchmarking ("sort", Float32, false)...
    done (took 5.538052322 seconds)
    (280/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.261309357 seconds)
    (281/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.810892795 seconds)
    (282/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 4.072043902 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.905724555 seconds)
    (284/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.823928688 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.940440131 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.941565816 seconds)
    (287/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.841916424 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.80351043 seconds)
    (289/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.893111159 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.213279844 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.576071194 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.83877695 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.81339709 seconds)
    (294/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.952149639 seconds)
    (295/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.174276787 seconds)
    (296/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.788437392 seconds)
    (297/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.862495669 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.861985447 seconds)
    (299/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.1091025 seconds)
    (300/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.950208468 seconds)
    (301/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.957845047 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.218447966 seconds)
    (303/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.0218272 seconds)
    (304/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.167026593 seconds)
    (305/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.915287343 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.844404813 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.199567935 seconds)
    (308/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.94612103 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.627329334 seconds)
  done (took 1002.627484994 seconds)
done (took 1004.445396051 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.858848167 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.85138058 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.836206301 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.856040043 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.946884497 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.868224149 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.845893389 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.837757504 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.882041197 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.884843694 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.833197979 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.865861013 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.838321794 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.838024618 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.834141019 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.850681218 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.138511984 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.85891464 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.854687182 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.846114823 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.856040605 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.835795961 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.885045464 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.868022517 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.839704106 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.837642474 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.840351153 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.856721541 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.948408234 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.842183482 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.839075992 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.849377225 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.13994299 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.857201833 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.83144385 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.857326081 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.849014235 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.846805704 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.840687652 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.870478587 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.269932672 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.842391741 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.838936936 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.838352731 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.837494113 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.840522285 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.838401435 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.84573863 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.849851685 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.853022787 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.268648972 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.857425224 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.840766009 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.839159046 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.847131963 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.839888695 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.845942452 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.853776976 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.858185951 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.853479002 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.129291464 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.864255947 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.840160094 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.855158862 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.845822059 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.305205045 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.838194494 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.842056211 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.270958709 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.848725948 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.306145025 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.85173322 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.841033366 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.85419205 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.871820311 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.141865 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.855580271 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.838428171 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.846903444 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.83954626 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.851081782 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.854206065 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.843448403 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.841137424 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.854015136 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.870605679 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.850820667 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.842015598 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.851786805 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.860491791 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.846646477 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.851358326 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.844212423 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.834155564 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.850409274 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.847578818 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.842599671 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.843923515 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.844464413 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.85142731 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.268915992 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.862348478 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.837158784 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.837036963 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.83989354 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.855662424 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.269425896 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.845343208 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.863548081 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.887676627 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.844775394 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.133734982 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.865941557 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.856571921 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.849214246 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.845136354 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.836165846 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.132006456 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.292837546 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.862404701 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.843789958 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.840053949 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.857775937 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.844855603 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.838224973 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.144878942 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.863617111 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.85600208 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.962149708 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.852076993 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.873060889 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.841385851 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.844624272 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.874101905 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.859146512 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.874202223 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.845746094 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.858266788 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.858836056 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.838653337 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.854490426 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.85361805 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.843520689 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.849071266 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.836607621 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.876138131 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.856303675 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.856665967 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.863359255 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.964371121 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.840271403 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.134912517 seconds)
done (took 289.19858165 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.908888696 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.839738106 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.938014776 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.839978653 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.923613495 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.92580136 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.837546959 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.837433147 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.836910781 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.2119951 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.837901632 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.838538608 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.834430477 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.837286323 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.922590107 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.841056812 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.838334469 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.176537128 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.842138664 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.91280703 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.834209417 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.837545934 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.841138248 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.212751855 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.840906491 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.8324739 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.913534637 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.840400783 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.178058094 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.833130275 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.83505142 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.178651851 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.932098794 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.859347361 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.850779366 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.848895187 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.925902607 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.844793054 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.921359146 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.921332134 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.940303363 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.882412473 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.836339804 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.836019255 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.843890004 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.843069166 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.839666158 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.869067451 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.840593591 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.840347624 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.175895108 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.851831375 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.848327973 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.840644336 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.840267067 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.864499072 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.840308304 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.843746376 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.933286499 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.842904386 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.90455661 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.214589905 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.216727414 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.842439799 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.836576728 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.840237905 seconds)
  done (took 182.341300123 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.909960246 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.916403124 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.910536683 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.846400355 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.893132036 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.911075336 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.845789822 seconds)
  done (took 15.003612596 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.851016249 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.844030412 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.893297154 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.893946061 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.843437122 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.994679424 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.843247681 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.854809932 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.841353798 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.895689352 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.844705128 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.844389077 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.850669899 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.840523893 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.892163785 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.854764838 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.959546985 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.843942703 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.845076989 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.994499774 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.842612727 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.852308406 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.903419808 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.855484137 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.844946074 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.850955131 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.435639454 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.845283835 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.841508718 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.845376953 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.840877054 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.886429486 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.844672933 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.836407686 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.842650194 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.960925382 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.846099678 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.843085795 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.844926941 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.837529227 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.845922457 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.846040035 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.846373242 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.84246812 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.845689888 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.86865583 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.844412493 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.846023544 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.845507316 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.846251913 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.901174754 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.845892525 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.843739492 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.842878145 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.901050759 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.853125457 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.847857804 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.843699341 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.846449181 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.842921739 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.996844051 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.894549019 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.845503259 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.892937014 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.846542804 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.847716754 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.847673347 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.847051797 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.941160295 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.846584868 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.89512604 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.844341749 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.005706269 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.870465999 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.84779003 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.851194335 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.849231173 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.849713291 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.847220828 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.853479603 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.844903147 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.848863065 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.852842605 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.845292524 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.845181188 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.95963713 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.955232338 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.845943452 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.859972205 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.855130533 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.845087355 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.905446733 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.848656524 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.845925025 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.90889971 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.965067363 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.90321139 seconds)
  done (took 203.503209407 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.852476533 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.856638307 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.849221715 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.865132712 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.84844839 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.848147473 seconds)
  done (took 12.89579566 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.849083806 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.848744054 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.849937113 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.849214585 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.848925778 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.849748735 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.848068048 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.849225682 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.852761024 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.848375576 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.849301646 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.850664089 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.850888106 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.849442785 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.850114052 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.849056874 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.849689243 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.846236469 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.850254218 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.849957785 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.997561227 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.848960827 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.850250517 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.849659509 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.852974646 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.848640697 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.857605676 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.849152621 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.849492824 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.857641393 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.853158758 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.851123502 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.850858625 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.854988247 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.854754845 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.850712402 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.853638564 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.850882278 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.847491918 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.852339453 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.851516243 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.850752618 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.850361989 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.851607286 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.852156646 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.855122734 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.855872978 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.859070897 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.852525666 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.851282155 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.853299512 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.850834502 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.85157133 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.852326126 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.851323681 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.85536826 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.85453282 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.85225606 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.851433507 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.852543737 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.851568238 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.854558455 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.852482974 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.855684821 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.857916922 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.851720524 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.851716616 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.854061209 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.851989498 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.851639407 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.85298848 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.849669245 seconds)
  done (took 136.241703645 seconds)
done (took 551.76510213 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.968502847 seconds)
  done (took 8.747597443 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.985546769 seconds)
  done (took 8.863556539 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.267839443 seconds)
  done (took 10.04795937 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.877596503 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.878869982 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.846741353 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.854606664 seconds)
  done (took 29.245440349 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.912036817 seconds)
  done (took 8.691769197 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.856921404 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.845833121 seconds)
  done (took 15.517507982 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.027798764 seconds)
  done (took 8.808243254 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.932721021 seconds)
  done (took 8.716014501 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.869177019 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.88877522 seconds)
  done (took 15.551506973 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.832100959 seconds)
  done (took 8.611882441 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.524579646 seconds)
  done (took 11.31267155 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.851023008 seconds)
  done (took 8.644936176 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.892015328 seconds)
  done (took 8.671578711 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.917147778 seconds)
  done (took 9.697556694 seconds)
done (took 162.906224247 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.848648418 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.847520268 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.849476585 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.847654522 seconds)
  done (took 29.17370938 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.886690517 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.887026442 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.891911281 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.8986067 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.890452916 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.885861485 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.880084278 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.879653911 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.897987373 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.889052555 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.889143636 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.888724786 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.887605959 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.879602559 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.891167942 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.88969276 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.898707485 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.889465858 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.880716239 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.889944597 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.854962127 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.90006633 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.890844176 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.855641077 seconds)
  done (took 47.055110823 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.053558174 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.924048143 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.008192281 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.905373317 seconds)
  done (took 9.673946956 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.9052119 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.906823572 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.919306027 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.95763689 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.982467628 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.917885713 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.882381598 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.876724144 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.86334298 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.908310822 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.983782898 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.901467371 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.991767581 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.854667884 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.036147228 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.855540663 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.854915824 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.907132182 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.95791452 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.974838406 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.856378973 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.907126378 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.909938338 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.901024585 seconds)
  done (took 47.795468464 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.854373835 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.863086865 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.860553715 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.855191226 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.854723798 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.854459605 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.861880368 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.856768711 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.876918597 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.856003688 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.853898844 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.855408886 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.854723065 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.855834031 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.854581338 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.867085072 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.869500572 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.855591643 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.859307366 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.861352867 seconds)
  done (took 38.96397587 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.850475017 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.705523357 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.202651924 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.107547767 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.850386671 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.851576486 seconds)
  done (took 31.351623764 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.868347234 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.860954193 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.856553376 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.911118092 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.991615794 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.862367305 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.857545454 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.866216836 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.899522137 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.92044319 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.873187763 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.882069994 seconds)
  done (took 24.433325871 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.855150241 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.850951531 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.852142017 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.867835439 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.867644791 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.862528279 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.863820824 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.850260441 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.868840304 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.875468657 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.863933039 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.86879846 seconds)
  done (took 44.134170037 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940204546 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.74212377 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.919535059 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.573801166 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.324655089 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.062888462 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.379429622 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.192609395 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.855384604 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.126184514 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.000264484 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958811325 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.106674508 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.852052684 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.877451031 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.337317969 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148776082 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.086356921 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881882619 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.63030562 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901284014 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.28402287 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.702153001 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.91166098 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.065681757 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.988393994 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.113910819 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.809790663 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989371405 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890858261 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863653111 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.853529775 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.132595042 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.250597575 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953400181 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864618761 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.507355428 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.573615476 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.845975807 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.638496519 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.691641045 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.978599117 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863819363 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854824014 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.788858485 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.281557265 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23009878 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.859869181 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.564780235 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.854164063 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.865301609 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942777861 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.858315796 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.670264667 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841751972 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.136044832 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.852158127 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861750719 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.430224917 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.984395183 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.321281691 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.82452227 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.04649485 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.637577415 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.259165926 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.0040669 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.860218296 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.859572042 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789512659 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.640253818 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907332964 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.417469387 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.877406593 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.506779038 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160344214 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.034225058 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.798581205 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148866431 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.566527447 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.825879529 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083870482 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.813211598 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792355966 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.728735274 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.792776843 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.135606699 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894723506 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.506445598 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899795639 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.19806294 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.867477851 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873999277 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864234298 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.080698786 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.738781597 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.856197005 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.716564527 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.037062505 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878434483 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.196464637 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792024683 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.860860024 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11169248 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.069221684 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.007503666 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.372933482 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012473194 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889524436 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.871990498 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.695541638 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.902121114 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.134795286 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916156291 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.982300797 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915240426 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.815900449 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172666436 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922610804 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.959848713 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.955913359 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.984305506 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.191029615 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.153193051 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922566558 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.862489282 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.858040434 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.647950873 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.411521526 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.126406668 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.858842085 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.274584399 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.902512575 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.85985418 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794325002 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.478740833 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.961260815 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.838649804 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.082470404 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.719277858 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166998295 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795592719 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.005490039 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.974339269 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.083428706 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.519020073 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.940451517 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.116653926 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.259690392 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.043394315 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90769756 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878547515 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949598561 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883606602 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.202396678 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.146717004 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.864523854 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.865002903 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.655592758 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.857161241 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862218259 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.865727601 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.659567059 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.144616846 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.884715277 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.865578487 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.750843067 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.876667093 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928274456 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.866865613 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.872132464 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.403515008 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.607090579 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.871613889 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.482208727 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08675479 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871594834 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.65343954 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.974495958 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.943194646 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.13925994 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923915905 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.796977307 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.57303744 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.555778203 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862895286 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.798035867 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.86395888 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870929719 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.873897089 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.242416894 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.144825995 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907535704 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.650490987 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.905239013 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.873844792 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.868387508 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864075182 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.400857383 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.989202541 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.335651812 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.904671294 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001920915 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.877114682 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.798728103 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.867836398 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.870028864 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.863352336 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.820359265 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916066003 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.706352373 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242500891 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.120541433 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.510081397 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880655891 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.679662516 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.920455538 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.942536918 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.744040556 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.717402486 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.961623249 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877328771 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.875020449 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.656389789 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.559461431 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.432876846 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.175570864 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179718452 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.308513283 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.264082553 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.164112768 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.207408253 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100076054 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.393976276 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.92591978 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.211345233 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.810006548 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949364607 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.522381521 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.222116396 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88063709 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093357963 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.257096143 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.795270261 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.889477039 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.076585601 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90024291 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.706611016 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.823047307 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.074103659 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00755775 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.669721305 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067987986 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205606063 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.608895285 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.986882212 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.864876736 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.573159804 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954715068 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.577224258 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.229391513 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.307320073 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.906798171 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338930489 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.870510731 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.313921822 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225593845 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.103741496 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.981801972 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802794908 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.87783474 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.878834577 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.867719381 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.859896128 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.73457966 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.119862741 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879207195 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103492548 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.057177401 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.163188091 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.772672361 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.872770788 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.869374551 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180143572 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.587195036 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032459845 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.243149808 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.395249509 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.871759921 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.805012797 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803456424 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.562654966 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.876842641 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.844364772 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098489062 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.057894971 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.823197795 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.291257245 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108776538 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.123527815 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.883343452 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.146435118 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.144202725 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.604741224 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897269483 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.969475879 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.593919841 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.977408014 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.137680597 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.10517456 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.666761742 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.098557984 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.924570141 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.648188395 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.86934663 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.083130036 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.138996474 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.871673422 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101061364 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.595692063 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.957245 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187864694 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926558259 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.873630588 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.021253458 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.060612863 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879520739 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9567878 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880580648 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.881933118 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.88227845 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916995748 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.884563758 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.993129562 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.884875242 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959438428 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.992166138 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.409413556 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.876968956 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.151352543 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.226125326 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.200557318 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.931191092 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.871733756 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873862488 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805080266 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009186192 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.318592419 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.145785976 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.001201895 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.171308883 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89554888 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.592146677 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.166712129 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10954647 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.149812295 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.767388748 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87020858 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.903254764 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.13851344 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881646498 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.081591957 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.110349716 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193029364 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342239482 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.03155205 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.236348399 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.143569288 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.247962603 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.873242164 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.4636511 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.953071508 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.580729053 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.91239731 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.831638372 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134702253 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880500802 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.256440125 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.891688927 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.067551961 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.386969281 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.640757965 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.156930655 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.855900609 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.931989258 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.147654794 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.257262885 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180286381 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939565187 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880055259 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.572953435 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006625109 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.734733927 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.138116843 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.868838131 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081519219 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.579684284 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.878853756 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149799118 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17869061 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.866959883 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.738411279 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877300391 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.878691463 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.094674234 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.143403273 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.125489552 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879475741 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.878767566 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.687421501 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148563458 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.92851287 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805612616 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.875021615 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970630066 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.118504346 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.905303133 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.387972141 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.58105577 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171030054 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.791145071 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89214385 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.297021553 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.242398297 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.199434344 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.416665049 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.101322133 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.431437558 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.747038468 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170431086 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.875790378 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.298825871 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174908121 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.875047832 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.410267768 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90873957 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.145756417 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.189418601 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.963049838 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.654298022 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.839973166 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.095787379 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.466433075 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.81324277 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.871452488 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.933090626 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.872168271 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.004094915 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883073915 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.740942041 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.720832499 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.686372881 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.364708269 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.876603083 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.858460066 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.623056811 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.423425172 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90516354 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015483846 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879362071 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.585936701 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.166398867 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.12690961 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.412663703 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.879054789 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.876875892 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874481716 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.801525105 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.071097359 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.250641901 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174239578 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.246536593 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.907617164 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.877838347 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.088717959 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.0860217 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.812978443 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.009850448 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285854283 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.908957405 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.643741102 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.554031 seconds)
  done (took 1682.38049208 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.904591682 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.90514674 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.880513695 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.956340886 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.929255451 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.004171954 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.905146464 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.907837599 seconds)
  done (took 57.199844109 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.875612628 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.067957372 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.884350635 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.874919951 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.884592078 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.875250515 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.045866719 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.884147299 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.885207438 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.885907124 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.876969077 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.874500494 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.18314385 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.897961412 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.885073747 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.863305418 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.884166695 seconds)
  done (took 74.470300799 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.877910562 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.071575255 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.916978145 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.902659483 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.813889418 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.892079217 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.825494388 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.933170511 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.883396136 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.096295677 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.216173259 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.889364606 seconds)
  done (took 90.12991683 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.886842923 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.883306037 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.884391057 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.882822465 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.88404921 seconds)
  done (took 11.234040988 seconds)
done (took 2189.800268289 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.125937714 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.100351868 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.112143008 seconds)
  done (took 6.02304113 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.025939083 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.074530418 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.194992799 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.215193813 seconds)
  done (took 10.323536432 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.170218471 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.263716754 seconds)
  done (took 6.245237552 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.27665192 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.88090754 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.270662506 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.877975926 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.877476303 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.880025803 seconds)
  done (took 22.451670499 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.882589856 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.884691756 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.882485097 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.88671915 seconds)
  done (took 9.348234883 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.862481858 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.605262192 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.863788198 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.880555215 seconds)
  done (took 21.023275153 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.63018021 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.312737114 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.627766518 seconds)
  done (took 9.382740311 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.373350986 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.776163957 seconds)
  done (took 8.961689044 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.151605593 seconds)
  done (took 3.96316379 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.910177258 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.153407011 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.404974383 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.401096655 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.484511675 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.71313255 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.190024257 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.118057503 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.309610666 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.307907413 seconds)
  done (took 24.805222782 seconds)
done (took 137.892380542 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.253614087 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.123667089 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.082400471 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.225032762 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.103488218 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.081728507 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.093520002 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.210227006 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.721618981 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.718207497 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.222409942 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.103987762 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.241246665 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.119602174 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.239998765 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.121398583 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.104804282 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.269648761 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.921132351 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.156819065 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.100674039 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.848110763 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.065873456 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.862189925 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.100341096 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.034068491 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.427870767 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.118583906 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.07235106 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.432872497 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.035102463 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.311269635 seconds)
  done (took 173.337638245 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.614088137 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.880813377 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.880567749 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.880452248 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.331916395 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.882033024 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.883896045 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.892928787 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.07142596 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.056381581 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.880956431 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.32278302 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.882044567 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.881384106 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.882765388 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.881787261 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.199877996 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.652372353 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.890304562 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.895731504 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.899550106 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.26709319 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.901783083 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.31346868 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.246414997 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.905884785 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.866147647 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.904959289 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.887461847 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.850764396 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.892433542 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.882202691 seconds)
  done (took 208.379386406 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.883830287 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.898743313 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.882399966 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.883987399 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.88460838 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.881369002 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.885173372 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.882015462 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.533802467 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.534532494 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.885841734 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.884087904 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.889263042 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.883955019 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.888040103 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.883807392 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.887714872 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.887380932 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.885769902 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.88726364 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.890182368 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.688785855 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.886391519 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.709672908 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.889160006 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.891733928 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.886658461 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.891835041 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.894517372 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.894241923 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.893117719 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.885512994 seconds)
  done (took 221.145489761 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.085877214 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.891676072 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.891467995 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.825983711 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.89139641 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.890558265 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.829675315 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.083453563 seconds)
  done (took 19.220145721 seconds)
done (took 623.904597969 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.348010655 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.191549712 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.056050779 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.914589496 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.154888868 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.941684388 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.9117956 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.97874065 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.636891142 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.975691635 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.787041668 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.924719178 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.94897669 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.930143861 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.035460694 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.97335374 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.496435983 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.593804218 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.079068598 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.953698572 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.078526189 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.852080926 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.989984744 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.65417152 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.964116406 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.890928537 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.088424003 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.503486286 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.919905952 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.070825906 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.633990319 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.301841621 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.919758353 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.907802603 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.969286804 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.944535453 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.249380605 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.918303126 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.03113217 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.650722777 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.976506516 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.516220721 seconds)
  done (took 104.683628179 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.881782711 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.881662448 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.880984459 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.882188907 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.882301121 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.881603781 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.881148219 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.880418577 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.881282942 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.88039764 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.880455721 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.882350149 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.88050576 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.882661066 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.882201315 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.881406823 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.882466153 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.884005803 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.881229123 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.880050984 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.883605759 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.881884113 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.897475532 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.883366125 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.882408825 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.883055292 seconds)
  done (took 50.771444849 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.895563089 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.042328117 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.145164166 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.909904141 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.895175046 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.898676171 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.912311526 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.90071993 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.897964145 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.898502566 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.003531745 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.898573954 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.914455304 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.152200756 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.908173344 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.89705029 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.895207164 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.896856275 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.050742084 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.910276789 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.914567936 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.900714771 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.914752243 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.909198965 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.897658868 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.895912051 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.9009479 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.37270022 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.902873139 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.002515557 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.937926595 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.917167962 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.320728472 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.161918577 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.946705211 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.905371135 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.898003007 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.006748748 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.901362143 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.896805607 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.914526386 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.901804035 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.150947549 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.385967849 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.907842906 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.899165711 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.382825669 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.012472888 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.938541187 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.90720533 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.154417088 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.911767843 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.900148952 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.899731536 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.933511198 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.906189317 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.898846853 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.2231255 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.907479317 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.915049569 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.903329146 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.899611764 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.056460249 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.905069637 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.046495685 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.904981672 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.90653312 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.899733445 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.153200748 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.911320556 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.397308893 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.908667526 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.898641511 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.004033994 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.049358447 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.409308844 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.908499333 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.058269648 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.334934509 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.918866178 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.904637248 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.362876287 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.923125417 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.904981266 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.902686808 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.90151845 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.900596426 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.942916641 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.914202959 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.320532627 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.400995753 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.236053542 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.924053587 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.914326428 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.900710564 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.223516995 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.907759588 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.899331788 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.147041501 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.402082782 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.911425611 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.908036333 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.382958293 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.912130345 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.921121868 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.907434998 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.159327541 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.912485293 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.945131987 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.900817928 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.908089063 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.902562311 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.918628304 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.907444612 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.899967169 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.373767997 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.023658984 seconds)
  done (took 235.508843296 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.896359124 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.895265463 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.895351867 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.896006946 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.894274472 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.900503189 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.894142441 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.8947503 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.901339714 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.893412629 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.89423012 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.895076563 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.896717327 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.904461614 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.391373606 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.915833245 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.518543244 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.909075076 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.908955331 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.908828319 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.587317243 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.916007721 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.906609871 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.909206144 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.907343796 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.908763244 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.917778064 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.944104664 seconds)
  done (took 168.930471186 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.91526666 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.095211421 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.9333247 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.952406502 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.926057354 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.91341046 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.937417868 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.934868086 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.921729521 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.913187458 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.914448898 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.977887519 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.92959987 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.052860658 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.947490636 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.946996496 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.022540658 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.923103691 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.914186028 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.914420205 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.945170996 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.909753782 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.976076399 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.045471657 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.933888829 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.035429348 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.921701314 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.918201627 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.915824459 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.03640413 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.931518089 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.977591519 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.947080706 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.93499188 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.039138788 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.036490778 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.027131931 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.946501338 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.921626265 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.915973701 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.916427453 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.904532674 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.037665535 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.935211512 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.918756337 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.027517824 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.937218215 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.91951015 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.92697458 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.916800113 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.932590982 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.934362923 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.984706888 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.052008119 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.951701433 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.942386416 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.942120128 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.197904484 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.928696939 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.01975772 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.911079648 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.035705765 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.937998779 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.905445175 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.918580278 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.923133981 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.945794637 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.949103182 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.023703365 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.926962138 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.021517127 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.953268952 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.926225704 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.91729423 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.919872097 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.036139512 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.038517497 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.953068808 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.957758856 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.95054409 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.916131281 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.919129504 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.906716761 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.93755816 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.922165407 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.03718818 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.038011707 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.92857359 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.921321036 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.922212722 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.92185027 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.945967821 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.04589065 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.956710866 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.017770983 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.988379304 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.997001937 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.935111687 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.933366887 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.922953753 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.986466377 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.935638981 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.929990542 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.246754111 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.99285012 seconds)
  done (took 207.830481297 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.378106378 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.973267748 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.9781344 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.253778383 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.348348677 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.809799053 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.969619506 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.969379783 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.992987776 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.157247432 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.038688015 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.989255117 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.955826031 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.944856279 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.970363684 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.989309509 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.977972239 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.292537688 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.088759216 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.081900346 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.951811343 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.246725426 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.291051604 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.366848467 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.005907323 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.299033047 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.653665441 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.112473645 seconds)
  done (took 62.939736945 seconds)
done (took 832.48034686 seconds)
SAVING RESULT...
DONE!
