cset: moving following pidspec: 11795
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.968407156 seconds)
loading group "string"... done (took 0.553803141 seconds)
loading group "linalg"... done (took 8.858715322 seconds)
loading group "parallel"... done (took 0.169749111 seconds)
loading group "find"... done (took 1.426617952 seconds)
loading group "tuple"... done (took 2.080116191 seconds)
loading group "dates"... done (took 1.36414028 seconds)
loading group "micro"... done (took 0.216710344 seconds)
loading group "io"... done (took 0.620777727 seconds)
loading group "scalar"... done (took 42.820777814 seconds)
loading group "sparse"... done (took 13.399734645 seconds)
loading group "broadcast"... done (took 1.089111014 seconds)
loading group "union"... done (took 12.132765613 seconds)
loading group "simd"... done (took 2.531988601 seconds)
loading group "random"... done (took 10.239199463 seconds)
loading group "problem"... done (took 1832.626118322 seconds)
loading group "array"... done (took 25.821285004 seconds)
loading group "misc"... done (took 1.125379741 seconds)
loading group "sort"... done (took 3.796854451 seconds)
loading group "collection"... done (took 18.909886929 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.625248892 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.118547545 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.165961337 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.346322648 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.211182972 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.145020343 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.162229307 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.558213362 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.011724167 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.230568037 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.128781756 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.550343254 seconds)
done (took 5.979511304 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.265054244 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.435517475 seconds)
    (2/2) benchmarking "String"...
    done (took 0.113142961 seconds)
  done (took 1.205859002 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.09346153 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.177144263 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094376241 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.110318927 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.11076182 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109252171 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09485904 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109808376 seconds)
  done (took 1.465811299 seconds)
done (took 3.696396168 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.487435578 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.838445206 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.537442547 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.131114344 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.158486383 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.148260373 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.305003923 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.162364801 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.120346418 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085162207 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.169622462 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.406707865 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.476206328 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.000434815 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.084598342 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.127864778 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.084100433 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.702120091 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.082890037 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.143732454 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.525525282 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.116581914 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.118279458 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.140607174 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.190457432 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131063891 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.164658609 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.096446004 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.677506232 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104356243 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.186147258 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099438085 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.160681729 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.250459795 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.095653664 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.097951545 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.6823272 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.180285993 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.112618351 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.10085505 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.685696628 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083374627 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.200249301 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103294861 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.108870826 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.186865613 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114694789 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078543533 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.102119272 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.090554157 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.156395852 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.450362123 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107473514 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.145858386 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.109567555 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.6858945 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099906134 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.158968878 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.143056897 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.103167212 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.100094064 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.1071889 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.154446352 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.109957793 seconds)
  done (took 19.629234924 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.117170796 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.140511439 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.093735431 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139369308 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138830284 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096511251 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082945538 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.094325674 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.109403132 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.184691636 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136790016 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.142706734 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09144799 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081882199 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117581515 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248412499 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108279724 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.124356943 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.082588792 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.10871515 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142664037 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096304188 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108751869 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.108801908 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16811159 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203737925 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108149625 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122722868 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.093345009 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099128543 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142589554 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.160542875 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075117393 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094989465 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.182716457 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121141743 seconds)
  done (took 5.143268685 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.199815342 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.115839505 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.191990493 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.165870284 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.179013556 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.148575263 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.16792603 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133372705 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.251807334 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.195343237 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.181343021 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116078975 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113169536 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078327997 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.096925502 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.07798538 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.678039808 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.179416372 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.149571291 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.12476447 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103210744 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08154704 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.376915336 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100205475 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080929274 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102435739 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.072045035 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.174484465 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102192043 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.291700977 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119512609 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08779706 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134077384 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.208150361 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.113828833 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.139489733 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100991301 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081395335 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.230896482 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.092527805 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094093736 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.108457957 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133396442 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131712188 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098060025 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.093532955 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.238798764 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082275193 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.119039997 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081085441 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.120907739 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.200939682 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.095404999 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098462805 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.35415954 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117370009 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08521305 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.099625492 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.320441118 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134315194 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082125434 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.076843081 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102970672 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.094240153 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.417971894 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.090090708 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.340478583 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.095184416 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.156043809 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099178684 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105054275 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085545133 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102011712 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101250937 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.097130876 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077857289 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.09641565 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078285225 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.1016277 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113155942 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084024948 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.095358378 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147165619 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.115357285 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116331153 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109475844 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099535989 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078586293 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129035237 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097493095 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083317259 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.098576831 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.145551994 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086070913 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.115391923 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101293199 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142267818 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082450524 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.216938329 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082052397 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.098880081 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.107618493 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100704489 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128544886 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.121500782 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079337405 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101781877 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077328126 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.097700782 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146371133 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.097878543 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079347258 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099858558 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.093967328 seconds)
  done (took 24.122118418 seconds)
done (took 49.55321645 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.468926759 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.094048423 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.112840156 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.112371328 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.110012694 seconds)
  done (took 1.632801899 seconds)
done (took 2.342932162 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.33429176 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.190996768 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101971751 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.195675724 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089302442 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.200851881 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.165281871 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.117572481 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.196734768 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.099880285 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.176557206 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.100178693 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086796727 seconds)
  done (took 2.791580807 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093175894 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118572246 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081380457 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109010555 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075402201 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108618359 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091719688 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.128339091 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092040491 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102253806 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075089062 seconds)
  done (took 1.781303695 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09040768 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112177237 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081099105 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106132004 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075965074 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088112506 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106279885 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115324088 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089849026 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101954166 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075774381 seconds)
  done (took 1.750253104 seconds)
done (took 7.022029742 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.043167092 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.409469287 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.119388417 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.166671845 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.337850967 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.209972226 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.521840589 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.132847179 seconds)
  done (took 11.830640912 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.11377478 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.11489115 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.079321415 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097709029 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.081635763 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.099509663 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.078814081 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095440458 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.081388174 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096544223 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.083084171 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.099012175 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.083259748 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.09884311 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.079533178 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.096581952 seconds)
  done (took 2.248383892 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117865539 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.115682133 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.102758131 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107430123 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.084497602 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.10123249 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.086777419 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.10184908 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.082322909 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.099486481 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.106259632 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.08850123 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103799477 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082102164 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.102400164 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.090991711 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.09949434 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.102668961 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.086737399 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.104008736 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090163431 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.100925778 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.105252117 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.089017489 seconds)
  done (took 3.170555953 seconds)
done (took 17.956114684 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.168450989 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084611163 seconds)
  done (took 0.966532583 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.101210037 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11959432 seconds)
  done (took 0.939480884 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.10594501 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09616682 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.134859028 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112993501 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081429957 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097196029 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.113063595 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.099000437 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081299771 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098262673 seconds)
  done (took 1.738875761 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084984451 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.101448643 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.089340097 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.118751328 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.10932811 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.082991822 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.102789427 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084414944 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.103628425 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080826059 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.106380556 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116838166 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087004182 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.119127505 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.086572375 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.102527718 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.107260443 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.08597235 seconds)
  done (took 2.490193978 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080659918 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.08368632 seconds)
  done (took 0.883805256 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082856621 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095885134 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082692242 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098948808 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079499719 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.095847008 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080402414 seconds)
  done (took 1.336342187 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.506672682 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.258503389 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.335353612 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.097851418 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.15245512 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.36787756 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.136194183 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.112357091 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.113519265 seconds)
  done (took 2.841729795 seconds)
done (took 11.916838051 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091895927 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.18832902 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.544304652 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.117958373 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.078395183 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.158890985 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.264927205 seconds)
done (took 2.165698358 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.354829533 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.12391474 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.088809891 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.078776217 seconds)
  done (took 1.364762118 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079559599 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102836545 seconds)
  done (took 0.907933992 seconds)
done (took 3.0012833 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078731119 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.07837129 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.09278663 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.077552508 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.094839246 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078229457 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.131497818 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.078860808 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.096475125 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.076637221 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.097411344 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.078222954 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096626934 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076309038 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075651054 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.092839407 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078534088 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.092715432 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076810645 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092814976 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07879665 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093294708 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.076491869 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.198595229 seconds)
  done (took 2.948307605 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099703481 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096680762 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.084068857 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.101653969 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.082809659 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.101210535 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101177404 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.079204472 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.102482899 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.081150953 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100701297 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.082816393 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098030391 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.08325101 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098024975 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099811237 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084279693 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095929278 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08103181 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.099856726 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.08468908 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096500396 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.082245373 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101654188 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.099386919 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083325814 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.097775744 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.079875937 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100818426 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083094323 seconds)
  done (took 3.491392068 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087202312 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.077088889 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.093337757 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.087501224 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.093147083 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080027638 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.092820192 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.077026297 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.095077075 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.076433268 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.096289306 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.076150365 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.093325824 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.077609937 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078343857 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100504609 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.11266896 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077992188 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.07685762 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.095323846 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.082904874 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.093759145 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.079634537 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.094472422 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.076814201 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.09457272 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.077499907 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076607124 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094577984 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076618473 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099424349 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083556185 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093255413 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.090286654 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100330945 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.075767491 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.102457407 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.07617214 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09619246 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.076168431 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.093812274 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.0764021 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076353243 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.107905684 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080948868 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096856773 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079246243 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098368071 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079967889 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100049223 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.07818095 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096690298 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081407336 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098508538 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084440055 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.076084483 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095475397 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076143765 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.094301024 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07648843 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093756179 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076972877 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.10060661 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077246916 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.117002708 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.0885838 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.093952711 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079346442 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098287327 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084816819 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096059331 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095571773 seconds)
  done (took 7.066856748 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081135092 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105063307 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078950917 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096276753 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075889367 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077827208 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101495521 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094332766 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079771909 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113339316 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077630301 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095616633 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078938587 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098121998 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077712606 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096329709 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086601341 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093612812 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077625853 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098125991 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077468173 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101269913 seconds)
  done (took 2.703917689 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.222077206 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103470459 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142212758 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.115031662 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099226828 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.11457919 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104668968 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088077299 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105316575 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090976267 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107241323 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086817049 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.118308325 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108049364 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089849983 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108683278 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104665567 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091036626 seconds)
  done (took 2.737845412 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092921097 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09739645 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104308241 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097466813 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.08077582 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100457037 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086948253 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112936011 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.100126684 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.080154402 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.10778208 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083350269 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099940522 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080090397 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099888776 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080291157 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099830327 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079937432 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108087321 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104010953 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087130403 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108646839 seconds)
  done (took 2.835673325 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097480008 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099512981 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.110014343 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.103959081 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077850272 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099126892 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088633438 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.099735515 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.10657213 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.081780974 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097913455 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.078625212 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.104921822 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.080059336 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103880645 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08133918 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099878794 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082210206 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100228492 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076826934 seconds)
  done (took 2.612296377 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124243409 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11448949 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09713658 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125664892 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115438631 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.099625819 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.128757242 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11860198 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100696451 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131209042 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099829234 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.118574124 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128860365 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.103716727 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114634404 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126126874 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107524763 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124902355 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115286747 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096618227 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127245461 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114374843 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107851951 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114056549 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097740458 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11705938 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114434564 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.103497916 seconds)
  done (took 3.934189844 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07982894 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07962056 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.095417676 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.077295755 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095095695 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.077504924 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.095659097 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.07742057 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080344254 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094314771 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.079287535 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.096925025 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079832301 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097771132 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081133027 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098603165 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081677797 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.078909288 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098529447 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080839597 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.100701418 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083008512 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.101013715 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.080272498 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079592628 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101477179 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080428979 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098349852 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084010061 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098926557 seconds)
  done (took 3.381028294 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089004947 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104525084 seconds)
  done (took 0.940476429 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078662553 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115405069 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077919025 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101936599 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086848278 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098788466 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.090634861 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103064583 seconds)
  done (took 1.4997589 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.105151438 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.118799528 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086829627 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110536676 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.10003558 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.117548953 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.165417598 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.087796381 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105763206 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08171162 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.11816517 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080331422 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.109102199 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104597506 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089282543 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113880057 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.079054522 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.109117812 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.08900759 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.10147589 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087045698 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114657272 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091959752 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.106170208 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084110874 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.114519759 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.117027707 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.095967705 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108351396 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.096307339 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.108041386 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.076520611 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.10752333 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.08919989 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.100620646 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.104190621 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121386361 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089270356 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.11376777 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090843917 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113500283 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097596736 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.09530505 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.110155062 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100346 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.107589557 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.08761868 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094870213 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082817004 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.102944724 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.077041388 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102458286 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.075914752 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107963593 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090853097 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117565391 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083956634 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104330029 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086907712 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102253676 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089666325 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103602416 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109483322 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.085703906 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108692805 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.09108101 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107891337 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077182623 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093490484 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080343063 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108549414 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106836561 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.111178589 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.087668698 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105219585 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080441942 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105105556 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088154234 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107197675 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.11078881 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086624029 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107148022 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092466382 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103450837 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085912208 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106596621 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.084241662 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.103663575 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082162591 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120708145 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084559227 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098105573 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082892471 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109977326 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087017588 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.103416965 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.08398621 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109094792 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.075836607 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.106181754 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089428635 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108561001 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094335109 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105641995 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105554626 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091002796 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.111512742 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086798757 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103673748 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.0782212 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105860281 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084202653 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.10825342 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076395443 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104377545 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086951861 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.104641028 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092198278 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.101033523 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.087585694 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111027068 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.093360585 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.101261899 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078056551 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.103604362 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086459303 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108231419 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092831797 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.101434887 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077508286 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094892721 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.090363214 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.103820444 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089251654 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104759404 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087151104 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.094095424 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080393692 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105240018 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092718194 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.103286762 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.10583663 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091830059 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.106702405 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085041484 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109581376 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084958359 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100467348 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091541313 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104011689 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077482207 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108953405 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086424776 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.102038172 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087581325 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109205968 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086980954 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.104921537 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08461187 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105429303 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087976215 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.099413618 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087311182 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.102872316 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.102977657 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104939815 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077754647 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098094605 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089326894 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.100606556 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085849236 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101382488 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087263662 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.106976422 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080737997 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.103471282 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086088013 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117295735 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095335311 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107128245 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.107744561 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093972102 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.104616504 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.089174059 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.103590447 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088498392 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105397517 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092139326 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107594248 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087420118 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.1049105 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.078635565 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107405505 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092619521 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.099482779 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.0809998 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100833047 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086680062 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.111886961 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087341223 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10648329 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084506019 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106660794 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092639211 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103831808 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.087050301 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.100738794 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.086310128 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.10963696 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.08875956 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106482283 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094056611 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106900968 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077550304 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10977012 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083949367 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109224614 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.077776663 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.101722483 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083838831 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.106584342 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.086013518 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103863206 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076487458 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110131873 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094411231 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.105951593 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08291943 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.105253368 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114931753 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086239331 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109380139 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088533508 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107731285 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102055656 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101808332 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087696043 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.113148898 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.087364859 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094388396 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090814188 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.103373947 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082028416 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.103250637 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.084196753 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105618555 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089889623 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.107607191 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077010687 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.104700268 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.085263416 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.101155683 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079185254 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.110729644 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089003185 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.105181812 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096046315 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106685494 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087931968 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107393431 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.086168225 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.106482625 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088050338 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106814394 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.108121284 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085228231 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082489846 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.106089547 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.082777865 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.099031628 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.08576974 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.105588675 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.088318454 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107964488 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085642716 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110741743 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.105868112 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.088626054 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.123658284 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102448495 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083499808 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106153428 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089820536 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.105541937 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087249383 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096246595 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092527043 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.104668211 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09316049 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.104535491 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.079334192 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106013352 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087726254 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107273614 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.08929261 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.106276237 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085958627 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.104363268 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087123989 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115520124 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.084691615 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112865422 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089936397 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107457373 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088228962 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.106525719 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.085680778 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.101296777 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.0871157 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.106684889 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.088513962 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.104461577 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.08996042 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.106225564 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.104320208 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085739372 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.106893888 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.088565898 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.107993683 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076704011 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083332254 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.101902161 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.08825356 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111034286 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.106574506 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086221947 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.085549322 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107695526 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08617367 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.099322126 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091219139 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109341931 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.089385129 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116397819 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.102743764 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088148897 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117495653 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077893526 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.10309857 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081846312 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.102881354 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093455514 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.106656179 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093766135 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.106212149 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.084922874 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099568832 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.089103388 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.103498235 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.07760887 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100094669 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091984961 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103179603 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086496026 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.087834044 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.109396192 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107637056 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091189973 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.104605602 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088558612 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.107566157 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.081085033 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.102233536 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08379661 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106993783 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.088888679 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.102551789 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080792485 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.087135886 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.107410899 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.106985579 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.087689561 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085932605 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112902074 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105856952 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088640568 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111862201 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.078721815 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106351716 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.088100953 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.106528177 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084786288 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.108429928 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09001651 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107543067 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094357109 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.106452424 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090886029 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106143535 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083014177 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.105606596 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.08832502 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.107756564 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08412813 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.107537157 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094695007 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100183558 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088272248 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107004136 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085961855 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.108092175 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.089934588 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.106760128 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092995515 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.106880793 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088843283 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109886673 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.088459545 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107925023 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089286664 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.105144707 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093133356 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.102904716 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113204655 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.089266906 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.108829528 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087459355 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.102682684 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087779271 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.087243762 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105817421 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.112587932 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.089180741 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.101920973 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.083533673 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081280972 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.107437869 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111751089 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094478534 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106920919 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090184671 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097632626 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081327636 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107960372 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.085237255 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.105110105 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.091281485 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.1116398 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088680553 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.104154511 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.086539879 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.112391456 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093806616 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109832068 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.084333168 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.109520135 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.089292543 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.106939387 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086192915 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.106333301 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090036947 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.108627706 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086516646 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.103731856 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115910938 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.093251751 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108475537 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087056778 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.109622349 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.088223224 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098588191 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.089768823 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.106613528 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091379049 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.106948453 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088740419 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117431276 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083836401 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.106137309 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092585949 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105909583 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.093409503 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098932474 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.08867 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109868505 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10831882 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.08042368 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084106303 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.10495676 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088640759 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.103843517 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079359555 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118543622 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112184337 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089961 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105692567 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087152202 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098046623 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.080113981 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.08470366 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110457661 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.086944396 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.117201556 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.103422502 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084780574 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079049142 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107890685 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089596853 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.110956069 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080801494 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099599443 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.085011208 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.107900335 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.114001289 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087289425 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.106927638 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090785933 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.107517363 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083101466 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111934732 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.081143151 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.108795766 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100299167 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.108678028 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091392133 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.110718849 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095540967 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.108801165 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079496758 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.108824232 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.089014812 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.108588284 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.089408932 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.110565839 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122496141 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090674879 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.102981959 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.087631963 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106894576 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.085855526 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.114316484 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090757204 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.109201028 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091829773 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.105839957 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092305047 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114789122 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091122246 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.108542922 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089296107 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.107583683 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088294219 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.106979864 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.087028097 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.110926545 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.091043112 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108589025 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.091431093 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.104100455 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118698598 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.096508682 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.11026981 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.08174305 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.10336135 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085454985 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.08001252 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.110210979 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081910528 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.10589752 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.087044818 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.105807589 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.091278028 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109226188 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.089240867 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.110555168 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.088188062 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.098577095 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.091952366 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.108421216 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090790758 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.101390547 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.089301901 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.111706207 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.112304904 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093994548 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.105421821 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089671923 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.106720667 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091946378 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099046486 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092031885 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10576831 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087752094 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.103799262 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089808827 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.108679258 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090551726 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10934696 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091373023 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.10759732 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.094123473 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111508458 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.08222036 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100742471 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093121819 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102354927 seconds)
  done (took 58.919484225 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.151735121 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088136967 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099775844 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080555105 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126356007 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081731877 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099291712 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.082508954 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101518018 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094099206 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.100114293 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080671159 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.12221281 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12803691 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124815602 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113592904 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080452185 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100321898 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081072422 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100378084 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099810931 seconds)
  done (took 2.932033244 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105943157 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118407264 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116397762 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101960621 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110455863 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.1170565 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096988588 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119233012 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.120440179 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112040895 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.101688294 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117521303 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.112755283 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.093602639 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111399602 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114214966 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102412384 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110711503 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.11739493 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097083638 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114818564 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116156645 seconds)
  done (took 3.226174747 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.092627065 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.087661862 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.113772896 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.081933025 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.107656043 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.082893629 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.112374088 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.08508416 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.11234956 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.089031102 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.105114036 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.089203447 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.112551487 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.082671829 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.106094977 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.085791902 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112017463 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.089551954 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.109430011 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.083644595 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.128407216 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.102034816 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.083622885 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.086159752 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.117939242 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.089834295 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.1089849 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.088042393 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.104748675 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.08826666 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.104249685 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.09038238 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.111611796 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.085456301 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.105692297 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.088631089 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.107603522 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.083424251 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.104538496 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.092689509 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.102193764 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.089875747 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.114815884 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.086494678 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.104821233 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.090428432 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.107812392 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.083036471 seconds)
  done (took 5.490932629 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.123216444 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159098175 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.093941228 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.156266625 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.128668525 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.11837451 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.093445779 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.148329807 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.107034374 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.088235951 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125632022 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.123889108 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.09122402 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.117801766 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093828688 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.109064822 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.112118285 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.093956089 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.119294381 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089656426 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.116765608 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.112147129 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.104229215 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.121808559 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.113444393 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088585627 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107643728 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.097298178 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.12069881 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.114424922 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.094722656 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.118450653 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.128356341 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.115758145 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.092211214 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.110507254 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.10605164 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.109784687 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.110557956 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.087671987 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.11089514 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.098363523 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.112120205 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.125297752 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.091001368 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.11070446 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.092066251 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.110397117 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.125716227 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.096251531 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.117855292 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.122867619 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094774113 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.109623812 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.095478768 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.127286954 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.10919454 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.088080074 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.112261279 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.119706066 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.090100197 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.118899996 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.108280211 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.11422009 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.118133655 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.122181445 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.091714602 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.112930733 seconds)
  done (took 8.45814417 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097589895 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.133342729 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126009614 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106703472 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115427825 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.114126626 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09585907 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.114040772 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094885354 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121351737 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114183115 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.164579663 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088802269 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119055845 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.094753316 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114306212 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114103234 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095381139 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.114741912 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094876689 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.115857296 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125820598 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095252319 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12590538 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126733338 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107356642 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095705559 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113182114 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105416111 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.115320693 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126816161 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.113683156 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095454145 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.124159317 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.127856012 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095380692 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104232661 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094701551 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.114620236 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114217707 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.089240435 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124579533 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094988462 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.108685338 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113719639 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.094856665 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.125856029 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.126913743 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119424435 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10195679 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114111915 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125150786 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095776935 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113716633 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.125487229 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.133035418 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.106126622 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124932454 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114360835 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.106638886 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.125690583 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.133320001 seconds)
  done (took 7.798830358 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085996823 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085326426 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.103652523 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.083435996 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105099443 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083531583 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105568345 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.08647681 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085353827 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.106356526 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086222002 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103164902 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083605657 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105069922 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083978737 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102434091 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083844388 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083476882 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105917732 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083343975 seconds)
  done (took 2.663179533 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094689307 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.126431527 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087726522 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11380619 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089306174 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.115042956 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108106064 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090362959 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106670721 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090002158 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.119023631 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098934582 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108579114 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113652325 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099507644 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113843779 seconds)
  done (took 2.49182492 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.108449521 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120564581 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.133008175 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.091538925 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104825844 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.095508543 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107209874 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.082381913 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102746692 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.095540016 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.113387074 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.097998772 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106449548 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085516968 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.10678131 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092324626 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101827468 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.091295749 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105958382 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.112238681 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.112038525 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.108941361 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.088193126 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108658538 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.089777833 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.112097502 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.09423887 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.106558071 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085919499 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106875051 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090182825 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.115678223 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083227638 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.111916039 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.08477893 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.104400457 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.086992302 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.107617862 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.091958409 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10807957 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084880728 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.110983328 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086145062 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.109582442 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082290567 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.108525529 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.082328936 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.11508018 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.08836016 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.11075343 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106521553 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.096036133 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.113825125 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.099399405 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.117413811 seconds)
  done (took 6.381752805 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102040891 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110695853 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091735078 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104519409 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091015682 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.115462665 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.09125825 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.109148896 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089246991 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.104374665 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089263955 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.111411373 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089325317 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11113704 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089365358 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110610461 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081772579 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108431648 seconds)
  done (took 2.61933807 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092625383 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106919778 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095010448 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106834586 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086939629 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.087914356 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104393264 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084827169 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105712904 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087049901 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106954606 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.089320304 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105616958 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089582264 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106798156 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087865141 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109446266 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085962394 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.107437505 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083901474 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109338174 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086069658 seconds)
  done (took 2.945816634 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.106213058 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.140181927 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.101365734 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.150493647 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.112307621 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.090812714 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.121883998 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.092331093 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.131406924 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.110885647 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.091269404 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.110059547 seconds)
  done (took 2.182904524 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114686678 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146345493 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085018233 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11065647 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120701506 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092628052 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112261358 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092574528 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125630696 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126023994 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092979256 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126972387 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124126672 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124122772 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100179999 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120668833 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112560676 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092972952 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10879551 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133914755 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093267765 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124939674 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112746468 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093978668 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112931141 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123788432 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104267972 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12612498 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112906981 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104777784 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122159252 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112829871 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104465246 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127280802 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10980019 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125122677 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093987142 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135530643 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120269668 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103773477 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111566474 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121282557 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106071545 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121045944 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125079843 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093194091 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120752592 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112489695 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094622366 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140250043 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121712286 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124649089 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100077938 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127349419 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125506857 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14159194 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126767502 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124047073 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101044056 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126540369 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123699808 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120719087 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104511366 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127230096 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120792502 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123503105 seconds)
  done (took 8.437639911 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128691599 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106930712 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093318702 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128349035 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125766595 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112409491 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094170472 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113408925 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092337435 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110216181 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.161186546 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114204095 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104783078 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124761883 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112419229 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093885147 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113653206 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125239229 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090242814 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141318929 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113340024 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124822874 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104385494 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124621864 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127428272 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121445009 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093692918 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113272545 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093251202 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114302182 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120421271 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094235391 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12471646 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106418754 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105611694 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113906264 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093482681 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121424005 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113398326 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100718735 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125582838 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137176592 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113506815 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093563415 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12732195 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113517624 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0933073 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110155964 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094404923 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110485752 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127720975 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126891574 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107171004 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124868094 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113246917 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093505146 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114373169 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113613443 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094107567 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12109799 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124761081 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093871626 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142177822 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113721899 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092927139 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125399925 seconds)
  done (took 8.288615833 seconds)
done (took 157.711773501 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.106527866 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.14518686 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.103290671 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.172331985 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087947185 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.144513695 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121475821 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.124771214 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.087852807 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.109374264 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.087790443 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.111763013 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.154199498 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.108676935 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088550865 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.11130678 seconds)
  done (took 2.691810326 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.184489602 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.28793456 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107612804 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.113369517 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.094723735 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.11271582 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.09216258 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.116227959 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089401604 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.122995919 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.11084862 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091445605 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.121675416 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.091366283 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110040279 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.091109487 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.121486761 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.09066913 seconds)
  done (took 2.982724329 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114383474 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.162656512 seconds)
  done (took 1.114818466 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.125091125 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.187762463 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.307944209 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.16505189 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118641934 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.131674827 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.166975807 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.12904247 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197746228 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.130828636 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.109723529 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.117007373 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140364409 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.101178747 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.119798457 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096330758 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142375179 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.117347075 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097020489 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117064881 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116175182 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.117745352 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.120116713 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.098763484 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.186154161 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131363066 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.095788869 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.117692733 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116918841 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.097345072 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.122304586 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.130229018 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.109847515 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.192282547 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101029059 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.18804819 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.103079559 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.115144227 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096208857 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.116831775 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.11930189 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.098995681 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.131552799 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.094159998 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.11793636 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.123523351 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.097520834 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.116784676 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.102334883 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.126211593 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.122905697 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.101151699 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.188769683 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.103404984 seconds)
  done (took 7.769140013 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.839210081 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.162452697 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116050051 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.953365941 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14809081 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129959973 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.843830573 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115833033 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.268525171 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.081480907 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134012843 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.129458326 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.236784637 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.26133275 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.15654946 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.344755946 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.719471184 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.129543167 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.123050592 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.159407987 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12281805 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143846838 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113020729 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.442723824 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.118089715 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093070443 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121867222 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128038372 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168348822 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.09328261 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.120376865 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.186925023 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.29477614 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.187998524 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117812799 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091984895 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115525565 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.176154966 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273486307 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.224494135 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180112283 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089771778 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113370461 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10668382 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135288774 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088839819 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.192677765 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.181858255 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.180076144 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.119454581 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127888423 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101707061 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126709774 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.170229438 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.113456241 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.340404301 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.346478043 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093876105 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123481091 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111239404 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271106356 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.114672824 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.209386411 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142377439 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220971891 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092075288 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.792204671 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.173849327 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114849146 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123031725 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106236022 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120423899 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103732996 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176625599 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.389665008 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13095152 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.119093601 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091994447 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.232834444 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.093499685 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114450285 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.171979297 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115359273 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102239441 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130293375 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127988532 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.17889039 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.251404568 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129419113 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.10060288 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.120692704 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126862966 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.094427143 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.222806863 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224856066 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.186486748 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.225436538 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127588082 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.172494245 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.174251355 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127293054 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.178798475 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121537652 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132077353 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106382336 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220907232 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.149751928 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.092659352 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.119737244 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121513286 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.15082575 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097240424 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121302227 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.177238882 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.468750679 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.194472545 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.090010871 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.118029109 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101872709 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.169867878 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122602907 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267987793 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102260786 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.196989164 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100125561 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.11190785 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102632536 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.19454546 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.106653054 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125580601 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127474123 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101024842 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.280947428 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.204252445 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132002669 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244485654 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185792207 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.102947696 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.202551584 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101913324 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.198437034 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103143069 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.126363701 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094555636 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.786791098 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128484969 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122679945 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099540546 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.201118121 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114402563 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.096575594 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.092094721 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11231026 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81866355 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.09667846 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.11189947 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.095697761 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125646232 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.102009663 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12159595 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098390426 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.193018816 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239364363 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106214917 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12378631 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.09265311 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.190759994 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.096217021 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.114962567 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.093919268 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.115365817 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102707558 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.120642237 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094949178 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.201599506 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.167672742 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.228694723 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.533930244 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.115885933 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.093446491 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238128357 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114759981 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289386977 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122552661 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.232751293 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.175217897 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.111821103 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.343000742 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.178185897 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.200805964 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.096951397 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.199798355 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090391475 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120690053 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.169719438 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092790799 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123062866 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.165938438 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.133212526 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129115725 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.140466286 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.116293892 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.237402357 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.112921364 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.177904083 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117589523 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106107832 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.314687193 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114717231 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114475468 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.191574251 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09844964 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.116136543 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.671510457 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.115819744 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.103854082 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125688015 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.230018153 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.173499483 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12312375 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101576717 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129151361 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.170086238 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.240362582 seconds)
  done (took 45.718038501 seconds)
done (took 61.108175021 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313444639 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.273661903 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.312506181 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.204216291 seconds)
  done (took 2.039355112 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.185530574 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.159385383 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.131491688 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.114835015 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.161579032 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091423813 seconds)
  done (took 1.705578922 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.495641289 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.384375994 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.351887276 seconds)
  done (took 2.095921958 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.270060561 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.292715334 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.366588663 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.459378526 seconds)
  done (took 2.358299733 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.212245676 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131316224 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.104563755 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.145686009 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.178175948 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.183609931 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.148696649 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.158241266 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.135564306 seconds)
  done (took 2.305761708 seconds)
done (took 11.367215614 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.233309798 seconds)
    (2/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.165631543 seconds)
    (3/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.289352745 seconds)
    (4/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.163741695 seconds)
    (5/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.263751847 seconds)
    (6/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.196506942 seconds)
    (7/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.288947665 seconds)
    (8/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.156180145 seconds)
    (9/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.217660319 seconds)
    (10/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.226291887 seconds)
    (11/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.096869058 seconds)
    (12/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.123123499 seconds)
    (13/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.255187842 seconds)
    (14/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117891663 seconds)
    (15/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.199658382 seconds)
    (16/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.168132377 seconds)
    (17/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.157351186 seconds)
    (18/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.210704859 seconds)
    (19/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.080183269 seconds)
    (20/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.215481925 seconds)
    (21/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.195520053 seconds)
    (22/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.174022207 seconds)
    (23/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.265583432 seconds)
    (24/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.187279686 seconds)
    (25/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.243813433 seconds)
    (26/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.105857017 seconds)
    (27/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.152864474 seconds)
    (28/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.130825667 seconds)
    (29/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.214528465 seconds)
    (30/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.212192859 seconds)
    (31/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.208311318 seconds)
    (32/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.132685934 seconds)
    (33/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.168914472 seconds)
    (34/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.098549624 seconds)
    (35/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.12759425 seconds)
    (36/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.201299763 seconds)
    (37/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.203279574 seconds)
    (38/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.121759656 seconds)
    (39/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.152265304 seconds)
    (40/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.106725588 seconds)
    (41/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.166776781 seconds)
    (42/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.205313062 seconds)
    (43/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.146860228 seconds)
    (44/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.221072357 seconds)
    (45/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.098864593 seconds)
    (46/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.169243779 seconds)
    (47/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.167722534 seconds)
    (48/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.218482054 seconds)
    (49/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.144206293 seconds)
    (50/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.118288773 seconds)
    (51/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.107059646 seconds)
    (52/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.209868051 seconds)
    (53/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.149164085 seconds)
    (54/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.117082323 seconds)
    (55/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.110181749 seconds)
    (56/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.132006304 seconds)
    (57/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.170138711 seconds)
    (58/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.207245195 seconds)
    (59/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.151312809 seconds)
    (60/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.14885925 seconds)
    (61/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.133767606 seconds)
    (62/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.182542976 seconds)
    (63/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.233670991 seconds)
    (64/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.266293338 seconds)
    (65/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.237427052 seconds)
    (66/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.079801251 seconds)
    (67/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.121076927 seconds)
    (68/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.079113883 seconds)
    (69/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.079080818 seconds)
    (70/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.228983858 seconds)
    (71/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.144279516 seconds)
    (72/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.133039412 seconds)
    (73/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.096095161 seconds)
    (74/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.14550357 seconds)
    (75/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.13627737 seconds)
    (76/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.119734161 seconds)
    (77/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.162782639 seconds)
    (78/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.080812881 seconds)
    (79/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.140308354 seconds)
    (80/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.169723164 seconds)
    (81/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.119193103 seconds)
    (82/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.151851987 seconds)
    (83/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.095546596 seconds)
    (84/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.129343413 seconds)
    (85/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.098618706 seconds)
    (86/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.121683732 seconds)
    (87/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.079520969 seconds)
    (88/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.101988095 seconds)
    (89/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.080719075 seconds)
    (90/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.198405938 seconds)
    (91/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.160431224 seconds)
    (92/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.210422624 seconds)
    (93/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.144461317 seconds)
    (94/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.123365639 seconds)
    (95/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.079739938 seconds)
    (96/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.102625062 seconds)
    (97/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.105487873 seconds)
    (98/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.12185149 seconds)
    (99/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.098106799 seconds)
    (100/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.12837016 seconds)
    (101/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.193995175 seconds)
    (102/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.089630721 seconds)
    (103/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.102731732 seconds)
    (104/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.110840061 seconds)
    (105/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.121894765 seconds)
    (106/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.099351923 seconds)
    (107/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.115322313 seconds)
    (108/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.095916243 seconds)
    (109/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11809378 seconds)
    (110/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.098683201 seconds)
    (111/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.145340302 seconds)
    (112/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.079257824 seconds)
    (113/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.150252908 seconds)
    (114/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.07945778 seconds)
    (115/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.122659964 seconds)
    (116/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.080011345 seconds)
    (117/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.10300765 seconds)
    (118/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.0967367 seconds)
    (119/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.130049357 seconds)
    (120/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.087587706 seconds)
    (121/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.102083865 seconds)
    (122/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.136023891 seconds)
    (123/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.122710988 seconds)
    (124/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.080373585 seconds)
    (125/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.133292565 seconds)
    (126/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.133319252 seconds)
    (127/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.080620616 seconds)
    (128/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.081593277 seconds)
    (129/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.104084257 seconds)
    (130/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.079922562 seconds)
    (131/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.137091522 seconds)
    (132/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.100453163 seconds)
    (133/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.121586567 seconds)
    (134/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.103170909 seconds)
    (135/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.118934552 seconds)
    (136/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.080652288 seconds)
    (137/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.209914262 seconds)
    (138/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.15068856 seconds)
    (139/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.142994038 seconds)
    (140/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.080542391 seconds)
    (141/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.079475306 seconds)
    (142/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.102483424 seconds)
    (143/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.105808902 seconds)
    (144/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.104506086 seconds)
    (145/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.09778108 seconds)
    (146/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.126542045 seconds)
    (147/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096808935 seconds)
    (148/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.102522818 seconds)
    (149/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.196580411 seconds)
    (150/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.120050428 seconds)
    (151/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.102763431 seconds)
    (152/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.107962262 seconds)
    (153/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.135262529 seconds)
    (154/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.080185171 seconds)
    (155/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.079835809 seconds)
    (156/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.120782235 seconds)
    (157/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.194509826 seconds)
    (158/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.109081838 seconds)
    (159/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.116597399 seconds)
    (160/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.092878515 seconds)
    (161/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.12924843 seconds)
    (162/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.079946156 seconds)
    (163/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.198564413 seconds)
    (164/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.120944844 seconds)
    (165/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.100433321 seconds)
    (166/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.122919032 seconds)
    (167/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.080558549 seconds)
    (168/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.104329117 seconds)
    (169/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.205493942 seconds)
    (170/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.11297044 seconds)
    (171/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.113183507 seconds)
    (172/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.104048427 seconds)
    (173/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.103492628 seconds)
    (174/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.093517534 seconds)
    (175/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.118648441 seconds)
    (176/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.100140513 seconds)
    (177/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.113865725 seconds)
    (178/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.100570994 seconds)
    (179/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.103016038 seconds)
    (180/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.090739274 seconds)
    (181/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.087572864 seconds)
    (182/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.103042073 seconds)
    (183/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.081168569 seconds)
    (184/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.118707146 seconds)
    (185/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.08188682 seconds)
    (186/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.125188335 seconds)
    (187/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.093444026 seconds)
    (188/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.151715797 seconds)
    (189/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.081309088 seconds)
    (190/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.135786022 seconds)
    (191/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.093543555 seconds)
    (192/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.122912474 seconds)
    (193/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096732108 seconds)
    (194/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.121414374 seconds)
    (195/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.107416297 seconds)
    (196/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.123678377 seconds)
    (197/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.081031079 seconds)
    (198/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.123728949 seconds)
    (199/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.095885712 seconds)
    (200/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.12191377 seconds)
    (201/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.079611877 seconds)
    (202/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.112824685 seconds)
    (203/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.080258592 seconds)
    (204/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.102983548 seconds)
    (205/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.081700632 seconds)
    (206/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.102739252 seconds)
    (207/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.096836265 seconds)
    (208/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.122588795 seconds)
    (209/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.11341678 seconds)
    (210/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.103639913 seconds)
    (211/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.080842137 seconds)
    (212/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.131415267 seconds)
    (213/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.080601344 seconds)
    (214/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.116306233 seconds)
    (215/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112208687 seconds)
    (216/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.118574339 seconds)
    (217/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.080794191 seconds)
    (218/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.080069821 seconds)
    (219/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.104877788 seconds)
    (220/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.080791534 seconds)
    (221/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.128403487 seconds)
    (222/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.093439698 seconds)
    (223/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.102446954 seconds)
    (224/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.080426167 seconds)
  done (took 30.677467831 seconds)
done (took 31.54378334 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.40966092 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.134690987 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.127913595 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.104322578 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.14855805 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.106741502 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.129538648 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.106950324 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.127171995 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.094435858 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.118086612 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12761269 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.104725806 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.145344169 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.105873886 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.120590404 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.096111512 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.12892897 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.104282216 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.131203695 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.148305749 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098124754 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.127138783 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.096690825 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148215671 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097188185 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.127296329 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.103872172 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.12654485 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.095894025 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.129980299 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.11936607 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.105490572 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.130637696 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095102492 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.120154825 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094787387 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.11009885 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.095935275 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.121059398 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.103627149 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.119297106 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.106460416 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.120058556 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.097908802 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.118378527 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094913131 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.130491051 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.094270343 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.12898947 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096949404 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.133557987 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.118341667 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.094902486 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.118446857 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.097447078 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.127944011 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095630695 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.128615201 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095224379 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.120572827 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095421412 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.122752355 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095552951 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.119333356 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097392398 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.12105435 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.097737336 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.117371799 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097779321 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117419581 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.097298063 seconds)
done (took 9.394422756 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.10060376 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.175447633 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150455557 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.127112945 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.148241368 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.135592743 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.108244278 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.143380976 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.128007608 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.119178937 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.147004982 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.140518034 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.133957707 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.126107204 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.134959594 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.099484312 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.125890398 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.107642406 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.155014816 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.142931043 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.150146283 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.103094341 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148859198 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.140388778 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.102694512 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.145605249 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.103724105 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.124928554 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.102179799 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.14214371 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.143275947 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.103933287 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.126090822 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.115312899 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.132639149 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.125243061 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.111345204 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.122819851 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.101168565 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.124051672 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.135842242 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.114585951 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.124057691 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.111054489 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.123415048 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.104339354 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.126593643 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.124980381 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.104256522 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.12058509 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.105001231 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.148240518 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.144008527 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.102782942 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.124689456 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.104207403 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.12524659 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.103991981 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.128732002 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.127411531 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.101072298 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.12619201 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.104616404 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143171544 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.125935839 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.10299824 seconds)
  done (took 9.1298278 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.11931869 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.157117039 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.13380748 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.111009221 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.12969502 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.092555037 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.116380406 seconds)
  done (took 1.77953414 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.09530391 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.148340635 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127414147 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.151807649 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.139794788 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.131617581 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134546469 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.094160794 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.143552178 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.128065628 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.123372893 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.174363254 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.118772542 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.106608581 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.153928406 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.117744967 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.130833466 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.117929266 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.102413728 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.151673322 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123544624 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.117401863 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.132340523 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.095775514 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.140913547 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.096298121 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.187901844 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.13163371 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094292527 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.125301566 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.099847789 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.212782527 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.11872962 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.128897715 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092964079 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.147850452 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.116568443 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.124584237 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.144739901 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.100433394 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.140492576 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.101065198 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.126631353 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.125063872 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.102572002 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.133974269 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.106824779 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.127518741 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.100506553 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.147617404 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.12900664 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117310285 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.120503805 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.099698467 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.129080365 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.101980325 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.133759328 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.100847805 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.147595204 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.12731385 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.121745492 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.145900795 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.140740692 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.122608654 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136729586 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.117481331 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.142210752 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.124582805 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.103492726 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.126633049 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.122739769 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.122841665 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.105318985 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.135037364 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126657452 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.124106217 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.147680453 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09941937 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.133057502 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.099087655 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.121926605 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.098096911 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.13602916 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098855357 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121806077 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.13607 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.107508562 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.124109101 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.098872707 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.141178531 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.123560064 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.10676378 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.130198057 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.099918715 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135475094 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.148305557 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.105419331 seconds)
  done (took 12.995674203 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.097792289 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.096244685 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.126636254 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.12077643 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.097772071 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.096769561 seconds)
  done (took 1.565023069 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.127498659 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.125711864 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.11356516 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.130172736 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.180971307 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.146629689 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.125347803 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.129505128 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.14403303 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.11349655 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.146161956 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.148176826 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.122703057 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.130896514 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.124668717 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.129817437 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.149880114 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099998476 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.136524457 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101417438 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136380132 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.130225281 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101392181 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.143478491 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.105205982 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.130268164 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104985 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.136669256 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.135616483 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.106089476 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.130682138 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.104390594 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.128169977 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.129739007 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.124835549 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.127732227 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12281498 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.107960106 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128111643 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.105710953 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.149020353 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100066983 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.135788311 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.13217228 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.106349795 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.127865059 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.131462044 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.106447538 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.150247777 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.107458635 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.133773443 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.129408438 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.10571746 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.132920111 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.103672611 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.130308264 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.131618169 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.126236995 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.131409279 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.12780017 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.102442201 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.130286003 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.106133533 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.133020981 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103082059 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.133809208 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.127801897 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.10511918 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125739147 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.104483335 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.133179644 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.126198801 seconds)
  done (took 9.930620552 seconds)
done (took 36.312565123 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.098933971 seconds)
  done (took 2.022147512 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.87244489 seconds)
  done (took 1.797198189 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.140894883 seconds)
  done (took 18.098735378 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.523998867 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.613822386 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.977646232 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.171883254 seconds)
  done (took 3.213346607 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.964876971 seconds)
  done (took 1.909719446 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.319008406 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.268734143 seconds)
  done (took 1.518347136 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.832317394 seconds)
  done (took 1.770296859 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.575535161 seconds)
  done (took 2.508905838 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.35995536 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.205713771 seconds)
  done (took 1.509648922 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.587576189 seconds)
  done (took 1.526891863 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.54033322 seconds)
  done (took 15.482423883 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.235249234 seconds)
  done (took 1.188319513 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.307432327 seconds)
  done (took 1.249673619 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.605418924 seconds)
  done (took 4.549840262 seconds)
done (took 59.275122793 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.10673699 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.133930976 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.110691688 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.131252882 seconds)
  done (took 1.420817147 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.111670879 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.127380263 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.107527475 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.128057618 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.113561794 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.128237535 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.102526279 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.135551146 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.103099366 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.131395356 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.127387272 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.103518843 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.128994807 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.102883296 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.126819441 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.105162526 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.131514513 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.103759932 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.128923209 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.104227616 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.128078643 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.12916889 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.106747758 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.129197556 seconds)
  done (took 3.791781717 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.106915648 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.10038886 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.127874202 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.0993377 seconds)
  done (took 1.383348713 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.112125636 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.143377829 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.116859933 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.135692664 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143162922 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.117965117 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.125465032 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.100525789 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.126720469 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.1107123 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.126065089 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.119698386 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.144002574 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.121921822 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.11301835 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.118601551 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.097110695 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.142640767 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.110764209 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.137136939 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.099335653 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.135487393 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.108525993 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140227428 seconds)
  done (took 3.901488492 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.175981639 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.139250534 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.148452056 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.173260331 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.125659265 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.123538728 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.124931324 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.1327147 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.128262279 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.09955046 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.124777606 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.155284743 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131131212 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.126459289 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.100356197 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.13032683 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.106945431 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129153211 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.101878194 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.139151407 seconds)
  done (took 3.572820071 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.106756189 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.124956341 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.096465937 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.12387714 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.106862147 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.127354597 seconds)
  done (took 1.643044402 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.097191856 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.094840678 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.121127386 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.094509037 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.125181879 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.096332771 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.118300028 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.095241005 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.094487371 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.121614902 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.094419849 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.118903402 seconds)
  done (took 2.2249526 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.222943608 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.122880639 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.124237039 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.101563767 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.129097304 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.098638401 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.139258538 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.099439782 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.181169173 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.125521765 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115719576 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.178539143 seconds)
  done (took 2.59423745 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217510374 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105330485 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282387908 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.383256668 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166630869 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174574278 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.283165831 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175657208 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.195372146 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145078014 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213127557 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165400939 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136158478 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213281318 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121675086 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.193150698 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18343055 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209637401 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157817235 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247593604 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17425403 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176710146 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198795978 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133798056 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146460748 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165510881 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.125802378 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110601529 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179374481 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177119062 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205790412 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129912366 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146946372 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206618464 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248116068 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185397974 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.31123613 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141592808 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.198004804 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.201086538 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28376563 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148699236 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203582929 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164738392 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138439331 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188386572 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163613533 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.187619583 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.114195276 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14970643 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192285459 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183964802 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.18812195 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145688817 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.329156054 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129728671 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.154048227 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187948013 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197244222 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234408506 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174445855 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.105186928 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195169665 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223802294 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189587466 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.126403361 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.174972207 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133131102 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184682701 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213465109 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184616454 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174809318 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.216816514 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141892803 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170391323 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186892246 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136165685 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187116114 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169090967 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.128875791 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156939871 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119115215 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135583583 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.19318107 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104588853 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221433293 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145557616 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.297587518 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240936353 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166659344 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142975999 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172635798 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203485889 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128844427 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.126689004 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153600663 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.178860318 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139187975 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141438255 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165815943 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153625102 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.107385029 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159969047 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.131006173 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168012532 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.116488817 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175301279 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172911088 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.136869763 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172742706 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131222 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.16763678 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17831351 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231437235 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113842838 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141152592 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213601684 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166334034 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.145114497 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19454406 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204713763 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.182410239 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145092196 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176870572 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205253656 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122065504 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232953567 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122675707 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142404516 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.158669075 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166546361 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166068824 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.163413762 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110675162 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159976828 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21115387 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.137131177 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143570851 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181551507 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107881807 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135918545 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151818139 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117147847 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.150187499 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.158066377 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.120310368 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162853033 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168137523 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162858943 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167991865 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152412466 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200209995 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140662819 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.168909465 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129328811 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.127175111 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.189023389 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203552955 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138449447 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19663637 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.178643807 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206544591 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172123178 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139569456 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191543155 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110625973 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.128787347 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174314569 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169407026 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171585058 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.201422453 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202168334 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.174454108 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.161739345 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157240334 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176891886 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.194224908 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164032541 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.154132673 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17081555 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175427944 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.103169111 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.132326791 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.10790734 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148360238 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138871524 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113432514 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216436446 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173905893 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196949242 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169941932 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147437065 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202417801 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.106958546 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172446787 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179129149 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147757914 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.203131196 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199744196 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1752931 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151877058 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179358351 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.127387353 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10765688 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.140808165 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175157959 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11414246 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143837453 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152896514 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201168886 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184509162 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158247486 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212960581 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175870556 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.239443633 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.102946146 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.172167963 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18925144 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167736363 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.170391207 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140235079 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.169638275 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197546971 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151801447 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202904928 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171330034 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177549055 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208265082 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.16587331 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139960465 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157302859 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178643835 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119712302 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180087921 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15521519 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144684801 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163043125 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.117249807 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135043471 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189390489 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151713889 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187236906 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.176155506 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182353728 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135739041 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152806794 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171933872 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128193824 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.126612239 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179852507 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20581244 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15299772 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167432382 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193517129 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137749997 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.323672598 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208917058 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193284953 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146532112 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151472727 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168848042 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150232183 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173275103 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191355279 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152412197 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190744687 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169429428 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.15193775 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115699401 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158334103 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159435978 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.160171346 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.141456521 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.13477951 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.152280322 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191834181 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154088352 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170074654 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174319113 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.155801402 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.136708983 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15031448 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219564469 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16878339 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18614277 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.166675146 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.183918153 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197349749 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134171482 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109212743 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.135523401 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193111405 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112807484 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168409183 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.219375474 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208547444 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168647496 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178553948 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14670224 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.105812508 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168812678 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157192367 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207604763 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151063399 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.144318568 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210698434 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.15908441 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111320784 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174509773 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292430112 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15175673 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192132073 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.12976413 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.285285207 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108793824 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139005321 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178404493 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180631564 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.11287718 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.1949832 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173659693 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153609182 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178653242 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118418578 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.226738384 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217435243 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178984077 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185095541 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.153038014 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168329854 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171704334 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195276727 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152056059 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.12540272 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172543883 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201863708 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.231552362 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.113996757 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172860188 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171879266 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169147881 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182752751 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143457455 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198168303 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110788167 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174313532 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150299467 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132736244 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166974561 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193101097 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141215593 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193089777 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166918735 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113483335 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135711483 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159423106 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141702788 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152264922 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.139073745 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188739635 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.107815648 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173487436 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190246751 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13994965 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163604035 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126936689 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139519058 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152652093 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152372554 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116749908 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.178884384 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201956216 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.139526935 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195456051 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182111811 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174885731 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168957829 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124971506 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.671764219 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.136238614 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201658366 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155517624 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198158553 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129539381 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175121527 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170170355 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158865652 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176199064 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159965039 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229514815 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176482962 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.16740161 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11280833 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153686219 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154695364 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.111976464 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161025747 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172069816 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150292432 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.117758092 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.165930121 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156119534 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.153608406 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11898593 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233169145 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128748916 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192373761 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.222453322 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120423356 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174587712 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183661123 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138733744 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.170323179 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18228679 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151672978 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158047292 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.112533858 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.143909166 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189760262 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.105575679 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169819783 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170307436 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170179708 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173342667 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115035778 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169176531 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151459171 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171309028 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133646083 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.13606481 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16697666 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139575288 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.107166753 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165271506 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168099882 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.167368112 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134581908 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.154030445 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200211617 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.134108371 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114236432 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316572716 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139720089 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230295511 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.133583566 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14531996 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152451861 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163136681 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.133286084 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169608526 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.139142753 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116482643 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.141297051 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.192886497 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.173370409 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165616979 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193845565 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171009246 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198305374 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.115482976 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.272455768 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149013597 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163617181 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.112058965 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.137056403 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1493712 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115305216 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154414376 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200838164 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188501167 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.162727234 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.153756614 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107728694 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.134608166 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140400265 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151593169 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162563329 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168167624 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15249061 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.09881295 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154664144 seconds)
  done (took 81.412967682 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.171941217 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.151753692 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.155315389 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.207193835 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176390034 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.265338362 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.214604309 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23669522 seconds)
  done (took 2.622490225 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.110237126 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.144202236 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.149710953 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.132626749 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.132508346 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.356598196 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.143205454 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.10625423 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.193431208 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.144825477 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.131416454 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.624258241 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.101485935 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.134367309 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.121062546 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.132047536 seconds)
  done (took 3.890464665 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.252007361 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.541387061 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.950163456 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.254060434 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.234057194 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.162381901 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.744428743 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.193406816 seconds)
  done (took 12.371059464 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.137272943 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.152145452 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.267069999 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.184342878 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.169228383 seconds)
  done (took 1.957109615 seconds)
done (took 123.726520736 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.104796981 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.133401197 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.105666562 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.134604385 seconds)
  done (took 1.513419507 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.118555198 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089050586 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.123284938 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.087808434 seconds)
  done (took 1.460657979 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.496657359 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.088281262 seconds)
  done (took 1.667292854 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.129919854 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.146040016 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.127625102 seconds)
  done (took 1.458045651 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.111850082 seconds)
  done (took 1.161952174 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.116263988 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.11117418 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.151587446 seconds)
  done (took 1.428663267 seconds)
done (took 9.737442766 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140741548 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.451387536 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.394684664 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.147649118 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.729186326 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.388380806 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.087088575 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.163550078 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173794236 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.100321487 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.145923934 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.680182693 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.036220733 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.348703797 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.021747366 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.446084101 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.710701158 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100856501 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.134757039 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100564435 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.065451127 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099514131 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.129387112 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101389219 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.707185763 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.404768281 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.128796277 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.483278655 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099390976 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131405823 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.390113472 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12683512 seconds)
  done (took 17.408529521 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144718708 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.189140949 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.13581486 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102340787 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.131588258 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.10146788 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.13744098 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11308322 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.188841065 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.128128242 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118868909 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.127133961 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105153246 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.129000738 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.121912338 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.127687745 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.102407566 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.130007879 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.106664456 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.130466263 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.119191311 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.127185117 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.102074351 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.130091914 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099516634 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.140663268 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099626164 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.140143584 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099043844 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.134465091 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.132421052 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.1013498 seconds)
  done (took 5.048488361 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.149785737 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.200304342 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137777184 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136090564 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.178840292 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.130145073 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.214537432 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.135960281 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.192101584 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.127929185 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119919768 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.12888145 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.165089515 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.101995006 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.150316608 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.100578179 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.130305996 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.102772454 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.13469157 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.102631514 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.148714975 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099114881 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.129846554 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102596056 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.128558711 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.113834755 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.129306874 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.138869823 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101327567 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131698667 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.107360095 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.127122641 seconds)
  done (took 5.3591156 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.107312723 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.13577008 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.11821507 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.145574548 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.103225006 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.134474153 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.108085588 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.130288977 seconds)
  done (took 2.036554788 seconds)
done (took 30.902718964 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.122138503 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.141486345 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.115489623 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.13751901 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.136407775 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.126804283 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.113359277 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.098423422 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.139654087 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.117272435 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.129735197 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.101181771 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.142930242 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.105104688 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.146152071 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.109802261 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.150567808 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.116707296 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.130054961 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.110746431 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.130010095 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.120777596 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.135586128 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.101566738 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.155321955 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.130981442 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.118385587 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.133237506 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.105571273 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.102256693 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.146012112 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.105661094 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.129610738 seconds)
  done (took 5.156070242 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.128962409 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.175487945 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.097612446 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.126614729 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.170305199 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.098975272 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.156450741 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.099870184 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.126853856 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.099611172 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.09717671 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.154858056 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.160413115 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.132393139 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.176509574 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.164217287 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.125349998 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.167601319 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.150530567 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.138481856 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.158037392 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.097285259 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.162190717 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.169621525 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.097931364 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.126928017 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.143793872 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.157925554 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.171656895 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.133244112 seconds)
  done (took 5.232196478 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.110122581 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.146333829 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.128198791 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.202696091 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.171145353 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.116716417 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.143722555 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.119578617 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.158587321 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.101306714 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.140985788 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.161330573 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.118272838 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.140297514 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.10697441 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.144740646 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.121850905 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.131429231 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.108947751 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.150218882 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.120289292 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.144556572 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.116123755 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.140363828 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.100278239 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.139361572 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.106643046 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.145252591 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.136731787 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.110939834 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.132907006 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.106184355 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.132473459 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.111255565 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.133471127 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.108955279 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.152721204 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.110923455 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.144439203 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.165376142 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.11200297 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.134357061 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.124508844 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.178963369 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.102821806 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.138385439 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.112330119 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.141342677 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.100243481 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.150608446 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.116148987 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.131886343 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.144819442 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.101423965 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.128572299 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110527632 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.102253726 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.133397695 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.139404903 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.106063224 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.149285827 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.110584613 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137667592 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.103588536 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.138428538 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.10244098 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.128730274 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.106943699 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.154952007 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107303685 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16306285 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.101650188 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.137709342 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.110897791 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.13812722 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110454368 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.131442712 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108870836 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.139060102 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.107751616 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.139407775 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.104473294 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.134836819 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.120424868 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.146042425 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.139141118 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.107979684 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.13738679 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.10654065 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.132441391 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.116772658 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.132506196 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.106300797 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.141223822 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.10231049 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.133305813 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.10904384 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.135858447 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.100959134 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.151518337 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.107412611 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.130463509 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.120563961 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.132200133 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.105500637 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.140127566 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.114492602 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.130791728 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.106588721 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.137910808 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.100744912 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.136756559 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.105587856 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.130462014 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.114565717 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.142749121 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.106407598 seconds)
  done (took 15.915872193 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.252928864 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.23330137 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.204444641 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.31757677 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.155315838 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.129050844 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.22878105 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.184984749 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.132786586 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.173056369 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.187880284 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.193582218 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.101927462 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.164834179 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.232665833 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.32389745 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.16539118 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.173925329 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.143086242 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.155450744 seconds)
  done (took 4.938519203 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.118759825 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.171894066 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.16150544 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.129629215 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.13465196 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.116989908 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.133461114 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.148150124 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.1041982 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.138747042 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.102994292 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.140074558 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.105329242 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.135249428 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.120166693 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.149843702 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.106735032 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.139653544 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.149446121 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.108649205 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.132988651 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.153801555 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.111656327 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.160973589 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.111265958 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.147950114 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.101672829 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.14025604 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.099807006 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.133149413 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.108330542 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.149165519 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.140094828 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.104037983 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.137934974 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.103147509 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.127561339 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.104053233 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.133636999 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.107230162 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.148132888 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.105818101 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.131530312 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.103124686 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.140845859 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.099746946 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.106837916 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.13913849 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.136644527 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.111534573 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.139120002 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.107644799 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.140382344 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.114990796 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.128826772 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.112554783 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.145242863 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.136840627 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.109987914 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.131249604 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.101290144 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.107064788 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.131539713 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.107511389 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.139668495 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.149579784 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.111673133 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.132302408 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.108676591 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.136323492 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.10708608 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.149993737 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.152628158 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.101436183 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.128751091 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.124645987 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.100602095 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.119871184 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.112870748 seconds)
  done (took 11.026931147 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131580161 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.132481949 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.122243868 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.168677045 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.118136964 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.14262308 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.102806602 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.153337582 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.109252472 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.141359032 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.109453286 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.147866581 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.161123502 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.116335376 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.133377224 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.118385295 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.13550825 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.14328021 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.153240926 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.165050365 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.114516615 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.137904089 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.116946641 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.144648812 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.136560736 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.14590538 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.165963358 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.109545994 seconds)
  done (took 4.871715045 seconds)
done (took 48.195899451 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.177771257 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.389171733 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.154130435 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.153840597 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.170792661 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.200182405 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.156975812 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.348664257 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.896267342 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.146037071 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.152347219 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.15327162 seconds)
done (took 27.176586174 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.161386496 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.753141679 seconds)
    (2/2) benchmarking "String"...
    done (took 1.469111029 seconds)
  done (took 4.299887754 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.152942688 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.155335156 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.399230087 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.154596035 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.172186202 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.170608625 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.155442961 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.157168846 seconds)
  done (took 15.442340388 seconds)
done (took 25.133909194 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.205263052 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.342294026 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.423431666 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.173517778 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.155610895 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.154826115 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.145190974 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.189603833 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.159702762 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.145518615 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.155193103 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.434684543 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.144688047 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.543329486 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.144244947 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.163180798 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.172686925 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.389261538 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.161598619 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.195983079 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.154392064 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.142015083 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.171272581 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.193609256 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.172616816 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.169739795 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.154300107 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.143115917 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.354750035 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.165574208 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.197859641 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.157556923 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.170380191 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.158217138 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.26838613 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.18151801 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.346722218 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.15518894 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.145388688 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.160820505 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.354262834 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.559395988 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.167715618 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.157486803 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.15760413 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.232988787 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.147664176 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.881697778 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.163571388 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.152032588 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.210239872 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.525747381 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.173480712 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.160209743 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.161796441 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.388250485 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.189498387 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.187713693 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.183650416 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.169713275 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.157586495 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.167851777 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.211332931 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.162196462 seconds)
  done (took 140.468359461 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.158171734 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.159064577 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.159448199 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.179686078 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.162611314 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.159808606 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.160547157 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.157993623 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.158767677 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.189847419 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.162206071 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.159807104 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.163812722 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.138629581 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.161009357 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.179611951 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.176504423 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.159660455 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.179778083 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.159968431 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.161154822 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.163382542 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.178188912 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.160674917 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.200285998 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.247245705 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.200950128 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.192083862 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.162285461 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.160732724 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.205547579 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.184456531 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.78274334 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.014951644 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.171676259 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.180676367 seconds)
  done (took 78.738057487 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.160069298 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.161160152 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.161355003 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.160980879 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.192757956 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.160429346 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.736810848 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.726314777 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.887478168 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.506458806 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.493337854 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.411510961 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.161163055 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.254940653 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.178405235 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.162587005 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.176663207 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.187647032 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.165664415 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.163350031 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.739820677 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.177243736 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.172372704 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.35481608 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.179818141 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.19519888 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.559708439 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.16274247 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.193610287 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.494581638 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.21321744 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.163227678 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.541578134 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.252295893 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.275728832 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.165008625 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.195316188 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.162019484 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.443515321 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.162641336 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.163169149 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.165370846 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.840209254 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.165515186 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.735500444 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.165175026 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.098560825 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.163086922 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.16215968 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.161565249 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.296767617 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.850278962 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.17954661 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.160586638 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.163223112 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.159866627 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.161285363 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.191449759 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.283268558 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.272347275 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.161014691 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.16312966 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.191619536 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.160220702 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.335878257 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.161907898 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.754547289 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.216912297 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.266535894 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.721724127 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.162487102 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.253527984 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.276770334 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.157613022 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.157086764 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.15741063 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.157134686 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.266846652 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.157055731 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.559988987 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.329993033 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.174201217 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.470750098 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.257306757 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.157697394 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.53305988 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.161119783 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.158063196 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.926482499 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.256140069 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.15826287 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.157743935 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.156935327 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.157312184 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.558334382 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.712972081 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.404225163 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.162183805 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.646815029 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.157942375 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.158171092 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.568725352 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.692254243 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.83578249 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.162398106 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.270546145 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.330769072 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.176031514 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.159537708 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.472923899 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.16332785 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.221013296 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.15887434 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.55658869 seconds)
  done (took 360.707637424 seconds)
done (took 580.991727996 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.916475407 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.820856526 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.944415418 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.846336127 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.806907804 seconds)
  done (took 10.416888505 seconds)
done (took 11.497062709 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.348538139 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.346605625 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.219280298 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.3509523 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.191554978 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.367447012 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.328466309 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.181944676 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.265247123 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.23952029 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.263886797 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.2123863 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.194932755 seconds)
  done (took 17.592947808 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.430710926 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.161874629 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.241416905 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.398411401 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.200287768 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.414136503 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.452328984 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.162956738 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.313089977 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.175295271 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.176730087 seconds)
  done (took 17.211300035 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.415931509 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.161955542 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.228735525 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.399773872 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.201912457 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.414336754 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.449801008 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.164309583 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.303067586 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.204583598 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.175515342 seconds)
  done (took 17.203170881 seconds)
done (took 53.089381076 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.201592818 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.328133546 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.189743085 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.177307618 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.171826557 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.173274113 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.177563688 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.17163449 seconds)
  done (took 10.675320351 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.167591252 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.171014572 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.16740955 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.167543205 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.169906044 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.170764587 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.166900611 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.168755844 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.170893981 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.168800966 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.169873354 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.170540084 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.172321068 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.171292883 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.16771851 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.168854921 seconds)
  done (took 19.79710855 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.170458676 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.168271533 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.168596934 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.172501758 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.171286728 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.169774441 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.170725109 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.171511497 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.170921866 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.169071256 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.169782251 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.170911783 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.170077059 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.169519462 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.169560035 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.170390337 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.169673784 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.169827074 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.173697532 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.16901463 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.170005301 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.169275145 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.169683149 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.16884267 seconds)
  done (took 29.171486294 seconds)
done (took 60.725315983 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.172918797 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.169306882 seconds)
  done (took 5.428792999 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.233119993 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.235992295 seconds)
  done (took 3.556612824 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.173668656 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.172867291 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.173462961 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.172373041 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.173719453 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.171773971 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.175152586 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.172536651 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.173248175 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.172908744 seconds)
  done (took 12.819879047 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.174350964 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.174567554 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.170183182 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.174489536 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.172225869 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.170732343 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.172081496 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.172834123 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.173164865 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.171115957 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.173853085 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.170792704 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.173043155 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.169687982 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.172723926 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.171306115 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.169739517 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.170406989 seconds)
  done (took 22.185152279 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.186334312 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.192838063 seconds)
  done (took 3.468939334 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.310379381 seconds)
    (2/7) benchmarking "second"...
    done (took 1.214445731 seconds)
    (3/7) benchmarking "month"...
    done (took 1.287532163 seconds)
    (4/7) benchmarking "year"...
    done (took 1.277754395 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.21214823 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.191586681 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.212234355 seconds)
  done (took 9.792591308 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.172952511 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.362379316 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.466895638 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.74217026 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.177423478 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.176023412 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.065895847 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.177284319 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.179191098 seconds)
  done (took 13.608354325 seconds)
done (took 71.945112345 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.164117402 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.189267851 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.180090337 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.183167201 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.508352854 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.167571593 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.168746239 seconds)
done (took 15.646851454 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.164206277 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.155375926 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.171062175 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.177024263 seconds)
  done (took 9.756203138 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.179299152 seconds)
    (2/2) benchmarking "read"...
    done (took 1.522003133 seconds)
  done (took 4.790221713 seconds)
done (took 15.633309646 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.173673823 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.175254827 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.171585816 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.174730691 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.171525449 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.172927634 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.17443261 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.173446277 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.173105081 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.172105765 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.174895398 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.174402193 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.174733712 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.173367168 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.173394902 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.172451806 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.174657102 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.172365652 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.172530062 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.171973978 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.175503457 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.173450092 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.172243277 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.175731905 seconds)
  done (took 29.253644617 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.175979187 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.17292449 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.175449746 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.176258516 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.172283086 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.175425618 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.174911482 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.173457397 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.176420933 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.178367122 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.172864729 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.173278339 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.176426806 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.172844289 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.177687228 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.175013368 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.177955992 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.173357238 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.17838995 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.174361247 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.177909442 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.176134635 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.172884194 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.176457643 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.175786536 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.174987724 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.17844627 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.174437141 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.176016578 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.172891022 seconds)
  done (took 36.350374282 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.181265036 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.186085437 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.177041521 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.177430869 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.178087293 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.17746363 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.177316679 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.178885274 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.178344933 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.176917001 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.177725077 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.177565473 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.179299566 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.178016391 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.178646811 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.177428907 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.176735697 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.179330096 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.177200508 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.177679374 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.178140118 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.178804524 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.176494396 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.177685576 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.176000278 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.177695035 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.176871311 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.177430601 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.178644735 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.179998999 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.17676676 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.177146205 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.177960206 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.177472119 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.178850655 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.178306087 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.183739812 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.186476518 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.180665379 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.176477197 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.178788055 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.179536849 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.178681055 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.177034578 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.176557909 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.177084976 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.181352387 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.177900335 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.178890721 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.176941986 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.178103485 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.177829701 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.178230942 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.176598801 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.179429246 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.182963104 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.178674529 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.177206811 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.176746318 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.177157584 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.178489743 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.179029467 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.178718231 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.180731139 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.177941805 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.177225007 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.178317683 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.177016151 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.178045567 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.178519832 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.178713082 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.179649787 seconds)
  done (took 85.942031751 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.178606162 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.175688028 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.175612397 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.175756286 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.176687698 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.17747509 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.174532285 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.178278033 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.174837226 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.177639741 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.177628981 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.175631066 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.176179411 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.179790753 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.178012058 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.176312738 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.178177033 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.176832777 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.178678474 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.180198098 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.178083991 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.176338676 seconds)
  done (took 26.991338071 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.178309802 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.180236147 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.175946515 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.180828551 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.177916575 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.180327814 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.179145089 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.179738967 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.179443608 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.178379556 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.178810558 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.179421066 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.17874756 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.178624437 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.176283872 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.178462428 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.179946423 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.179103356 seconds)
  done (took 22.312345453 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.177191189 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.17792901 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.179003049 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.177584219 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.177389238 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.180597212 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.178063753 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.180661579 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.180117823 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.177272686 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.180274922 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.181380234 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.182193177 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.177841119 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.179998262 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.178761645 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.180410756 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.177353401 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.179398819 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.17681564 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.177887545 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.180630172 seconds)
  done (took 27.032984627 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.181437434 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.181083932 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.180181732 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.17788578 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.179102368 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.181031341 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.181000686 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.179495322 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.182808039 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.18227003 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.181063502 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.18241132 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.181728225 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.178325878 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.178635872 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.178582088 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.182133855 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.178392367 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.181212639 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.179608799 seconds)
  done (took 24.702588023 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.183565345 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.184387541 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.185081961 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.183976719 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.1834758 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.185465864 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.183653308 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.184139996 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.184691265 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.186168071 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.184191299 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.184121684 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.182600717 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.185503581 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.185116452 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.186409692 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.184910563 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.185570733 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.184817914 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.184549203 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.185192633 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.185400749 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.186109678 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.186392847 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.185637086 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.184514485 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.184390031 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.18526777 seconds)
  done (took 34.27234562 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.185066252 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.184596627 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.183473 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.182091261 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.181811581 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.181764817 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.183195067 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.182301532 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.184028922 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.181170194 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.184470438 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.184529645 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.183381964 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.185134578 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.185449678 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.185408824 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.185558339 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.181903187 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.182105661 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.182968 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.186818015 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.184896431 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.18450968 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.183194427 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.182311659 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.185037314 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.184927139 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.183042623 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.187225476 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.182122339 seconds)
  done (took 36.613044676 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.229035487 seconds)
    (2/2) benchmarking "in"...
    done (took 1.230533096 seconds)
  done (took 3.556666583 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.183303441 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.184463761 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.18513473 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.186256368 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.182120945 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.184657872 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.184349979 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.181688502 seconds)
  done (took 10.5699558 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.185316841 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.185019833 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.186372306 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.185483735 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.186778778 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.18723234 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.193172856 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.20534929 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.187814937 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.187420849 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.193506048 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.194205516 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.18861603 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.187073329 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.187194415 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.188885946 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.186522275 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.186836678 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.186932716 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.187580677 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.186489689 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.189057609 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.188106285 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.184297047 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.188449595 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.198777355 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.191621375 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.188253082 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.187416527 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.190969653 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.186690021 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.186438687 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.188756685 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.187960543 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.190010227 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.18883439 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.198626396 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.208432273 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.19477009 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.188226397 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.19007927 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.185109158 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.189673505 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.190419214 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.190206324 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.188903542 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.188425192 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.186758414 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.187637671 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.192455104 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.192907744 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.188516102 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.185086438 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.191659992 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.189640888 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.196194093 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.207382357 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.194748072 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.198852256 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.200507457 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.201122632 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.211218211 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.191361997 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.188778729 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.200518745 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.212579914 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.19512845 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.204651802 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.187953769 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.189681707 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.195751144 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.20303482 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.214717274 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.189570782 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.190266457 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.191383204 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.191659159 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.191516159 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.198266211 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.211497516 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.191993635 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.191571911 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.20080735 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.212504665 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.190820493 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.191385749 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.191930657 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.194054876 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.193321642 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.203621614 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.208588562 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.191968796 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.190598415 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.192269397 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.192709448 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.191685583 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.190691931 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.191843407 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.189617341 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.192575895 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.191200586 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.195825111 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.201856457 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.192115557 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.1935549 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.199884416 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.192143019 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.192371725 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.198083448 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.193755033 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.192775677 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.194279155 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.199077539 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.189364158 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.197527676 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.201269958 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.194321007 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.194850973 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.193414042 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.194522601 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.206896631 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.21988408 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.193769922 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.193491255 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.198228748 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.205886423 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.194534309 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.197339686 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.193956703 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.191571872 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.193270003 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.195885234 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.193586855 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.194532748 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.193942144 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.19592161 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.191929106 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.19572288 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.194358603 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.195975954 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.195430579 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.19616984 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.196046133 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.196438732 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.195692791 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.19668855 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.202006199 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.195173792 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.196784098 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.196522343 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.193863954 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.19606615 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.195778597 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.196786261 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.195574505 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.19622629 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.196326004 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.197471108 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.19959319 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.196468824 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.197636564 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.197463361 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.202048751 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.19809724 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.200475231 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.196706105 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.194457849 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.198616806 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.19721893 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.198320536 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.198011127 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.196188236 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.200474432 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.205641973 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.198526804 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.196498328 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.199583418 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.197755412 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.197877524 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.197963443 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.200716746 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.20555339 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.196958064 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.204882592 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.197425072 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.198875582 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.19923068 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.196971245 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.197958078 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.198378849 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.202355089 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.204784745 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.210414921 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.22239884 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.199198897 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.20384674 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.200050208 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.201936162 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.202823909 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.199129402 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.199673222 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.19982884 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.199021275 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.19912432 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.202718116 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.199597347 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.19878755 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.199193044 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.200548993 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.200037183 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.19915035 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.201201241 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.19975365 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.196392651 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.200059132 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.200987791 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.20075283 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.196337779 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.198356412 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.199799669 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.20063468 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.200894693 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.206669094 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.197358741 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.202216063 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.202561774 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.200683483 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.199622542 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.19957589 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.202170421 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.201434362 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.207993917 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.219139098 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.202092796 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.208138931 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.21848111 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.200542445 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.203484881 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.201867358 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.199446312 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.203407924 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.210341542 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.203313239 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.20197429 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.201505991 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.201642026 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.20252694 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.208436692 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.200234409 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.201339767 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.202064309 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.203437944 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.199738461 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.202664621 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.202574567 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.203054165 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.205717318 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.203499843 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.202373367 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.2039523 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.203259735 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.204025922 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.203458761 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.206766358 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.210746487 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.209069959 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.203062275 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.204339924 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.204877038 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.208290559 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.203796323 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.205146331 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.203695796 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.216889888 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.227955556 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.211010616 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.222157458 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.20729718 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.209659666 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.222454293 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.208727105 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.20411666 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.205077566 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.203864852 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.205256104 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.203161526 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.205022943 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.204804801 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.205664626 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.205823863 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.21028099 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.205754161 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.204618844 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.205496261 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.206490058 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.206657311 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.20395107 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.205598211 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.207619445 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.207405637 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.204142149 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.206171788 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.212653221 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.2242953 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.206399583 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.206571691 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.204362364 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.205874991 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.206313759 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.20564128 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.210127047 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.213958126 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.210700983 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.214267227 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.208236599 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.216504635 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.207395648 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.212351159 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.215092127 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.20455837 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.211710689 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.208471263 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.207572671 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.216310587 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.225583793 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.209672221 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.211514485 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.207678515 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.207706741 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.207759815 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.207344581 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.207804407 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.20675696 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.216784911 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.226843412 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.212390413 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.207785373 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.204698627 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.208452332 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.209044678 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.207269172 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.211528549 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.207330129 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.210187099 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.207783327 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.208275703 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.209913862 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.209413687 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.209596444 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.207454449 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.208968982 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.215289518 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.228401978 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.213134847 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.209239863 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.217074181 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.210637951 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.216108279 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.227184831 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.210624803 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.209601531 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.211354308 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.211562141 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.209578632 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.210287928 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.210650237 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.212279109 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.215080559 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.210393757 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.211911657 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.211654776 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.210581943 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.210278348 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.220375621 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.234518301 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.213416528 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.216265953 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.209366449 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.214279611 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.220154679 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.214802306 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.210685694 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.215216902 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.222920572 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.21957556 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.211084989 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.212336891 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.212274048 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.212530812 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.211581302 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.212050327 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.212038856 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.212003155 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.211817822 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.211614463 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.700993982 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.212518102 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.211568922 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.213433352 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.213134567 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.222461401 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.212186677 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.213423637 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.212532829 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.214727991 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.213035832 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.213778255 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.212691391 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.21193846 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.214043552 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.213103762 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.219355132 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.220047531 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.215156909 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.210991928 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.212851093 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.213022402 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.212559444 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.212639632 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.212986243 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.213715593 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.214283835 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.212012696 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.213938467 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.211424935 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.213649355 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.212573888 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.213039789 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.215440521 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.221378486 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.214667119 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.210586458 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.213697914 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.213841182 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.212669033 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.214398014 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.221103513 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.21742559 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.223475671 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.222384273 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.218321689 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.213695909 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.217172535 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.222182291 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.213896264 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.214885332 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.214865602 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.21665308 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.215852332 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.220022708 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.214310014 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.221479336 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.216096433 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.214041649 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.222505026 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.238716329 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.214443757 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.218478148 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.220575084 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.215923341 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.212128683 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.216081433 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.216263905 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.22250189 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.23574413 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.21719203 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.218205736 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.215493786 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.218613733 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.221777982 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.216458229 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.217244085 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.213777926 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.216194238 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.216829657 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.217683951 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.215348146 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.217314174 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.215993375 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.219479975 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.224654503 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.214357926 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.219077364 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.21764411 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.219847051 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.217948952 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.21867959 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.214912416 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.214467197 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.216906314 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.217787527 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.219765465 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.219587967 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.216516679 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.219778108 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.220295852 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.219496093 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.221621177 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.228851436 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.224670511 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.217030277 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.222059792 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.217815654 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.219909848 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.21805405 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.218821285 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.218672195 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.220579361 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.21826378 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.219759679 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.218601051 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.222218865 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.235679359 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.239895817 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.219429849 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.218480079 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.221392738 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.221376025 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.215924769 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.221239103 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.222076032 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.223431227 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.226660452 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.219577893 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.227221439 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.238301283 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.220116776 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.22428958 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.222158053 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.228189104 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.222990169 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.220949816 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.221295491 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.225264598 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.237858666 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.221077301 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.230118879 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.251205095 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.239020024 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.220398163 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.221841726 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.219895064 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.221042268 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.221986565 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.221459147 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.221376849 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.222793204 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.221301273 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.221700555 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.226973151 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.222247186 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.223475521 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.221210345 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.220728692 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.22129815 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.218807044 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.221990016 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.223513808 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.221288523 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.22331716 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.222208692 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.223554804 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.236010513 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.247870469 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.22259383 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.222247585 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.220092233 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.224192853 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.225277263 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.233121635 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.230766211 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.222072312 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.222939158 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.225656027 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.223845315 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.22373874 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.226169978 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.223275168 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.223304908 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.221157309 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.236703306 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.248697664 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.228325837 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.223395929 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.224903723 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.225627587 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.225521466 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.224100387 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.223820668 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.226188929 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.228631364 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.228256909 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.225588 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.225962323 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.227876458 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.233986958 seconds)
  done (took 721.595907466 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.223972517 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.22331803 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.222918518 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.222562854 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.223219453 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223188545 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.223585186 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.22305873 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.223209141 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.222605941 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.224827632 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.226606993 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.224204108 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.224435264 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.225388183 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.223946101 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223772978 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.223576931 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.224399618 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.222644592 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.22420295 seconds)
  done (took 26.83298471 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.227231318 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.223813794 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.224129897 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.226930723 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224020394 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.22584825 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.22627806 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227126882 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.228522643 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224441664 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.228361399 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227559731 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.225639968 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.226133815 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225883546 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22966377 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.228330929 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.225147091 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.227902297 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.225458032 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.227926459 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.225985365 seconds)
  done (took 28.116870323 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.227626314 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.228393088 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.228191431 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.227978502 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.229510528 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.226061022 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.229301464 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.227879478 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.228845774 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.229265427 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.228249323 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.229701359 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.235021034 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.23479912 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.230780977 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.230081006 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.229039533 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.229612622 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.228701266 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.227479854 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.23488048 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.247654587 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.227166347 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.228950871 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.230099837 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.230271664 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.229850049 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.230010239 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.230135303 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.233100125 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.229113464 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.229545504 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.233157111 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.228715568 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.231497226 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.235091057 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.230135697 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.228015866 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.232192334 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.24041045 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.252538593 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.230500397 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.238462495 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.249612031 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.230940381 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.233380983 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.24033455 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.228828236 seconds)
  done (took 60.268529045 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.808466736 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.824889368 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.824191491 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.828776815 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.832330938 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.832198816 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.838152021 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.83885674 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.827105339 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.829153511 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.830245801 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.829621593 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.834997216 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.830799883 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.836892295 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.830545166 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.830413019 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.832076178 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.839845957 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.835674772 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.834143526 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.832652472 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.828747919 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.833909225 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.834225028 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.82943271 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.829632511 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.833251646 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.833326668 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.82821858 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.833795794 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.841316456 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.840148131 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.825993566 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.828483359 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.831861305 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.832675837 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.83046583 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.836382545 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.832455264 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.832259099 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.833129944 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.840370901 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.840184038 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.840663884 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.83307233 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.830949219 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.835289269 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.833156297 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.835879514 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.839023471 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.83776032 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.836307433 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.835466262 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.83967419 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.838709791 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.842053508 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.84335435 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.839451197 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.839048246 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.836788993 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.838875652 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.839879496 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.839581744 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.838586401 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.842418037 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.837337678 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.847076317 seconds)
  done (took 125.872678051 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.236946853 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.236403005 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.235695706 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.23776437 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.235778133 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.23669893 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.235827343 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.236395897 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.236158927 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.235450692 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.237606827 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.237484128 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.23543257 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.236697437 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.236401019 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.235615652 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.238102497 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.237994127 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.237154688 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236800452 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.236584146 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.237625656 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.237309603 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.237416632 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.238589318 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.237594288 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.237691823 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.237108764 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238003713 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.237465687 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.237779307 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.237505613 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.237328239 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.23881356 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.239161325 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.238719857 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.238311847 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.238731463 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.238856681 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.240123007 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.239237318 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.24010325 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.239179513 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.23751958 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.239042216 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.239303977 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.239201765 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.239387883 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.240707777 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.239515164 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.240139789 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.238976723 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238922276 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.238671174 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.239328834 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.23907664 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.23900439 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.240107297 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241041711 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.241342597 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.241850145 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.240302444 seconds)
  done (took 77.912426491 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.241078224 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.240491361 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.238998839 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.238313012 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.240341084 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.238294164 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.240921366 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.240262152 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.240003834 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.24203284 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244082636 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.239414435 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239819464 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242287534 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.240201144 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239904244 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239531818 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.239763029 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241784685 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.242378081 seconds)
  done (took 25.956419012 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.240480484 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.243416663 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.240422994 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.24034791 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.243678576 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.240795463 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.242632806 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241801402 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240420499 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245134944 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.244633376 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.243249352 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23980286 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.240602288 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.24287274 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.240836541 seconds)
  done (took 21.018930658 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.241101164 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.242401019 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.244378684 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.243513629 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.239620091 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.239195135 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.241901333 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.242738234 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.240957496 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.244054118 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.244039229 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.243586994 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.243591749 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.242889375 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.239747912 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.242175542 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.241975343 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.241154874 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.243775281 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.243002662 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.242270495 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.241609647 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.243723545 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.245972781 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.242317385 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.242791673 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.240872227 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.241203139 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.241545211 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.243277332 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.241942193 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.241832638 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.242083094 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.242286446 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.244537659 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.24360996 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.245253939 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.245161713 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.245746608 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.245054002 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.246097217 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.244257578 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.245366424 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.245559498 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.243035188 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.246027934 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.243749236 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.243826344 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.243886142 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.243072245 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.246339945 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.245711704 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.248805817 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.246161817 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.247367433 seconds)
  done (took 69.537581355 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.248023241 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.244862672 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.244233135 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.247366025 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.246136446 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.244656297 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.247049516 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.246820908 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.244138436 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.247553709 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.244820687 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.249717689 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244578147 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.246771514 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.246290516 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246830187 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.246246795 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.245775449 seconds)
  done (took 23.584260991 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.24544881 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.245282859 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.247793836 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.246570537 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.244967855 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.246969734 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.245731006 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.248136521 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249416681 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.246483316 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245668717 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.252331608 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248326298 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.25012991 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.247643736 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24840289 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.251902272 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248551261 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.247852096 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.247348768 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.249954559 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.249627399 seconds)
  done (took 28.608771663 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.249981761 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.247711913 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.249076374 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.26529313 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.269014046 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.248859231 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.248078622 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.249238592 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.271510114 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.304027869 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.296634142 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.269834432 seconds)
  done (took 16.323630497 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.248225254 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.250632458 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.248841396 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.250190634 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.250991903 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.250333993 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.249013108 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.249238607 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.251817488 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.249864443 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.248106404 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.251375161 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.252405119 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.248693032 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252445606 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251543072 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.247334633 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.248533163 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.248071246 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.253133117 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.249019217 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.251954879 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.248390961 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.248720793 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.250816221 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.250130503 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.252706803 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25000428 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.24842947 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.252423456 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.251033831 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.250015679 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.251049444 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.251258724 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.253504383 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2521473 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.249355345 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25259583 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.251791185 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.249853283 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.252318815 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.251584309 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253299868 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.250132754 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.250889554 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.24923329 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.248962489 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.249634543 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.249824381 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.251774103 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.252953058 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.248845313 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252564274 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252546377 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.253720952 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25348269 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.252056664 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.249805091 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255503756 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.251987991 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251930674 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254185748 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.251623273 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.252529651 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.253537676 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.251262956 seconds)
  done (took 83.719750685 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.253196167 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.249674022 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.249878364 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.252879774 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25334422 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254309836 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252131732 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.251817877 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.252322522 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252353688 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25459014 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255254754 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254612568 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252129543 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2526507 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.252105604 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.252981538 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253171385 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252342295 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254902742 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255010047 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253291689 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.253001376 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253204939 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255818458 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25612854 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257510341 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254813925 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25421695 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252860931 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253721898 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253331773 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253719738 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.252358015 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.253454422 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253132386 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254269964 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253613812 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253366144 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257130166 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255411908 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258037485 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253776491 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25562432 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.255945634 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25475038 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254457338 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255033073 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254713973 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254822405 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254627187 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253885531 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254664166 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254779736 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255212051 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254887479 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254670543 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254878557 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255798742 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259128168 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256181936 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25545024 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257460759 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256194667 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255159989 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255642819 seconds)
  done (took 83.943924666 seconds)
done (took 1731.975699916 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.422084611 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.376083315 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.257732237 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.267745379 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.255837354 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.281404743 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.268176402 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.257304447 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.2572824 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.257603148 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.257311471 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.444845786 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.251228967 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.258975855 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.258657122 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.352539566 seconds)
  done (took 25.887817423 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.286466307 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.26380464 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.374265498 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.282239287 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.285688367 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.443574802 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.317296141 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.263154192 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.429457561 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.285315701 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.254201486 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.289877928 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.262074699 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.251531955 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.285262028 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.442578122 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.512372369 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.267357006 seconds)
  done (took 27.961282608 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.705846393 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.283605655 seconds)
  done (took 5.154246089 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.282634807 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.264019619 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.26493111 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.261899641 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.258815339 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.254073746 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.261768219 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.263191241 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.267587073 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.384763963 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.267902045 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.273540691 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.283304746 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.263422576 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.261400991 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.304073514 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.414657159 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.261969466 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.258558149 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.269803059 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.262889755 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.367839543 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.304407482 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.261567307 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.383803466 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.260117103 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.264505276 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.271115363 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.400166032 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.262136167 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.263044975 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.262541149 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.268092867 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.144539209 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.729031588 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.274813451 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.305163785 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.270086411 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.25944978 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.414509404 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.265105179 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.269516114 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.25732437 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.709329627 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.424903412 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.383723609 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.277730163 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.268350745 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.265408886 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.327016857 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.264508706 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.266042037 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.30512859 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.067373969 seconds)
  done (took 81.379552569 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.267068888 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.254742357 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.436951972 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.284695221 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.256301239 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.256318839 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.272949449 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.533171708 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.293675518 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.257889263 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.581851689 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.814091167 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.277436055 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.305130924 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.109567717 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.321854738 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.259156357 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.27184024 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.258114388 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.262262603 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.799595517 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.25846655 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.258339701 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.430358126 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.296492721 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.761784075 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.260131589 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.258171542 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.258856223 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.256642661 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.769450373 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.280252568 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.312940537 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.257752264 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.525413091 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.625025229 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.588215021 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.266201264 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.299485743 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.260367843 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.270331053 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.757539071 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.614761082 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.262190835 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.25669342 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.757663346 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.259549837 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.26527841 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.260001183 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.510370621 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.259991051 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.25858313 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.284422064 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.26040894 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.257457185 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.37383458 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.329604473 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.762305916 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.258819484 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.25837422 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.29902118 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.260619763 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.259948274 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.260500727 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.262643378 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.607284653 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.404851412 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.257232153 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.608313754 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.762914594 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.276757087 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.846475594 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.277484063 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.27929331 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.475885749 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.264761866 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.259031768 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.772390498 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.26570771 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.261787573 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.586629735 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.261904171 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.578951622 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.275704828 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.260292292 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.807225192 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.267532374 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.315301909 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.258909955 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.274378057 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.25959358 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.260385266 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.531539898 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.288781226 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.26437203 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.263461458 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.275422884 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.260580024 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.260255987 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.265956537 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.828967586 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.291725969 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.263870483 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.264095623 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.272550585 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.260139195 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.259730715 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.262833563 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.521667198 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.260808607 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.267453546 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.260827266 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.259952993 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.284536315 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.43147248 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.266521067 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.553652487 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.263882353 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.259126643 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.265683635 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.2601946 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.264015718 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.259937954 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.266016351 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.132791595 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.569967809 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.278377926 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.275937588 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.260509403 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.259178133 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.260832056 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.261489843 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.343372114 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.266275761 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.0091224 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.282074765 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.271031887 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.261037821 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.275581245 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.262972419 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.266284657 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.26496742 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.55371579 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.537731197 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.409363594 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.263596837 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.260227275 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.011369238 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.324365159 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.439394754 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.278333188 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.259809569 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.51262544 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.484144375 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.263297827 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.260709211 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.26363225 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.518039281 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.261654253 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.579585109 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.793499262 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.277338668 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.271155664 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.017841308 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.960586561 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.267014725 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.267149411 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.583316293 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.282795653 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.260016768 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.261928233 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.262458191 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.261257617 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.283559845 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.263237408 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.261535682 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.263188232 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.31102984 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.452528067 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.278351734 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.268884549 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.755822293 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.274284951 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.262563288 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.2832683 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.265752367 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.263561672 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.326363809 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.264275102 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.285886183 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.262669999 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.274933063 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.815577285 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.264833282 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.270804475 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.454514654 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.936219401 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.280134944 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.262731197 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.287124758 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.168034475 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.788170828 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.315417419 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.559553488 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.274439333 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.303689371 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.264567932 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.292054846 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.780745248 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.267975316 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.280372799 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.911129036 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.282509814 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.839052295 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.267415224 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.265736957 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.860721333 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.280262284 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.26682795 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.265475126 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.267649384 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.559925372 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.265692898 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.311779487 seconds)
  done (took 482.187420222 seconds)
done (took 623.730131272 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.265759674 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.266593199 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.256268895 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.268998116 seconds)
  done (took 10.233779762 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.273411843 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.272017519 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.274153684 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.271510457 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.272797078 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.273289124 seconds)
  done (took 8.814826128 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.266858766 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.267307193 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.27229031 seconds)
  done (took 7.98274096 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.471913062 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.300540506 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.598088404 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.286949985 seconds)
  done (took 8.842631373 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.275702931 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.274193225 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.275194072 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.275015514 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.2760178 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.276774641 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.277157863 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.275900277 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.277923388 seconds)
  done (took 12.665307489 seconds)
done (took 49.71296085 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.336909863 seconds)
    (2/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.373056155 seconds)
    (3/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.34807622 seconds)
    (4/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.327249204 seconds)
    (5/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.418146063 seconds)
    (6/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.362785348 seconds)
    (7/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.43695823 seconds)
    (8/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.303087376 seconds)
    (9/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.442584485 seconds)
    (10/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.369603002 seconds)
    (11/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.310773038 seconds)
    (12/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.306540207 seconds)
    (13/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.484112864 seconds)
    (14/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.283164018 seconds)
    (15/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.407636315 seconds)
    (16/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.413330278 seconds)
    (17/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.288175092 seconds)
    (18/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.075740842 seconds)
    (19/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.369453261 seconds)
    (20/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.396285614 seconds)
    (21/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.022918155 seconds)
    (22/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.291036232 seconds)
    (23/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.320551211 seconds)
    (24/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.29076042 seconds)
    (25/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.256592669 seconds)
    (26/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.392203637 seconds)
    (27/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.302290992 seconds)
    (28/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.277880102 seconds)
    (29/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.50483801 seconds)
    (30/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.418926542 seconds)
    (31/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.019620772 seconds)
    (32/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.302268459 seconds)
    (33/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.410286185 seconds)
    (34/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.347605154 seconds)
    (35/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.339152048 seconds)
    (36/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.597931292 seconds)
    (37/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.262028453 seconds)
    (38/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.3751784 seconds)
    (39/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.288413565 seconds)
    (40/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.284610708 seconds)
    (41/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.449286571 seconds)
    (42/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.109446744 seconds)
    (43/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.324404666 seconds)
    (44/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.972971609 seconds)
    (45/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.283303881 seconds)
    (46/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.368272612 seconds)
    (47/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.32668726 seconds)
    (48/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.413526444 seconds)
    (49/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.33618959 seconds)
    (50/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.281709523 seconds)
    (51/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.324370507 seconds)
    (52/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.444205219 seconds)
    (53/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.290985029 seconds)
    (54/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.283259488 seconds)
    (55/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.473334731 seconds)
    (56/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.294865268 seconds)
    (57/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.392573151 seconds)
    (58/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.365529818 seconds)
    (59/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.423968455 seconds)
    (60/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.379468155 seconds)
    (61/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.288321192 seconds)
    (62/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.350671897 seconds)
    (63/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.354706148 seconds)
    (64/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.921845953 seconds)
    (65/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.360675009 seconds)
    (66/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.325371195 seconds)
    (67/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.319634775 seconds)
    (68/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.321260006 seconds)
    (69/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.258088114 seconds)
    (70/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.09984551 seconds)
    (71/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.47365699 seconds)
    (72/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.284801535 seconds)
    (73/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.286790898 seconds)
    (74/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.374676405 seconds)
    (75/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.308109662 seconds)
    (76/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.301433886 seconds)
    (77/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.257474022 seconds)
    (78/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.355153988 seconds)
    (79/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.625231185 seconds)
    (80/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.263311805 seconds)
    (81/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.288713735 seconds)
    (82/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.296134026 seconds)
    (83/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.282932851 seconds)
    (84/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.296210926 seconds)
    (85/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.370378558 seconds)
    (86/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.430619259 seconds)
    (87/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.295889514 seconds)
    (88/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.467802071 seconds)
    (89/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.324927903 seconds)
    (90/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.383799632 seconds)
    (91/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.336735573 seconds)
    (92/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.261534913 seconds)
    (93/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.462820932 seconds)
    (94/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.369346717 seconds)
    (95/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.35303164 seconds)
    (96/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.367524385 seconds)
    (97/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.316730999 seconds)
    (98/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.426030942 seconds)
    (99/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.357483347 seconds)
    (100/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.305397741 seconds)
    (101/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.26218922 seconds)
    (102/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.455527857 seconds)
    (103/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.264682481 seconds)
    (104/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.415605058 seconds)
    (105/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.361799867 seconds)
    (106/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.412604916 seconds)
    (107/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.36525482 seconds)
    (108/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.261959544 seconds)
    (109/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.289517029 seconds)
    (110/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.374784452 seconds)
    (111/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.290763293 seconds)
    (112/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.45735522 seconds)
    (113/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.3001546 seconds)
    (114/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.974522904 seconds)
    (115/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.305154194 seconds)
    (116/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.981909273 seconds)
    (117/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.373282917 seconds)
    (118/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.309521511 seconds)
    (119/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.290110111 seconds)
    (120/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.325955787 seconds)
    (121/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.028497962 seconds)
    (122/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.321805879 seconds)
    (123/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.289363383 seconds)
    (124/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.025208824 seconds)
    (125/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.320291235 seconds)
    (126/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.295266723 seconds)
    (127/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.452965043 seconds)
    (128/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.948371089 seconds)
    (129/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.138929924 seconds)
    (130/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.42960132 seconds)
    (131/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.403026565 seconds)
    (132/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.361882883 seconds)
    (133/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.349810231 seconds)
    (134/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.367944378 seconds)
    (135/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.294134886 seconds)
    (136/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.269681711 seconds)
    (137/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.393823289 seconds)
    (138/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.291325579 seconds)
    (139/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.283267128 seconds)
    (140/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.413874981 seconds)
    (141/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.40623385 seconds)
    (142/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.28593757 seconds)
    (143/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.328814817 seconds)
    (144/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.268515345 seconds)
    (145/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.416363363 seconds)
    (146/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.48688501 seconds)
    (147/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.300225402 seconds)
    (148/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.022015542 seconds)
    (149/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.412944873 seconds)
    (150/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.30527654 seconds)
    (151/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.026656721 seconds)
    (152/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.319498451 seconds)
    (153/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.415817611 seconds)
    (154/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.372206981 seconds)
    (155/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.939066353 seconds)
    (156/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.294497136 seconds)
    (157/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.364530645 seconds)
    (158/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.383055042 seconds)
    (159/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.337155523 seconds)
    (160/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.373106972 seconds)
    (161/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.3114243 seconds)
    (162/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.036092041 seconds)
    (163/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.291127773 seconds)
    (164/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.368572072 seconds)
    (165/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.33961577 seconds)
    (166/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.29270491 seconds)
    (167/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.416863086 seconds)
    (168/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.414144689 seconds)
    (169/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.388454168 seconds)
    (170/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.500032282 seconds)
    (171/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.27282176 seconds)
    (172/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.453022557 seconds)
    (173/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.984367427 seconds)
    (174/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.365172526 seconds)
    (175/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.289248472 seconds)
    (176/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.379175028 seconds)
    (177/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.154303221 seconds)
    (178/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.32051627 seconds)
    (179/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.430256248 seconds)
    (180/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.286577585 seconds)
    (181/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.337739894 seconds)
    (182/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.945789398 seconds)
    (183/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.396502203 seconds)
    (184/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.299449734 seconds)
    (185/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.937649409 seconds)
    (186/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.466219931 seconds)
    (187/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.327283634 seconds)
    (188/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.307681504 seconds)
    (189/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.143681106 seconds)
    (190/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.500248218 seconds)
    (191/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.325827375 seconds)
    (192/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.336592783 seconds)
    (193/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.303217231 seconds)
    (194/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.299088681 seconds)
    (195/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.323727694 seconds)
    (196/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.349713746 seconds)
    (197/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.456793632 seconds)
    (198/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.306738141 seconds)
    (199/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.301145387 seconds)
    (200/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.286412533 seconds)
    (201/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.284392714 seconds)
    (202/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.433696761 seconds)
    (203/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.40352734 seconds)
    (204/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.941489363 seconds)
    (205/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.279411222 seconds)
    (206/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.940950212 seconds)
    (207/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.303151561 seconds)
    (208/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.381256527 seconds)
    (209/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.577409323 seconds)
    (210/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.607888492 seconds)
    (211/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.435959758 seconds)
    (212/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.481824074 seconds)
    (213/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.304794167 seconds)
    (214/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.425192859 seconds)
    (215/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.305401813 seconds)
    (216/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.297653843 seconds)
    (217/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.27528084 seconds)
    (218/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.125268774 seconds)
    (219/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.283984838 seconds)
    (220/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.933554008 seconds)
    (221/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.491361267 seconds)
    (222/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.37026512 seconds)
    (223/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.355480952 seconds)
    (224/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.399815217 seconds)
  done (took 355.918782313 seconds)
done (took 357.095591021 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.344566077 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.473363979 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.314695485 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.317455088 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.339443088 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.293538113 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.334943455 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.305689747 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.300956045 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.299106888 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.286915861 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.299543814 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.318751987 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.330525416 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.410961473 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.302870936 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.315100075 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.29903754 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.337485113 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.355372297 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.341858458 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.342174065 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.310960383 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.315732854 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.34564476 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.345526037 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.320342402 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.293818688 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.295237301 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.341461131 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.297441093 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.317588757 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.347711633 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.350008565 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.343014789 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.301973944 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.344855377 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.476633222 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.335629643 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.336515206 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.303507629 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.348539982 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.311650189 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.318547204 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.348930693 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.310976186 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.348460436 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.423769022 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.302925087 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.287167032 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.366354246 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.363571478 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.305349728 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.290680401 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.312824339 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.419176069 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.302931043 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.349965109 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.305278184 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.345834864 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.416452105 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.348786807 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.360794153 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.346831829 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.301439969 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.322933006 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.302815017 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.358908929 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.299372992 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.345105491 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.348817909 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.305741072 seconds)
done (took 105.206745088 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.430074299 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.303242227 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.46185021 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.301788184 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.469760426 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.44988341 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.302427368 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.30154991 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.300744579 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.124243188 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.300543529 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.299440749 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.304634564 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.301868159 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.435742285 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.302215061 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.299640622 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.018916459 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.301926833 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.446982546 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.302867492 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.299897832 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.302647454 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.126788019 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.301655502 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.29828052 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.452059532 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.305586768 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.016987521 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.294956604 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.300153 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.021086913 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.453034039 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.321255898 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.313025226 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.312003989 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.471196819 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.319909191 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.431475868 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.434123861 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.464355173 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.34076939 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.297667109 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.303073612 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.308261368 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.306723023 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.298572017 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.32974957 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.300802234 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.30323807 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.022585366 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.314396754 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.310524983 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.302916968 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.302313163 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.325461465 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.301433295 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.305750872 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.456196162 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.304985548 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.433387912 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.127413287 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.127571141 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.302540328 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.30081589 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.302704504 seconds)
  done (took 106.533515886 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.37568338 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.38067841 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.418915793 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.318652868 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.354411955 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.419178042 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.322265215 seconds)
  done (took 10.795080754 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.309493839 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.306198409 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.355097089 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.357790007 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.309246879 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.516653103 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.303920605 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.315608709 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.301174185 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.38042708 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.307179205 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.309805964 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.315726526 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.304450845 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.35455448 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.317427422 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.424386038 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.309352457 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.310308431 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.463284633 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.306651746 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.31538681 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.380322322 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.319669681 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.30817677 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.31736548 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.256016806 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.308445003 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.304278325 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.304395707 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.305294469 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.417650722 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.309432383 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.307953956 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.30708716 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.47479885 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.309007888 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.305565823 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.30745835 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.302438891 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.311275903 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.308227525 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.311882112 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.308126925 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.309905448 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.334644794 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.307635105 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.309843892 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.308170229 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.312161261 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.380969932 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.308712819 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.30695308 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.306558987 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.387935862 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.31632114 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.312270151 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.307215634 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.313285298 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.306586648 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.461999783 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.354290088 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.308921643 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.35679357 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.309785013 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.308353281 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.310521877 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.312222068 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.39947205 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.311384449 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.359199738 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.305441054 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.532217999 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.332802819 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.309711197 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.307293899 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.311786778 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.311783711 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.30759262 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.316542631 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.306996553 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.314316195 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.315346236 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.30731654 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.307488964 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.494688332 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.467416267 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.306584882 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.323182274 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.316815339 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.307865162 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.386095905 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.311123162 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.310124653 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.360029994 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.425155735 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.38744791 seconds)
  done (took 135.690239793 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.325878859 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.328304948 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.313216102 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.337768059 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.316228587 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.313397134 seconds)
  done (took 9.1435884 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.316027014 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.311097004 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.310401574 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.310315768 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.308932371 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.313992473 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.309577609 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.315968096 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.312921933 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.313597558 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.311596276 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.312348929 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.312233079 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.313422364 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.314866286 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.312593047 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.313702178 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.310926946 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.310192741 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.311852893 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.308761482 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.311846825 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.314503556 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.315545578 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.316803113 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.313148972 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.338023658 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.315748377 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.315047325 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.320958391 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.33448466 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.317245469 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.316506504 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.320663274 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.319463091 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.316410867 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.315357297 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.315417067 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.309486917 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.314844288 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.314869582 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.31300629 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.315581888 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.319623064 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.314768413 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.322274749 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.318526071 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.334312212 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.313353331 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.313430715 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.313273118 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.316544357 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.315595651 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.315352371 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.316517571 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.338309209 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.319139989 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.316268642 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.314780219 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.318297379 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.318606263 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.313485835 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.320616218 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.319470324 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.31694183 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.318407654 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.321084525 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.320918688 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.317175223 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.316850882 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.313241187 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.313082306 seconds)
  done (took 96.983933098 seconds)
done (took 360.345210819 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.333046499 seconds)
  done (took 3.549314426 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.392645432 seconds)
  done (took 3.605771237 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.1453617 seconds)
  done (took 22.362999616 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.341623632 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.421222588 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.327541987 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.314064028 seconds)
  done (took 10.622214704 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.560076059 seconds)
  done (took 3.777071637 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.310776458 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.306610427 seconds)
  done (took 5.834236411 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.588482286 seconds)
  done (took 3.802082376 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.736539893 seconds)
  done (took 3.957129564 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.327585528 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.32840489 seconds)
  done (took 5.880515772 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.299397542 seconds)
  done (took 3.516519853 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.040195549 seconds)
  done (took 16.259355042 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.318975786 seconds)
  done (took 3.538800583 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.348861314 seconds)
  done (took 3.562292049 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.812296156 seconds)
  done (took 6.029416817 seconds)
done (took 97.512827727 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.311515694 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.314296988 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.312511782 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.313633633 seconds)
  done (took 10.467553643 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.369611855 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.370728352 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.372285808 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.372394456 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.369881553 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.373047991 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.345740642 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.343980967 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.372307308 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.371039599 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.371537789 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.370349361 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.371375604 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.344815853 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.371402664 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.374832613 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.372772506 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.372265447 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.346987421 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.371231778 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.320525663 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.371117194 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.37406166 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.320354837 seconds)
  done (took 33.932767012 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.816090884 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.393583188 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.475044715 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.370546326 seconds)
  done (took 7.273545289 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.399716301 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.39854752 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.409550262 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.45359786 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.462838718 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.412720159 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.350502179 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.344666573 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.327476138 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.397827834 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.449093254 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.391959966 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.47746329 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.324123179 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.526526514 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.32142042 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.324284261 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.399605795 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.452915748 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.455070205 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.323652309 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.399340637 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.399862968 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.394903045 seconds)
  done (took 34.817689546 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.329182166 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.333627199 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.321388985 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.335348499 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.321242302 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.322892161 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.320537942 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.327288457 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.321145182 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.319884244 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.322387505 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.337030209 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.326659461 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.321006365 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.328401309 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.3227032 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.329077313 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.325394319 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.321781143 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.328754939 seconds)
  done (took 27.736023218 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.317217513 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.317151932 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.670148173 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.573803423 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.315796237 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.316128649 seconds)
  done (took 13.734547716 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.391357496 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.548764341 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.327041243 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.663593411 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.750622621 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.326217353 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.325091098 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.567266604 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.874381125 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.842421941 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.383213886 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.396623693 seconds)
  done (took 19.620220225 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.331523464 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.320900401 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.320436072 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.337405155 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.372952034 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.343325444 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.330463841 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.318963154 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.378900381 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.400176779 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.345945408 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.377557083 seconds)
  done (took 21.406455872 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449744489 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.319264153 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.319861989 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336793372 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32174744 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.164690498 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.345222135 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.023320579 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.34082738 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.595966616 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321287968 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451752513 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.577572312 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324922628 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.325614488 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.294372978 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.554531326 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804628638 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319780406 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323333478 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357436061 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.318660219 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.321910011 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.529124287 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.325058652 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320685549 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.588117147 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.322354186 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597191417 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.34244099 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332886897 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3195545 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.596815268 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978238276 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442164228 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.524550685 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329231161 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.323076792 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.334919629 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.325270331 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338926222 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.325004217 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332333415 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322650505 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.322521179 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319853554 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.038583179 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.345401208 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.322400306 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.324302496 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.572306054 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424017991 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.32946343 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.321846899 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382945948 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326470535 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.327577177 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415867005 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918711446 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331752603 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326562611 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.326390231 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.328169973 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342557804 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933253473 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.329382417 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.329456281 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.32975972 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324988194 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.326446892 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.344697654 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324732973 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.346840361 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326297135 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028540295 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.330164646 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347331019 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866113484 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333255761 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.327432598 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.558208603 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322657063 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32642667 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.325228643 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.325267307 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02453978 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335184665 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.327499693 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.346196248 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.054450626 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.556940057 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349200532 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356095027 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.548717361 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.309598883 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327298231 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.326570756 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33015475 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348980074 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.036605654 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342516897 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.328701433 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.587769303 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.537742589 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337137809 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.311262801 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.808829874 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358224337 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.342931727 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.326542618 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.555267466 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.899887848 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.344047499 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338374581 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344725365 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.327775466 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068345619 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340758706 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.431435754 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.327653912 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610635066 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.103198728 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329143844 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392979966 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332312096 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.329563249 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335272532 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330191135 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.32903436 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.526202862 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350419767 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.356692431 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.329542848 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330360106 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.323283606 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332440666 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.331825364 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.551814471 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334541454 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.606281079 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328487192 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330388702 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32711432 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.549890957 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.325952265 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.667667943 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.594026184 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341275537 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.339752055 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.344327061 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350001292 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433231945 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353393342 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.342014355 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.589445121 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.335358233 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.336521742 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338502896 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.332721971 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335947759 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.336708543 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336918554 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904954524 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312921407 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.335824658 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.220215013 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.343381588 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401366974 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.33661842 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.539273699 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.328683755 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358233377 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.335000041 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.326596213 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.556284402 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.33993225 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.332250977 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407617832 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.801005085 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.923333772 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.347891686 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.330926346 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.326387586 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.329219382 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329002242 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32704939 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.332076733 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.536043531 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.349432774 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.328824648 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.911541312 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338037779 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.334129785 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.338681924 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.343975184 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.334345969 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330611483 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.333230293 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344689649 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337532656 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.366888119 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476226994 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.342815299 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.332168681 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.850837801 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.335810353 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.33019522 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.331421957 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363739245 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.341114196 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13990613 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.595230346 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329531655 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.58643051 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.341060705 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.353544347 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.331410946 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344293872 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337144806 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.354248182 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364519673 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.345771725 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.33857872 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336837988 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91483823 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072408003 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864761154 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337786247 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.33285081 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.335730653 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.047461098 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352168658 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335272378 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.566702358 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.046229691 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354076375 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.80790498 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.356513823 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.083030834 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594956159 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.569847339 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339360945 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.344312176 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.595510828 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.552944843 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370127199 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.333176066 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337667256 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.318976987 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884148687 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356899082 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417839157 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051678807 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363749854 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343634125 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.346181065 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.344594554 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.735267038 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.360105954 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337368905 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.338791035 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.339068393 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144273249 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.342737827 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33950275 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956766279 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343018556 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.815207963 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359802294 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.546603095 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.352304354 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.343066969 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.344590353 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.34562065 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.598976778 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.590690209 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344050675 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.341730222 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866230026 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.213365047 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.347034156 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341916766 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079493708 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344534085 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.619629139 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.348355819 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.338968481 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36452354 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.341790853 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33793184 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.336172604 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.351232137 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31909556 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829265841 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.344164728 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354077323 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344242194 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344655931 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.597127361 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.35651967 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.919701522 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.574269221 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357557179 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367324615 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.345833775 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34365303 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.327522281 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.339846089 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.342616741 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430445234 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.571101221 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.354156685 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.329983466 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.355634798 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.554994633 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.343484181 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.341349608 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581707192 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.339800343 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.344272005 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092344333 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379787214 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.341814998 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346118871 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.339511704 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.376138723 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415866004 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.555105852 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.353466949 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.352705353 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.741733704 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364410541 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344009522 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.361175941 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437277786 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341302078 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.361580558 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.114048027 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92043709 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078912198 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.929065069 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.603245998 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.346654759 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353405016 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346016222 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503301018 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345116113 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618843175 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346125267 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.346953862 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369742577 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345129517 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350011833 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55673532 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618586651 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34682153 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358265663 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344567058 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.345634273 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.353451976 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.558163502 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83179638 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893316365 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346758663 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.34588532 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.081994106 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634764092 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347545936 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348477251 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344774292 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.352574482 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.384111716 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.351827989 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356691438 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492992953 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.602181176 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00908838 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.377958232 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.372162157 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.862545987 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349316341 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.625553773 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343812827 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.561487056 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933340966 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.04369411 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619071191 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420967414 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.561275546 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.350035225 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510658868 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.347288765 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.346595122 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347558594 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347854317 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.345446512 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.357447388 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93499484 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.615870442 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.35308938 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.347307721 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377764463 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.360504388 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.57545991 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061416438 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.574921429 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.362416522 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.356308422 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.349736706 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932350882 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609172213 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353437755 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.35383177 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.589836739 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.353596082 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.37665256 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.869024433 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.349126959 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904517168 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.32245519 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372752214 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364254034 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.052655765 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937610205 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.354925981 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847700663 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350485433 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357235045 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625966697 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.359012166 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.362295776 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.630378228 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.353242988 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.366674211 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.56724318 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.93385109 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.107104546 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.359182509 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373917431 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.370817632 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353452527 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436114075 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37270059 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356443316 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.766606647 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.370698472 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353130729 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36258574 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.350142767 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357165597 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.35187606 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353315299 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.356579374 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.354480305 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.341246503 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.356921137 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449002116 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91069557 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380459116 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.031755976 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.682005459 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.611664424 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.3542257 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.344456153 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.360024046 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352586552 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35397424 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353757925 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.352591648 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899614727 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.355155728 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.367520263 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.357617837 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.357653775 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563976654 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.362641317 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.566830826 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359053699 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.370593284 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.339247331 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355143969 seconds)
  done (took 958.24411097 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.402406921 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.397324022 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.408175041 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.432108692 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.365152469 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.472361237 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.374104554 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.376040298 seconds)
  done (took 20.480172041 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.356275886 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.365571876 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.36369159 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.363930292 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.363744304 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.81802406 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.375641893 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.364373757 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.369720832 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.358305714 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.36036007 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.338561017 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.367873407 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.365608272 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.354013449 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.366291698 seconds)
  done (took 32.515307273 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.25989314 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.469479762 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.1637915 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.371924099 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.380296225 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.361717642 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.551501988 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.38540489 seconds)
  done (took 26.20162104 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.370888833 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.369797597 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.373350585 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.371344018 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.368340174 seconds)
  done (took 8.110950753 seconds)
done (took 1215.758278317 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.36364464 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.366005957 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.364784255 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.363560625 seconds)
  done (took 6.712497199 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.339764237 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.345999244 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.343181155 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.358521645 seconds)
  done (took 9.6447877 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.047072981 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.990196285 seconds)
  done (took 5.296483659 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.839887028 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.840412342 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.838000734 seconds)
  done (took 6.775232043 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.665630071 seconds)
  done (took 2.923567517 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.254025646 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.362149039 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.03272155 seconds)
  done (took 7.908063704 seconds)
done (took 40.514860841 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.358618581 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.619962327 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.514731505 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.362172066 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.516519455 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.517648082 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.16134845 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.359814241 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.378028085 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.357287633 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.357832842 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.517380195 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.072770438 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.60911911 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.075824825 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.703904577 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.525277092 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.363933195 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.368993154 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.36235441 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.158585258 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.358893227 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.369848474 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.360137597 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.518386249 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.510756889 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.361489818 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.70082109 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.360583024 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.363981128 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.505507068 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.37378945 seconds)
  done (took 82.303230404 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.370724543 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.360219509 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.375094494 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.363027278 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.357638665 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.370697867 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.361914075 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.360740103 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.356815953 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.358970177 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.363682203 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.358156035 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.36015736 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.361013766 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.379078973 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.361455457 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.384046276 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.360316099 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.375573801 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.359623663 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.360027147 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.361530875 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.374241992 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.362499203 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.370505829 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.373291344 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.357980965 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.360728268 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.361533902 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.358476523 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.372546271 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.369669336 seconds)
  done (took 76.943668389 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.366891651 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.36973177 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.361263456 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.373911145 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.360169522 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.364869438 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.364746822 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.359369646 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.360459075 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.358089963 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.373315235 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.36255889 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.377583218 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.362776439 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.364410696 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.362374031 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.367288516 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.373680527 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.363070221 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.361785919 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.383172732 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.362385382 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.360257949 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.364011098 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.37092859 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.364252596 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.365121239 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.368048268 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.373932091 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.363380835 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.360979153 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.364358506 seconds)
  done (took 76.970980803 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.646382384 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.370373769 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.376048146 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.372008732 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.374073859 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.372181112 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.366759955 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.651717987 seconds)
  done (took 14.795745644 seconds)
done (took 252.27088854 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.36296377 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.878300247 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.408098423 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.369915465 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.395054303 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.394910308 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.590826866 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.404968421 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.589514066 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.380966154 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.39285803 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.368423975 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.151045298 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.524006313 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.242064646 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.336198047 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.240338405 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.367117246 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.963959469 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.645625435 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.397207778 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.370058583 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.220966953 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.265042569 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.356157065 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.455781643 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.470705864 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.588085753 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.530046169 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.453404493 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.890552183 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.379559482 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.369995439 seconds)
  done (took 64.018552732 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.374288568 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.493392392 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.37511619 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.379527033 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.499256737 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.377367642 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.377699367 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.378040216 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.37767462 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.376923133 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.377427556 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.378124976 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.37665111 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.420065613 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.501867437 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.391964013 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.377171126 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.489131442 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.375707652 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.368768272 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.41757853 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.377037072 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.378110554 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.421136798 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.378615122 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.380784867 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.496994513 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.380014655 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.37356828 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.493506777 seconds)
  done (took 43.431738041 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.37801251 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.973863781 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.109635276 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.384868751 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.378969708 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.384233361 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.656349154 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.377585073 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.381078688 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.382933066 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.894185601 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.384282058 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.412653344 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.129778402 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.383511692 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.380892003 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.380066156 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.378739101 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.989575678 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.390439857 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.683572154 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.382417248 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.660712722 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.388787095 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.403804654 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.382430677 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.388922811 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.24484854 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.38314988 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.888418752 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.121193889 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.656134586 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.15574116 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.11197903 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.111333468 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.384313154 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.382228324 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.886705205 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.386070957 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.380434192 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.662871223 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.378626858 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.119264077 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.082136415 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.399926463 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.382688648 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.247516841 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.889908583 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.618409509 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.384967256 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.144762167 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.386742207 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.381903606 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.384699545 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.617302889 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.386681622 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.379901371 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.259474002 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.382080097 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.663210284 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.382574769 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.385947964 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.981580507 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.380296992 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.984449539 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.383993598 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.393502791 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.403615445 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.112928595 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.382516897 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.10676006 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.396131136 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.383485968 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.883353323 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.976633116 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.299383221 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.381914446 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.991963415 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.173204349 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.654161522 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.38883519 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.209807959 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.661944279 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.387506888 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.386152196 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.38607348 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.383425409 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.459547362 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.661633958 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.038818477 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.102356454 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.277701792 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.659687447 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.393068011 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.384006923 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.263084734 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.381276391 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.383141537 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.123823437 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.105105123 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.403899431 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.393265013 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.121688514 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.406121683 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.668696566 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.392062454 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.14066643 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.3885061 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.460968097 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.384804816 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.39498709 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.410196294 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.670438552 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.392228948 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.388603966 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.109054189 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.941475709 seconds)
  done (took 194.085376867 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.385339342 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.37627578 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.380961435 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.377696113 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.37888974 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.389228472 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.381164447 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.380799701 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.384750091 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.379111517 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.378871465 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.388948554 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.387650759 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.379311464 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.37705779 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.393406697 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.381920397 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.378076994 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.393712055 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.379837918 seconds)
  done (took 44.929098534 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.388693753 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.935763267 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.899023746 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.384061121 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.385654788 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.389511425 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.443963447 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.384406464 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.387316374 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.683409597 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.553271105 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.404245362 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.389286216 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.388957239 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.908629711 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.378715918 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.68015752 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.933696611 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.388500216 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.938289582 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.376292973 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.389310904 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.388328135 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.937499093 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.68133272 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.665682491 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.447996618 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.944062924 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.38792726 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.388851431 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.939013987 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.391758872 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.394503207 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.935532929 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.404068851 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.403028505 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.389946692 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.449649979 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.449686311 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.687916903 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.015336092 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.669966454 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.403297958 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.561673802 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.393031382 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.381085103 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.944242449 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.409515866 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.381346518 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.39224386 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.398182136 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.908350846 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.408967442 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.903082188 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.407985927 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.395346456 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.947008238 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.906327919 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.924791116 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.562156517 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.404531172 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.672506734 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.393484348 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.947111376 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.412378914 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.394958639 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.393784503 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.559246159 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.957162547 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.676589721 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.693048 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.69293437 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.395220156 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.452116703 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.405715697 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.761460862 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.452367324 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.795769776 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.695067621 seconds)
  done (took 126.049091121 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.659829075 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.498318046 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.797877324 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.009048386 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.394623433 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.514472362 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.504519832 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.644114208 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.400354876 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.485354834 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.028768535 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.479422505 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.145830465 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.461397242 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.48295668 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.536875205 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.78221688 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.382336895 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.04668053 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.009521909 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.393132432 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.520815401 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.970327826 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.61373761 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.39165739 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.944402531 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.307200903 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.063849349 seconds)
  done (took 53.751941582 seconds)
done (took 527.525838985 seconds)
SAVING RESULT...
DONE!
