cset: moving following pidspec: 8070
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.001434722 seconds)
loading group "string"... done (took 0.567480888 seconds)
loading group "linalg"... done (took 8.957076456 seconds)
loading group "parallel"... done (took 0.172764733 seconds)
loading group "find"... done (took 1.453532727 seconds)
loading group "tuple"... done (took 2.124224787 seconds)
loading group "dates"... done (took 1.395019516 seconds)
loading group "micro"... done (took 0.221457648 seconds)
loading group "io"... done (took 0.628387245 seconds)
loading group "scalar"... done (took 44.589879813 seconds)
loading group "sparse"... done (took 14.262728192 seconds)
loading group "broadcast"... done (took 1.171105599 seconds)
loading group "union"... done (took 12.843474948 seconds)
loading group "simd"... done (took 2.738057249 seconds)
loading group "random"... done (took 11.09102243 seconds)
loading group "problem"... done (took 1834.83846528 seconds)
loading group "array"... done (took 26.410520309 seconds)
loading group "misc"... done (took 1.130911969 seconds)
loading group "sort"... done (took 3.804945465 seconds)
loading group "collection"... done (took 19.030522068 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.635852928 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120738797 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.170453221 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.353346635 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.215394287 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.146748324 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.164743688 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.565853305 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.023595679 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.21592707 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.148121078 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.558450015 seconds)
done (took 6.045773652 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.293733685 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.436432473 seconds)
    (2/2) benchmarking "String"...
    done (took 0.115338311 seconds)
  done (took 1.215196109 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.095154894 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.178402822 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096264377 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.113517272 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.113746341 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.112403182 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096631508 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.113301368 seconds)
  done (took 1.481862336 seconds)
done (took 3.752348511 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.498473647 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.854660026 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.535609932 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.141448428 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.162039203 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.15349267 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.32067718 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.161502501 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.125584321 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.088140978 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.175799985 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.385502581 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.481204607 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.957319933 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.087669116 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.130727457 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.085278184 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.712233492 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081470936 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.143175733 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.529127597 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.129049793 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.121062788 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.143429822 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.193633262 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133800903 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.170490354 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.097005114 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.719877369 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.107265588 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.186034045 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.101968402 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.16600722 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.252572213 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.097995623 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.099330002 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.780418051 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.177430972 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.113942043 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.104516812 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.781580584 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084087728 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.208262642 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.114449857 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.109883864 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.226919489 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.119037655 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.081781237 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.105256262 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.092235748 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.177195728 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.653003799 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.109108437 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.152585641 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.111356639 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.801077746 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098022138 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.158183973 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.1407892 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.105250188 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.102872577 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.10839026 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.178979983 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.112521397 seconds)
  done (took 20.397864169 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11817688 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.144428352 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097382187 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142705923 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.143737001 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100529721 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085694919 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096824703 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.111361361 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.189950327 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.140992136 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.147092324 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093447403 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084555702 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.121015808 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.253065888 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107673195 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.124553892 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.083313606 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.109624106 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.143354971 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.098877474 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111827608 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.112988473 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.173500528 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.208929481 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109077325 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126481282 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.0961229 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.101477902 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145849294 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.165248375 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.077935763 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.097337735 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.188826515 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124349046 seconds)
  done (took 5.251754517 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.207402655 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119586334 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.199821565 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.186064303 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.151491722 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.173873678 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1242486 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.276704563 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.198384094 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.182901683 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117612217 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113097675 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080327804 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.10011056 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.138947697 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079611508 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.728128575 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.183996597 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.155591606 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.130240275 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105209474 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084281541 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.728941361 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103557286 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.083781794 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105163665 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.074336899 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.133550825 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.181135134 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105203158 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.33744659 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.117978865 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.093578524 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13709646 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.198601807 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.135032205 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.145785065 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087852269 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.101906584 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.222236146 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.113984671 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078754756 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.130143338 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.10052287 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119455132 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135922199 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.103226064 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.114413792 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.230101237 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.10353395 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.103828767 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.200262374 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.203543817 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.10027141 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.102113655 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.367762484 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.122337575 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.089184486 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.104079891 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.367486889 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137655933 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.086212954 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079427434 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.107277376 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.097160923 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.838458469 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.093717601 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.518844104 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.096744869 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.161278988 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103679033 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.109712074 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088652939 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105875327 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.105239706 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.10154809 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080565283 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.100488599 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080910815 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.105585971 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.117350791 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087994388 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.099030738 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150787321 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084155157 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.119961836 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.121997455 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129222663 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.087635768 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09798444 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11656014 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101022992 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084735712 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.150717344 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.107624611 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.117347363 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103704511 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129735643 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.101085823 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.241589679 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083776488 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127664172 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102872621 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11656111 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.124061447 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100281553 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085630949 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.098634261 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081633943 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167485113 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083432947 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080737684 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.104344659 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113831499 seconds)
  done (took 25.752176262 seconds)
done (took 52.057993616 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.482864345 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.099854156 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.118701219 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.11929755 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.116091689 seconds)
  done (took 1.672110966 seconds)
done (took 2.38057087 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.34642607 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.199776187 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.104693276 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.206880446 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09254722 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.212125259 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.173201459 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.121389505 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.206948003 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.103561478 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.18661856 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.10326814 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090715256 seconds)
  done (took 2.884358933 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095506103 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.121909376 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082860888 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11318471 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076649294 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111812846 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094330627 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.140391783 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.093715918 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.105030267 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077645855 seconds)
  done (took 1.820398931 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09200518 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116973632 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083289011 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108795938 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077246129 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09149163 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110281332 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119814305 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09246889 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104605926 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078183998 seconds)
  done (took 1.784827278 seconds)
done (took 7.190007879 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.080925242 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.52255153 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.122651546 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.170216791 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.354820103 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.216665377 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.536543842 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.135891991 seconds)
  done (took 12.04125229 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.117729674 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.099883621 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100088463 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.105364614 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083485702 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.101835011 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.081674579 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099851027 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.08374454 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103489437 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084849264 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.102909516 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.08525872 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102494768 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084342324 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100085818 seconds)
  done (took 2.306689168 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.122083384 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120418973 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106733151 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.111904502 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.08657911 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105670946 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.089756483 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.105872229 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.085740193 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104327949 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.110120916 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.092049859 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.107736959 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.085025356 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105999815 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.094278865 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.102787937 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106048893 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.090408631 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.106690282 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092972615 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.103899131 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.10782006 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.092012305 seconds)
  done (took 3.259751224 seconds)
done (took 18.318598655 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.170572639 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086712604 seconds)
  done (took 0.96898977 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.103591319 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.123606393 seconds)
  done (took 0.946247041 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.106562351 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.099638213 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138698861 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.11812747 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084741101 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099581917 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116887441 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.101679002 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.08413916 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.101880094 seconds)
  done (took 1.771779423 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.085599575 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.104183024 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.092160878 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.122816166 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.11251731 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.086061729 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.105959368 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.088613831 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108421053 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082677682 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.109928654 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.120828584 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.090884049 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.122476947 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.089746403 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.107668152 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.110908054 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.087926069 seconds)
  done (took 2.549232426 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081835782 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.085260213 seconds)
  done (took 0.888550389 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.085476091 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09932469 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08613409 seconds)
    (4/7) benchmarking "year"...
    done (took 0.102858279 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081885425 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.098993742 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.08200201 seconds)
  done (took 1.357430439 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.527310582 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.267088161 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.349608021 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.100641432 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.157837766 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.383794369 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.139300524 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.117572447 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.117984755 seconds)
  done (took 2.927076122 seconds)
done (took 12.128359719 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092622202 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.195818383 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.564962684 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.122179172 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.081022294 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.164489321 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.272549209 seconds)
done (took 2.214808161 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.356880415 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.128487596 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.09131839 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081913858 seconds)
  done (took 1.377908261 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080886769 seconds)
    (2/2) benchmarking "read"...
    done (took 0.106433774 seconds)
  done (took 0.913842013 seconds)
done (took 3.022165992 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080127272 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080546134 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.09623641 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.135291952 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080621417 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.097554846 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078523387 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081051914 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.100482608 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079283549 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.100036009 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.081494083 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.098844003 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081318527 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095866685 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078353873 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080900777 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097476476 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078644178 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09581855 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078646201 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09758668 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078443786 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.202262382 seconds)
  done (took 3.018924996 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100718516 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100345183 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.087178413 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.105109811 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.085416162 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.105425543 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104515553 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.081310358 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.104570734 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.083996184 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103087824 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085554193 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100776222 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085413171 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102192373 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103421384 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087673877 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099856664 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084424373 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103872725 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.08747626 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099149169 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.0856138 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105309412 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.103542023 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085176627 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.100749083 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082153179 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105437087 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086011466 seconds)
  done (took 3.585221765 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.088315588 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.078555692 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.097753928 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.090943709 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.097473379 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082886921 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.096302395 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.080362759 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.098156612 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.079319959 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.098606454 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.078800483 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.096415719 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.0801628 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.08024871 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.103705953 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.115391633 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079292693 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.078778019 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.097359772 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084861623 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.096639867 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.082236564 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.097534755 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.079528529 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.096476684 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08035233 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078690566 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098812033 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079431862 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.102716977 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.087171202 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096624507 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.093720929 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.104720908 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.07943616 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.106606958 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078829982 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.100056095 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.079992876 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.097067109 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.079507168 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.0793387 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.108892623 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.082223153 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098520104 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080236687 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099559522 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080602163 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101265723 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079495795 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.0984858 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.083662283 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.100419601 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.08643991 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.07985126 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.099472662 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079155121 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.099446007 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079909167 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097484337 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078877141 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.104567208 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080673208 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.121928002 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.092113367 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097622297 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081061636 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.102308002 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.087934898 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099759991 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.098395988 seconds)
  done (took 7.274694888 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082952765 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10941497 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081677282 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100118746 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078972709 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.080375591 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.105654657 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097993514 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082447195 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117529961 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081153652 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099717545 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082341727 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10196055 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081600461 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099936043 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.091387778 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096501225 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080872189 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101638538 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080899487 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.105044659 seconds)
  done (took 2.7761273 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.228184412 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.109431737 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.148297097 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.11956279 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101003328 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.115819878 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.105835425 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089670414 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105906701 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091727145 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110242471 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08783423 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120090319 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109635584 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090615266 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110723909 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106044163 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092319273 seconds)
  done (took 2.777515997 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094073115 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.102237372 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.109119357 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101534104 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.083682796 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.104134125 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090381902 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118298911 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.103957039 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.084539366 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.112831677 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086635476 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.105370974 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083685949 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103963996 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083993297 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103874532 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08359808 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112671571 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107912973 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091171691 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112775084 seconds)
  done (took 2.920223028 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098141432 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103699684 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.114724149 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.105354835 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.07905928 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101669271 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.091290555 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.10173559 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.110106978 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.08619432 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102355695 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083187846 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.109695613 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084092021 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.109110623 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084379789 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104229866 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085315271 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10414012 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080374282 seconds)
  done (took 2.678904828 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.127774022 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120173394 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100950521 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131423706 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120118921 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101679216 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.130350713 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.119936688 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101241168 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134205486 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102112287 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.120178471 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131294291 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109451319 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119090008 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131026297 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11264927 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132503181 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.120843105 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102741908 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.133605543 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121031283 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114654605 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.119840606 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101616962 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123849727 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121492255 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108684209 seconds)
  done (took 4.05898266 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082069102 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.084067725 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.100510843 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.081622076 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.100340308 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081704683 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.099271631 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.081457345 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082700141 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099963771 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083454042 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.102044316 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083787145 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101883269 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084295295 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101640444 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084918997 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.081670416 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099617785 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081849009 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.103060957 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084390154 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.102419902 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082133294 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081612675 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.102199798 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081966489 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100478549 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085040955 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100490076 seconds)
  done (took 3.468822483 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092072733 seconds)
    (2/2) benchmarking "in"...
    done (took 0.109566988 seconds)
  done (took 0.945282237 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080722654 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120978598 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082023587 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107210779 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091167834 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.104759267 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.09527056 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109199429 seconds)
  done (took 1.536054631 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.109058943 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.125422244 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.092307711 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.117403334 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.106394167 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.123760296 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.174402377 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.091484987 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.112292315 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086357909 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.124809772 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084907176 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.115631793 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109631968 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.095413033 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.119272961 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.084262804 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.115203355 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.094579924 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.106741082 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092153792 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121621087 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098424627 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.112471744 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.088614269 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.11697758 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.119505249 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.099115932 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110584996 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.098616872 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.112784232 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.079455402 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.109417674 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.092486823 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.102345182 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.106721746 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.125122357 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091175442 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.116767283 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110549704 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097193946 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.099155111 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.098354128 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.116237836 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100713259 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.110031942 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.092012259 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.099350471 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.08695983 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.108868106 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.081427984 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108541395 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.081737979 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115783513 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.096493124 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.124625494 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.090205748 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.109723253 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.091190893 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.108644039 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.093766833 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.109165208 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115051767 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.089299443 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114331955 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.095793366 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112807816 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.081142028 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097872813 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.08385767 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.11423123 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112208321 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.117403511 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.091542338 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111009279 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.084144606 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112195606 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092279005 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11293669 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.116126496 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.091325434 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112571417 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097620066 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108207009 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.090763116 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.112139939 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.087954132 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.107943586 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.086756353 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.125841507 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.088920023 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.102201828 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.086813167 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.115556821 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.090304327 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.107736056 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.087980842 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114524472 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079424892 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.109889765 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092676378 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11231364 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.099459239 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111073359 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111281816 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.096368703 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.118217586 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092567933 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.10930047 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.082400151 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111235454 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.088966136 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.11315686 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.080159892 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110117356 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.091013569 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.110991587 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.09896724 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.107770248 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.092740348 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.117186345 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.09941842 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.108262848 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.082742573 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.110324117 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.092012099 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115272795 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.099138149 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.109908779 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.081370855 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.100903324 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.09560525 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.110453223 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.093823057 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112637405 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092158399 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.100073371 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.084636516 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.111162004 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.116904153 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.090893841 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.112673147 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.098321408 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.113355384 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.090797486 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.11632822 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.090297351 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.106525887 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.097917205 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.111028394 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.08279702 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.116479168 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.091223822 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.108053892 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.092129999 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.115460311 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.092643268 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.11296612 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089521406 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.112052161 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09296689 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.106739044 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092609673 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.110040386 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.128230124 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.092502549 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.082035609 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.102778411 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.093190144 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.107360904 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.090132634 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.105976038 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.091533161 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.111311247 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.085536137 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.109098199 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.090948332 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.124079877 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119760155 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093871 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.114521772 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.099571495 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.110651171 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.094760073 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.110689722 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09401613 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.111673356 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.097871552 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.114063298 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093656542 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.111056613 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.084035825 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11406798 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099384942 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.10707363 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.08569724 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.106677448 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.092135035 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.118323521 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.092763644 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.111885696 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089649935 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113772529 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.097060467 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.111443417 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.091679092 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.106459761 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.092344691 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.116358164 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.094616334 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.113207242 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.099934061 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112719612 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.082402337 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115836562 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089397648 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.116659677 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.082500707 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.108444731 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.088021067 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.113296874 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.091071374 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.110267218 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.081186838 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.116771851 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.098650265 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.112186255 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087570622 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.112728542 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120978772 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.09114355 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115282548 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.093833151 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.111002046 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102938154 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.102773262 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088803386 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115553166 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.089087133 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.099678904 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094987325 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.10997445 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.087115104 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.110690406 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.091162718 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113771419 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095369062 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.114539056 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.082526974 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.111670519 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.0907544 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.108095195 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.084689141 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.118904461 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.094463309 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.110576151 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.102474469 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114602244 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.093625934 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114671713 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.11166029 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.095031332 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.113540596 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095651767 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.115578254 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.091547571 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.107032486 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.093585914 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.10677797 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.085668968 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.110343538 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.093429791 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.112166535 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095785994 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.110475968 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097666103 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.111841647 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.093960545 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.131053711 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.108869204 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08909453 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.113125839 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095409485 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.110964691 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.092801334 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.102205694 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098444492 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.111312101 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.099385943 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.111257288 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.084767704 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.112881468 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.092892579 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.112937203 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.093974712 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.113284931 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.092085271 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.111216552 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.092563321 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121612032 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.08951872 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.119531694 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095263266 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115168549 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.092357746 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.114624293 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.090957009 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.109421275 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.092176474 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.115476287 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.112614586 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.093115969 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.113939375 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.094128824 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.110492814 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091728144 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.113194431 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.094860775 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.114893582 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.083595162 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.107024693 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08910099 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.09253611 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118203771 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.112897586 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.092440518 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.110506089 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.095445191 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.090202598 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.104506454 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.097490446 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116961783 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.113020751 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.103200478 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.108079468 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.093988348 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122928036 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.083804505 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.110301248 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.086775865 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.108147334 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099434999 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.114098619 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.099822321 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.113927287 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.089488493 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.104627098 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.095390971 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.111236739 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.083187226 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.105558073 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097242416 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.110206515 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.092325648 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.112980511 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.096949972 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.114054328 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098113911 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.111490212 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.094527649 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.113571751 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.086195645 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.108659154 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08956524 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.11294007 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.095491942 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.109105629 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.08732681 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.112933782 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.093660914 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.113200942 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.093470817 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.110438768 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.100186144 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.112367418 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093762951 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.118201276 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.083350482 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.113760841 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.093594391 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.11207541 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08989124 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.114539349 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096376816 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.115531495 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.099481563 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.113321501 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0973953 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.114006768 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.087424788 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.113071854 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.09386418 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.114234244 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.089624363 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.114730357 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.100970308 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.106784076 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.095028844 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114388751 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.091273171 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.116018708 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.09536621 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.11511941 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098416027 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.114986115 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.093733831 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.11813417 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.093919998 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116266892 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094505862 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.113146703 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098107173 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.109582927 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.120513206 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.095466831 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.114248696 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.093615915 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.109381643 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094338041 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.112207519 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.092836873 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.119255356 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.096116984 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.108779828 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.089956744 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.106209349 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.094451791 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118464781 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.101971608 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.113759142 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096186835 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.104761444 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.086696766 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115312135 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.090639489 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.112717338 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.098062469 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118898453 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.09535425 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.111867652 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.092631743 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.119971002 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098809296 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.117359842 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.090719827 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.116982305 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.094867122 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.116119515 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091652557 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.115457393 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095694045 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.118580394 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.092342655 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.110711916 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123496516 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.100218897 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116046212 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.094670541 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.11728129 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.094657751 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.10639201 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.096548686 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.115458019 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098689878 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.115322107 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095144194 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125952525 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.089636342 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.113864446 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099079078 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.115277162 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.121212401 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.085704956 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.114263622 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097092398 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115433667 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.085916908 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089481456 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.111592339 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.094302294 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.111694077 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.085566813 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126021238 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.119595729 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.096185485 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.11383796 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094366507 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.104664337 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.086030003 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090067492 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117293291 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.113241457 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.104127756 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.110957047 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.091150083 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.104689501 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.0957677 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.115491686 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.097967486 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.106936459 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.087472828 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.090734964 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.117529935 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.122338062 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09370482 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.114563863 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097407168 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.114286807 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.089362833 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.119789538 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.087658063 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.11553737 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.108061845 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.116563431 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097534552 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.119340487 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102102423 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.11669115 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.085526481 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.117320581 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.095033388 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.118584288 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.095532449 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.118307966 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.131922907 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097610821 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.111271582 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.094543141 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.114598571 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.092089856 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.123451107 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.097293417 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.117032312 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.097780007 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.114509902 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097475173 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.122937527 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097577933 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.117914545 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.115410237 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.094699479 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114862116 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.09445606 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.093307636 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.119810172 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.095794029 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.116689175 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.098118379 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.113372966 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.126986273 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.104428287 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.117201171 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.087797951 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.111135052 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.092636922 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.106800851 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.097891264 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.088265032 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.114194839 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.092766019 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.114994745 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.098353161 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118283709 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.095647483 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.118351554 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.093812274 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.106276073 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.098537004 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.118550824 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117488564 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.088741652 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.09536458 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.121435979 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.120234873 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102236408 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.112837835 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.096423394 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.114890819 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099184766 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.106737589 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.100541224 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.114284703 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.095321095 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.111061752 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096187122 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.11753107 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098525798 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.117179005 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099676214 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.116271911 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.100589971 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118492025 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.089428282 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.108232561 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.099766475 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10916642 seconds)
  done (took 62.550363461 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.155216343 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094598722 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106253094 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.086954698 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133672214 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087284683 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107015204 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.087653239 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.108438294 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.100720757 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.108750237 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086488289 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.129477635 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136364083 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13336328 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.122350187 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086752993 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10804431 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086748094 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107615946 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108629756 seconds)
  done (took 3.076001653 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107912867 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.126159365 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.124386999 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108788745 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.119537356 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.125616299 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.103907092 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128468349 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.130375334 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.120195952 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.110127141 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.126444553 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.119989102 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.099877078 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120454109 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.122837737 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.10997302 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.118901008 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.126990002 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103740126 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.123414184 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.124860071 seconds)
  done (took 3.398573372 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.096728325 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.094616407 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.123376667 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.088719028 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.115517103 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.088552761 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.121295779 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.092042971 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.121111737 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.096430779 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.114005323 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.096043142 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.121935369 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.089027876 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.114399185 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.092506119 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.121126424 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.095759927 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.117071934 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.089411661 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.13776104 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.109495571 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.090969622 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.09277239 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.12795244 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.09630877 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.11697193 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.096566053 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.113612891 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.095934277 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.112495673 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.098585069 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.120827576 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.09277057 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.11406099 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.095550727 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.117248133 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.089732874 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.112655352 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.100183403 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.111794192 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.097130444 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.123270304 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.092585238 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.112914172 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.098414947 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.11704168 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.089731438 seconds)
  done (took 5.8601561 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.126317404 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.169009618 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.100559719 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.174953477 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.138281412 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.123393087 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.101627412 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.160892553 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.114732297 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.095845079 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.1359906 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.132586212 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.0967534 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.131441283 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.096281411 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.118199133 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.121920508 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.110913664 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.127716303 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.09106749 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.127619459 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.120663725 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111823697 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.129811442 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.121074474 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.095739931 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.116083406 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109516237 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.129246459 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.123788664 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.102907458 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.12780331 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.14668617 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102215218 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.117663846 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.099047623 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.136215649 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.117874368 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.100048819 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.116347133 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.098568507 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.131848484 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.119439422 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.115327974 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.120475293 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.119973046 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.100051894 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.128596169 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.113477299 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.12003825 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.124336476 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.131325527 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.102037431 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.118290701 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10329602 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.141607171 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.116368634 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.096137865 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.12196583 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.109499197 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.120010577 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.136812532 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117993977 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.121036332 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.126534979 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.110256515 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.120377799 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.121984171 seconds)
  done (took 9.080225024 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098708723 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.140064463 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135702437 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113810436 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124152221 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.123016574 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103777618 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.123241458 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10299529 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.130976433 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123042115 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.176914054 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.095401152 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.129135204 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102904362 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.124191664 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.123066455 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103132414 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.123568367 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102162509 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.124642786 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.13490884 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.102471148 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.135790461 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137066754 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.116493423 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103895228 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.123739081 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11458699 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125353278 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.137007395 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.124350044 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101894947 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.13104215 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.135404711 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.102490064 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.114924376 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103937033 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.124992124 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.122749714 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.095953931 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135226405 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102862473 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.117966527 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123256712 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.103439439 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.135715544 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.136902129 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.130629496 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110757022 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.123853052 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.135129742 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10362742 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.123261309 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.135568461 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.144100806 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115423551 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.136432866 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123728358 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114460133 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.138148383 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.144116294 seconds)
  done (took 8.355095946 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089938618 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092902717 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.113325035 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.091655012 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.114771497 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092160839 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.114465323 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.094141999 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093018377 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.117415028 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093864495 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113089648 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092395907 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114578329 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091949374 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111567179 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0920328 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090669455 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115589176 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091578604 seconds)
  done (took 2.831584528 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.098267193 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.131178978 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.091000239 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.119501884 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.095106844 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.123891785 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.116588205 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098270182 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115851404 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097805361 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.129423032 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108556149 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.119060532 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.123523871 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104581217 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.123747787 seconds)
  done (took 2.610434632 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.108875853 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.124235992 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.141913234 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.100320978 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.114392629 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.102986008 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.116506082 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.091270205 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.111704631 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.103884225 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.122844971 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107204002 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.116391183 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.093334308 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.116089889 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.101292335 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.111632044 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.099338851 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.116694507 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.122235351 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.122061806 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.118563475 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.096886595 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.117437247 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.098555995 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.121154283 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.101981915 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.116735723 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.093153865 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.11786118 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.097659144 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.125066792 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.090936768 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.122438908 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.092858515 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.114166837 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.093805988 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.118251934 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.100035337 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.119174584 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.092031044 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.121162372 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.093946627 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.120749934 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.089613622 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.119528683 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.090363399 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.12563694 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.096316448 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.12051842 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.115005962 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.104655813 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.122881986 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.107885897 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.126723744 seconds)
  done (took 6.862978304 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105352821 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.120098579 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.100296229 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.114740233 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.099301496 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.125607838 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100567243 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.119007923 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097226601 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.114167788 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097747728 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.120891888 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09722622 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.121053654 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.097549009 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.121715164 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.090069837 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.118281356 seconds)
  done (took 2.778710046 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095413384 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.114989621 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.103783963 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.116348114 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.096223729 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096219007 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113592698 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.093043167 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115800188 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.094954847 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116808384 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.097244146 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115220466 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.0983337 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116849137 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096214255 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.119074919 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093828681 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.116968515 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091477257 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119028746 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094764399 seconds)
  done (took 3.133881844 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.106721087 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.147726606 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.110046131 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.16377115 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.123106089 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.099439641 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.132653676 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.10036564 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.142885172 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.120865007 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.100069486 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.120433626 seconds)
  done (took 2.291260129 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115615277 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14872898 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085170504 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11212507 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124187028 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097531621 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121048059 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101279715 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135845433 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136727172 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100733761 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135938048 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135283951 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133964176 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109273563 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131465612 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122468427 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101899515 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119518152 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144219031 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098823975 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135382311 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121932109 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099174593 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122099883 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133984137 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111083593 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137635623 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123651269 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114435649 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133653392 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12270982 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113546588 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139068139 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120503315 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135036007 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102131575 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145904379 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130521499 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112314239 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.123110361 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130300207 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114413736 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131560918 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135891527 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101666667 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130693163 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123177839 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102390475 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151229772 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132100649 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134205647 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109214284 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138657006 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135917687 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.152761687 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136728312 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134686813 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109713651 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138128977 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133937771 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130647036 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113668169 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137298518 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131256656 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134436937 seconds)
  done (took 9.036375382 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13122603 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114716447 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100508783 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139095472 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135435868 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123057082 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102000788 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123856288 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101060609 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120657036 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173043879 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122954855 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113398587 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135204565 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12346299 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102591053 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123957441 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134828391 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098465019 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.151911836 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123355378 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135013673 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113164376 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135113568 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13710501 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131529532 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10296899 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123766726 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101801663 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125190949 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131416214 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102397963 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135921666 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.11604268 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113498549 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123911403 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101121481 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132578561 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123964002 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109786797 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138127158 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146491849 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123934938 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10243052 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138125714 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124085013 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102622461 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120743573 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101512644 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121557581 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137626873 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137494781 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11641717 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135433444 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124053061 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10248245 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125078146 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123050982 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103121407 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132004112 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13471138 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102835353 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15348337 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12439089 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102021033 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13652957 seconds)
  done (took 8.928727896 seconds)
done (took 166.559270856 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.108787725 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.157593081 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.112937872 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.183498921 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08991867 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.155289629 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.123255747 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.127758316 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.096925311 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.120285335 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.09740328 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.122968262 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.166584968 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.111176954 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.094494356 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.122387457 seconds)
  done (took 2.816270158 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.186593087 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.306680047 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.116727393 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.125076057 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103519267 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.123568362 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.101259306 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.128026923 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098030046 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.13409379 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.120842831 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.100981956 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.133135002 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.10046336 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.120970636 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.100227018 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.133146573 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099465209 seconds)
  done (took 3.163883035 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115146908 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.163866769 seconds)
  done (took 1.11451941 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.126461802 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.190736184 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318655534 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.173812091 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120572162 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.14094525 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.17799775 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.139659483 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.204627969 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133042897 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.11309213 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.12465325 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147873383 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103031892 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.125693941 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.102222385 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.155369825 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.128816903 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.104823913 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.126233243 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.126854267 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.130074503 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.131146103 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.107484474 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.199765282 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.143706544 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104717569 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.129052581 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.128634174 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.107063273 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.133349653 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.142734089 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.119929597 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.207015237 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.110653933 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.203512206 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.113677568 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.127997277 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.106209247 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.127112231 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.127917866 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103971886 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.139079674 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097390457 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.121942792 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.12472122 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.097651835 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.123313834 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.110931666 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.137086029 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.13110497 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.108609889 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.195808046 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.10525276 seconds)
  done (took 8.216723869 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.845993514 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.164565796 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117279999 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.961263852 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148487229 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132420197 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.849911936 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118077586 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.278425776 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.110548806 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13599526 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.130703748 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239432578 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.263804844 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.155212573 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.344634033 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.728923526 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.131040052 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.124204107 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.159874643 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124420286 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145569256 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113983149 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.452029818 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.119339583 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096937259 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123253822 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128458248 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169716185 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.093668519 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.121226317 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.1877333 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.297632105 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.188575135 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11843798 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092502631 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116633983 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.177113135 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.280479668 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.226119818 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181898396 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092335069 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.119386412 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.108609346 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.139524763 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090658653 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.198028358 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.185573739 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.185723827 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.122588436 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.129576649 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.104614957 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128337094 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.171360344 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122650693 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.349293714 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.349468294 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098014927 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130581586 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11684948 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.279627838 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.119360888 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.216820514 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145995893 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222083579 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092502984 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.79504305 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.175885434 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.116355733 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.125917712 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.102927251 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124291906 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108098949 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178419308 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.396616441 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.141985521 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.12968915 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102259192 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.248582506 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101015076 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126688142 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183380799 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10135785 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.1292787 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132263599 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10793531 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.20229136 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.255861746 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.135956654 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.105644894 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.123832487 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128623588 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.096464091 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.226925773 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229077376 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.190820011 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.222392928 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128806998 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.175637809 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.17796226 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.13288492 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.184778457 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.128053421 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114991499 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131293738 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224322327 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.154842977 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.099552644 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.127182406 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.126049024 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.153619222 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.09942466 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.126327073 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.178434987 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.479700095 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.203060007 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.092321681 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123896796 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103089217 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.172120044 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124971916 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274184036 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103135576 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.200558985 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103528554 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.115128021 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.105372223 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.196955444 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108702251 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126689509 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131866155 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103750608 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.283141343 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.204446189 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132413814 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246221497 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.187525674 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.103836235 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.205157037 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102638424 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.201233601 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104634064 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128449734 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09451788 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.790254676 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131039356 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125028666 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100439368 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.201770888 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115362424 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097198723 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.094732542 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115584898 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.822687838 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.098186496 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121382025 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101005354 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129432314 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.103470938 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124580477 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098355529 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.195058697 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243076702 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108937781 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124942535 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.094339577 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.195116469 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.097875189 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.121435446 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.096670082 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.119394418 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.104135379 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.121721624 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.100190365 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.207035542 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.169317214 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.229006418 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.536766967 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.120874073 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.097079736 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244599367 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118586254 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.29420891 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124612177 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.236697979 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187282762 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.119593928 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.349660993 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.180601083 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205155113 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.099847412 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.203307172 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093238555 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.125334572 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.173095412 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.095315914 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124745497 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.168512631 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.137007965 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.13215325 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.141549978 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11706357 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.238830061 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.118231635 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.182226251 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117552806 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107428315 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.320153171 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.117931108 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115534233 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.19384145 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100515899 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123525179 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.812304724 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.116861702 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.106167215 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.131908319 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.242181837 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.189338302 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.134442796 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109618285 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.137990625 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.178022636 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.251505127 seconds)
  done (took 46.709947852 seconds)
done (took 62.850786416 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.32837852 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.319691568 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.324945383 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.210269301 seconds)
  done (took 2.117720674 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.188183799 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.167316654 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.13426278 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.120924115 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.16786998 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.096464347 seconds)
  done (took 1.735563905 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.516344377 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.404933022 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.369426781 seconds)
  done (took 2.15479634 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.27867381 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.302294246 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.372335453 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.471734374 seconds)
  done (took 2.396786822 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.218318865 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.135357783 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.108991313 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.154282941 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.193836885 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.191999841 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.15144009 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.160200284 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.138630059 seconds)
  done (took 2.364898969 seconds)
done (took 11.630765742 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.298152144 seconds)
    (2/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.153880037 seconds)
    (3/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.292162842 seconds)
    (4/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.209680979 seconds)
    (5/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.145932549 seconds)
    (6/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.26564342 seconds)
    (7/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.275727875 seconds)
    (8/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.187149142 seconds)
    (9/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.213922415 seconds)
    (10/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.136903326 seconds)
    (11/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.097897093 seconds)
    (12/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119769915 seconds)
    (13/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.224317967 seconds)
    (14/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.248229558 seconds)
    (15/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.253504739 seconds)
    (16/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.088933604 seconds)
    (17/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.193140636 seconds)
    (18/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.134179162 seconds)
    (19/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.200857002 seconds)
    (20/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.253175774 seconds)
    (21/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.237341245 seconds)
    (22/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.101450571 seconds)
    (23/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.202195858 seconds)
    (24/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.171760068 seconds)
    (25/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.11467095 seconds)
    (26/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.231476298 seconds)
    (27/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.164937719 seconds)
    (28/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.143025675 seconds)
    (29/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.220924591 seconds)
    (30/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.124835541 seconds)
    (31/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.212962105 seconds)
    (32/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.124080545 seconds)
    (33/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.101758012 seconds)
    (34/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.150117759 seconds)
    (35/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.199300971 seconds)
    (36/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.106101636 seconds)
    (37/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.152174013 seconds)
    (38/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.196808304 seconds)
    (39/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.104819674 seconds)
    (40/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.131303521 seconds)
    (41/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.11046537 seconds)
    (42/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.119838123 seconds)
    (43/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.104294323 seconds)
    (44/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.12320551 seconds)
    (45/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.079642327 seconds)
    (46/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.119170091 seconds)
    (47/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.096249323 seconds)
    (48/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.159066834 seconds)
    (49/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.081956376 seconds)
    (50/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.208812956 seconds)
    (51/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.28429785 seconds)
    (52/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.125296915 seconds)
    (53/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.17143252 seconds)
    (54/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.113825509 seconds)
    (55/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.201503245 seconds)
    (56/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.148114296 seconds)
    (57/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.163202777 seconds)
    (58/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.099535223 seconds)
    (59/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.169860161 seconds)
    (60/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.210735227 seconds)
    (61/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.081335193 seconds)
    (62/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.123256163 seconds)
    (63/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.082176415 seconds)
    (64/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.10623076 seconds)
    (65/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.148826967 seconds)
    (66/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.128293911 seconds)
    (67/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.154014124 seconds)
    (68/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.226317251 seconds)
    (69/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.086189472 seconds)
    (70/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.098483404 seconds)
    (71/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.129070335 seconds)
    (72/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.217997406 seconds)
    (73/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.121077611 seconds)
    (74/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.227676116 seconds)
    (75/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.150915399 seconds)
    (76/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.129792747 seconds)
    (77/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.096227253 seconds)
    (78/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.102822567 seconds)
    (79/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.08850716 seconds)
    (80/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.133702026 seconds)
    (81/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.202044486 seconds)
    (82/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.100348295 seconds)
    (83/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.123308089 seconds)
    (84/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.116117175 seconds)
    (85/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.173562337 seconds)
    (86/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.098598493 seconds)
    (87/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.149888554 seconds)
    (88/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.21615366 seconds)
    (89/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.151122237 seconds)
    (90/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.193712913 seconds)
    (91/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.210408405 seconds)
    (92/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.081719741 seconds)
    (93/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.129087098 seconds)
    (94/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.099461293 seconds)
    (95/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.116161972 seconds)
    (96/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.099860701 seconds)
    (97/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.122346602 seconds)
    (98/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.105699995 seconds)
    (99/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.103637021 seconds)
    (100/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.100321642 seconds)
    (101/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.120061928 seconds)
    (102/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.156719748 seconds)
    (103/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.096250866 seconds)
    (104/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.122788328 seconds)
    (105/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.176541397 seconds)
    (106/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.11700828 seconds)
    (107/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.206968095 seconds)
    (108/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.211165446 seconds)
    (109/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.094692987 seconds)
    (110/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.103036221 seconds)
    (111/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.096846419 seconds)
    (112/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.134362064 seconds)
    (113/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.100310159 seconds)
    (114/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.147268991 seconds)
    (115/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.08270612 seconds)
    (116/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.105509825 seconds)
    (117/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.196320617 seconds)
    (118/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.108991131 seconds)
    (119/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.120807604 seconds)
    (120/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.119942346 seconds)
    (121/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.104963216 seconds)
    (122/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.0999124 seconds)
    (123/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.211904114 seconds)
    (124/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.140377552 seconds)
    (125/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.083332971 seconds)
    (126/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.119193708 seconds)
    (127/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.214113715 seconds)
    (128/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.10105467 seconds)
    (129/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.111772761 seconds)
    (130/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.144014758 seconds)
    (131/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.105029218 seconds)
    (132/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.10630234 seconds)
    (133/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.146248995 seconds)
    (134/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.097379732 seconds)
    (135/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.122069346 seconds)
    (136/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.096345973 seconds)
    (137/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.181962644 seconds)
    (138/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.156785866 seconds)
    (139/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.080269358 seconds)
    (140/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.106609228 seconds)
    (141/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.145793224 seconds)
    (142/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.124836298 seconds)
    (143/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.197208275 seconds)
    (144/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.09643175 seconds)
    (145/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.106275169 seconds)
    (146/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.120823132 seconds)
    (147/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.120848477 seconds)
    (148/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.08145159 seconds)
    (149/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.197567721 seconds)
    (150/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.135322702 seconds)
    (151/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.081708053 seconds)
    (152/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.123788699 seconds)
    (153/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.082478138 seconds)
    (154/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.162458557 seconds)
    (155/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.099855792 seconds)
    (156/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.130716941 seconds)
    (157/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.132370231 seconds)
    (158/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.082635585 seconds)
    (159/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.081232108 seconds)
    (160/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.125372495 seconds)
    (161/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.080903414 seconds)
    (162/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.214551344 seconds)
    (163/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.135293427 seconds)
    (164/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.099636206 seconds)
    (165/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.104501847 seconds)
    (166/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.096132195 seconds)
    (167/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.123819724 seconds)
    (168/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.176897042 seconds)
    (169/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.081599276 seconds)
    (170/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.116412441 seconds)
    (171/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.081436758 seconds)
    (172/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.080390804 seconds)
    (173/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.121295894 seconds)
    (174/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.083260345 seconds)
    (175/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.120755715 seconds)
    (176/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.080728633 seconds)
    (177/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.103220743 seconds)
    (178/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.111716499 seconds)
    (179/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.120441015 seconds)
    (180/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.184630903 seconds)
    (181/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.082601763 seconds)
    (182/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.118352813 seconds)
    (183/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.104784317 seconds)
    (184/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.081285313 seconds)
    (185/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.161703426 seconds)
    (186/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.081087716 seconds)
    (187/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.121971754 seconds)
    (188/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.169220126 seconds)
    (189/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.097266079 seconds)
    (190/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.08920424 seconds)
    (191/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.143081017 seconds)
    (192/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.089609116 seconds)
    (193/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.106225781 seconds)
    (194/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.097741172 seconds)
    (195/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.120209029 seconds)
    (196/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.08226102 seconds)
    (197/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.104455988 seconds)
    (198/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.094466643 seconds)
    (199/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136770447 seconds)
    (200/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.101502534 seconds)
    (201/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.134693796 seconds)
    (202/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.082457929 seconds)
    (203/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.080543986 seconds)
    (204/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.113568695 seconds)
    (205/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.082106648 seconds)
    (206/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.103938291 seconds)
    (207/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.081307213 seconds)
    (208/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.103885724 seconds)
    (209/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.123566406 seconds)
    (210/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.127254867 seconds)
    (211/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.081799728 seconds)
    (212/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.116715445 seconds)
    (213/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.082396071 seconds)
    (214/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.095316179 seconds)
    (215/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.134017094 seconds)
    (216/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.080517533 seconds)
    (217/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.13096855 seconds)
    (218/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.081183667 seconds)
    (219/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.128419645 seconds)
    (220/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.100886441 seconds)
    (221/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.10640685 seconds)
    (222/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.080592931 seconds)
    (223/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.10356438 seconds)
    (224/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.081631977 seconds)
  done (took 31.2038516 seconds)
done (took 32.072550726 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138059443 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.133437381 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.104217282 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.129901035 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.148787714 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.110702508 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.130031133 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.108247061 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.128005359 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.095043094 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.118218789 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.106120843 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.128214328 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.148043029 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.107099573 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.121121266 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.098094159 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.129350947 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.105729553 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.130560564 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.150041647 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102542471 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.128882301 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.097794163 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149069073 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104163716 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.130377049 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.105657808 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.127236508 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.095780493 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.128987684 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.096292297 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.130114736 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.132299354 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095623791 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.121823272 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096022557 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.087464683 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.121038381 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.121397776 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.103898625 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.119373042 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.107177173 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.120947542 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.0994415 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.119446713 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095809302 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.133186939 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.096065611 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.130604075 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098339516 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.132733257 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.095305506 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.11975888 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.095401582 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.12279989 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.12884588 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095652097 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.129129051 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096074431 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.096772182 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119470747 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.1238022 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095567584 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.096850409 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121750101 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.120843983 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.098262286 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.118590925 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098054562 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094055341 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.123034333 seconds)
done (took 9.197207532 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.101042263 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.176078535 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151996274 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.128932244 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.15285342 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.136045106 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.110074712 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.144896199 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.129329276 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.119841298 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.146894153 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.141990249 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.134751321 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.131225373 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.134558331 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.10005051 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.12745191 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.108997182 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.156263745 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.14526582 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.15278073 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.103523177 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149701021 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.141494338 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.103512807 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.146539001 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.103870868 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.124703785 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.102351266 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.144574922 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.144166399 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.104877162 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.127183133 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.114887222 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.134765159 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.125379886 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.111979638 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.124401661 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.101285739 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.124565096 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.136710801 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.116731775 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.123827806 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.111050372 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.124729046 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.104422645 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.127021435 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.126376871 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.105071989 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.122128407 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.105170917 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.167308843 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.126426805 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.104100751 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.125862325 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.105014903 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.126789225 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.104317402 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.128207645 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.129849296 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.101435096 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.126377645 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.105276873 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.145550267 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.126582968 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.103766682 seconds)
  done (took 9.195545756 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.119406307 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.158964801 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.13610412 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.112125006 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.131489145 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.093804803 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.119780743 seconds)
  done (took 1.791597239 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.095758979 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.149629913 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.130736003 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.154697017 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.140673712 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.132234227 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.138068933 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.094749019 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.143896537 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.129308523 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.124646523 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.17648426 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.119956605 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.107399767 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.155016525 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.118396819 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.13196053 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.119378825 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.102857892 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.153495549 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124752055 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.118765636 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.133404436 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.095797058 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.142147688 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.096687156 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.18932922 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.13328173 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095022945 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.126699082 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.100355544 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.215275289 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.119233963 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.13247953 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093686504 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.14883729 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.116829293 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.130012672 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.146116548 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.102686035 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.143277846 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.103979649 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.131010976 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.12563803 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.103356761 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.137259009 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.11018492 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.128526519 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.101948746 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.149343729 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.132566808 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.119429329 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.122876253 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.100112378 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.130032912 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.101905409 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.134512332 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.100562612 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.149386121 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.128402285 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.123381684 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.149331274 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.142761545 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.123470305 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13845467 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.117910594 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.144446163 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.125631519 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.103352141 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.127781318 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.123693435 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.127430669 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.130310205 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.111954267 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.131060544 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.1261078 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.152939699 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.102317717 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.133085086 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.099797762 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.12398652 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.097896708 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.138474931 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.101866773 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.123964094 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138018621 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108425451 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.125585384 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.100203679 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.14758316 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.124334108 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.108128277 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.132190595 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.099689697 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135899802 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.149379951 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11053584 seconds)
  done (took 13.156398957 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.097955467 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.097184835 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.131689024 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.12222844 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.098160596 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.097378656 seconds)
  done (took 1.574830307 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.128001896 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.126868669 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.113385905 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.13087484 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.185203135 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.152098225 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.128358148 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.134094518 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.145203236 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.114100025 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.14732205 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.151253354 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.12688122 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.134836311 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.126978335 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.136549672 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.151809442 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.105141539 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.138488788 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102951718 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.139033325 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.133359649 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101896686 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.145194219 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.10963912 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.131995205 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.106058338 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.138916069 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.137132655 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.107551842 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.131571474 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.104518269 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.129495301 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.130590665 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.128436259 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.134804164 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126769213 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.109351209 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12966227 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.109106345 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.149700539 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.106857849 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.1406375 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.134273145 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.108147583 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.129495345 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.134938558 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.106669937 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.150285203 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.110878926 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.135442648 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.130351048 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.106885041 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.133632312 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.10431845 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.133609796 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.133136971 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.127299404 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.134318616 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.128414227 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.103785433 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.131930651 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.106985893 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.134387369 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.102857609 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.134225307 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.130189958 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.107348214 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125862151 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.105308371 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.133619593 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.126979757 seconds)
  done (took 10.079351941 seconds)
done (took 36.706928892 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.109057101 seconds)
  done (took 2.033071469 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.944770966 seconds)
  done (took 1.871789038 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.67133843 seconds)
  done (took 18.630137262 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.547483504 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.640825283 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.007211847 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.171267152 seconds)
  done (took 3.29284272 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.001870542 seconds)
  done (took 1.947061172 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.33024396 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.285893205 seconds)
  done (took 1.547061142 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.888570807 seconds)
  done (took 1.828286391 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.62229561 seconds)
  done (took 2.562525664 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.375746492 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.214683992 seconds)
  done (took 1.536100999 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.604399983 seconds)
  done (took 1.545603915 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.807808985 seconds)
  done (took 15.754549884 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.238178019 seconds)
  done (took 1.195734612 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.311448599 seconds)
  done (took 1.256280165 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.68780015 seconds)
  done (took 4.634823517 seconds)
done (took 60.565741501 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.106870917 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.136395377 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.111552393 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.132363008 seconds)
  done (took 1.42702991 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.111253924 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.128348326 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10827318 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.129225949 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.112903708 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.129162133 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.103147508 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.137116232 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.103428017 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.133052849 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.128843567 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.104884369 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.130770193 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.103231034 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.127684137 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.105204011 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.133200442 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.103425107 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.130243351 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.104582877 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.129432974 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.131181246 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.107856842 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.130105786 seconds)
  done (took 3.813349912 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.107331346 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.10033226 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.128963656 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.100504247 seconds)
  done (took 1.386957993 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.111944788 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.144410418 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.117104715 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.136612039 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144901218 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.118183257 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.126179265 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.10086728 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.128186311 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.11184474 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.127445485 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.120336142 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.145075666 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.123809611 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.113754774 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.120006505 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.097664474 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.144198876 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.110980541 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.138615418 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.100335801 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.136801982 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.10911863 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141905212 seconds)
  done (took 3.925255124 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.17803211 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.14050663 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.150458029 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.175876702 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.126962192 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.124985645 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.124940567 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.134209925 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.129230835 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.10090565 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.125624953 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.157136468 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.13257176 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.127114299 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.101195478 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.13194077 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.107464542 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.132178319 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.102398108 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.140538299 seconds)
  done (took 3.599975575 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.108219011 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.125394751 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.096827035 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.125075 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.107700769 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.128522786 seconds)
  done (took 1.648265474 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.097463015 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.09485704 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.121328775 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.095305326 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.125752062 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.095560427 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.119388055 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.095844717 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.095369768 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.122882168 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.096487594 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.122456826 seconds)
  done (took 2.234346064 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.507558565 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.128519605 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.127433788 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.101041369 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.130227326 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.100945654 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.141639543 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.099101881 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.183901808 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.133085331 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11563932 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.180876301 seconds)
  done (took 2.905893317 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220446612 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106977115 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283947967 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.387666942 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170977941 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17836057 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.284382489 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177169602 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198341168 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148368558 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216279666 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166659108 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137024456 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190474895 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152676183 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.197815216 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185425269 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212962641 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161707282 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254988354 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176277703 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178300761 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201895905 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135162919 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148961719 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167561398 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.127498258 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111514276 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182300918 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178920367 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209406542 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133398151 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14748631 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210876412 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254665604 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191356977 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.317904745 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142452766 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.20340437 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.206605255 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.290904314 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150676056 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205788193 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165731659 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113790392 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218091688 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165300986 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.18916658 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.116789814 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150990439 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194638163 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185706474 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.19141402 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15025863 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310745922 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152829411 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.156530769 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193429985 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200868374 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238086105 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151831689 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.132684553 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19709657 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201202259 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192434197 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.154234994 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.178098645 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135479438 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188277859 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216192478 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188878122 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179126858 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.219156952 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143523634 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145986677 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216385809 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136769316 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189524546 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171210822 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.130635294 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15833057 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119046979 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137187038 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.194081817 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105772113 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224683517 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145318548 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.300661092 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24371426 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140624205 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170641381 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17301614 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176914193 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156558942 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.128824817 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158220915 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.179537869 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139838328 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140665346 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167148743 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155123573 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.10824079 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162206976 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.13251384 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168231789 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.116757064 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177105332 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174503212 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.137985956 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173777576 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131817147 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.166398814 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179792862 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234885987 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11517206 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14230074 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214460675 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168487676 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.118531288 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.223511092 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206677606 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.185248028 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118917047 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207031278 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210691451 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126156297 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234720739 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124014436 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144126816 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.160218413 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170831959 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167776652 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.165379822 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112179347 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.163315104 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213437283 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.139308044 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118895049 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184172022 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136962601 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138334953 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127621006 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147642573 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.150691779 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.158286512 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.120747509 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163622812 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170144899 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163356132 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168450795 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152683593 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204415194 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142565777 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.169228546 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129659631 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.127216346 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.189699367 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205263557 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138735192 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198890218 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.18052042 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211121524 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171765896 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141374266 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193981993 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11123784 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.131095623 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176261886 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172595454 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174792381 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.203191812 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20665375 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.17546724 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.162885494 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160387959 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177969256 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.195642413 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16557448 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.155075714 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172908111 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177034624 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.103905582 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.133172184 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.108001239 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14974798 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140343006 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115967967 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218769484 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173661153 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199052402 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170747331 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148667079 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202514121 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.107139896 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174079646 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.182231267 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148417181 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.205481242 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203979734 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178216188 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153343976 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180044886 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.128835351 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107863766 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142276676 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177668997 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1156 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145486721 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154397966 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202966212 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185346815 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15941607 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213767813 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177189545 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.240997388 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.102629271 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.173459481 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190173943 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167426525 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.17368357 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148254473 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.175543787 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199453226 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15485358 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205903071 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173193105 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178755109 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210709396 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.169597624 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14115654 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158746479 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178542797 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120123758 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181773332 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156886543 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14552332 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163083207 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.117120243 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135620549 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190935356 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154003953 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188388516 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.177111247 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183959936 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138863007 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153285277 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145797096 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155957535 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.127488233 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181656175 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206267586 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153741666 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169129435 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195230812 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139399466 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.325355931 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210381827 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195121837 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14893082 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153907577 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144699527 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180794861 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175159206 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195335842 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154042402 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19407878 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173047332 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.1543434 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116591272 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157933609 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161188584 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.162107101 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.115628087 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.162835 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.152889067 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1941188 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157212263 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171469534 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175544487 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.128662617 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.166443697 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150873143 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221156403 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17148168 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188110374 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.167545178 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.186257396 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199559977 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134270346 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10998654 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.136550302 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195735677 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113203352 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170181826 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.194655009 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235775464 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170539062 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181901642 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119298815 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.135569958 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17052687 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157610816 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207787287 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151672422 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.145320098 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214130846 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.160243714 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112300972 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175291972 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29498687 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154908361 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193344095 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.130113833 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.287379097 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109321035 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14087716 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180849987 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181953004 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.113222603 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.19694486 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180560428 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157483287 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180822709 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120000851 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.228827617 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219753947 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180713262 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185286662 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.154934395 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169670062 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173400088 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197131233 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153574076 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.126040527 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173042512 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203121817 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.205163345 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.144233194 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17415356 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17351134 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16977896 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185606571 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144221683 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199842628 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111734629 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176971026 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150174293 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13368946 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167906881 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193886975 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115808975 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222670894 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139804309 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142832844 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135275946 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131807754 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170179821 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15402946 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.139168323 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190069997 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.107579766 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17285475 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193246071 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142165964 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165428954 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129447989 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143061421 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155454628 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125190579 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145066744 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.181116603 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206161936 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.111032049 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226224794 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184067045 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176616462 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170425211 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125146151 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.672969051 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.136694957 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20353961 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128110627 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227120093 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129718178 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17668561 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171942 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159307944 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177227031 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159534984 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229535523 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1769865 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.167901577 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11332544 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154344287 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1554812 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.112925241 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162560506 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173138928 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150068754 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.117169452 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.167342384 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159576467 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.154905833 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123548418 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206672855 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161450752 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192870311 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194898619 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149200617 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177742718 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19014664 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14271893 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.172936376 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183132266 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151787748 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130697006 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.14240217 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.145452716 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191526284 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.106035861 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171707412 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171078598 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172738593 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173556483 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115876127 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172199171 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155367171 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172932157 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106406503 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.167748868 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169227487 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141572497 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.108608153 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167375473 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169699005 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.170287328 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134992335 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.155677323 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206613156 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.135172004 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114584252 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294113442 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167748424 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232379907 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.134446606 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146859109 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154259713 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135711254 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.165959841 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172126146 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.14022343 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112877175 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.142274049 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.196294786 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.176458462 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170158954 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197706785 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172280097 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202174215 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.116582815 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279350311 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151251012 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166110355 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.112885255 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.140807795 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15276618 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116884172 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154682155 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204399535 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194198388 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.166591464 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.155195171 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108007051 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.135543962 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11348079 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181326454 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163967911 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169893682 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153154992 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.097745919 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15689455 seconds)
  done (took 82.309821407 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.167381968 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.225486807 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.182134347 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.231253791 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194048206 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.28430012 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.260280454 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.257324987 seconds)
  done (took 2.848358607 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.109895951 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.145149183 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.152601711 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.133794035 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.134218635 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.358320377 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.146693449 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.107207023 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.197653241 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.152038769 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.132103098 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.633571467 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.10800196 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.137145876 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123439899 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.132802991 seconds)
  done (took 3.947928854 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.461237128 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.559149478 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.28545758 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.261086769 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.236959039 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.163576626 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.768404991 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.194305423 seconds)
  done (took 12.971778311 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.138304263 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.152485948 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.267627935 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.185769732 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.170834601 seconds)
  done (took 1.966058391 seconds)
done (took 125.923981684 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.104621836 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.133863197 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.104885663 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.135744409 seconds)
  done (took 1.517312699 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.11938843 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.093598237 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.124276448 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.088357089 seconds)
  done (took 1.470662652 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.447518671 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.119416823 seconds)
  done (took 1.651454371 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.129476299 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.147175921 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.128122187 seconds)
  done (took 1.461569378 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.111268106 seconds)
  done (took 1.164824674 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.116677195 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.111496987 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.152844442 seconds)
  done (took 1.43526016 seconds)
done (took 9.750293382 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140615724 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.453416797 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.3997592 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149796362 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.736788973 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.395736064 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.091503271 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.170812135 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179842448 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.102711596 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.150800687 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.683915145 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.038317162 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.359656742 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.019379027 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.44712712 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.715501811 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.103158432 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.138098216 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.103353519 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.06366215 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.101077012 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.133165374 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.103667904 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.711165063 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.40485534 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.131936471 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.487231105 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100503398 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.134924019 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.392370817 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.130242943 seconds)
  done (took 17.51786456 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144408708 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.192959499 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.141654759 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103723157 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.133816461 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.102066128 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.140046381 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.113026319 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.19058758 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.13469765 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.123261102 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.132891079 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.109597373 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.133155524 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.125992819 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.13261846 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.105207707 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.134167792 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.10873844 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.133174617 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.120498614 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.130721774 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.102154541 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.131790575 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.10152385 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.14396621 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100520167 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.143526355 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.0999591 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.137893838 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.135571131 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.104093908 seconds)
  done (took 5.142141077 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.150044252 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.200225893 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144144215 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136951294 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.186038752 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.134985113 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.217424744 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.137532601 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.198186982 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.135075541 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.121559355 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.129876769 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.167423961 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.104411515 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.154284744 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.104998016 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.133604839 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.10612522 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.137488109 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.104262013 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.150698365 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.102214741 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.132201399 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.103018653 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.132238339 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.115992178 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.131886613 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.141596006 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10192119 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.134424866 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.109580584 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.132191702 seconds)
  done (took 5.456082218 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.108045744 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.137260718 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.119039456 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.148083973 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.104726709 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.136171285 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.108456525 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.131498047 seconds)
  done (took 2.051313668 seconds)
done (took 31.221445616 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.123884338 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.145898201 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.118689291 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.142284148 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.142011186 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.130715693 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.114476694 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.105398908 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.141271182 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.120944099 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.130388662 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.102589256 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.148370572 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.105710476 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.151293343 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.11443733 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.157409482 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.148329777 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.103221573 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.114823906 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.134935023 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.150512752 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.108955577 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.105861726 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.154217926 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.109139963 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.1497181 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.136374673 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.108318562 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.104834315 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.146644577 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.107618722 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.132743176 seconds)
  done (took 5.264509483 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.1301588 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.176985765 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.099625954 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.129115088 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.171288672 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.101004431 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.15835159 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.10000856 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.128550876 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.100188579 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.098322997 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.156562873 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.164376912 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.133834707 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.183413145 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.169881127 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.131722821 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.171292143 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.158303193 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.141671478 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.162319821 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.104628784 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.166324457 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.165697106 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.105042824 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.127380188 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.143955214 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.166256884 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.176074789 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.138513512 seconds)
  done (took 5.330473445 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.110086924 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.148101696 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.128711237 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.206140665 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.173321208 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.117664814 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.145229766 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.120616807 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.160405788 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.10104156 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.142587779 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.163153096 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.119323907 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.141549331 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.107211332 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.144943019 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.121897423 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.132732606 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.109543591 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.151816641 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.120501799 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.144836001 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.117697632 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.142804051 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.101445627 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.141686613 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.107610421 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.146527734 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.138449481 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.112373685 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.134511239 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.106854225 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.133879695 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.112596267 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.134614875 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.110670988 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.154976052 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.112678347 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.149315981 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.16671358 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.112477471 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.136810641 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.125356847 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.180986025 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.103843456 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.140308396 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.114482114 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.148271142 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.10262168 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.154073924 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.116969651 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.133636804 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.147411082 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.102683046 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.130006501 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111117436 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.104302064 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.134623694 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.139811832 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.107026015 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.151945616 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.111454751 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140833956 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.105127409 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.141832973 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.101618424 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.130628209 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.107414858 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.157206269 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107746685 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165108911 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.102631381 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.138608955 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.111940625 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.139335238 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112425888 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.133083208 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109860451 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.140620347 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.107931207 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.141969263 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.10529281 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.137350647 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.121067875 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.147574071 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.139805147 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.10825438 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.138625608 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.10646741 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.134087367 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.1173947 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.133910916 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.107261737 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.14356955 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.103362371 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.135528084 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.10953201 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.137091559 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.100869229 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.153579715 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.109522958 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.135438146 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.120868208 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.135557045 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.109181831 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.144514195 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.11687845 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.134077479 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.107806328 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.138881688 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.10217837 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.138884089 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.107163446 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.132910426 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.115024254 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.144940081 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.108280316 seconds)
  done (took 16.104707735 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.256215089 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.235676073 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.205785866 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.323887857 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.156919333 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.130506472 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.23557678 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.188899596 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.136144128 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.175771632 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.192061758 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.197217661 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.103811738 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.168896119 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.234655869 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.329360866 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.168128413 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.144803469 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.17910536 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.156707246 seconds)
  done (took 5.004890637 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.119167501 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.174515904 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.163472939 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.12945316 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.135834616 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.11757058 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.136826017 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.150096958 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.104468099 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.140424135 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.103087533 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.142254861 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.105875605 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.137904103 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.1208992 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.151634822 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.109894466 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.14293621 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.150578706 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.109174744 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.135460989 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.155568977 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.112397962 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.163752421 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.111023608 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.150066419 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.102503723 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.143097513 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.100620458 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.136402343 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.10871377 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.152137407 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.140720104 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.104988355 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.139666699 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.105223523 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.131676569 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.106647093 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.138371131 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.1098242 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.150317383 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.106304987 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.13369103 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.10488295 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.144340345 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.100663308 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.110824139 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.141146059 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.138851686 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.112506251 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.13951807 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.107266325 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.142202776 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.115813417 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.130986768 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.112508382 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.147023452 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.137230196 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.110893144 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.133678969 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.104081033 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.107197996 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.132848109 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.108192452 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.140409665 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.149844667 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.112720025 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.135210482 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.109542448 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.13938622 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.107096969 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.152321105 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.153431029 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.1016744 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.130681095 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.127547718 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.100668277 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.124205466 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.112855144 seconds)
  done (took 11.155103471 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132129609 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.137979886 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.122826911 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.174124596 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.120579075 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.143550162 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.104748954 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.155545179 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.112027112 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.143857117 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.110516191 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.149658123 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.16675408 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.119158344 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.13915417 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.118860305 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.142461752 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.145036434 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.156160616 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.168356059 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.119804557 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.140601182 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.119756729 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.150261993 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.138892112 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.153146824 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.172710755 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.111891282 seconds)
  done (took 4.966579533 seconds)
done (took 48.884522888 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.214812962 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.383417318 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.154923701 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.157914573 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.211466124 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.189234366 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.157092793 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.349751375 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.902117706 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.147872412 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.155128621 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.157073668 seconds)
done (took 27.26268488 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.265405037 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.747521113 seconds)
    (2/2) benchmarking "String"...
    done (took 1.474392989 seconds)
  done (took 4.319971285 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.154161562 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.156287647 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.404858394 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.157481522 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.176418629 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.157532105 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.156397458 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.172477252 seconds)
  done (took 15.463138949 seconds)
done (took 25.282115308 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.249883928 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.636411598 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.627723917 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.180251543 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.173402866 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.156499938 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.143549551 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.216471501 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.16539842 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.152076082 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.167293173 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.519026062 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.144697083 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.558431867 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.15271823 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.160704419 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.17793171 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.474437122 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.158209192 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.165946348 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.174977171 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.143842653 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.164095175 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.194052857 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.176690825 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.162279578 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.202401596 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.144679551 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.395340712 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.157678847 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.207743088 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.161171738 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.211198425 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.176015089 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.272606776 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.195599644 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.383754894 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.153917891 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.148201493 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.169221783 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.374159988 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.578114049 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.160452511 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.14917429 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.16050123 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.248655539 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.149661886 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.890260626 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.166001082 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.15114796 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.188143793 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.555427442 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.167968947 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.162148221 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.172293174 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.40488333 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.162280734 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.217659571 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.188579938 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.174296076 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.168350977 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.158124166 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.182513698 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.172518698 seconds)
  done (took 141.563990245 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.15965522 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.16376352 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.164366437 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.18564609 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.166457185 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.165000764 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.159559007 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.159483868 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.164925366 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.17488589 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.166233391 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.160824714 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.164640042 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.139908103 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.161502338 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.178725502 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.162636589 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.186478948 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.162841228 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.159897887 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.169766496 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.164023002 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.17784596 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.160053939 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.162914567 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.239606241 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.2078922 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.161460964 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.160982703 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.160072066 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.162447007 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.212844203 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.809645211 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.018865151 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.173192178 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.191701909 seconds)
  done (took 78.724868689 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.160969673 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.159133011 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.160497735 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.193344552 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.160336501 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.761053319 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.761055781 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.900704589 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.371072996 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.637552581 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.455548645 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.163086971 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.256372837 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.176971679 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.15869996 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.159621247 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.174434468 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.185813569 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.164175021 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.158588806 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.762476301 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.17357679 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.637493704 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.352850301 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.175732203 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.191392667 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.556038221 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.157562018 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.158965546 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.191606496 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.495388241 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.209839967 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.159227005 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.55490213 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.478212997 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.280510377 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.162828236 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.192095811 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.158926821 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.444001808 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.159827118 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.161064177 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.162648023 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.159071913 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.848619698 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.164045903 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.760905861 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.164806578 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.152315052 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.160988698 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.159914445 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.307180192 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.891601105 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.178122621 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.16125107 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.162960647 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.159189051 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.160771382 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.19424705 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.314042317 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.282314325 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.162309594 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.164272602 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.193351291 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.160229223 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.235062583 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.163794517 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.427591189 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.220404856 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.261600776 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.755350732 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.166927995 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.257244387 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.280823475 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.160347333 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.160746953 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.160870636 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.159718806 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.271055853 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.160880609 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.588844557 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.337965512 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.179698448 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.615734825 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.163892141 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.258193874 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.160978098 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.561276144 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.165472391 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.160686091 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.924650788 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.258458191 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.162739085 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.161355302 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.161213792 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.591387316 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.753594894 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.462374356 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.169289217 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.680152407 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.161792005 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.600251737 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.724006012 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.86849908 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.166052929 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.275558834 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.338598336 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.180417168 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.161527321 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.610427136 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.165022565 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.22507621 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.162877431 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.56168286 seconds)
  done (took 362.011433822 seconds)
done (took 583.380010955 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.895225578 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.847223965 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.981646489 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.875855968 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.847214171 seconds)
  done (took 10.531898623 seconds)
done (took 11.614466766 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.361970834 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.365398384 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.230363737 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.366695434 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.203033955 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.384610707 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.351587264 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.19210389 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.273017033 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.253687812 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.27862665 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.227762677 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.206300826 seconds)
  done (took 17.783129783 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.454438485 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.170557537 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.248476636 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.424554612 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.209127527 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.429391245 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.471489043 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.17200603 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.315182506 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.180057676 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.180872302 seconds)
  done (took 17.34635735 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.450943717 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.173352995 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.236694801 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.420328377 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.213285806 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.442857071 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.512677324 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.172271807 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.312016834 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.182965582 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.181616619 seconds)
  done (took 17.389284447 seconds)
done (took 53.606465532 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.207806703 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.342612348 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.199217669 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.181684668 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.177220836 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.178469553 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.182561412 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.176895891 seconds)
  done (took 10.737059555 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.173870055 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.173001335 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.176730209 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.175971266 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.175455882 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.173918254 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.173599892 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.17233895 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.172506578 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.177456119 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.178047336 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.177126356 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.176802947 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.177953858 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.17660993 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.174584243 seconds)
  done (took 19.897766732 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.177305814 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.175389258 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.173969078 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.174339084 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.175618232 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.175245763 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.175677974 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.174615482 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.175748933 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.175449276 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.176852144 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.175693371 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.174553621 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.175076274 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.175194634 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.176848674 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.175748558 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.176280745 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.179769815 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.176060608 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.176638747 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.176618275 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.177730798 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.175449648 seconds)
  done (took 29.315366487 seconds)
done (took 61.037312898 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.181123813 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.182817725 seconds)
  done (took 5.456322265 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.23902863 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.238163747 seconds)
  done (took 3.572170418 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.180837863 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.179967611 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.180479076 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.179057667 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.178789258 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.179444414 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.179908442 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.18003107 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.178565239 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.179232055 seconds)
  done (took 12.889073349 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.180649095 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.179549142 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.176387565 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.180671305 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.179672323 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.176597501 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.180392413 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.179630631 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.179956593 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.17558654 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.179877186 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.178756182 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.179319823 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.177249464 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.180452903 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.177918067 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.177947843 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.177703165 seconds)
  done (took 22.311775018 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.194597375 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.201022947 seconds)
  done (took 3.491003923 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.3180289 seconds)
    (2/7) benchmarking "second"...
    done (took 1.220462105 seconds)
    (3/7) benchmarking "month"...
    done (took 1.295958619 seconds)
    (4/7) benchmarking "year"...
    done (took 1.286224608 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.219727171 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.198870993 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.219590024 seconds)
  done (took 9.853467051 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.182859518 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.374818968 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.486532836 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.744916998 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.182855559 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.186132551 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.028182939 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.185639514 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.187452941 seconds)
  done (took 13.654357562 seconds)
done (took 72.318848693 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.173104767 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.227999685 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.190991522 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.192374051 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.471029295 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.202118878 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.179906989 seconds)
done (took 15.732084301 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.172163872 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.16482769 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.167175675 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.184019511 seconds)
  done (took 9.783320863 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.175240842 seconds)
    (2/2) benchmarking "read"...
    done (took 1.560342248 seconds)
  done (took 4.829588588 seconds)
done (took 15.70540564 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.182601942 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.180764809 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.179265458 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.181294989 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.181413121 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.179071293 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.179619582 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.181745794 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.181654054 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.178585927 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.182350308 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.180973802 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.182656189 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.181444771 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.178860575 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.17919499 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.181627763 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.181317722 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.179831322 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.178711741 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.178352574 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.18299393 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.179345248 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.179531637 seconds)
  done (took 29.430430884 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.183265183 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.180218045 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.182803591 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.182147713 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.179764653 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.182327229 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.182536472 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.180685423 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.182411606 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.182075822 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.180132756 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.180437218 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.181733235 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.183655454 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.186569355 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.186445216 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.186875391 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.184841866 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.184456795 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.182225665 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.184957271 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.180628424 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.181911845 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.184251799 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.180607173 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.181577262 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.183769958 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.18194583 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.183981068 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.181403891 seconds)
  done (took 36.577274077 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.187608583 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.191981392 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.184101239 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.183930885 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.184368896 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.184988322 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.184795795 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.185421319 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.184113312 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.184391828 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.184658811 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.184086009 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.184077107 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.184607435 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.184679746 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.185428404 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.185292879 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.184363429 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.184744046 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.184759615 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.184525953 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.185541542 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.185487139 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.185972634 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.186198875 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.185794144 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.185647046 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.185555392 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.185331808 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.185125627 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.18629708 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.186244305 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.186165204 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.186105725 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.188169455 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.186957941 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.191911158 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.194517459 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.186318692 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.186494068 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.186885915 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.186665907 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.186876324 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.186288231 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.187892106 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.186722839 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.186601853 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.186828513 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.186895012 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.187140654 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.187334377 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.187100733 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.186198045 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.186577359 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.187922449 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.187606805 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.187700902 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.187357944 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.186812502 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.1865956 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.188377848 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.187837565 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.188445194 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.188495107 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.188673492 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.189034239 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.188044177 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.188901503 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.187689533 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.188494309 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.188372922 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.188661244 seconds)
  done (took 86.539253234 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.189252007 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.185658826 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.185326544 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.186408533 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.187073517 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.18833874 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.18713712 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.188160225 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.187642154 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.190135427 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.190074479 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.187703197 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.187342519 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.189664699 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.190285817 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.187051311 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.189969074 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.187514054 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.189533698 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.190165938 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.189419507 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.188404455 seconds)
  done (took 27.244930767 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.189398626 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.191209525 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.186898238 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.193121497 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.189974138 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.191134279 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.189854226 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.191488923 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.19163816 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.188186339 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.187843596 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.191323085 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.188835199 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.188528007 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.18739254 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.191713215 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.192333858 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.190155092 seconds)
  done (took 22.525288959 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.188814249 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.189101899 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.191477415 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.189722272 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.190199667 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.191770743 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.188828674 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.191896722 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.191444762 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.189536196 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.191738564 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.193795593 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.193578318 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.18949738 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.191225621 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.190323516 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.192075641 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.189419147 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.192921255 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.189608174 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.189934605 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.192154682 seconds)
  done (took 27.303403965 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.193365174 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.192849757 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.191080861 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.191259188 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.190516819 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.194235646 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.193545477 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.190168843 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.193936005 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.192954629 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.189751548 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.193077903 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.191445395 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.191578471 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.19138926 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.19163489 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.193679558 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.190817821 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.195347268 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.191918365 seconds)
  done (took 24.950342242 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.196554494 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.196795199 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.196000222 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.195571782 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.197119565 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.195642243 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.195493707 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.19601504 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.195478122 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.197241386 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.197237522 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.196242586 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.196900163 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.19785819 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.198007178 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.197161885 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.197714484 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.197422836 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.198250331 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.197090866 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.198306556 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.197470282 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.198628874 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.198122491 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.197821979 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.19815797 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.198174317 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.198061141 seconds)
  done (took 34.628856697 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.196750942 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.195943168 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.193711824 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.195678538 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.194346757 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.194641926 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.193955963 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.194357081 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.195742763 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.193821838 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.196858972 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.196745209 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.197118127 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.196892546 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.197470625 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.197344279 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.196973929 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.196104422 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.195277684 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.194660354 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.198496082 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.19789294 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.196642377 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.195477147 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.195906236 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.198049131 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.196529771 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.196053905 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.198792341 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.195989548 seconds)
  done (took 36.99372519 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.242617178 seconds)
    (2/2) benchmarking "in"...
    done (took 1.239156992 seconds)
  done (took 3.59345054 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.197206113 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.198691469 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.198122029 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.195737335 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.197114795 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.199672946 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.199451649 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.196827673 seconds)
  done (took 10.694498393 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.199862859 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.199436685 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.199823462 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.199821792 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.20051391 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.199237927 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.208149353 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.219907886 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.201006261 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.20165592 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.208198503 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.209138773 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.203303629 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.200287974 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.201259934 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.203198468 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.200885344 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.200433635 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.201301527 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.20145804 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.201448697 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.203838909 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.20392022 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.199960438 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.203477173 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.21315821 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.205570232 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.202476007 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.202555391 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.205983582 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.200821709 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.198760334 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.201807065 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.202746528 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.201228509 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.202266256 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.211433824 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.225273924 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.208009466 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.20374727 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.202926658 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.198895408 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.202698121 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.204634761 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.203918833 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.203723442 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.203034919 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.200681201 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.202504695 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.208696507 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.209888182 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.203127913 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.201488778 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.206958384 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.204468674 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.210120593 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.222975253 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.208139242 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.213255272 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.213709767 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.215422062 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.228089656 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.204321886 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.202594449 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.21514317 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.230604313 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.211234039 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.221119548 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.201332037 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.204946367 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.210701627 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.218315818 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.231583697 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.20572376 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.204735883 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.204288074 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.205961394 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.205451193 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.211742595 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.226796608 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.205023735 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.204285258 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.218174638 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.230018613 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.205388668 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.205101076 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.204304365 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.204003826 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.207109449 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.216105985 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.2247621 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.204623851 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.20540039 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.205537143 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.207023343 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.206093593 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.205874531 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.207016801 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.202691036 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.20593716 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.207199575 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.210848036 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.219359603 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.207543258 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.207683419 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.217326016 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.207473089 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.20798654 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.21532171 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.207186321 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.208596884 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.209845195 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.215652569 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.204405527 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.211540566 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.216477399 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.207383668 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.20927847 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.207399519 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.21518784 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.219533872 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.237622333 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.209050621 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.20869059 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.214896854 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.221634196 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.20922608 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.213006695 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.208519414 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.205367267 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.205622599 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.20963499 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.208640482 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.209363299 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.209083919 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.210414821 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.206480462 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.208277873 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.208148784 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.210805956 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.209557351 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.210578402 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.214359016 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.212190303 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.210712418 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.210517458 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.215623305 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.209953477 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.209675821 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.209753282 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.206697283 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.209745763 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.210259594 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.209926877 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.210825729 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.210742504 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.211605343 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.209724404 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.210088061 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.209927242 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.210005697 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.211358886 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.215776688 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.210318342 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.213454796 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.210270563 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.207541164 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.210620832 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.211374782 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.210923654 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.209873456 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.209951118 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.215282689 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.219293507 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.212314685 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.21169164 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.216679298 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.210860015 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.211861475 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.211374131 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.215667257 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.221852032 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.210991129 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.218123023 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.213114354 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.212449675 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.213423307 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.212953193 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.213611207 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.213212456 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.216783293 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.221023277 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.226768495 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.239473714 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.215181425 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.216282796 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.214788197 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.217402287 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.216044904 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.214809112 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.213073096 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.214345472 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.213439655 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.213874186 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.215402597 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.2140608 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.214378016 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.214030251 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.214022236 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.214531992 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.214114664 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.214992446 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.214313943 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.211415037 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.214946626 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.214315705 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.21431619 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.21185854 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.213772536 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.21355749 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.215275596 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.214464405 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.220867515 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.21096084 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.21650134 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.214617209 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.215633228 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.213815459 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.215663991 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.217478771 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.215845427 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.223601693 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.235544097 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.21747268 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.222501793 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.235464462 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.214657341 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.21860035 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.216293386 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.214296693 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.220200192 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.22482655 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.215326636 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.213856351 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.216470741 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.217945704 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.21700596 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.222686007 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.214957779 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.215835883 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.217409417 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.217262433 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.214068417 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.219287505 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.217386189 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.218436191 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.218328389 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.218376107 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.217759704 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.217581096 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.21773076 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.217836559 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.218164109 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.221407152 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.227167082 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.222678181 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.217269938 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.219140247 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.218502495 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.223177668 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.220642665 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.220172726 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.218809396 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.23288921 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.2436953 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.224126136 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.238123404 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.219271818 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.224564276 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.239764608 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.223836771 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.217926233 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.219169542 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.219352671 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.219662894 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.216335199 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.22033759 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.220339965 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.219080312 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.222020879 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.223343463 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.2187188 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.21922582 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.21905198 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.220058537 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.219836887 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.219262916 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.220096611 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.22223581 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.222012883 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.220397316 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.220766144 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.227083169 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.240842714 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.222812816 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.219952337 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.22047063 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.220162252 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.220405736 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.223704664 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.226172574 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.230151404 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.226050701 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.230679995 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.223252922 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.230285076 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.221384033 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.226169768 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.228932777 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.219805466 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.222898081 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.221500844 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.222273587 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.229024151 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.242564453 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.225883062 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.226543971 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.221991587 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.222576207 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.222019701 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.22173902 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.221733672 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.222868388 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.231150093 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.245848012 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.229351506 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.223505932 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.218886842 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.222075916 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.223895951 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.221667109 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.225864824 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.221773926 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.223704043 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.223709809 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.222717341 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.220547302 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.221285172 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.22344706 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.218241222 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.222840777 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.23054992 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.246681077 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.228721685 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.225444355 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.232683252 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.223723267 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.231484875 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.245656696 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.224786944 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.224959427 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.224024408 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.226083477 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.224030618 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.223914611 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.222803384 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.226629387 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.227423439 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.224546302 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.225710853 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.225153993 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.224960434 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.224645894 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.235256123 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.250280307 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.227571409 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230648426 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.221221682 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.226620319 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.230748007 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.225094779 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.225383357 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.228860925 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.23622225 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.235351789 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.225192392 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.223662422 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.225979923 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.22548264 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.225453976 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.224719916 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.224739372 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.225092312 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.226547852 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.737678523 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.228256185 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.2261559 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.22555539 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.228216021 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.227495706 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.23757048 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.225996818 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.227070935 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.22768107 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.227418295 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.227495837 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.2274302 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.226592915 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.22898407 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.22731569 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.228790431 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.235593089 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.235147807 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.229786412 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.22639577 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.227966758 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.227744121 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.227966049 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.227192631 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.227563909 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.227573119 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.229391518 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.226098299 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.228334247 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.226638084 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.22686356 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.228571952 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.227253421 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.23152705 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.23680781 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.229240421 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.224241047 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.227911821 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.22915099 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.228722455 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.228484754 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.235313169 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.232723362 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.240699901 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.238270023 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.23354179 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.230379132 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.232785715 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.238593234 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.229679565 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.231335062 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.22940425 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.230776972 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.231870885 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.23517996 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.229618844 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.237356518 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.229821353 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.229887019 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.238971716 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.253649493 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.229131394 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.231937584 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.23597691 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.230090807 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.226831957 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.230113125 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.231068235 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.238092369 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.252390168 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.230597947 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.232308573 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.231890737 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.233918402 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.23587063 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.23133087 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.232073059 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.228584116 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.230244262 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.229833279 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.230997372 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.228063087 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.230695672 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.2314975 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.235956364 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.239364799 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.229218447 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.23358204 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.231526944 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.232680553 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.231052992 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.232795712 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.228315978 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.228983211 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.231519829 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.232018128 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.23257969 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.234139636 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.232789168 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.234177993 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.23414546 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.23160403 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.238410776 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.244985119 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.241211921 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.229589991 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.232042557 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.233608244 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.235370463 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.232929386 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.232793628 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.233669151 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.234984447 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.234236339 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.233839493 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.23320739 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.237717456 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.250970967 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.255760256 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.234587841 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.234628943 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.234873609 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.234568869 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.232208812 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.233767667 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.236438921 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.238068216 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.2421226 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.233758505 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.241648421 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256144641 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.237780136 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.24033711 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.240816094 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.244497978 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.238225363 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.235181225 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.235287127 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.241067168 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.252055948 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.235870817 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.246103629 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.268625331 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.257888892 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.237510397 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.235993428 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.236551485 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.235198004 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.237533153 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.237002341 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.236652916 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.236967656 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.237615592 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.236875519 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.242700971 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.237279601 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.238506043 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.237565851 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.236485931 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.237654523 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.234149801 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.236876308 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.236924159 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.236328445 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.239133422 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.23625076 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.236185031 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.251189229 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.265552899 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.23739123 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.238011702 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.234387535 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.242772913 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.242636626 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.250069509 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.24605843 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.23820975 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.238454432 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.238970684 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.238246264 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.23812252 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.238006731 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.238458448 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.239232916 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.235491653 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.251368913 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.265205859 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.243680922 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.23958488 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.23889726 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.239372353 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.240151239 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.238453707 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.238408528 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.240934126 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.243632145 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.24453107 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.240101461 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.238515099 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.242852193 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.249960237 seconds)
  done (took 730.35663014 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.237693201 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23798211 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.237124661 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.237442471 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238456802 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.238450838 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.236887614 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.23835266 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.238296159 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.237760892 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.238450488 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238883654 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.238123326 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.238267139 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.237469931 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.238635018 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238907691 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.238683927 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.238258757 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239353502 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.239616784 seconds)
  done (took 27.152746496 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.241158718 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.239311174 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.240248079 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.241954469 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.240916151 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.241674083 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.239150354 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242210883 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.243649936 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240090469 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.242329313 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242589189 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.239657848 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.239437199 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238670576 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242929927 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.242775584 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.239528008 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.241695616 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.240176846 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.243204549 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.240719046 seconds)
  done (took 28.454763602 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.243281242 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.244132565 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.24378557 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.240430086 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.246010808 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.239978079 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.243587682 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.243757259 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.243256313 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.245114159 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.243080049 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.24569618 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.252857836 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.250078017 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.246242542 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.244677904 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.244214289 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.245952631 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.244669932 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.24177323 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.249984815 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.262827383 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.242280863 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.243132628 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.243400598 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.245376783 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.244788458 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.244864244 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.247756749 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.250969567 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.245175523 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.245510026 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.247927152 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.24594316 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.247814664 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.249869007 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.246458586 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.243402443 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.245842853 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.258326123 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.269666194 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.245410467 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.25341339 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.266992902 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.246517692 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.250204667 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.256047553 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.244745415 seconds)
  done (took 61.030641036 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.851317173 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.877699869 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.869443658 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.875777836 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.874758981 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.881838208 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.887382271 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.886380488 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.876269535 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.877884418 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.885511422 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.875793657 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.877224745 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.877667463 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.879930892 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.879226521 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.879695074 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.877826198 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.883980877 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.888230342 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.875777507 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.878568514 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.877079291 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.876810863 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.882860391 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.878355855 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.879858072 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.885548729 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.878065765 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.877395148 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.886649227 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.892801236 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.885633346 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.874814455 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.87697141 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.873573916 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.884191169 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.87537069 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.881532041 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.876933265 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.87943304 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.881221436 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.878426736 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.887443324 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.890528809 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.87632803 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.880360547 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.878174559 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.879995048 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.886832777 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.882254494 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.884816588 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.877352986 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.876127845 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.8802541 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.887166586 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.887988237 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.891631989 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.881795307 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.880552663 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.875887953 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.886216513 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.88892898 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.882383734 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.886453681 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.881514377 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.884130862 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.886232145 seconds)
  done (took 129.038828407 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.25222759 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.251257225 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251935682 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250958128 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.251909048 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.253500137 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.252964404 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.253753983 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.252726679 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.253201965 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.252680218 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.25214495 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.252274645 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.253683534 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.25176829 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.252026241 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.253153636 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.252164836 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.254269151 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252722338 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.25298552 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.254328371 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.255320635 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.253439155 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.255179328 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.254535856 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.254683275 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.254355203 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.254099668 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.254931431 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.253931672 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.254278699 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.254597039 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.258339021 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.254987049 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.25274187 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.253590341 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.255410514 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.254349186 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.255539698 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.256896727 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.256730503 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.252635253 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.254651707 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.254531863 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.25516958 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.255366195 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.256646404 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.256506212 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.255303883 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.254935325 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.254164167 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25650686 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.25651675 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.254990183 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.255209757 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.255051236 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.254795664 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256104349 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.2556913 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.256129142 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.255172687 seconds)
  done (took 78.924397874 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.255214309 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.25537469 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.253520089 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.252560591 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.254263079 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.25318026 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.255165469 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.256116996 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.257081551 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.255926441 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257710658 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.253729538 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254470048 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258344211 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.25450311 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.255046592 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.254025187 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.254286336 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.257783856 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.254678311 seconds)
  done (took 26.26451368 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.254335741 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.256536044 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.254392869 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.254498645 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.257341199 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.253361792 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.257473426 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257284689 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254131008 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.256808037 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.25669564 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.258327981 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.255528519 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.255905323 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.258584231 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.256800965 seconds)
  done (took 21.261840881 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.256751151 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.258517833 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.258834936 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.259235783 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.25623377 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.256773507 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.259620111 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.256623794 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.256495935 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.260837754 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.262165536 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.261052729 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.25900233 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.258658782 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.257615156 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.259164948 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.255697304 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.256376096 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.258636269 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.260225655 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.257331495 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.257943253 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.259748718 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.260944333 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.258387043 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.257301129 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.257792464 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.25784737 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.257757945 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.259911058 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.258333806 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.257297174 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.260912993 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.25944716 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.260480157 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.258897535 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.261582121 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.259705247 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.259663447 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.25977474 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.26080074 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.258497006 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.260442603 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.260856372 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.259442056 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.261916897 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.25927589 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.258939865 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.258408602 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.259576234 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.261920738 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.262159912 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.261834917 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.262126208 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.260926932 seconds)
  done (took 70.422816038 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.260866562 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.262283724 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.259311283 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.261257666 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.262206368 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.260291261 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.262074776 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.26163752 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.258527217 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.262056426 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.259516821 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.263174181 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.259817116 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.263107593 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.26139915 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.262368532 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.26148206 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.261182195 seconds)
  done (took 23.869374566 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.260781255 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.260544271 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.262943813 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.260338164 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.25882394 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.264705943 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.259262486 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.263469735 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264290531 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.260831402 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260005389 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.262910393 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263638227 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.264028613 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.260584848 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261513059 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.26356756 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.262543213 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.260439714 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.261773484 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.263445669 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.265299466 seconds)
  done (took 28.936327502 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.264615536 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.265692875 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.26521414 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.283644441 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.289204016 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.264114014 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.264706687 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.262764789 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.288977294 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.324156226 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.317843842 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.287782529 seconds)
  done (took 16.548013947 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263486653 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266137729 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.263995967 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266346913 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26893415 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263891295 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262294274 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265409554 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266593467 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264249747 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263505821 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266698993 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264972518 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264035977 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265754878 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268804948 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265369071 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264449814 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262673824 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268509099 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265003632 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267453887 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265243786 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264262798 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26414308 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2639139 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267916084 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264731434 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263988661 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268524068 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267785594 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264626023 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267273349 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264953816 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267722547 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268398175 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264578006 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268312845 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266689902 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265170767 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.267441533 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26875331 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268317157 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264697821 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267555758 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265731736 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265693823 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26615987 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266237239 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27125732 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268059899 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265696961 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268354357 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26900586 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268831353 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27041525 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267525856 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268780971 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270277482 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267741451 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270190309 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269383234 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267488256 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268798419 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270417042 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267215397 seconds)
  done (took 84.769725009 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265997681 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.266517162 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265610909 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26700094 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267377854 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267572391 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267782036 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266906057 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267716816 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266522465 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270377634 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26714819 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266707609 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267740345 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266875653 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267205076 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267257568 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267449536 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268039996 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271295226 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2687777 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268100113 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267912887 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268474471 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268567908 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27164141 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267396513 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2686987 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268259922 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269323288 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268682866 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268113588 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267764374 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.268910581 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268140397 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267844446 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269340372 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270738534 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268325729 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271794748 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269812897 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272957056 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269034025 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269618615 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270223759 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268835695 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269337471 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270207079 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268911302 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269808499 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269617109 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270290992 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271501097 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269359214 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269487424 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270051424 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268942145 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271762561 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270715525 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27235435 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269720049 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27082637 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273649443 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271606129 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269994673 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270460709 seconds)
  done (took 84.931582942 seconds)
done (took 1753.536612065 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.443044688 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.398617723 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.271726817 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.282579251 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.273102952 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.267747506 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.286014607 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.27375774 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.273262132 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.274622719 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.274090744 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.482970758 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.311364486 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.273821597 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.27418709 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.370805774 seconds)
  done (took 26.211749952 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.303366574 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.280839522 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.4037581 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.299743173 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.304946228 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.481152099 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.342663373 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.279731579 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.473333292 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.306729126 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.276875235 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.308367596 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.278598447 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.267928913 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.302823896 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.481294957 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.552764745 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.274850168 seconds)
  done (took 28.399647984 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.775610041 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.279220921 seconds)
  done (took 5.235016699 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.300879599 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.281410618 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.281502445 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.278564535 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.27009116 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.270287144 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.277308433 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.276612907 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.291345456 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.421084307 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.286549641 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.291422547 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.302520817 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.280709087 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.277294663 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.321548776 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.437353801 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.278701802 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.274438274 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.285630583 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.278855829 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.370802154 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.325925502 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.276120046 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.419758794 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.277019938 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.282609289 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.288516269 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.419876335 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.278980805 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.279693605 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.280757395 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.284830527 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.198961329 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.771812904 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.296785106 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.32786769 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.28950499 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.276234409 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.435440381 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.282587565 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.288855765 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.273561042 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.770493592 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.448429478 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.410600221 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.297251764 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.283227515 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.283919983 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.352072768 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.283065345 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.284521163 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.328766151 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.128956163 seconds)
  done (took 82.554430173 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.291302933 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.273362253 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.458239036 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.292445802 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.274792643 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.273003282 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.278754369 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.591546178 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.307035884 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.274111361 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.618725264 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.892915236 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.298210284 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.321878855 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.131215355 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.336097993 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.276137153 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.293668245 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.282564345 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.282241005 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.849844214 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.28124634 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.296431389 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.465685626 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.3171077 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.844564862 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.279772545 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.276095924 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.279659595 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.275048723 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.84593328 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.307183762 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.332022419 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.277164601 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.562084635 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.686908 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.649639922 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.27739747 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.324238437 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.278545065 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.289496613 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.822370433 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.682921741 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.280022095 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.276565621 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.820814995 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.276336777 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.284864455 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.286171566 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.530105988 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.277369136 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.280291028 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.299372448 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.278243007 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.277576254 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.347072627 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.349931741 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.846564704 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.282684352 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.284262408 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.31472733 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.280304868 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.289498428 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.283950749 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.278458434 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.693215279 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.426713412 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.284136987 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.692936082 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.850557465 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.307680347 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.904786705 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.3033809 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.303692067 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.519916224 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.277489043 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.277947088 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.862353905 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.282559818 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.279481435 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.674371666 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.286107362 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.621960042 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.308219936 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.282427403 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.860435741 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.282499716 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.350025793 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.280238141 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.281212231 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.281029658 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.28269684 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.572160209 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.333300607 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.280879486 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.2800267 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.329853009 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.281272405 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.281840763 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.284357047 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.904209484 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.313889932 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.280309683 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.284984474 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.281109764 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.284091409 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.283415209 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.281376674 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.551046428 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.281265018 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.284276579 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.28409732 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.282472016 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.288692737 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.453371169 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.288984825 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.644505443 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.286721942 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.299049421 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.28508939 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.28191635 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.290407443 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.282325865 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.286041038 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.187606817 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.589452385 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.3047193 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.302984288 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.280940358 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.283990374 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.300776889 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.304003314 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.318456525 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.283419816 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.085671895 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.307496509 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.308183714 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.282320872 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.295937546 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.283134006 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.303840725 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.285111528 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.585159067 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.57206644 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.428883417 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.283976963 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.283698409 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.103396867 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.316724397 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.467213539 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.302975423 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.285227397 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.537058457 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.513765473 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.284390143 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.288280146 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.286189117 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.565679789 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.285002161 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.598247428 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.879529998 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.311077171 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.288815422 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.09576927 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.00708977 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.286536161 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.286221537 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.630007051 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.305241715 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.285369678 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.284119507 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.286404147 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.28603269 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.308250429 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.289272896 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.287292968 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.286444802 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.332043219 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.478974485 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.306085525 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.295433413 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.828120063 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.297134377 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.287813355 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.290105638 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.289240699 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.287925662 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.347373445 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.291111777 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.299634133 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.289918851 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.287819987 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.885958702 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.288323555 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.288475563 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.481304995 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.020092873 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.310819379 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.28814652 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.305189812 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.184365393 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.856059817 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.336761187 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.630037197 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.292830165 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.328265213 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.287367041 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.305815892 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.853260293 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.288074885 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.307999525 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.990456722 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.311683278 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.868321529 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.287362028 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.289990073 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.937228529 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.309823996 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.294662009 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.28796402 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.309540871 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.586718905 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.289295056 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.288976018 seconds)
  done (took 488.953791233 seconds)
done (took 632.530678114 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.288939219 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.296872352 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.282636372 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.299484403 seconds)
  done (took 10.367985538 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.298265669 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.296646702 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.297021384 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.29633509 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.297702241 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.296253379 seconds)
  done (took 8.985431032 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.289992011 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.296863372 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.29385282 seconds)
  done (took 8.079242845 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.521752507 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.329627664 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.662674479 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.327011766 seconds)
  done (took 9.041628695 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.296384073 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.297008838 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.297119729 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.298310055 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.298810695 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.301246065 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.300064398 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.298154999 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.300274587 seconds)
  done (took 12.884091682 seconds)
done (took 50.553736305 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.055965387 seconds)
    (2/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.328776218 seconds)
    (3/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.28402606 seconds)
    (4/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.38569945 seconds)
    (5/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.382079847 seconds)
    (6/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.0608346 seconds)
    (7/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.332071219 seconds)
    (8/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.516396026 seconds)
    (9/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.366405166 seconds)
    (10/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.353320847 seconds)
    (11/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.292761912 seconds)
    (12/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.318191653 seconds)
    (13/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.406858462 seconds)
    (14/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.390306973 seconds)
    (15/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.315607202 seconds)
    (16/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.460494893 seconds)
    (17/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.336303701 seconds)
    (18/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.303017745 seconds)
    (19/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.059528157 seconds)
    (20/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.420799938 seconds)
    (21/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.455866778 seconds)
    (22/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.302738027 seconds)
    (23/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.055812969 seconds)
    (24/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.378223864 seconds)
    (25/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.489479057 seconds)
    (26/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.278774272 seconds)
    (27/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.518332458 seconds)
    (28/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.306227701 seconds)
    (29/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.446418176 seconds)
    (30/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.537099108 seconds)
    (31/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.949861113 seconds)
    (32/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.307672323 seconds)
    (33/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.391525743 seconds)
    (34/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.313372834 seconds)
    (35/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.399174955 seconds)
    (36/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.339406578 seconds)
    (37/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.321042294 seconds)
    (38/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.070772094 seconds)
    (39/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.372031234 seconds)
    (40/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.347419483 seconds)
    (41/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.360218621 seconds)
    (42/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.304433647 seconds)
    (43/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.304576259 seconds)
    (44/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.348699708 seconds)
    (45/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.279492006 seconds)
    (46/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.312052846 seconds)
    (47/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.48088312 seconds)
    (48/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.649527922 seconds)
    (49/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.427692065 seconds)
    (50/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.336078987 seconds)
    (51/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.385721506 seconds)
    (52/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.516350531 seconds)
    (53/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.293601665 seconds)
    (54/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.358427811 seconds)
    (55/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.315245667 seconds)
    (56/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.296931599 seconds)
    (57/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.366769998 seconds)
    (58/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.337474796 seconds)
    (59/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.474763068 seconds)
    (60/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.380832662 seconds)
    (61/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.068641153 seconds)
    (62/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.381153792 seconds)
    (63/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.958901638 seconds)
    (64/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.945240856 seconds)
    (65/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.384969041 seconds)
    (66/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.447035127 seconds)
    (67/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.323644338 seconds)
    (68/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.404099658 seconds)
    (69/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.345939715 seconds)
    (70/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.327052137 seconds)
    (71/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.521497513 seconds)
    (72/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.441228917 seconds)
    (73/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.446476977 seconds)
    (74/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.974751827 seconds)
    (75/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.409767679 seconds)
    (76/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.324522939 seconds)
    (77/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.310114793 seconds)
    (78/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.349383912 seconds)
    (79/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.345908952 seconds)
    (80/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.383535639 seconds)
    (81/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.383281758 seconds)
    (82/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.298433213 seconds)
    (83/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.391904782 seconds)
    (84/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.424275272 seconds)
    (85/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.461310242 seconds)
    (86/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.443416308 seconds)
    (87/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.355074349 seconds)
    (88/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.508145003 seconds)
    (89/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.413326204 seconds)
    (90/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.383582708 seconds)
    (91/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.014896889 seconds)
    (92/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.506642339 seconds)
    (93/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.351136578 seconds)
    (94/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.407525616 seconds)
    (95/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.402611362 seconds)
    (96/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.47121695 seconds)
    (97/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.403348382 seconds)
    (98/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.333761505 seconds)
    (99/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.007937436 seconds)
    (100/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.419044281 seconds)
    (101/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.317997988 seconds)
    (102/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.313880206 seconds)
    (103/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.323726648 seconds)
    (104/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.479073864 seconds)
    (105/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.452288363 seconds)
    (106/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.361802184 seconds)
    (107/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.382810424 seconds)
    (108/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.29803415 seconds)
    (109/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.403665934 seconds)
    (110/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.013625973 seconds)
    (111/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.320263544 seconds)
    (112/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.310132173 seconds)
    (113/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.472165628 seconds)
    (114/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.380552602 seconds)
    (115/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.954322976 seconds)
    (116/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.410564763 seconds)
    (117/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.434255786 seconds)
    (118/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.32728688 seconds)
    (119/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.328543917 seconds)
    (120/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.324030587 seconds)
    (121/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.435826482 seconds)
    (122/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.30128387 seconds)
    (123/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.430509246 seconds)
    (124/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.314336707 seconds)
    (125/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.310234032 seconds)
    (126/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.315248736 seconds)
    (127/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.517047005 seconds)
    (128/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.304660655 seconds)
    (129/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.35901533 seconds)
    (130/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.353982712 seconds)
    (131/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.075571628 seconds)
    (132/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.340676275 seconds)
    (133/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.405761605 seconds)
    (134/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.494977237 seconds)
    (135/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.337653485 seconds)
    (136/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.313566416 seconds)
    (137/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.191617612 seconds)
    (138/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.335835028 seconds)
    (139/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.434206922 seconds)
    (140/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.972263021 seconds)
    (141/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.468201564 seconds)
    (142/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.386954431 seconds)
    (143/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.290688468 seconds)
    (144/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.26428788 seconds)
    (145/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.320372378 seconds)
    (146/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.331001275 seconds)
    (147/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.315643122 seconds)
    (148/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.497373826 seconds)
    (149/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.036035271 seconds)
    (150/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.327675781 seconds)
    (151/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.065472106 seconds)
    (152/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.442369853 seconds)
    (153/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.290077784 seconds)
    (154/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.386159325 seconds)
    (155/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.362984797 seconds)
    (156/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.325142628 seconds)
    (157/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.398270011 seconds)
    (158/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.287276429 seconds)
    (159/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.439483257 seconds)
    (160/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.381961647 seconds)
    (161/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.459270485 seconds)
    (162/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.229675931 seconds)
    (163/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.334958013 seconds)
    (164/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.311036429 seconds)
    (165/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.377995254 seconds)
    (166/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.33366966 seconds)
    (167/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.382421103 seconds)
    (168/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.295322602 seconds)
    (169/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.150522807 seconds)
    (170/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.366853312 seconds)
    (171/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.503472135 seconds)
    (172/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.976149829 seconds)
    (173/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.442854878 seconds)
    (174/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.296513467 seconds)
    (175/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.321365138 seconds)
    (176/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.431557155 seconds)
    (177/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.405299409 seconds)
    (178/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.316052639 seconds)
    (179/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.311792666 seconds)
    (180/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.502311658 seconds)
    (181/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.303312488 seconds)
    (182/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.7106738 seconds)
    (183/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.396162133 seconds)
    (184/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.390320861 seconds)
    (185/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.364245263 seconds)
    (186/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.965201838 seconds)
    (187/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.318204419 seconds)
    (188/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.467334015 seconds)
    (189/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.36900759 seconds)
    (190/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.417528736 seconds)
    (191/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.534292013 seconds)
    (192/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.593918742 seconds)
    (193/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.433039014 seconds)
    (194/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.337000839 seconds)
    (195/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.317366133 seconds)
    (196/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.352278612 seconds)
    (197/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.354589703 seconds)
    (198/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.389620559 seconds)
    (199/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.339976649 seconds)
    (200/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.677149054 seconds)
    (201/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.366699415 seconds)
    (202/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.673916702 seconds)
    (203/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.448264047 seconds)
    (204/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.475225692 seconds)
    (205/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.292526151 seconds)
    (206/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.387298527 seconds)
    (207/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.426610017 seconds)
    (208/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.453336732 seconds)
    (209/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.351644764 seconds)
    (210/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.390372345 seconds)
    (211/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.546095377 seconds)
    (212/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.470067866 seconds)
    (213/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.297384152 seconds)
    (214/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.395361293 seconds)
    (215/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.487655786 seconds)
    (216/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.380396413 seconds)
    (217/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.532366392 seconds)
    (218/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.331540949 seconds)
    (219/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.325941792 seconds)
    (220/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.306908025 seconds)
    (221/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.353446776 seconds)
    (222/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.140023201 seconds)
    (223/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.392029502 seconds)
    (224/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.213821848 seconds)
  done (took 363.169988686 seconds)
done (took 364.367105758 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.3639969 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.492027234 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.333279351 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.33511436 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.360035149 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.304314958 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.371601247 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.323974865 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.318738631 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.318605093 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.322370675 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.3202422 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.336310487 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.351627122 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.427873825 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.322167362 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.334195117 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.316704809 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.356104832 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.375382042 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.35996397 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.361313505 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.328363688 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.333715821 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362598282 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363680925 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.337917622 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.316285365 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.31885914 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.356837118 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.323990127 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.339097734 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.366254938 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.367777547 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.360699913 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.319573958 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.359789473 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.492061006 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.351275676 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.352327852 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.320426573 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.365320885 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.328974574 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.327179033 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.367598946 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.329173456 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.364081331 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.442418904 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.322952501 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.316725685 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364378319 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.378358365 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.321605505 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.317385921 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.318812341 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.440645724 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.321893126 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.368547989 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.324643759 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365588661 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.433959426 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.368305395 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.382915717 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.36777121 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.32273905 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.343947566 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.322850021 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.382178568 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.321390863 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364186065 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366389264 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.328117765 seconds)
done (took 106.584624691 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.445659237 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.319882986 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.482906146 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.321150771 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.484365122 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.465412387 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.318204202 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.318548096 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.316539239 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.110721806 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.317117879 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.317350096 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.313506175 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.317528069 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.445139525 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.320978835 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.317126236 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.0109703 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.321830778 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.459621831 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.321425271 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.317927337 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.319968328 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.115840106 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.319760756 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.316764159 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.461175024 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.320466261 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.015192521 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.316016064 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.317293512 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.016075547 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.46183536 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.339630774 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.330585572 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.327630463 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.485474844 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.34144444 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.441096519 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.4453009 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.482391229 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.360546318 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.317499493 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.32214614 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.323843653 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.323834564 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.320505496 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.347755689 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.322052669 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.319012487 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.015671986 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.331495739 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.329980744 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.320383573 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.322985093 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.341800123 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.323279003 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.324490821 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.464717978 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.325333977 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.449335879 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.117650737 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.115858655 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.324449494 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.321124602 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.322812958 seconds)
  done (took 107.468844507 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.390592782 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.399885175 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.442455218 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.342787291 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.376353016 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.447228488 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.343882676 seconds)
  done (took 10.965633589 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.330227583 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.324889863 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.376703113 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.37731341 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.324912068 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.541275881 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.325378019 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.337388974 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.321244613 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.407873638 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.326576586 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.326602755 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.331971743 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.320645944 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.375908625 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.33647037 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.44137196 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.325898282 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.326556285 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.481226457 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.321957656 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.332244392 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.399309986 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.338533511 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.327210813 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.33241009 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.284722247 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.326389663 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.323454694 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.323764106 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.323274898 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.43528745 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.325441371 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.323683876 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.323569106 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.484875866 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.326853536 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.327515237 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.328898515 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.320037792 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.32712874 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.32716441 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.326653042 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.323087429 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.328922378 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.352969673 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.329267932 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.327659327 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.327702934 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.329158512 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.406656915 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.328603892 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.326821403 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.325195319 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.412109473 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.335223016 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.329410304 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.329187482 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.329747672 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.327520496 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.483970587 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.379036039 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.327908183 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.378200913 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.32892695 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.327682064 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.327724662 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.329383704 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.42050451 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.330055793 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.380170186 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.32557152 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.571511395 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.35290022 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.330620973 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.331920072 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.333418302 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.32839477 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.326047739 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.336055925 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.32613059 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.330534788 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.336777944 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.326773822 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.326692139 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.51609144 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.486872194 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.326187316 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.344278483 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.338271303 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.327608721 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.409831413 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.330666258 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.328442504 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.390342251 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.445566185 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.406600872 seconds)
  done (took 137.614596124 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.344724003 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.342333343 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.334815838 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.359060018 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.332949336 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.331284796 seconds)
  done (took 9.274275624 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.334105923 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.334132958 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.331636823 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.331870147 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.331614811 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.332523117 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.333337851 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.335674845 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.335751719 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.33168127 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.332277919 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.334453812 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.333232773 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.333173089 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.334427077 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.332706093 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.333426414 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.3299437 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.332702126 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.33281446 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.331615152 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.333625442 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.333783294 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.335971936 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.337752993 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.334508561 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.353865039 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.332462105 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.334911526 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.342222437 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.357028044 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.334556713 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.336334388 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.340760321 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.339738939 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.337962679 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.338184344 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.334383889 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.331323205 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.334729366 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.334904868 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.335466917 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.334537377 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.33598999 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.337543023 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.341068944 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.339607663 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.356412924 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.335052779 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.336837874 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.336318048 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.333691616 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.33355669 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.336666328 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.338662696 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.360612389 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.340219378 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.336963405 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.337141484 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.338337374 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.336469021 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.336032536 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.338587943 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.340676784 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.333801369 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.335618063 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.33943547 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.340266482 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.336355391 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.337587885 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.338814027 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.33387839 seconds)
  done (took 98.476707344 seconds)
done (took 365.016779136 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.271896814 seconds)
  done (took 4.506309725 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.579773069 seconds)
  done (took 3.816341678 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.719942966 seconds)
  done (took 25.960542105 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.366435343 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.353041919 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.333523481 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.329554966 seconds)
  done (took 10.617014762 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.738734746 seconds)
  done (took 3.972977169 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.327831806 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.330159626 seconds)
  done (took 5.895447327 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.687149579 seconds)
  done (took 3.922047618 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.770917903 seconds)
  done (took 4.014313923 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.354006465 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.345519144 seconds)
  done (took 5.943230136 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.314296404 seconds)
  done (took 3.548762844 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.242311382 seconds)
  done (took 18.48006762 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.334461324 seconds)
  done (took 3.573894517 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.37541417 seconds)
  done (took 3.609530578 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.437776878 seconds)
  done (took 6.671345594 seconds)
done (took 105.763471972 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.328636756 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.331561065 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.333946355 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.333814944 seconds)
  done (took 10.562786646 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.389208808 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.389473029 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.390264648 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.390997728 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.388048249 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.389543842 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.363501662 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.363856899 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.388718831 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.389089976 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.391859471 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.389031451 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.390194262 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.364763017 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.389208452 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.389922212 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.390768277 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.391190249 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.363512542 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.389944432 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.339971823 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.390875955 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.391427862 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.343252831 seconds)
  done (took 34.396351544 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.834613695 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.412628209 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.495619323 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.393611922 seconds)
  done (took 7.372015492 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.418861584 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.418675144 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.433517668 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.469349678 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.483976951 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.430648144 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.366308254 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.362012 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.347881333 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.41961419 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.467647666 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.410767292 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.499704957 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.34037757 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.548510193 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.339697911 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.340268458 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.418382037 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.471385022 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.482584592 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.340909147 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.418263711 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.417804688 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.411264301 seconds)
  done (took 35.29681791 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.346148708 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.353806605 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.339146365 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.355803117 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.339961511 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.340978394 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.340125181 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.345219887 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.338418011 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.338197211 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.340250828 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.354176764 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.343409357 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.339968608 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.347048159 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.342096891 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.347146634 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.344554917 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.341775701 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.347954324 seconds)
  done (took 28.124577182 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.335413068 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.335415416 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.688495679 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.592897008 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.335452801 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.342130194 seconds)
  done (took 13.8693464 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.424219864 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.605051988 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.348753797 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.760367585 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.834923188 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.345564911 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.345819394 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.632201332 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.983772474 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.967768125 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.414321965 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.425095264 seconds)
  done (took 20.328630947 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.337161827 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.344478435 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.356144488 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.359677675 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.406767113 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.371706993 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.353559522 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.336851223 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.410795702 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.435553624 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.36944794 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.408646587 seconds)
  done (took 21.736101587 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434842288 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.33985757 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.355055213 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4178822 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345357966 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.188042391 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.337984796 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.12379752 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.368179811 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6119481 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340873947 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441529998 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.595658125 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343434124 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.344336643 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.332786983 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580794253 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912923335 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345825115 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339644415 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378793339 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.35367909 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343852472 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.610256261 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.346101673 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339532699 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.601119199 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.339825535 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.666269422 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.361465424 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351388913 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341256976 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614040558 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059887522 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464611921 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.584322309 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349571482 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.342735722 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.350539408 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.347099165 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359181874 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.346444068 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351125209 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339456384 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340166753 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347397521 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15632391 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.373200245 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.338318704 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.341570492 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64375071 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444991165 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.346373945 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.341752522 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376902129 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3467733 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.349641563 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442334157 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933166165 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346726714 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35685566 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.348362949 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.348691589 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371160255 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050924255 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.354033023 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.348065808 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.347185272 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343459684 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.343427899 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366804449 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343109679 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.368239593 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346015012 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.132274273 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.345806671 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369605067 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98580235 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354487689 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.350539611 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.576982638 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343106777 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343912076 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.34240039 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.343837862 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.158498816 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358260315 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.327566241 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.37131835 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.091517974 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.60996666 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369600637 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376525659 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.569912975 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.330222913 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343580241 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.360963779 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353531475 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365807835 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.149079921 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369434603 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.350277379 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.60844566 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.55981035 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350627148 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.339189555 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923312294 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369621973 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.365715127 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.347840978 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.596788513 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.015322177 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.367195279 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346734747 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36966957 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.346796945 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202797527 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354152637 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.451870005 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.363166366 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650384991 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.262449303 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35389562 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416425085 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3532031 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.347197573 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35117076 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356067895 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.34737851 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.577403148 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376676466 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.363825321 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.34947105 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347823111 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.34823892 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362135616 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.35493797 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.57440376 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349043616 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627381841 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349084153 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348221726 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349086651 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.574647528 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.366947004 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.691552603 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.613595289 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352384014 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.355655893 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.365174706 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367478146 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453307021 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372979236 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.351323842 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.613062668 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.353384265 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.354170645 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348924926 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.357760966 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355470728 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.355845336 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367138147 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016492104 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327386195 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.358915433 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.245232604 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.364320449 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41738766 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.356308606 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598624013 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.354616416 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371512203 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.357059337 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.352092445 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.577107181 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.360168465 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.349038681 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434942476 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.893664647 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.043943115 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372254332 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.351166525 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.347878319 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.348692833 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351944471 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350405484 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.351107087 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.592204086 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.371189386 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.35084759 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.028442906 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359899675 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.351965337 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.364432817 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.362394433 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.356608583 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351901421 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.349012998 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35027441 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365300468 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.367995653 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496376842 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.367422937 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.351675653 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.869243281 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.357816632 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352025791 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.352158456 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387719334 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.352405474 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251677585 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.619947197 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368160497 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65850172 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.359129727 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.37514252 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.350327374 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353562606 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385719162 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.373270312 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386900964 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.366758286 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.353637004 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361918234 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935330747 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161163547 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951290773 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373066819 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.361296683 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.359203789 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.147470084 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380404447 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35398996 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618112779 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.156083865 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379711419 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901962731 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.377370197 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210708276 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.660663976 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596737262 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371302216 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.374392607 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667667426 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.574481837 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390226615 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.36287134 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360510577 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.340247686 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955500781 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387289459 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439436096 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146834539 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399350461 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.363331856 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.401977631 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.376061548 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830927614 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.382366392 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356535786 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.364621751 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.359090099 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220296958 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.362197725 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356360874 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034606595 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.358814523 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.911442388 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383025904 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.607580342 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.374759817 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.362247393 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.368572633 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.373904935 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.620040287 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.667565047 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366104229 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.357003096 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986756345 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.23987108 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.364184937 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356803556 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220418197 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369053614 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.698693866 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.371432233 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.375347133 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364920801 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.359913541 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357418404 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.356203519 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.367421269 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327183025 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932583703 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.372904163 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365430646 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369811053 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366087861 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.61651063 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.374287442 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.027246393 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.59570679 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36964197 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382927401 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.362938621 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359877941 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.352626091 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.359876383 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.358912806 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405492986 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.590722577 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.360256746 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.351201422 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.433163828 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.577914983 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.362201014 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.359950165 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.645748354 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.362619699 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.386849084 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191942317 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394952242 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.359780131 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368017632 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.372014375 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.382210155 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430338916 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610129834 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.379318566 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.372122875 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829740686 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388091022 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371089561 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.37621412 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458147114 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374727088 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.379567608 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.140107725 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017454351 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171642932 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.021519067 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671813659 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.370931159 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370761403 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36304261 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524765967 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363445966 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635181881 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362659043 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.365823132 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385450573 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365044326 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371552313 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.580969738 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669600423 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364116058 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365477421 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368680244 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.363311935 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.373202575 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.5767519 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937473105 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012386335 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371974016 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.364777437 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.183391832 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668826625 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362482456 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36445332 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364497227 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.390489714 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.405065416 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.376201518 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363277852 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514232135 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.67055922 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09924339 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.401742398 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.391814031 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.880500419 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36966827 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.627152037 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36150209 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.622478229 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.044703997 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.185211142 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63995636 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437444362 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616606216 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.368441209 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527665792 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.364457755 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.372721127 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36737754 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366971911 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.363201525 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.374294939 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050236046 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639260972 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.37026592 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.363046212 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401778863 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.376277981 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.590533593 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.199424779 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.597264774 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.378710252 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.372555984 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.367116063 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.052098381 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.68282474 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374590592 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.373129003 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.643711082 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.373156018 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.3910929 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.884516296 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.366374571 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007825854 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.351263296 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39201748 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369195684 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.198911872 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055272572 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.388112713 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96129114 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376931303 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375143428 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648699678 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.375406477 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.370170932 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650939683 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.374035368 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.371787523 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62634097 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.050219889 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.26673161 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.40232264 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402965761 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.377334114 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370482868 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443140793 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374905732 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371434448 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.853232019 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.397471688 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369656246 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.381491483 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.371577278 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382268415 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.375508836 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370841042 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.376463397 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.363425101 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.362396476 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.382354859 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472643019 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012889878 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396929348 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.039924419 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.698711199 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.628699873 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.373372923 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.363097449 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.375878436 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373872586 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371810002 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372734716 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38845463 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008738085 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.379466001 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.387159281 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.376184464 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.375475113 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584917584 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373236182 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.631758303 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380151587 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.393870806 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.358739521 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373526205 seconds)
  done (took 974.339687189 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.393736884 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.419197378 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.426682653 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.385781581 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.390897549 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.39524286 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.477086946 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.466470334 seconds)
  done (took 20.630482157 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.383521297 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.389244269 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.373907692 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.3889765 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.387373293 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.917893425 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.408882201 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.390821567 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.391785295 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.378986547 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.390046487 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.364408796 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.390472722 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.389610197 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.377716119 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.391146967 seconds)
  done (took 32.996087614 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.687230234 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.621296518 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.836274397 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.439997771 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.410410402 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.380074901 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.739315715 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.40297762 seconds)
  done (took 27.793412295 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.386133266 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.38810265 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.386501751 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.387647158 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.388014697 seconds)
  done (took 8.210517845 seconds)
done (took 1236.890046308 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.383147148 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.382779263 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.378445965 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.380016701 seconds)
  done (took 6.799538483 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.361300357 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.361615256 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.363553612 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.374965223 seconds)
  done (took 9.736965732 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.201284582 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.1105154 seconds)
  done (took 5.587218866 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.892829591 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.889916715 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.886190351 seconds)
  done (took 6.948983247 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.711494976 seconds)
  done (took 2.991650676 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.299265436 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.385270924 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.074743436 seconds)
  done (took 8.043404493 seconds)
done (took 41.381703386 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.379961384 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.628089504 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.534914728 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.39266386 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.540799461 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.535825176 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.207391588 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.383229249 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.384435055 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.382873587 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.382440624 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.542464856 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.120161982 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.628702858 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.12062316 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.725477685 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.545338033 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.390021079 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.388842195 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.378980588 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.231167138 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.391787432 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.392894507 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.387743424 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.548857213 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.526749736 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.379686188 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.719539504 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.39546735 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.381612131 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.525187589 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.380546783 seconds)
  done (took 83.134647866 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.380603002 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.381922693 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.382195001 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.407266982 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.396551148 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.380931644 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.40091314 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.42008147 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.407131264 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.39007506 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.416041128 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.393744925 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.394762143 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.399802014 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.395164528 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.397947759 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.382351351 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.387372903 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.387186475 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.388575302 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.384259591 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.407999251 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.381302629 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.388109407 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.400624524 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.384052525 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.401368319 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.382749142 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.382427033 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.383567127 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.391047356 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.407961845 seconds)
  done (took 77.867430234 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.382493674 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.416390398 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.385153447 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.38832334 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.39076949 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.388235388 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.388839997 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.382511648 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.402648895 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.390431233 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.402957314 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.396359621 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.38472869 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.383114556 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.403917766 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.384016914 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.384138024 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.391959854 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.390563965 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.389565922 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.385317291 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.387453924 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.384333524 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.413778473 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.389040884 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.398557361 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.384791482 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.387070609 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.38514062 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.390995238 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.392741306 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.421887413 seconds)
  done (took 77.832424189 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.668098059 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.393975034 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.393696406 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.387959618 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.392461187 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.392136201 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.3871545 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.667896396 seconds)
  done (took 14.967503987 seconds)
done (took 255.080342958 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.390620205 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.961474078 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.438747225 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.385726038 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.416656218 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.414076483 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.632577151 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.432525703 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.627592017 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.40581534 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.437317664 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.396960237 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.320712819 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.561705885 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.317129069 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.389756539 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.39612098 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.394606862 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.049456496 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.693681779 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.414383061 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.387978781 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.320760598 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.414656239 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.380893808 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.489262424 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.507907135 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.632658456 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.565899758 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.484895721 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.998838077 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.396521999 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.390235149 seconds)
  done (took 65.733875024 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.395714511 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.516196534 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.395226546 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.396362481 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.521124739 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.393539979 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.395338593 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.396474233 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.397060721 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.397898375 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.396418739 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.398353766 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.39824076 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.441569706 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.523883381 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.415432976 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.395896722 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.516558372 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.397637629 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.389513019 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.43896315 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.397434637 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.398816302 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.442834132 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.395685669 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.397690665 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.517105759 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.398864075 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.392306314 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.514183634 seconds)
  done (took 44.064127998 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.397435326 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.078931908 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.249596363 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.410190825 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.399135854 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.403411884 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.733627088 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.404461151 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.402780542 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.401938786 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.956111839 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.406365127 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.435837746 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.270146935 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.408990631 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.399550558 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.401081973 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.40017387 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.08377517 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.415231534 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.76258739 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.404973701 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.737585345 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.415524668 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.425510086 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.401251842 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.404530445 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.296495694 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.403164999 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.950334708 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.308091819 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.740665876 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.288811781 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.274412944 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.307021279 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.409744156 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.401710549 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.964468023 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.40869902 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.401680943 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.741469681 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.408095728 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.273061168 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.127673725 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.425317164 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.400953507 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.331805626 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.96699603 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.695151568 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.41435685 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.298624587 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.411742113 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.403479858 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.405865611 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.691308936 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.411096868 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.402982102 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.402900263 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.413162257 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.743242276 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.410320358 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.404792733 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.085424295 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.411031121 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.077676301 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.410949539 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.410302341 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.425600915 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.26536993 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.411662991 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.135576634 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.425378511 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.40495007 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.959981694 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.097264434 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.380474608 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.405857155 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.082002077 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.29181255 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.740646421 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.415795499 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.290403152 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.749736339 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.413980493 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.40666817 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.404400496 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.405653482 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.482327723 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.741188653 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.083538649 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.158561848 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.441909884 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.758045915 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.419116479 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.40546065 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.415308304 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.407653876 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.404223558 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.272482019 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.154239978 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.43089979 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.41396433 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.173005041 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.434407645 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.748436662 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.419277107 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.283145773 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.412951428 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.483433062 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.405203853 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.413647509 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.431843048 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.750000019 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.414802697 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.406258692 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.13982431 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.022067011 seconds)
  done (took 200.681193179 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.402279766 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.400687066 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.400154135 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.420216268 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.400804821 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.40784872 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.401324001 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.400346748 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.405732058 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.39900883 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.400375814 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.411994579 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.407932365 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.40057592 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.401917239 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.401387617 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.400712911 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.428363663 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.400356677 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.400029272 seconds)
  done (took 45.391910613 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.408360633 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.085667392 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.03985919 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.414718272 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.405520514 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.409840996 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.471259892 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.409589887 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.403837287 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.74896335 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.611436779 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.433826744 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.405418069 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.405904262 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.035932846 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.403386425 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.770289573 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.089928223 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.414327246 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.081162692 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.403806604 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.408754305 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.410065488 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.087192464 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.764672215 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.754602494 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.482989871 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.094739089 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.413945112 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.407475314 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.089936782 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.418379387 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.410907332 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.082650186 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.436600304 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.424382852 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.408933069 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.479428739 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.485237065 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.781402111 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.166794624 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.757028909 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.42748684 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.595972002 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.415785637 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.397460283 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.045983083 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.429740801 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.399502994 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.409203565 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.415774831 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.039378585 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.436410109 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.037371682 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.43432613 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.410749735 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.08632143 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.045280851 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.065783875 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.619002192 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.4363846 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.752075837 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.41591933 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.068805372 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.434097565 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.412035905 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.413196159 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.618251287 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.072914871 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.741498531 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.753990411 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.752652459 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.412738062 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.480208794 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.435769927 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.826248915 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.479365771 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.865988478 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.758374579 seconds)
  done (took 130.763819427 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.707445497 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.535062461 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.864318472 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.062686836 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.4086574 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.544232846 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.533025892 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.699424723 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.431056126 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.505844154 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.127358329 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.521743621 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.233910844 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.498706583 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.521499495 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.57637761 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.846133839 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.409790099 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.117310102 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.112675332 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.41255183 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.547456599 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.003593816 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.652409509 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.412569672 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.998577502 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.435395532 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.158171889 seconds)
  done (took 55.183196466 seconds)
done (took 543.103230929 seconds)
SAVING RESULT...
DONE!
