cset: moving following pidspec: 29267
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.354963595 seconds)
loading group "string"... done (took 0.547595678 seconds)
loading group "linalg"... done (took 7.077652826 seconds)
loading group "parallel"... done (took 0.162211125 seconds)
loading group "find"... done (took 1.130756315 seconds)
loading group "tuple"... done (took 1.767366837 seconds)
loading group "dates"... done (took 1.268977256 seconds)
loading group "micro"... done (took 0.225311138 seconds)
loading group "io"... done (took 0.91790285 seconds)
loading group "scalar"... done (took 36.395746235 seconds)
loading group "sparse"... done (took 11.13284702 seconds)
loading group "broadcast"... done (took 0.907236335 seconds)
loading group "union"... done (took 11.845860841 seconds)
loading group "simd"... done (took 4.125658538 seconds)
loading group "random"... done (took 8.513603132 seconds)
loading group "problem"... done (took 1.716095812 seconds)
loading group "array"... done (took 19.714257272 seconds)
loading group "misc"... done (took 1.664190724 seconds)
loading group "sort"... done (took 3.084190157 seconds)
loading group "collection"... done (took 16.711480251 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.486854137 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122863264 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114056826 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.11855014 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.133720921 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114719219 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122347063 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083286676 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.836293931 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146234259 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119051601 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.415394585 seconds)
done (took 5.159870619 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174122599 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083217973 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081805629 seconds)
  done (took 1.324536248 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065204588 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121571194 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066197383 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066167979 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066948935 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065965696 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065801713 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065404755 seconds)
  done (took 1.678532808 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073590167 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068993629 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06870671 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068144389 seconds)
  done (took 1.43948515 seconds)
done (took 5.851525947 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.763681186 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201772667 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182336383 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.400095963 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127952408 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.153653368 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.638289757 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.328928496 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.186550435 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080712433 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104575204 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.318467124 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107001254 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.637920372 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075999557 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089814476 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139136811 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.425051078 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066787445 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081581356 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088579884 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127897351 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088019098 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074826746 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143306138 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067292654 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129891701 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080444493 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06615548 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.206617184 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172176914 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663547194 seconds)
  done (took 10.216394941 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096813329 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098157117 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068818698 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136971844 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096591021 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069682362 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070928087 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067687587 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086893729 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128052996 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088362497 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101361462 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065313383 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068916821 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084399858 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204283493 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079685451 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081036171 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070216731 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074998648 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.117008313 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078115278 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077522952 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077771107 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129013022 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180504111 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096765167 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098105277 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069255408 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080837738 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114659863 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128117734 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067567932 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068058733 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125501992 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095598653 seconds)
  done (took 4.636720186 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.932894292 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139724033 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091211089 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131231814 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064566546 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.10707742 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064988376 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080661397 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.201892018 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.281515895 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.571405407 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110285703 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083480958 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.09998398 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067196491 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067775489 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066030088 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.341291468 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.105802212 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102691232 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080243641 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069657822 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.06793872 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063623992 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067388119 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06334024 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067723059 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.100783824 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.296078335 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122550628 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067222038 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.926093965 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124778862 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066595506 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100646965 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16164943 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093424743 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.219523838 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.143125418 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068411183 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064525161 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.150054456 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073095932 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.06473983 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066199728 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083690111 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103014169 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113367303 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065432655 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066925068 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162421462 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066140521 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078590867 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.987871216 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154399522 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079687703 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064447141 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.247588104 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085670472 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069424772 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064961538 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.177157684 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135780807 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06776816 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066691753 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068710694 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069502169 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.35032093 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065556102 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.797666434 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069637329 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076153843 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069089103 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069033171 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072674993 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072362715 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084803053 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065712621 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075078001 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065722654 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06520976 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066081304 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083680728 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.35713358 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066020157 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067755703 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064125307 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085620541 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096002774 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066401444 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064874612 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099578168 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.174497123 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066082884 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106096075 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066455325 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084197551 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069449784 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115516798 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067250178 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.095410567 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066807742 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096462694 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069659921 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099058375 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081403621 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067707377 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.400631848 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065412366 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065050617 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068061824 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065434906 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.06759938 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066134281 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079182439 seconds)
  done (took 20.895715993 seconds)
done (took 37.840939217 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.270466622 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075337863 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075402328 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075310437 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074996433 seconds)
  done (took 1.822598809 seconds)
done (took 3.055956688 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.11926603 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099076006 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064488937 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095378976 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06373035 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099393762 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098623989 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081038511 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098616231 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064522855 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095495712 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063990999 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063937938 seconds)
  done (took 2.360784291 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082277873 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083360133 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069747828 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082318179 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063920974 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081534635 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080270247 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087613445 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080207 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072106731 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063519501 seconds)
  done (took 2.071803488 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081366156 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083354034 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069272402 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081182637 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063615593 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080977046 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080574154 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08446365 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080810355 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073136679 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063539833 seconds)
  done (took 2.064145562 seconds)
done (took 7.718782244 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077417219 seconds)
  done (took 1.292288615 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.590019853 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.065177105 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081302345 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.11209624 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183185906 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119387326 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.277301147 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086364549 seconds)
  done (took 8.909595376 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.101874244 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071784898 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068377305 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070838195 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.06864726 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069026859 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070436096 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070695668 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071988973 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068346903 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069754585 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070451915 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067590012 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068978325 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071240808 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068684767 seconds)
  done (took 2.432022744 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092587702 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090332962 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072921416 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074324327 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071763622 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071924126 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074587848 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073411868 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070809686 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071929531 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074897558 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074208174 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071506385 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064885927 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073999189 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075497198 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070842565 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073685902 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074485495 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074502318 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074209238 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064591129 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070941789 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073364807 seconds)
  done (took 3.095889719 seconds)
done (took 16.952826906 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11270194 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071435784 seconds)
  done (took 1.405973574 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08173976 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083552855 seconds)
  done (took 1.394568093 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083333669 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065436029 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090210645 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077471954 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065892292 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065760599 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087319839 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066150591 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066407648 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065875499 seconds)
  done (took 1.962648301 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068709878 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077833204 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070040124 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080681845 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073641047 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064311715 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072363684 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067358262 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077788852 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062650367 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070532158 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082034875 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071008251 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083793448 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072167323 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068093047 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070420918 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067291323 seconds)
  done (took 2.531854934 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065796692 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066590594 seconds)
  done (took 1.367391544 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066805785 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063226726 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066497831 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06709586 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063135412 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062290387 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063486483 seconds)
  done (took 1.683794588 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.383198148 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109910777 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.292475536 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070515164 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081714783 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.24975339 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065202304 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070358273 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070332668 seconds)
  done (took 2.667151278 seconds)
done (took 14.248358358 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078465399 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085148062 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094444921 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.363778938 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091394137 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065844927 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113074604 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.191522199 seconds)
done (took 2.328865065 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.209713879 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.613169401 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.380096324 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.195244269 seconds)
  done (took 2.427646748 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.322804627 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085778965 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058450279 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06596036 seconds)
  done (took 1.780329023 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06554149 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068453563 seconds)
  done (took 1.380040052 seconds)
done (took 7.042474144 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066316579 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066613041 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.064161273 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066136543 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.063608506 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063123603 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065883373 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.0822938 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065334236 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065666054 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068006756 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.0652802 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065583163 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063587623 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063164465 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065383088 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063380605 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063562482 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063054259 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068384565 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06548163 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063283561 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063396058 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063055076 seconds)
  done (took 2.854553574 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083419538 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066529368 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072296363 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071514405 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.06980687 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070895918 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071016582 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066130693 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070982402 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067637549 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069602138 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069731736 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067367782 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069550104 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067967764 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06987009 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070872507 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066373644 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068216763 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069854133 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070935309 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066337631 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.06968886 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070756266 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06939388 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069347713 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067559231 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065944723 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070463968 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069730164 seconds)
  done (took 3.344901366 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069664802 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06325688 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064410906 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070280787 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063425537 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064728393 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063111738 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063528673 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06379231 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062724728 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064582274 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063398369 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063001901 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064127341 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06419851 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066555674 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.07853207 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06371239 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063085426 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063622076 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066343659 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063303772 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063542014 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063099757 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063161267 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063057599 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063975686 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063382634 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064124289 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063704609 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066123439 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066601965 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063501992 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070270078 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066435716 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062988302 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066995229 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062750848 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063778997 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062887253 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063100165 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063056813 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.174097636 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070029729 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063656794 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064430091 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063440018 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06431595 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063903211 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065727084 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062762558 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062890381 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065112628 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064044285 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066568587 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062315891 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06370581 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062237121 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063820218 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062783524 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063085269 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062563835 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065024393 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063523342 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077052053 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069795114 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062918974 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064780819 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063937209 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064981982 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064840698 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075645185 seconds)
  done (took 6.040424546 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091513054 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087842091 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065238121 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064527685 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061433281 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063727865 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067743229 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063808221 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064852986 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069427264 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063874601 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065344891 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064910249 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076828228 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06398912 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065323075 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069389044 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061555088 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063718177 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067032752 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063965773 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067069 seconds)
  done (took 2.762142743 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154453635 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070560818 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10622529 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072699794 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067577387 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072653496 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069310206 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06972894 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069617809 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068284644 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067619976 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070015056 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067410065 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067565409 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067669438 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068135444 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069903318 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067906288 seconds)
  done (took 2.631002423 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077242565 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066355678 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086274461 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065872201 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065847407 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067822369 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070065734 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073800672 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067796276 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065667956 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073913891 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068173132 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067715514 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065533193 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068031302 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065587086 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067903354 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065442216 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073925261 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070016145 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070316709 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07376784 seconds)
  done (took 2.802437948 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079699561 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06817996 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082066174 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06917689 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06199931 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063920741 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06959534 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06553349 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069827287 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066973214 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065439727 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064162314 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068900813 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066127703 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069108624 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06552546 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067617649 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065068569 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06716951 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061770107 seconds)
  done (took 2.622152793 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086241866 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067474313 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067674014 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076125915 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067209413 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06685047 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074792422 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066683396 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067008489 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086373423 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066955395 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066811968 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074912827 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07216835 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06699603 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075145216 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075099288 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075042722 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06712022 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066852968 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087685237 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067246692 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075104687 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066888778 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067081077 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067246376 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067021866 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071962539 seconds)
  done (took 3.26960747 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066642215 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066066764 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063561439 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063500441 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063759436 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063037054 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063303364 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062866811 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065448731 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063006883 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065755083 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065354206 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065166617 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065962255 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065634893 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06613243 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066677856 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063415259 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063678901 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063007663 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065661245 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065388957 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065810173 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063169448 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063236605 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06508958 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063437013 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063203224 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065749279 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063108062 seconds)
  done (took 3.205022367 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075245494 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073187139 seconds)
  done (took 1.418289634 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063029768 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080224175 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063123127 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069814612 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06965843 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066177759 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07323905 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06967573 seconds)
  done (took 1.8210296 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081138973 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.0777334 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068075179 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080731391 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075850183 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082800686 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131742575 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066733261 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072708882 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064290394 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.0799157 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065430392 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072548827 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065898773 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071630254 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071835002 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063779032 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071950493 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06860205 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064304656 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066867658 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074694287 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068762144 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06154942 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066976258 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087727917 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076622551 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066169775 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068932773 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073682402 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071566058 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059751814 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066303595 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067162005 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064239143 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075499846 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081321922 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069159763 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074289303 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067304658 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077124102 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061476655 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070780613 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07210534 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075865711 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066599584 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066954299 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061038402 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063459982 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067914258 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060979567 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066335587 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060740098 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075390547 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.06927105 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076231552 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064220136 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067217826 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068992638 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068986479 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072311396 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067432068 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070213806 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065281226 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072455326 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070508687 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074573824 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061238879 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060141368 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063736493 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075919496 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088505049 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072397577 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066620129 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067130784 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064040445 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069320186 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067253434 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071951471 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072312351 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066458219 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071840145 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073582059 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06622379 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068421357 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074533757 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064423276 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069772518 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064170885 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082625081 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065123152 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064722057 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06434187 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076434393 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069877643 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066347668 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06392748 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073619689 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06035021 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067122588 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067039839 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066810409 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076498545 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071009556 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071034567 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074448493 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073236623 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065816259 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068214792 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062176533 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065894892 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064294493 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072103673 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059835404 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068308003 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06591172 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065665624 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.200072577 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065967087 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068330725 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074345123 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072750786 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065686459 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062897139 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069540343 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066422676 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07017438 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074298495 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065579372 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062016273 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062043694 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070484675 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066784441 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070914188 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071557418 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071123924 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061187891 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065306197 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071487294 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075603595 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067016844 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067894115 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073091552 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068161909 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066229272 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073085805 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069044541 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066076955 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07265473 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067616928 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061829631 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070212812 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069450141 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06584694 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070284683 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070234283 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069313971 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068230916 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065571376 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074644803 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067487848 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065504006 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066748563 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065453713 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077217191 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068184172 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062181499 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063788333 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075816555 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064749771 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066095274 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066277584 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069055592 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067696502 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064797359 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065892817 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068707076 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076796565 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07092224 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068287365 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072360966 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077822065 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066637366 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068794453 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06625821 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067405965 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068046251 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075355142 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071439985 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071300799 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06912238 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062729598 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071575745 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0735499 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06570578 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064180656 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065419901 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071210548 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071821151 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070543873 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067390826 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064193192 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06680357 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069125771 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069114266 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06604057 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064935909 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073049496 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064238381 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073207377 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066818127 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076183522 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069499708 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06143507 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069437536 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064128397 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071587264 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061245046 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063991313 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065358364 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067849236 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065046366 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068500479 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.05996282 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072957603 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073291733 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065990356 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065062072 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065256986 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072024546 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066890435 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06892739 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.06797695 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070394137 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074738562 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064111471 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068064685 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075144353 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064811706 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.188618699 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071772275 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065929418 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065796644 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065848135 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064375838 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070093718 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076821393 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073789982 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060765991 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069782115 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065572746 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065656121 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061919902 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071226487 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070179361 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067954523 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073755261 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067769308 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06811495 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070337183 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06695936 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068004887 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068213428 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070013436 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067868799 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069494374 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066568257 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069544997 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066225931 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065195851 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068657047 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067126579 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067380596 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072402386 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066771373 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067175148 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069350619 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067480617 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067757427 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066955119 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066570751 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070211875 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067893035 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066704657 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069221592 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062078281 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074458669 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06670832 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074714518 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066832596 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063484854 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074170641 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069326092 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072939807 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067533291 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068230378 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.06815668 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066902045 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069452413 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073658856 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064573167 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077046143 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074862408 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067202878 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069458379 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06710728 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067872896 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066090015 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067676021 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067226998 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067225566 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065773757 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071116247 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068633682 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066141773 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067639648 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067239303 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066086588 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06699568 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060335166 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065201836 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066030648 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065718613 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075369166 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066970079 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065538816 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065142584 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067096272 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065059722 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063017852 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074483907 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075403866 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066639197 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073575205 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065295103 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06754859 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076627716 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060507591 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064369553 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06380425 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064138817 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073176014 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06656382 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075036892 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066474234 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065311182 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063081093 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066937071 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064518874 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060700612 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063701292 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069137106 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064594337 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064570562 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065475631 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068016435 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06599056 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073892424 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063980101 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065436361 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064974558 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061764304 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063972694 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063982881 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.20073029 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068163897 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064776474 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063611195 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066862653 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067583777 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068031518 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066095475 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068229017 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076458562 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066402527 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069747681 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070454682 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061689344 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069665169 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066848796 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066068701 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066905147 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070948718 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070828216 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068493594 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075631214 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066545315 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067699253 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067699041 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064389701 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066906469 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067089158 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066300069 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065915282 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068297959 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075110254 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065381088 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069749827 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067266688 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067645656 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073734974 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067223741 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069560052 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07436442 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066973592 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068229586 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074475552 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071402803 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070337376 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067901576 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068449739 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072170025 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066476925 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073234759 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067389941 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067444861 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068528354 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.0648174 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066290771 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066204324 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065939991 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.0735823 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067656731 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066163 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066572434 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064596109 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068507217 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070877761 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07423325 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068818626 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069893361 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061926932 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063853586 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067806889 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064308465 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068336321 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.06922425 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07218406 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068565205 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066359591 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064919729 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074895049 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071858342 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070133401 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064304552 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069725391 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067117979 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068013857 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066715999 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066412767 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067328962 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070213968 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067408079 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065378841 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072934862 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069637743 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066949669 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067347621 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067050044 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06640958 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061541078 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067007449 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.06838676 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071476889 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068475133 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066550243 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076745653 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063866374 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066691603 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07019475 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065781265 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071006695 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061458892 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06767537 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067238191 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066836724 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061202782 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065108351 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063660797 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06791791 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064834564 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061028281 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075636258 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073297297 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06820927 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063793331 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063935832 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06031883 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060400978 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.197505765 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067959564 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069048765 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076726607 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065673703 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066338118 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061975744 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067261738 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069622619 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069140155 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064328197 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062236073 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065375933 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070008775 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072287695 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065534421 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067024824 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069975405 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069541628 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064620875 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070366133 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063408902 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070411767 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079527497 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067722089 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067697802 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07300567 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074557627 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067848798 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062307485 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067500356 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069946296 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067167536 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067617257 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067946467 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081844116 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069627875 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06563018 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065450292 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069480134 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066395904 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07476204 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06762786 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067067675 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072484861 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068999549 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077339873 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069784233 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074463663 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070158059 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070213242 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065810022 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067111455 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064950872 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065658321 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068156322 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067270518 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072232648 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076214688 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065673915 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077055627 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07604228 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068687848 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063601597 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065691634 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066459256 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061794827 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067415158 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065018973 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064854247 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064183286 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065309411 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066974848 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071139586 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066912483 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066940053 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066150232 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060263821 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068031962 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.06850911 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066684025 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062858511 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066158275 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066814632 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.06997878 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069592289 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063646174 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067514723 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067941599 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066432616 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06101369 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072199118 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065390402 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067858745 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065451433 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066889431 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067000363 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069330814 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071156723 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067566944 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068217249 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07030635 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068371485 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063532445 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063515971 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071404116 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064260188 seconds)
  done (took 42.589736072 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.09992591 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063435414 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062222315 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061822985 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073929313 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063098645 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061751989 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06316911 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062868233 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065412415 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061646274 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06160204 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070733461 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.0779315 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073939864 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066808287 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062087283 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062624247 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061642399 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062738256 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071041365 seconds)
  done (took 2.768474821 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07449894 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070780279 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073727686 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075777622 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067052003 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070485192 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072610695 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070326076 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075574434 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066734853 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076068322 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07035666 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067136909 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.0667425 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066786167 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070871833 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075570432 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06725268 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.078562312 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072807692 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070551896 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072608197 seconds)
  done (took 2.909066858 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066778198 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065808958 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067679233 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061329686 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066305696 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061113739 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068978244 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063437314 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069445827 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064878696 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065067802 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064981274 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067314416 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060906625 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065887938 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064139662 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10906506 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069147884 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065646294 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066374012 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.0610243 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067653379 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061737753 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061552746 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064430097 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069098743 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066328646 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063887696 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065819083 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06472187 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065083498 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063105427 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066764395 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065872252 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064548656 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064448561 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06553181 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065307366 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060992994 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063805336 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06615978 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061371768 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065921288 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066798434 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063804548 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063519025 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066856664 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065180526 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060847553 seconds)
  done (took 4.565673955 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080225689 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109046157 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068056524 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08774545 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07998009 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075516666 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069358477 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089253717 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063178799 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063768902 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081558961 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079930179 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065413962 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070604299 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069010279 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066044125 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066623136 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064236164 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.06939527 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065367499 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069861111 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071642283 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079542053 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078681955 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069276966 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064624617 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064792073 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.06979158 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078172173 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070136762 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070191133 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070798123 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080381391 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07069143 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064477583 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067550204 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081159011 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065649633 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067778479 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063166833 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06758825 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069859264 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071886462 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081805375 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066069041 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071102439 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065520901 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062997647 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.07829575 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06821869 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073433576 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080305874 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069570613 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065610387 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070169433 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080576257 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065597202 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063902755 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068389825 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077901873 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06354624 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069917676 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079636508 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067543749 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072676667 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.07991199 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071197398 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06936258 seconds)
  done (took 6.370979827 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075265748 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072716466 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081026583 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080068339 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072391721 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072554898 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072351361 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072016519 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072158295 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077118179 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072237095 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093315214 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067622197 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075083126 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07225274 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072379824 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072643285 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072435738 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072209871 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07236991 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072686007 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080654978 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072731332 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080412707 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098290154 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067486974 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072429007 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072770396 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080713281 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072847408 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079647823 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072053942 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072316933 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080472294 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079536615 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071854423 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065027951 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072116833 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072121701 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072623709 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067666887 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080298049 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072040121 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067429635 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072470093 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071983535 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079964081 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079271413 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074609266 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077041155 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071706366 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079974838 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071754316 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071995229 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079839059 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104878806 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08010701 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079975174 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071729267 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079789784 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079963724 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086187066 seconds)
  done (took 6.060154846 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084170878 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075094624 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076413666 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061043427 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063676405 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069688844 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06396862 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063916648 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074791868 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074423074 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076910509 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070140107 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072682126 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076693401 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069563339 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072714773 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069926485 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069783422 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074439888 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069754292 seconds)
  done (took 2.792943642 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07430883 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08310487 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066827162 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072201566 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068702504 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071558687 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067817639 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068963502 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066579528 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06869164 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076453645 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07615729 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066725617 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071959425 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075748884 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071924253 seconds)
  done (took 2.50294248 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075131493 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073258677 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079998138 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065758225 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06434491 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062329935 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065258586 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061195359 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062170946 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077893488 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065440988 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068279589 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06571414 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064249748 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063056123 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068574014 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062239986 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063186144 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065557517 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078448941 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076320476 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064531802 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066285891 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065606044 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.06593366 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070747079 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065563865 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063560744 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063120032 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066338642 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066406457 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069754516 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063167298 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064316195 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064654287 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063662459 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065532008 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066197344 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068397647 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065222974 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063582897 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065405163 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065478149 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066410923 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062035996 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065593517 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061834928 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067578879 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063913662 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065527424 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065671622 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068302455 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066293821 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072198209 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068399005 seconds)
  done (took 5.022598106 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079796012 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.0696279 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061409493 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064679394 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068810937 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066953163 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069319566 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067310265 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068060117 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06388941 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067545727 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068488788 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067310589 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069288159 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067513746 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069177134 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06168922 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067485176 seconds)
  done (took 2.586896386 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071288638 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065781301 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072928804 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065528685 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065707173 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06801576 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061923304 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064520657 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06452768 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065419801 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06528093 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067921656 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064547174 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068136788 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065685171 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065893943 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067964214 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064531346 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065541043 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061661646 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06781228 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064536633 seconds)
  done (took 2.816352789 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071863975 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092128103 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.137787675 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.08383365 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081078141 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078367441 seconds)
  done (took 1.907915434 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09041762 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080344506 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066750011 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088018145 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073463589 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067647388 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067262801 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067504504 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076222817 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076341947 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067723934 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076307719 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077068496 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075630767 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073204816 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073210658 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067651182 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067379405 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066243495 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084156997 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067664877 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075316757 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067296361 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06666547 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067248737 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075187608 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07599596 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07605882 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067185746 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075864665 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073100941 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067196906 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076035416 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076345051 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068767435 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075804332 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067508396 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083975257 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073084617 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075654977 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068471903 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073346451 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076189465 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072304256 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076009268 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067784435 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072163345 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067689729 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067828829 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086267484 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073617906 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075111773 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073357503 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076530461 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076195143 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085649727 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076550069 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07535248 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07400144 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078623752 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075411955 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073069617 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075354009 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076008476 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073516374 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075759919 seconds)
  done (took 6.241635934 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082246555 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08545983 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068387458 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07688926 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075710232 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067426112 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067532003 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067452149 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06713103 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067338546 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107160479 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068119951 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075739127 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076476134 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067835642 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067630701 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067514522 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075573235 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067341695 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086536427 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067391631 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075510736 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075349371 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075083595 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076536053 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073892566 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067519831 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068186028 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067434861 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067771958 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072437317 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067814164 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075605755 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066941529 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075165182 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067737296 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067702968 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072476408 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067503749 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073187059 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075977297 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084063108 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067520727 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067263105 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076463576 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067120034 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067176047 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067392895 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067502419 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066866887 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076271594 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076301268 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076157349 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07530802 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067885159 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06800996 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067846036 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067749728 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067705706 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073040256 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075556266 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067146099 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085845995 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06738384 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067783828 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075420403 seconds)
  done (took 6.149765209 seconds)
done (took 129.299558966 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.18445804 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169037303 seconds)
  done (took 1.713596399 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069367017 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097313556 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077085115 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128748572 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06668248 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10067821 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099169173 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077631299 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066504803 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065983593 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065794178 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068288009 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131392866 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066269785 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066312974 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06859996 seconds)
  done (took 2.687538072 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097642926 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157770915 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100107076 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065125766 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096929889 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072858004 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064592414 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075078938 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070635235 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065080137 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072984163 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070807621 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064658279 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070587256 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07099489 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072662302 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064533353 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072815238 seconds)
  done (took 2.798195741 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101886618 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090999233 seconds)
  done (took 1.56706929 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156094568 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105463615 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149869486 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.346481875 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167874123 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229599048 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126501577 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127405276 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116978994 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123165408 seconds)
  done (took 3.0191497 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097605787 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151944959 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255492955 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114588198 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072076437 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095088959 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116277732 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077870213 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081292549 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080367214 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080473783 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076064503 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098688601 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073437127 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073108514 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076282494 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102062097 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07246546 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07388869 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077140409 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099357973 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065640479 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073801755 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07232078 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077536165 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077173486 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065387185 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065362141 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076464317 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074143254 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07674162 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093755553 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077296551 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107676167 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070012258 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108316161 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07598221 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073697247 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074053459 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073810377 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078693673 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078440799 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071689189 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076096057 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065186098 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076754737 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065551485 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065267467 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078153597 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066844402 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078334205 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077467216 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107976869 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068587314 seconds)
  done (took 5.979367285 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102493812 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105683721 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071455974 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110023813 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097669667 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071387587 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101568142 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091289998 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102850817 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092968459 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089284928 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070376329 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08196864 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083851156 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110007834 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102188348 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.095733599 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070837287 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102161229 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102331759 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068484625 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094652037 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090824329 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101998934 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06737456 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070387532 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068561285 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070207703 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076821345 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078196729 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069980868 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.102014282 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084811322 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078155432 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067209617 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067955585 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067786812 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079323299 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.097539485 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078604564 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078172234 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067676441 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067671073 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06960756 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091110923 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067662527 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079191741 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080198058 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079094871 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070105738 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070327244 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068019322 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069964616 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080555368 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078072663 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080885081 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080443457 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068104412 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068571672 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071774402 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080839581 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079427379 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079381542 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092781421 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079418053 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068582669 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080314708 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084969149 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067965929 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069606485 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068635711 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069952945 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069913048 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078341959 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078103384 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069873988 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06987802 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068395825 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079718229 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078359393 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067855362 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076962321 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066944353 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06853509 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069678506 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069919547 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078130707 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079690417 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070145139 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067827868 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069442482 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068709885 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066944381 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076535875 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07908603 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078207266 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078247679 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068407279 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077927371 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077695286 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068932501 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077839403 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.197507945 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071004159 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070821203 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07940599 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078589693 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081116777 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070254178 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069185886 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.085729123 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081551905 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068963991 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079608939 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081912126 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.081123606 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068369973 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082359428 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069588247 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080698068 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070355131 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081333057 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069455418 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080803619 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069750524 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068650622 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069258388 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081096385 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070574234 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069107503 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070724979 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070679709 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080437208 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083703939 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.0712979 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081988042 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079321418 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071225288 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079110624 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069770749 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080146585 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070182979 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070358034 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068177334 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083306681 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068316082 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068796244 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069708248 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081454594 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068348617 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080133306 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079393514 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067862556 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082056368 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080962661 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077726883 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081331139 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071153054 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068725423 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.0688214 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070398486 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07808206 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080640807 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071579756 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068754679 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078809076 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080717479 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067391647 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078429211 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078891645 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078742813 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068695183 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069967653 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08056939 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081001685 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07839229 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078249546 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078430543 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06885257 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07769209 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078306512 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068016257 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084093234 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068472159 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082415257 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079345084 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076721669 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078880184 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080743957 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080622755 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080379779 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082627434 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068303516 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067965807 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079215003 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068290769 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069637801 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077959032 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06956683 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069419073 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082434905 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067400604 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078398463 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066527006 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077027112 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065981323 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069166289 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.214481053 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068649167 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071145735 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080825489 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070685224 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078774075 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08185012 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079982823 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069225491 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070606572 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081505523 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080357591 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068667425 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068763771 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071611365 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078874011 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079238654 seconds)
  done (took 18.859590213 seconds)
done (took 38.006107548 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210065675 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150643508 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.179681446 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.11801096 seconds)
  done (took 2.133553037 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122017949 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10111833 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094934621 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064831792 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101738038 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064914873 seconds)
  done (took 1.961736311 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313775508 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211351483 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.182861932 seconds)
  done (took 2.116662513 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199457126 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188201405 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.394353895 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252060323 seconds)
  done (took 2.551709915 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144397607 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090210449 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066959627 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082862969 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.135564981 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161276439 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101503345 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126121435 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077236728 seconds)
  done (took 2.452312369 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147404028 seconds)
done (took 12.773979663 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.088777493 seconds)
    (2/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.245886508 seconds)
    (3/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.082454305 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.107971771 seconds)
    (5/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.228608051 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.143749324 seconds)
    (7/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.19247538 seconds)
    (8/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.11029283 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081087822 seconds)
    (10/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075714043 seconds)
    (11/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.216362503 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077588495 seconds)
    (13/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.092227387 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073250943 seconds)
    (15/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064781144 seconds)
    (16/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052090021 seconds)
    (17/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073640711 seconds)
    (18/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.194250143 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088781467 seconds)
    (20/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.177120648 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.106709842 seconds)
    (22/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.127748987 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064953558 seconds)
    (24/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.165343206 seconds)
    (25/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.197017266 seconds)
    (26/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.143172942 seconds)
    (27/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.136740702 seconds)
    (28/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.190574045 seconds)
    (29/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.177360522 seconds)
    (30/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.202426056 seconds)
    (31/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.13875827 seconds)
    (32/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067912988 seconds)
    (33/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.196289413 seconds)
    (34/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.085387569 seconds)
    (35/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080805414 seconds)
    (36/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.148009761 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071477433 seconds)
    (38/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.201938442 seconds)
    (39/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.106762956 seconds)
    (40/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073204699 seconds)
    (41/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072992466 seconds)
    (42/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063719634 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.099160275 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090040112 seconds)
    (45/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.08902049 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089740432 seconds)
    (47/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072222282 seconds)
    (48/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076477468 seconds)
    (49/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.156925988 seconds)
    (50/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086346325 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.095252602 seconds)
    (52/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071710861 seconds)
    (53/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069632894 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071915663 seconds)
    (55/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.098082555 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.159852168 seconds)
    (57/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.097508994 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089510303 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071923366 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.118718606 seconds)
    (61/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.181727516 seconds)
    (62/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136257333 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.111524436 seconds)
    (64/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052433413 seconds)
    (65/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074941022 seconds)
    (66/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.115521129 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067111287 seconds)
    (68/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.149086168 seconds)
    (69/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.159988933 seconds)
    (70/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.148048522 seconds)
    (71/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.183092627 seconds)
    (72/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051144949 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.127923883 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087502924 seconds)
    (75/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.052781779 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089787027 seconds)
    (77/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050780662 seconds)
    (78/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.071789234 seconds)
    (79/309) benchmarking ("sort", Int8, false)...
    done (took 0.137115761 seconds)
    (80/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.346425164 seconds)
    (81/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.073356277 seconds)
    (82/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068865132 seconds)
    (83/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077583711 seconds)
    (84/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067269122 seconds)
    (85/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051488976 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.145200907 seconds)
    (87/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.096235326 seconds)
    (88/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081964231 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.115934482 seconds)
    (90/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053542896 seconds)
    (91/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075343204 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065445002 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 0.066501798 seconds)
    (94/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071890172 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.095886749 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092722338 seconds)
    (97/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071973817 seconds)
    (98/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07336397 seconds)
    (99/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069370419 seconds)
    (100/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.100191489 seconds)
    (101/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064460233 seconds)
    (102/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052403542 seconds)
    (103/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.065774806 seconds)
    (104/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075967842 seconds)
    (105/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072858958 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089920906 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089070391 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087830368 seconds)
    (109/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082087539 seconds)
    (110/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079599965 seconds)
    (111/309) benchmarking ("sort", Float64, false)...
    done (took 0.125502178 seconds)
    (112/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.289974549 seconds)
    (113/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052330452 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.094536301 seconds)
    (115/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.06194204 seconds)
    (116/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073661812 seconds)
    (117/309) benchmarking ("sort", BigInt, false)...
    done (took 0.186370906 seconds)
    (118/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051031577 seconds)
    (119/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.183735426 seconds)
    (120/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.11790105 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.091863289 seconds)
    (122/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.0510524 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087667229 seconds)
    (124/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071784966 seconds)
    (125/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.072224016 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.138390796 seconds)
    (127/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075970757 seconds)
    (128/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.173968991 seconds)
    (129/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.178851704 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 0.132516962 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073108536 seconds)
    (132/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.07454492 seconds)
    (133/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.182545513 seconds)
    (134/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074660539 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071870559 seconds)
    (136/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.154100957 seconds)
    (137/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077769221 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07037292 seconds)
    (139/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.097802558 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070996331 seconds)
    (141/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052064034 seconds)
    (142/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070749893 seconds)
    (143/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073451763 seconds)
    (144/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052090108 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071583803 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126837108 seconds)
    (147/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.107789691 seconds)
    (148/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050931388 seconds)
    (149/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069108998 seconds)
    (150/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.148952719 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140385729 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064729953 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071536001 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.108246393 seconds)
    (155/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070489021 seconds)
    (156/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051495642 seconds)
    (157/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060430155 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.135248721 seconds)
    (159/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.08714269 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073780313 seconds)
    (161/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089438063 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065040199 seconds)
    (163/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064450042 seconds)
    (164/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.07675767 seconds)
    (165/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050998297 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.169351649 seconds)
    (167/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066797062 seconds)
    (168/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.174090044 seconds)
    (169/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.149137266 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067482377 seconds)
    (171/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.097449135 seconds)
    (172/309) benchmarking ("sort", Float32, false)...
    done (took 0.127119171 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.140933218 seconds)
    (174/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073114566 seconds)
    (175/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.146740278 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.075325102 seconds)
    (177/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078820683 seconds)
    (178/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065240047 seconds)
    (179/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.144533169 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.093062451 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.094160983 seconds)
    (182/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051727786 seconds)
    (183/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.060829389 seconds)
    (184/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.063500604 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.090885442 seconds)
    (186/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076239537 seconds)
    (187/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.066178026 seconds)
    (188/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066080308 seconds)
    (189/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051575364 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070868451 seconds)
    (191/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071442163 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.095710254 seconds)
    (193/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.073900374 seconds)
    (194/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052815572 seconds)
    (195/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050806184 seconds)
    (196/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.051145413 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07196482 seconds)
    (198/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065030163 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.063644365 seconds)
    (200/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050565037 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.10392087 seconds)
    (202/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050232786 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.063755602 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.062284267 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.099750442 seconds)
    (206/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.049953172 seconds)
    (207/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.071648141 seconds)
    (208/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.147345461 seconds)
    (209/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.064487256 seconds)
    (210/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.051553317 seconds)
    (211/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.174732114 seconds)
    (212/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.066541068 seconds)
    (213/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.06574486 seconds)
    (214/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050034858 seconds)
    (215/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.110783278 seconds)
    (216/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.073607042 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.072771955 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.070822497 seconds)
    (219/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.069006019 seconds)
    (220/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050012405 seconds)
    (221/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.065993739 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065664593 seconds)
    (223/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.181833879 seconds)
    (224/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065573358 seconds)
    (225/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050450072 seconds)
    (226/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.063794996 seconds)
    (227/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.060997905 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.069087819 seconds)
    (229/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.076888401 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.086734861 seconds)
    (231/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064018531 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.062962277 seconds)
    (233/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.183690534 seconds)
    (234/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.109999192 seconds)
    (235/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.073172551 seconds)
    (236/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051818218 seconds)
    (237/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.050984895 seconds)
    (238/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050232654 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.132946285 seconds)
    (240/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050617386 seconds)
    (241/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.095269336 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065191107 seconds)
    (243/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.051591475 seconds)
    (244/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.075514651 seconds)
    (245/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052302433 seconds)
    (246/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050321336 seconds)
    (247/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.071319875 seconds)
    (248/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064623636 seconds)
    (249/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.050293248 seconds)
    (250/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.0510069 seconds)
    (251/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070385423 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.105195403 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.16492627 seconds)
    (254/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070794509 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.063871328 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133492953 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.087212798 seconds)
    (258/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066252347 seconds)
    (259/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.164937194 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064398499 seconds)
    (261/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050337826 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070084772 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.063963998 seconds)
    (264/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064184826 seconds)
    (265/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.063619987 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.071476405 seconds)
    (267/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.095982941 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.088034954 seconds)
    (269/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.059858803 seconds)
    (270/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.176229 seconds)
    (271/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.083978471 seconds)
    (272/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.064598523 seconds)
    (273/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050464796 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.087023611 seconds)
    (275/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.065322793 seconds)
    (276/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.059900272 seconds)
    (277/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.069770463 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.063868917 seconds)
    (279/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.059734194 seconds)
    (280/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070162534 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.063002276 seconds)
    (282/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.085085365 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.069970645 seconds)
    (284/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.065602071 seconds)
    (285/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.050076667 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.061874278 seconds)
    (287/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.049634613 seconds)
    (288/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051647199 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.062234796 seconds)
    (290/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.063687261 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.070701168 seconds)
    (292/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.070424803 seconds)
    (293/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.052194902 seconds)
    (294/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050153679 seconds)
    (295/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.10613884 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.063026089 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.063318616 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.068701393 seconds)
    (299/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050313673 seconds)
    (300/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.064304457 seconds)
    (301/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.050749224 seconds)
    (302/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.08449975 seconds)
    (303/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.065471848 seconds)
    (304/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051260068 seconds)
    (305/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.049664302 seconds)
    (306/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.069888963 seconds)
    (307/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050333775 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.068885222 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.063899882 seconds)
  done (took 30.078256978 seconds)
done (took 31.500839343 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.094519772 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09551049 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07778642 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.096547191 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08428214 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.07951759 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075534994 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082093535 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.0837434 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085245247 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081745307 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057445895 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076983535 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077489666 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.077813332 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095065445 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.0811846 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075321869 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07550243 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067466233 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075732444 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068075592 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070058519 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056539618 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080212208 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073631999 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074784967 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076166649 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067971581 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06802028 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.0710747 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075699226 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067747889 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07981123 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073726217 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074879572 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076448663 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07839946 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069159837 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067594241 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075886386 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067321828 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074392006 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07526931 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073267563 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072850945 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074825757 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079930692 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093797863 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069976884 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075700272 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077627906 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078522387 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074473613 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071091156 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074713631 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07281451 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093717097 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07512386 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069753598 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07568947 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075268071 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072782864 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074453837 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074624446 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076191559 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076907821 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072373706 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076025169 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072101411 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06645567 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073909661 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070034446 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066757384 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077136224 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078247933 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066002923 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072452994 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073432862 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072769802 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065972058 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069044843 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068501026 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073002669 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06868048 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055776019 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070442823 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072883284 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066530424 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074373108 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072539326 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073589154 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067596486 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07617829 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065741391 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071702634 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06686094 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066773599 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067945906 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070364837 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066513085 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069023361 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074812705 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068063829 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072162737 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080298163 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066417553 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072376187 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065660774 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065776553 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080918176 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075762748 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066231284 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068708674 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065710022 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07327831 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065100866 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066274476 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066505916 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066548065 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071844967 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066266424 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068213613 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073116169 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078151843 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066170204 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069732114 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068273229 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066045619 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071162134 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066118733 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065970835 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.201374848 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062753114 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069659473 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066583516 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073493774 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068755492 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074203703 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067692781 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074318788 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071120529 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07249575 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071756597 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065445146 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059324128 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06980299 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068784897 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068616977 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066606119 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067679773 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066355299 seconds)
done (took 12.898931694 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067599743 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144850887 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100552988 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096277459 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086675036 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066894935 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076663305 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.10280459 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068196241 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103320442 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088220249 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08612845 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113354855 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06501253 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066585873 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070084377 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067603989 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081946005 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101436314 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087001745 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117100493 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065989708 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09501531 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090375942 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08762008 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101874235 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067501844 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070380545 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070173959 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091850931 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08690049 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069959717 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067085439 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.101108738 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092916451 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083951773 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066690383 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083225109 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066906619 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066324806 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068079826 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098778538 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080595591 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081312163 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070613019 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070039378 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068213835 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084432668 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089933118 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079669667 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087825568 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103700271 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069588708 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.066873775 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065281438 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086261813 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065932612 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069355129 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066956435 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.069208065 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067201511 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070091039 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.082004933 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082800523 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070620518 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081141363 seconds)
  done (took 6.913414767 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083684904 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090944968 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084192736 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084554925 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066443275 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067005003 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067472758 seconds)
  done (took 2.111606726 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067481388 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089031712 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089774519 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089540859 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085678063 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088257179 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076700377 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067261485 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.081207058 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068332922 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087855413 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10312128 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067686044 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073365335 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091086323 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067048612 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090732501 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067470777 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07017214 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090184876 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069365832 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082688965 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070597012 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067674201 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081884851 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06781957 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114487002 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071877965 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068897004 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069813029 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065331076 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.108566232 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081071138 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076507068 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067615331 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08195792 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082065764 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065841216 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08361327 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.07256305 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080802836 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067341482 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067906757 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065199957 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071457769 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078189222 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067807136 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067679384 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069644529 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086891091 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067841702 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080704432 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071571129 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069778233 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06876135 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071078838 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076625678 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067689828 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086437521 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068284528 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083430381 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083228219 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080550692 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08315679 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069304995 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080459394 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08054644 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069349565 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068506597 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070235527 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082821421 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.06581013 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068227296 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077446144 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068406238 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089590979 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089817741 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068026419 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075827375 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067329631 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066845256 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067403262 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089725864 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069277413 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066869016 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071194734 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070032728 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065446946 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065817069 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070603104 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064994027 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068473233 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069994598 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069983277 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069549882 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083428674 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069190887 seconds)
  done (took 8.89511366 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069274936 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069093732 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070841707 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068887206 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069166091 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068714438 seconds)
  done (took 2.008989234 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094770674 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069847378 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081671636 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07365043 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105752805 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087625977 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.088162877 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079488634 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084709633 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079797476 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087472515 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088829359 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093887193 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073448855 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087555237 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072494313 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087660672 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07644771 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078920886 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073480868 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087104209 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073458417 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073869606 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082035884 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.077450681 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072889047 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068182608 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079509887 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079197596 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079794945 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073017319 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076102207 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071499901 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079092014 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087700772 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071490754 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073056451 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.078193669 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07310857 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076035043 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.0885208 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073711572 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075066056 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077915399 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079249752 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071006389 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077800263 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076658068 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.087111722 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077395841 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07734113 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071929882 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07570308 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077233684 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070173978 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078767203 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076917049 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086811465 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072449464 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070445235 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068963484 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075507118 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078299276 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075236552 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079329857 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077089865 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070192864 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072725116 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072587379 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071921015 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076954288 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069658932 seconds)
  done (took 7.200696857 seconds)
done (took 28.683224461 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.54553421 seconds)
  done (took 2.105749456 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.604885102 seconds)
  done (took 2.185952503 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.643432276 seconds)
  done (took 8.221464342 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.395854701 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.475967501 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.696436397 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131401306 seconds)
  done (took 3.319845551 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.668171347 seconds)
  done (took 2.25846415 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.211681995 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.198930141 seconds)
  done (took 2.010379477 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.379360757 seconds)
  done (took 1.958191298 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.11506957 seconds)
  done (took 2.697108245 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.2639882 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.164379467 seconds)
  done (took 2.011200987 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.46419294 seconds)
  done (took 2.049859693 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.864259271 seconds)
  done (took 6.449811612 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.206534834 seconds)
  done (took 1.842473545 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.244335258 seconds)
  done (took 1.831955644 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.679513733 seconds)
  done (took 3.271375662 seconds)
done (took 43.80225522 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079837304 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080913872 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081693163 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07823305 seconds)
  done (took 1.898351672 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076629205 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.0726022 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076092774 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072106142 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.07677667 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072076163 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07406492 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076682505 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071885089 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07298118 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072376526 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072218039 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074816776 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073894993 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071241047 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074683963 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075930387 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072498531 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075374585 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072567752 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070780136 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074443963 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074775159 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071959633 seconds)
  done (took 3.361858975 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078003751 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072926373 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074915731 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071820529 seconds)
  done (took 1.895782272 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077567545 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09237595 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089635003 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076966254 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092055947 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086024582 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.06888624 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068768701 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073164483 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076602489 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067796595 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096263134 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087507496 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076660587 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079412282 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066031194 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068494598 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086849148 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077007755 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077607798 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069578644 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076773278 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067759739 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088116908 seconds)
  done (took 3.482900324 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078176424 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102799491 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077907634 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087929863 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090480645 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065298898 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074099695 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088760651 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122406763 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065165385 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069631999 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065554845 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072153113 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064918872 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076434347 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104381833 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108105609 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068267187 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095696022 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065315798 seconds)
  done (took 3.248058261 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07260263 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069486403 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065166326 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068954622 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077393609 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072791347 seconds)
  done (took 2.029774856 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06832122 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067727274 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067415208 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067256341 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072338473 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067101308 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066320239 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066913173 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067123758 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066870147 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066383189 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065371482 seconds)
  done (took 2.409329668 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.424519235 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068587659 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069085197 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06611332 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070884381 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066342411 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079961674 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06764106 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090749354 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066053238 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066698214 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068309397 seconds)
  done (took 2.806743813 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207382733 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076414586 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237271288 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136997749 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111382284 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115470169 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10433069 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112758785 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143531078 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10186413 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168425879 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166247865 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107304201 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137561319 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089010352 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097858451 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155945952 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162693169 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103684054 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1655554 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143959249 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124219146 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146841261 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100652915 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105694028 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122170999 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071136115 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079580344 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170840802 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1320378 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146582782 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110472071 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093774447 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176169414 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170481522 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142668873 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13438551 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08409163 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102612732 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133592316 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199560765 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088540208 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164828218 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245901225 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081796362 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134793855 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122282301 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120529747 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10766243 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089962264 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146028933 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184443783 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.140263173 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086957753 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112413084 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116420382 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117376041 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10379583 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184503463 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162474275 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12916331 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070903176 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099658814 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153593213 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132633579 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109704712 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127284762 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093940958 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134314036 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154446368 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119311385 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144178819 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128884872 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087940695 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119101998 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139808399 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128141463 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170223688 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124671084 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07257895 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124931624 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103215281 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081072043 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141990035 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07537596 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175594222 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098715664 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106872508 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11295083 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108544955 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108788048 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162194494 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143923768 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244904822 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066438902 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104463233 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120950291 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149159029 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086935877 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108752933 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117375469 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078595592 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140123011 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074958266 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124580877 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075805074 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126070532 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13285447 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075127984 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122168031 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100572156 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100387712 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134573397 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161340852 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08984997 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081948392 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167073974 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122902624 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105028035 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145372323 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156433226 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098992414 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102748457 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150187807 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180817375 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089639215 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163285082 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107275193 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083334231 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087717611 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124028898 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112555805 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121984187 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081750221 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119066342 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168806265 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074700514 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09468785 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133771117 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078701966 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081273019 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103811991 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100940583 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094410489 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100146904 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104317081 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137257599 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123418607 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104549667 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269107825 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098817009 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172229656 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089295967 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100867097 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104439682 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069808289 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138800062 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158905392 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079386356 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165017992 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124992507 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105434942 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119457492 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08263787 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141118518 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079381647 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070226492 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145423342 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110664904 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110844837 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151635057 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105156829 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128554386 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.121577601 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135393321 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13351992 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129524799 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105535221 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087901799 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112082123 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125839115 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073272044 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.0914884 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080020227 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103910026 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095375009 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082992637 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14262107 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125182292 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100029473 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111898003 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097026834 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147186585 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076434688 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128611399 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119968909 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094017929 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.15245424 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152037753 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131561604 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099503658 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144652947 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069847238 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073747461 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.231563962 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124731436 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083419677 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08390223 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119067112 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147379895 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130519717 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139238826 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11232252 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121819413 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156175262 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069448408 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116372125 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149315096 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1219794 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103696592 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090240056 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099162835 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143240696 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109073615 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184090971 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114089033 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126971692 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153209202 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099061105 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079025693 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108384391 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136778633 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105917944 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14542442 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099955177 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088012062 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1098925 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074447936 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10033492 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127391157 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120018882 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135534246 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114348669 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132515763 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076741604 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117204061 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120248567 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122935858 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064186316 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120979242 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162506244 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093436424 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118268181 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153371846 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078744602 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123634084 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.321066644 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148061193 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085273362 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109493069 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118558805 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129026124 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120846365 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140835377 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108819653 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136140799 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108767883 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085798929 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086760805 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097412903 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104759421 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095062798 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108807601 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115266465 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094924666 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133137808 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102924075 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109717724 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118420905 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095483561 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089465838 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096493905 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175936266 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120557976 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172918688 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098552573 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.14603813 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165041453 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074225078 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078875848 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078038247 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139727203 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083638968 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131128176 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097218959 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106044057 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123978234 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142733716 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094644317 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.06821689 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108800671 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134728527 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111592187 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098383085 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107813626 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163813799 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100081111 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078905943 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113788127 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104285768 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102535252 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172844585 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.203369761 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09912748 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076133085 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080959207 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127954657 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154695728 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081565241 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102617657 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119891192 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111612418 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127785601 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101579285 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100705241 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114871419 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151138951 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129491984 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090251978 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112629967 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130233151 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157880128 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105919376 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096322344 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173874674 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152692799 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160952997 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088909118 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13179657 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114394009 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108364389 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139159654 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083132337 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164197519 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081641485 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136648045 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104445964 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090504608 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13031127 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098962464 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087999092 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148207397 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118239735 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082677172 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077890812 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117938525 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121160986 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106885443 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075280816 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140232692 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072500287 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131990033 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168317827 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080872609 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10401982 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239548871 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080711425 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109507813 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103774472 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08996473 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098277342 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175217623 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088546978 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151457291 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142477897 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114151062 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137861102 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100783706 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636630226 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078565569 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1519117 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117638151 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173862308 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097240114 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118752154 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109236154 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124734737 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144754112 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105213833 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177897571 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133782683 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116609146 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079382937 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103374576 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103391596 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089815543 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105648957 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11362827 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116285475 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094088328 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116854903 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123915214 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081942144 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094853869 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15604714 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116956501 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145009194 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140641458 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084632866 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118475646 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139447301 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079486594 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122282673 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152299679 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106035703 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097226778 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080115628 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.246382159 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171162521 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073336986 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164999064 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121504045 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109689871 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113735533 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115502401 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133164964 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109458783 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123164567 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094288013 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.112048845 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11283371 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082071564 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077770606 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104905185 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113522667 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097026765 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100302663 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098036674 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15200104 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071024482 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095601166 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103677112 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146133359 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175910078 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088300846 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083641354 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120108669 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11329698 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114055713 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120512846 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079126833 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082876386 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082188898 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076944833 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108560234 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112373041 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10442245 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111497547 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164316936 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082117414 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223824513 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094826414 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104848366 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.06931194 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078885247 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095622852 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097720958 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10807937 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100674558 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170937529 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094653994 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089833095 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092978283 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07275726 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082654471 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.27239978 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111721867 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119602896 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098306988 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062748292 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110673859 seconds)
  done (took 59.116473827 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108928835 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083088589 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096937281 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149868131 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123191821 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212680083 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157024562 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199682808 seconds)
  done (took 2.842926521 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068639965 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093621657 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100093176 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082846592 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066677519 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069003831 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225242599 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080862006 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066178507 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088498428 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079570639 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069284544 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.423802187 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065637073 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067781676 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062771311 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067302105 seconds)
  done (took 3.481618616 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.363762582 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.362039325 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.371907551 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072931879 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.799455679 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088742348 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.080215199 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.096802358 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071021377 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.280907196 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.70224192 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.091949692 seconds)
  done (took 14.093805072 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075542985 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070246581 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084275356 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084125296 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072195637 seconds)
  done (took 2.097289709 seconds)
done (took 104.393822092 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079565285 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.392928549 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053766475 seconds)
  done (took 2.186078219 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083026358 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084235718 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084741896 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082812292 seconds)
  done (took 2.053602384 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.07390273 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075784565 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084696329 seconds)
  done (took 1.946323074 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223974765 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139372888 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086308902 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08219377 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077879877 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.07909256 seconds)
  done (took 1.95565637 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072483796 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075037485 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072586035 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076486074 seconds)
  done (took 2.008387642 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076404856 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052158994 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055040406 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055669577 seconds)
  done (took 1.952208476 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086257769 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079507335 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078421014 seconds)
  done (took 1.957869466 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106468083 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085219416 seconds)
  done (took 1.904832003 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081660375 seconds)
  done (took 1.795547851 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098514396 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113558078 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.130041595 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109802319 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136739913 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109389491 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085580139 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086906568 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077008399 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087201333 seconds)
  done (took 2.748397392 seconds)
done (took 22.747875285 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078552459 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368065947 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360512405 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091325365 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66945244 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356518391 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.987490012 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091819716 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11301063 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067443887 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084213019 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647166796 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.980598639 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323638414 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.965653999 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318782822 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649508177 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068055179 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067803839 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067973433 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.97435784 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067450691 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068008944 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067923804 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.64898495 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370835233 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068238579 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323562495 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067847869 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069549168 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354637743 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068071089 seconds)
  done (took 16.21122303 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07095821 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117975099 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073250047 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084055825 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070561597 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070164686 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071743445 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068844466 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119648614 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068178591 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084257612 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067620872 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071853527 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068637627 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08652183 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068001265 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068375861 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068310748 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068097138 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06807875 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086472071 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067776613 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068281723 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068359251 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06799624 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079458116 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06778208 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067572465 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068132342 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070236289 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071000882 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06909887 seconds)
  done (took 4.117339054 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11494301 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125176428 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074301674 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103217807 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112895336 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070001819 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143489133 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092771894 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127649415 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068143319 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084226146 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067929048 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100480818 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068573243 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087052038 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068604758 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069225779 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068568799 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068532071 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068887175 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087454554 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067942201 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.0681154 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069090506 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.0685137 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081326991 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068335453 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068365307 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068800412 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070062629 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071501135 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068908511 seconds)
  done (took 4.378492172 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072725405 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074857469 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082683257 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084208526 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070015189 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072342898 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072873176 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069732848 seconds)
  done (took 2.330844157 seconds)
done (took 28.760749648 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078447961 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068608318 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072254369 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080965547 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072507262 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079496568 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067227048 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074445159 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071946612 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073344056 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074535487 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067149269 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070969315 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067218857 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073540672 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067901543 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079142288 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071507275 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079694129 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079216738 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.06970177 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072588247 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074225642 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078883161 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079372616 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078909407 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077231672 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072539287 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068812107 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070273985 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076427211 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083629717 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068491938 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079054029 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068030547 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06757117 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071981259 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068132895 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079205242 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076905657 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069820714 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.07593271 seconds)
  done (took 4.80845793 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08770307 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091298215 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083953833 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062017228 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067051923 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065281337 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088424978 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059761547 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059328061 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087733938 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05568138 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059133164 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062345164 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054411689 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.05935588 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056976061 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061825845 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055861277 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058892154 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059109828 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058017861 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05395735 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059793554 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065128435 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056796793 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061474678 seconds)
  done (took 3.430282515 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073837436 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084105578 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088154475 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126457622 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103824659 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076586263 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077795884 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092096125 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084842733 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06683192 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070958294 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093618591 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088603109 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073924354 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067386148 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084457555 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082041996 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069199298 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073290716 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090698929 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084354272 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084161766 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092137357 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080770409 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066714763 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069601107 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071664619 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081273082 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071932321 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076012153 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071726375 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070793469 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069660534 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078608601 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071339515 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068971265 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090161635 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07698867 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07754688 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067817163 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070520393 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06812827 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089062182 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.121697863 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067102186 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073703404 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075116269 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07645313 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067252707 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085980452 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07837745 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066919558 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070186466 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06658496 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.078722807 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080243549 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069099443 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069955544 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076570435 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070130206 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085290587 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071510755 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082284569 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067066371 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075073232 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066996286 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06843021 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066656135 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092047369 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068847805 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.10788842 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068380565 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068019447 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076221466 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074994245 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073355998 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067801488 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082179931 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077650224 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070725275 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075833397 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070548936 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070380592 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087188939 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069731216 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06899254 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068216872 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07356456 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069990417 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068629859 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080208663 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068040372 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07037715 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083718098 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066923232 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068660946 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073780332 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072523224 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067206981 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078529466 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072511091 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067889422 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076931846 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067453657 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070401248 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077452561 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073594771 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066360672 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072040133 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073844859 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068460795 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069121516 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070299466 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069438311 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076203926 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073894055 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072465069 seconds)
  done (took 10.639465134 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161210414 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153605356 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070709898 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144942363 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076057737 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078830753 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146845026 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094224552 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068042883 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068171217 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068989941 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110073009 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106264285 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115326597 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078512955 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067406889 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083047471 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115990961 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149576846 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142573744 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083140009 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076954139 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069693495 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068588838 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070319516 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078461445 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085677009 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076596359 seconds)
  done (took 4.485571145 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081374408 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100279379 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073971028 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089759224 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090822826 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067877451 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070171851 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069361791 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080043198 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079158473 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067538861 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073565036 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074501757 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071390885 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068779545 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074440625 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074684689 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068898986 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071032565 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072753432 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077615799 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080653009 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071656972 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066783375 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07418196 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06703001 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064713131 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.08474029 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06786993 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090001945 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065904819 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074998186 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081180454 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069134536 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067724449 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067765673 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067559957 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067359041 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069532644 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06603232 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066424143 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057963286 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066715372 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079436738 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073575634 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05634716 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072648924 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07277111 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072649578 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06538923 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07046644 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070503521 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070964721 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074484616 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072488919 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07307028 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068905737 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065517635 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075244024 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067719817 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064605012 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065831993 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072831558 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066193233 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075505718 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072208963 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065986276 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067357492 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069251994 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073820884 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067606638 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070877867 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065054737 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069304854 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07251688 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069421254 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068187167 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065905536 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067037523 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067493332 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055579871 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067245477 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053929845 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070607336 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065939449 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066035999 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067301838 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072274537 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080005675 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068544031 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072893169 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067908969 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066572717 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07024179 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060443623 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070669693 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083103706 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08286562 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067195025 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06561749 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081526159 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071890517 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06673003 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055836895 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074669415 seconds)
  done (took 9.219461361 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.093680981 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087980181 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070251524 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083438622 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.091465672 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086794989 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074988303 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076748064 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069340049 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.082023527 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07333464 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076984112 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067943344 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077302701 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093293688 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076164489 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069806832 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076824366 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071898658 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100501357 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082562587 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082183962 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074595084 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068428898 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075361247 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080239699 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08937923 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079975521 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078907076 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075773294 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080085239 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088905728 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.073967472 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071794617 seconds)
  done (took 4.477009593 seconds)
done (took 38.785600815 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.826136196 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.983622593 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.810959918 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.178573352 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.091491757 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.820790767 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.965924511 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.810891702 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.050370193 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.852734546 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.065075632 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.873021665 seconds)
done (took 66.075360591 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.822013041 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.9531572 seconds)
    (2/2) benchmarking "String"...
    done (took 2.094065525 seconds)
  done (took 5.797350873 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.130430827 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.33997598 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.054625816 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.807781125 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.813799068 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.100471971 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.606280422 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.327549178 seconds)
  done (took 30.800348681 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.015661782 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.013421656 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.474811863 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.513937456 seconds)
  done (took 15.817201416 seconds)
done (took 64.197099724 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.818095059 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.809285828 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.817910863 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.79189601 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.867804535 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.828707892 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.210565719 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.811767599 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.811373252 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.797560144 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.812009517 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.248042375 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.818861791 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.134976324 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.811092418 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.816257778 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.854633513 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.33065466 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.967322183 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.817867071 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.81023212 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.836176811 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.815270286 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.817803597 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.852651106 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.812731179 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.25407244 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.818572424 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.432570461 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.814061111 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.841427241 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.30198975 seconds)
  done (took 205.334628807 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.810597246 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.850759014 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.929605969 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.851976832 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.332326298 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.007329042 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.95029361 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.375785731 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.815137296 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.841361295 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.128890367 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.811427289 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.154032655 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.82314794 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.818057781 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.810657237 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.084256627 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.147593239 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.810850345 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.090085422 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.816715149 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.990371541 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.943959108 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.102769631 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.822523107 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.826951352 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.971822358 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.83807234 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.004881382 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.059679276 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.84959976 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.814777729 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.033318926 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.682131969 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.827866027 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.823185549 seconds)
  done (took 172.606441931 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.955915231 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.811581624 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.812354634 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.811927409 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.824384536 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.811482215 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.933504195 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.935746847 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.274426094 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.162490102 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.864496734 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.654730003 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.812743525 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.811744321 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.879298799 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.825707334 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.81279972 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.827888828 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.83931296 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.815048048 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.812499627 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.937023839 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.824055867 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.811495529 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.81879133 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.812654678 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.817559926 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.180619341 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.806327831 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.815131652 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.81836013 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.073105447 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.814232889 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.812534427 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.711556958 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.489388543 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.822844268 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.896164917 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.81551659 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.819665127 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.813310795 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.033057387 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.815087465 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.813583913 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.813209002 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.816402273 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.995865649 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.81647161 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.936176862 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.813705241 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.323099684 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.816643091 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.814517717 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.459799935 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.50765089 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.816701031 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.813983401 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.817067087 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.814189766 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.814685518 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.82075997 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.485906484 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.888622555 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.816371377 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.817926593 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.820024398 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.814712907 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.902805116 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.817821762 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.202071203 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.86979902 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.932103229 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.936861789 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.817857222 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.883140897 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.908551752 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.815575149 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.815114314 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.814359494 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.814946346 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.896392497 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.815770684 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.938532995 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.822877988 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.8163926 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.866312108 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.884342354 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.816295115 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.719664264 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.818553609 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.816342757 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.15283099 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.885960517 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.817286665 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.816164709 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.816127849 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.9460607 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.938901337 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.602435774 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.818774945 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.468946318 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.819797032 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.955893489 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.816940742 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.01715591 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.82024683 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.89962777 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.821211853 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.818790684 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.816837961 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.848193372 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.817749458 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.874720645 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.820188923 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.186886365 seconds)
  done (took 406.464979917 seconds)
done (took 788.168660136 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.482699859 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.445236836 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.56650129 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.477554986 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.452857693 seconds)
  done (took 14.183345598 seconds)
done (took 15.941049574 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.903202712 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.909741548 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.842296383 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.905921332 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.837960168 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.906548944 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.888613374 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.842861423 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.873759214 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.84304492 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.875114357 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.841707051 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.829755403 seconds)
  done (took 26.060535079 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.045608834 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.052052437 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.886921913 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.052262338 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.863465339 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.044911558 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.976917982 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.970850802 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.968960738 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.835110028 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.832577738 seconds)
  done (took 23.290950711 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.049347369 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.056259316 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.89225901 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.061767497 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.866523285 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.057038939 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.98079065 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.970105156 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.97044888 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.833705227 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.831605468 seconds)
  done (took 23.331650448 seconds)
done (took 74.442460313 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.826648159 seconds)
  done (took 3.587546742 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.848565683 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.983867875 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.833218361 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.830429587 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.826048597 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.828261743 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.830314236 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.827330988 seconds)
  done (took 16.570187902 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.825928523 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.826190321 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.822917553 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.826537223 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.823276795 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.823586789 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.825877115 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.826702969 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.826833964 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.82357525 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.82434671 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.825957044 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.823737358 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.82416739 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.826901626 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.824280863 seconds)
  done (took 30.962492687 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.8253921 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.823894931 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.824429993 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.825133843 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.825158437 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.82495957 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.825615681 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.824459768 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.824414329 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.824562902 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.825975196 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.825243771 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.825864579 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.824981879 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.825301479 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.826634187 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.825424718 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.825632139 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.829631808 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.82537804 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.825789258 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.825995561 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.826307753 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.825961118 seconds)
  done (took 45.57712504 seconds)
done (took 98.457698067 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.525709838 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.250184489 seconds)
  done (took 8.53895701 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.829047491 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.827890123 seconds)
  done (took 5.450791759 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.828358823 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.82811074 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.828857518 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.827879196 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.828526033 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.828884825 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.828206436 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.828480783 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.828472451 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.828479086 seconds)
  done (took 20.048159365 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.828277601 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.829068241 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.826698348 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.8290651 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.829056238 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.82576385 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.82856156 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.828802928 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.828834017 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.827487953 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.829564237 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.827485939 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.828889183 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.827235668 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.82942408 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.827069526 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.826512613 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.826520112 seconds)
  done (took 34.669338263 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.829585681 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.829693295 seconds)
  done (took 5.423666403 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.828085273 seconds)
    (2/7) benchmarking "second"...
    done (took 1.828444708 seconds)
    (3/7) benchmarking "month"...
    done (took 1.827189765 seconds)
    (4/7) benchmarking "year"...
    done (took 1.827678983 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.828298722 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.827745209 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.827489831 seconds)
  done (took 14.560887207 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.831008981 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.984128263 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.054231964 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.515737726 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.832945335 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.834038437 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.790771738 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.834095683 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.83590205 seconds)
  done (took 20.278478312 seconds)
done (took 110.733200454 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.64614384 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.828723174 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.173854524 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.944446926 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.845494677 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.125575244 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.861212002 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.051503118 seconds)
done (took 43.242796509 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.902048805 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.279848003 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.305842881 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.618541151 seconds)
  done (took 12.970967257 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.813442783 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.34167938 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.863004561 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.42491475 seconds)
  done (took 20.252457535 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.194382905 seconds)
    (2/2) benchmarking "read"...
    done (took 2.18149142 seconds)
  done (took 6.146667333 seconds)
done (took 48.040104396 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.831740458 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.832957878 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.830751057 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.830980337 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.828990164 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.829213091 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.832018544 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.829351472 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.831758332 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.831957951 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.8319797 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.832070726 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.832694322 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.830068123 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.829750387 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.832142083 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.830348449 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.830146547 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.830043979 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.832085888 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.832822127 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.830487633 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.830404204 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.829844251 seconds)
  done (took 45.713405382 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.833352618 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.83186469 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.832946798 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.83372283 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.830717856 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.833896812 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.832920159 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.830930621 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.833920586 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.833768805 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.831482802 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.831000007 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.83350356 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.830757067 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.834505255 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.832105543 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.834901929 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.831596164 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.833969762 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.831882867 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.834929747 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831749556 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.832217394 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.834684369 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.83256312 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.832993854 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.835008201 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.832370073 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.834489511 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.832371317 seconds)
  done (took 56.75683782 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.840468255 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.842117459 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.834647892 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.835098399 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.835098482 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.835514472 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.835166444 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.834940801 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.835186468 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.835595978 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.834607568 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.835988543 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.83593047 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.835697118 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.835049155 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.836230345 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.835120721 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.835780524 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.835701146 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.83591106 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.836261584 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.83643309 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.836286921 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.836290539 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.835787841 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.83578248 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.836059013 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.83634109 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.836182998 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.83540366 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.836086308 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.836386138 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.837193366 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.836389746 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.836414267 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.836923349 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.84236574 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.845200063 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.837290348 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.837171013 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.837232066 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.836834108 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.83723143 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.837771667 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.837352468 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.837408143 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.838039997 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.837435344 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.837508475 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.837869819 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.837324318 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.838410612 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.837117062 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.837839847 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.837323386 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.837854573 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.83732216 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.837634219 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.838062758 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.838410019 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.83857415 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.838134226 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.838447453 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.837992953 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.838832033 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.837744042 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.839130106 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.837755267 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.839534201 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.839056389 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.838722441 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.838982951 seconds)
  done (took 134.050249701 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.839031872 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.837107258 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.835919978 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.836439063 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.836210878 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.838632756 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.835756222 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838017907 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.836525194 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.83947835 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.83844187 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.837498322 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836701151 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.840011317 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.838976702 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.837103603 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.839828821 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.83618657 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.839499383 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.840405406 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.839520694 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.836422382 seconds)
  done (took 42.207273945 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.839731686 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.839607892 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.838254636 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.839983863 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.838040508 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.840527544 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.840735653 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.840654349 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.841326376 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.837536321 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.837587186 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.840345756 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.837469549 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836899448 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.83741415 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.837831681 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.840340065 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.837400406 seconds)
  done (took 34.876655922 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.838387971 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.837859105 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.8411069 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.838769402 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.838041713 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.841027579 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.837823482 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.840958739 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.841900612 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.839444301 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.840224506 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.841674302 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.841057971 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.838684047 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.841409165 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.838521312 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.840533506 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.838866478 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.841122435 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.838651673 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.838572386 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.841742262 seconds)
  done (took 42.252333294 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.841576337 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.841693243 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.838874944 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.839031619 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.839874084 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.842092207 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.842278598 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.839237282 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.842409269 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.842766127 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.840553702 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.843401856 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.839799953 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.840863417 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.840682731 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.840377159 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.8435434 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.841085171 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.842121468 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.840834746 seconds)
  done (took 38.600241035 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.844008251 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.843442646 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.843297567 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.844396725 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.844093006 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.843424265 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.843586885 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.844662067 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.843974049 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.844119346 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.844346641 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.844985927 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.843706574 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.844618915 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.844709126 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.84423837 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.844748836 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.843929925 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.844774051 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.844581121 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.846063845 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.844160739 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.844675761 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.844316946 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.845193925 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.845229642 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.844485778 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.845066485 seconds)
  done (took 53.422672151 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.845017119 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.845052846 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.841639845 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.841457633 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.842146857 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.841617904 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.842421653 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.841978413 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.845391769 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.842890955 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.845462757 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.84463588 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.844706805 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.845892848 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.844881025 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.845370895 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.84520111 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.842695255 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.842714474 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.842549765 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.845408598 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.844525505 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.845936813 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.842461572 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.843243332 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.845630626 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.843191511 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.843508252 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.846165621 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.843656131 seconds)
  done (took 57.097417845 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.864820496 seconds)
    (2/2) benchmarking "in"...
    done (took 1.86374245 seconds)
  done (took 5.509434158 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.843270856 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.845296053 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.846634558 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.843703939 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.843661278 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.846037578 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.846393765 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.844440687 seconds)
  done (took 16.539896174 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.848257571 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.847638297 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.846895897 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.847318484 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.847844191 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.849737177 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.856740767 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.847543385 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.851219323 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.849460231 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.855470107 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.857342061 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.853610713 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.848823661 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.84913759 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.850265131 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.847297093 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.848375014 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.849114275 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.848221448 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.848944145 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.850835494 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.851690688 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.845253819 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.85119401 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.863220803 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.857275071 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.848741247 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.850062975 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.858631258 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.850327917 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.84678964 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.849501934 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.849696344 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.849200252 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.849054927 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.860799624 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.851776403 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.858675003 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.849296516 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.848978721 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.845626479 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.852353585 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.853640389 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.851856992 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.849391228 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.849347477 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.847163534 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.850471933 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.85539576 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.854472098 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.850132192 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.846331866 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.857664857 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.852966612 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.858870371 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.85127839 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.854259908 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.860987916 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.864226501 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.867526359 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.858814197 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.854527261 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.851028861 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.861737256 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.877190628 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.859728279 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.847586253 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.847741043 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.850701905 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.861288866 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.86810664 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.861918714 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.85180496 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.851891648 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.851692878 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.853216896 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.851216629 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.861502452 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.856091648 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.852245868 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.852729957 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.864093768 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.875507799 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.851821394 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.851705313 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.852568051 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.851407756 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.854541308 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.864234111 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.852528018 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.85145469 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.852494443 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.854189274 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.856715564 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.852131395 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.853133914 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.854997835 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.848778349 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.852098083 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.852245149 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.856850435 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.862480835 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.85189775 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.85309622 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.862546559 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.852667932 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.854100007 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.864657281 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.853572131 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.853161596 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.855103188 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.863342282 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.850191801 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.858860058 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.863786826 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.853852908 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.856533375 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.853167967 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.852435388 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.865641402 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.882478414 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.853759351 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.853247144 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.85960137 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.865538926 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.854731763 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.859164479 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.854844453 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.851165458 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.851020917 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.856765217 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.853286963 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.856289533 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.854019027 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.857486946 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.850867324 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.854109473 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.854081755 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.856232263 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.857856626 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.857260807 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.858346792 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.859502453 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.856005191 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.857926713 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.864745765 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.857263377 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.857357071 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.85727934 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.85178795 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.857445702 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.858259524 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.855698847 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.858169536 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.854920201 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.856252538 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.855065224 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.855727936 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.85572974 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.855191577 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.857423246 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.860741193 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.855936612 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.863115165 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.85628402 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.852656677 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.855738903 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.855539593 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.857658084 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.855575214 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.856666477 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.860694884 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.864375266 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.855344638 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.856873396 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.861963167 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.857771068 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.856186513 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.856579842 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.861181498 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.866586125 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.857370996 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.86675037 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.85698732 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.857535586 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.85633204 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.859076425 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.857672334 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.857654001 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.862187968 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.865562091 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.875666315 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.869467207 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.860420102 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.861970252 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.860027279 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.862166403 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.865561831 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.856954419 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.857946791 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.858968911 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.85843461 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.858322664 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.862402888 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.857263276 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.859455057 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.858267569 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.857415724 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.858501839 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.85747502 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.861046743 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.861985654 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.855294213 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.857925052 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.858427856 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.858320007 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.85508818 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.859253414 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.85970909 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.85877004 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.859073479 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.871660836 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.855184733 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.861271139 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.861385433 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.860755497 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.858969334 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.857798742 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.863608831 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.861197379 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.869342563 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.861102927 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.862119741 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.867907172 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.861266238 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.86044841 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.864700341 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.859870444 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.856439632 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.864486513 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.867924184 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.860074832 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.860519746 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.860199274 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.86164744 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.859974804 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.869876095 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.857028862 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.860293522 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.860567543 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.865385197 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.857282044 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.863565725 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.862368614 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.863183822 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.864001925 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.861146673 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.860228576 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.864210743 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.86056331 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.860631529 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.861082185 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.865297638 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.869358405 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.8693617 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.863615197 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.86664191 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.86398129 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.865094357 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.864184392 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.862584126 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.862306961 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.879906022 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.870633692 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.871266483 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.865490391 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.861432751 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.871206051 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.86420035 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.86846861 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.863006703 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.864570715 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.864103814 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.86306286 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.859454906 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.864327362 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.862488391 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.86467513 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.865572731 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.866752523 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.862010605 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.863432914 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.862958936 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.863305793 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.862628689 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.864653986 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.862424756 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.868255556 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.86659994 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.864971532 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.86470278 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.873179387 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.865505129 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.866560101 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.864525373 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.864993327 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.864964145 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.866648732 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.86423103 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.868218706 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.871255217 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.868308119 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.876499534 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.866623868 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.879322618 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.863820223 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.86919315 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.872537017 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.861234319 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.864206812 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.866448617 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.864309761 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.873711173 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.86379953 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.86653301 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.869392334 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.865184179 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.865044544 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.864602351 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.865289784 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.864324351 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.865446762 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.876113207 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.867413342 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.87018491 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.868716701 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.862016244 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.865398423 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.864308837 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.865814378 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.872061388 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.865447306 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.868376502 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.866369127 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.868126557 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.86593587 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.866065907 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.866545371 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.863076172 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.865948296 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.876083739 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.868055508 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.870920101 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.865525538 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.879374081 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.866099026 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.876492525 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.867085911 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.868172647 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.866102561 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.866326937 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.871161587 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.86790129 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.869453589 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.866348287 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.869542345 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.87064658 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.866675312 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.872115528 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.867973288 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.867112364 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.868826404 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.878533922 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.890686577 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.869976005 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.87124252 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.863886704 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.870124769 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.872208702 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.867585982 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.868073737 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.871372966 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.879411454 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.875541288 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.869604245 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.867102157 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.8696481 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.867803705 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.867562561 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.867506885 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.868335838 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.867867093 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.872321124 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.868955192 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.876414507 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.867679888 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.870311933 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.873028405 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.869975233 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.882764393 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.86834977 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.870913739 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.869175819 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.868254739 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.8714228 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.870243067 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.868423498 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.871218214 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.868803174 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.872494448 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.878311731 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.877440327 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.874530494 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.870348922 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.869145579 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.872273212 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.87285837 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.869701807 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.869711223 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.87027109 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.87313977 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.870075033 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.873756156 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.86982148 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.86962827 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.872197359 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.869647934 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.87546095 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.878430184 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.872231783 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.867077476 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.86961546 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.870284631 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.871647741 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.873246059 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.883948398 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.875891454 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.882334933 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.88061764 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.874448916 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.872336619 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.874918612 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.881690265 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.871714946 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.873095993 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.871200238 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.875115461 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.873043692 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.87691844 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.871666752 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.881234146 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.873131837 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.872451497 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.882084497 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.874233638 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.871894272 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.874957053 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.877634833 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.874426534 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.868524174 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.871824717 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.872683509 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.882851558 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.877534946 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.873070281 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.875110307 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.87158149 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.875948245 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.876609406 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.872362733 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.874730533 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.868917322 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.873131918 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.87214964 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.871673864 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.86922493 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.873586215 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.874157274 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.87724983 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.881637338 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.869144565 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.876166303 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.87446273 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.874946136 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.873730202 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.872560285 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.869851718 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.869908104 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.875290372 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.873851807 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.87525924 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.877521611 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.874852381 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.875022304 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.874687538 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.874307547 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.877157252 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.88535496 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.880894965 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.87080245 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.874676481 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.876318957 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.879777792 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.874197088 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.873999747 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.876221558 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.878866902 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.874297868 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.874585125 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.873317249 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.879517495 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.893658743 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.874994827 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.876663139 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.875920083 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.882622662 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.874631441 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.87203411 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.874645696 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.880704383 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.879663422 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.883548146 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.875899688 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.883530962 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.876132597 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.87649801 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.878426628 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.880487007 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.885466589 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.88014165 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.875842775 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.875983734 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.882034081 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.895866732 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.875065883 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.887212762 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.909436604 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.877462222 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.877626181 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.876240786 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.876319067 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.876505179 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.880333915 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.875897648 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.876349266 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.875178657 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.876808982 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.87774742 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.884660226 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.880252896 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.875879984 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.875482475 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.878711512 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.882099534 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.873042637 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.877118948 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.875737984 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.877194286 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.877850134 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.877581094 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.880075065 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.894310361 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.89145503 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.877098516 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.877404768 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.874680651 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.884397882 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.882583092 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.890451332 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.885333843 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.878227139 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.877801402 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.880543385 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.877568114 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.874354666 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.880856674 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.879030279 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.879313926 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.874435482 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.895661959 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.886865197 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.886346652 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.880601087 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.878757665 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.878463203 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.88194822 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.878617809 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.878582126 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.882792458 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.880911577 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.883584107 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.878428199 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.878620439 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.883001089 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.886693873 seconds)
  done (took 1113.911022709 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.87663029 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.87565947 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.875803448 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.876289374 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.875783358 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.876111025 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.87623944 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.875955896 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.875949889 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.875765608 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.875555302 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.876328355 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.87620748 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.876235423 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.876401653 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.876748111 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.877044206 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.878466355 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.87655498 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.877448536 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.877450069 seconds)
  done (took 41.217372184 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.879976094 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.877360224 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.87744063 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.879517266 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.876312681 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.879532005 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.878080814 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.879405014 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.880337763 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.877084976 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.879754065 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.879439462 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.878737492 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.877805311 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.877883674 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.879932802 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.880005987 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.877509468 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.880300227 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.87734563 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.880397879 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.87751656 seconds)
  done (took 43.146699362 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.881715643 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.88187537 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.88188433 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.87883064 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.881220088 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.877951277 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.881682031 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.881392013 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.881755258 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.885878806 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.88235193 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.884526721 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.890707424 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.886445189 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.886903595 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.881441576 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.0252446 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.882222943 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.882087045 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.882294912 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.880234992 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.891015886 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.879863113 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.878807276 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.882477595 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.883380058 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.882388123 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.882571133 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.883870891 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.885223418 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.887263676 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.88301891 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.884878563 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.88597811 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.884721394 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.88571906 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.887800161 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.884011646 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.880783196 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.882430704 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.895159791 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.904527646 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.884527435 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.893600356 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.883588255 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.882297966 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.88807547 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.892317319 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.880962959 seconds)
  done (took 94.296398856 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.883587832 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.883124223 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.882460408 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.883754674 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.884727719 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.883913751 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.883753975 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.883953684 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.880410588 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.880525354 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.88378691 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.88131775 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.880459919 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.884475747 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.883730388 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.881969508 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.881531782 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.881435767 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.881844376 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.881387398 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.881554129 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.884203379 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.884169865 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.882358891 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.883635678 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.881532128 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.882081653 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.884143266 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.883148834 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.882073782 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.885002832 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.884377845 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.885619331 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.882892749 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.882773433 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.886648628 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.884869069 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.882426863 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.885227476 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.882986153 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.885551277 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.885182882 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.886514527 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.886925857 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.883613083 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.884852115 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.884246673 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.885011022 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.884711772 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.887011863 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.886580666 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.884161103 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.886954767 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.884414287 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.88713152 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.887483619 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.884164496 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.884265554 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.886925319 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.884948749 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.88487726 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.887185923 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.885189763 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.887343401 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.887268485 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.885487099 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.885354953 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.887232502 seconds)
  done (took 129.944845255 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.888257521 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.888064909 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.88807456 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.888542595 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.889019229 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.888353237 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.889663982 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.889848886 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.888581648 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.888279171 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.888950389 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.888170754 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.888453061 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.888184504 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.887654496 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.888010773 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.888645509 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.888699517 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.889120069 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.888751136 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.888947321 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.889420813 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.887769105 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.889399168 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.889293284 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.888556738 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.889175939 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.889012397 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.889504201 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.888852417 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.889575153 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.889499629 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.888604299 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.889249967 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.890092536 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.889098267 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.889474294 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.889975961 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.890060449 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.889330415 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.888628698 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.889709343 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.89025127 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.888795394 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.890276188 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.88908774 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.889533863 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.891217231 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.888315946 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.88969132 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.89010687 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.890545055 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.890215446 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.891085711 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.889932536 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.888838078 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.889585777 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.890891665 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.890995092 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.889517026 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.888800249 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.889802142 seconds)
  done (took 118.956438161 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.889094802 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.888573132 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.886431825 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.885738888 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.889565622 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.886740373 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.890384233 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.888528438 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.889472283 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.890016143 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.889038524 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.886905489 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.886047456 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.888345913 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.887444555 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.886075741 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.885916119 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.886442781 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.889031421 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.887395471 seconds)
  done (took 39.578987381 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.886275706 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.886503442 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.88155965 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.881025231 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.883989394 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.882583674 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.884574554 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.884121658 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.881381723 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.882859695 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.884206129 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.884000795 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.880675961 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.880180832 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.882716461 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.881159919 seconds)
  done (took 31.95103694 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.881051577 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.882636685 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.883042703 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.882977184 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.880275106 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.882242588 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.881715574 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.879943912 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.878636402 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.882385958 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.881856746 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.882167734 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.882334113 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.883115472 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.879761799 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.883273316 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.880130872 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.87997953 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.882485803 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.883348457 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.880572 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.881908766 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.882581311 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.882661469 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.880730741 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.881332415 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.880716073 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.880536866 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.880730429 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.882947496 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.880723016 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.881992672 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.881362262 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.880826904 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.883516212 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.880580014 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.883367104 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.8833331 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.883176279 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.882982752 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.883796045 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.881108337 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.886013029 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.883245262 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.881081504 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.883916275 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.881030131 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.882699864 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.881518477 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.881263354 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.88431834 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.885075212 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.884018331 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.885461305 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.883873407 seconds)
  done (took 105.336676501 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.883350764 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.884306339 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.88292823 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.883850479 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.883775196 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.881250489 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.884277388 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.882633169 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.88151686 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.884547752 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.882745057 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.884172465 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.88207211 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.88557974 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.882854319 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.884349895 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.881274683 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.882365036 seconds)
  done (took 35.716058808 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.881369156 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.882788234 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.884879347 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.881786222 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.885050053 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.884862437 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.881968203 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.885534543 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.884186943 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.883952702 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.883365896 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.884486079 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.884977263 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.884516141 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.882531372 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.881180712 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.879036495 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.878916838 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.876030363 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.876504024 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.880697696 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.877477629 seconds)
  done (took 43.226114237 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.878462279 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.878161027 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.897076402 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.92552301 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.911805917 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.877241255 seconds)
  done (took 13.17902611 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874823372 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877254299 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.873792985 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.87644496 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.876382877 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.874164829 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.875154723 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874077935 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87599586 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.873104953 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.873632115 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.875547456 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.87658338 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870617217 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.873565902 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872796192 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.871176324 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.871007957 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867903664 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870127021 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867224573 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870839364 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868625276 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867913453 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867590254 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868085538 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.869730752 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867964116 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.869744745 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870558719 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870074756 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867729215 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870362331 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870143257 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.872163182 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870698369 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867983303 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870686222 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870946265 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86811373 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.870673621 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.871683773 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870623234 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867912305 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.87092463 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868868194 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86818263 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868583571 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868133862 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.871105472 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.87065063 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86929033 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870280797 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870794744 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87196116 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.871266302 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869183479 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869004237 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.871361918 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86948688 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.869363669 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871265048 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868189297 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868865244 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.871408006 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.869458954 seconds)
  done (took 125.292981612 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868891179 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.86819312 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868574798 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870560621 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86838519 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868246544 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868391368 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868386698 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868067325 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869587889 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871414622 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86811797 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867606274 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868185711 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869144213 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868235524 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867918246 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867992741 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86857757 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871254835 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869553616 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867084505 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867101049 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867402936 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868535541 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870392835 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867022069 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866381078 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86735707 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867189046 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86740105 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.86636319 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866133155 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.865608414 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866894659 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866771107 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866457006 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865754231 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865294212 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868060735 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865741847 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869244048 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864860858 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865096805 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865858077 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865398034 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.881641743 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86508254 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865444188 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864305672 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865135196 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865420225 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866909122 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863858269 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864058062 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863947159 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864437373 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865256658 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863863638 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866643192 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864086999 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863766298 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86807379 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864309579 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86473522 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864102202 seconds)
  done (took 125.03649104 seconds)
done (took 2589.582984773 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.898049061 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.882008896 seconds)
  done (took 15.579521055 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.029389216 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.980251356 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.866171206 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.909314491 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.865127719 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.885639871 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.878746357 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.865390842 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.865026469 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.864628125 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.865864297 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.052456343 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.864392906 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.865554144 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.864436386 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.956343921 seconds)
  done (took 52.281909052 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.866989879 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.868895644 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.878769171 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.870503794 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.8675452 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.879368018 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.899756315 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.869760491 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.901997776 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.879169258 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.938823731 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.877799 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.866334025 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.916330714 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.880836754 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.881441458 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.954209361 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.94287194 seconds)
  done (took 35.839525595 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.945424121 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.885008068 seconds)
  done (took 10.634252123 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.894779172 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.882456246 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.882456379 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.883492168 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.860921836 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.909714681 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.886983431 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.865618238 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.89345858 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.916361025 seconds)
  done (took 70.676370171 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.869332983 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.864675672 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.865176675 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.863648894 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.856236312 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.8621442 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.862980784 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.856156251 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.550597379 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.89823559 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.871427362 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.868615829 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.863192919 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.864045589 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.859706562 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.885236601 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.979432235 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.858905403 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.858872305 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.86773086 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.863559327 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.955735437 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.875977739 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.862259105 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.893366144 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.551542081 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.871729511 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.867656656 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.008410472 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.85817041 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.864031741 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.864788695 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.864331407 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.252871027 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.150662414 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.862099924 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.87129044 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.870382201 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.859015342 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.034182148 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.862771535 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.867862676 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.853483828 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.141274765 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.944756261 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.904261079 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.226874151 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.866046887 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.862865691 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.892116014 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.864900259 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.864732802 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.874771572 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.370467625 seconds)
  done (took 132.423512595 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.856801063 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.431308705 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.020665822 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.856915142 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.140023743 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.100499784 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.857876297 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.907198287 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.858884609 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.107181837 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.034780158 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.978576824 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.857805015 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.858393302 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.857583344 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.855245955 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.012461844 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.928902974 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.858545455 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.856027557 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.89296508 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.125332837 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.985115338 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.860070164 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.881971497 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.086024496 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.984178123 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.975866103 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.365719397 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.85600249 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.926766699 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.859675459 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.857326945 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.857226363 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.023608754 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.966557329 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.956377495 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.858995684 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.856030368 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.857003746 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.520023606 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.080196242 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.969584244 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.996364344 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.10802 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.090045343 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.504856986 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.857322786 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.495896922 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.056350122 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.068412197 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.114037026 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.989216732 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.861217054 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.105529777 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.857008121 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.858001186 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.121760214 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.088616207 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.973489357 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.860570967 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.858885218 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.857462353 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.173256984 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.861832573 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.969603837 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.861107705 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.86104668 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.972726175 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.976508724 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.089913787 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.102647023 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.890492036 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.733434226 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.371542214 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.143434765 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.932934166 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.124796051 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.862857133 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.858604672 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.953286195 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.619790636 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.032577224 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.176217124 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.124511271 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.904153453 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.463208866 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.859145882 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.107732659 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.111290567 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.090311213 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.105152095 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.030474858 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.184371669 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.858589137 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.860350233 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.063802498 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.993349297 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.862864909 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.223892403 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.110040563 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.592463268 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.891412854 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.16610949 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.999566053 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.863140424 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.487245076 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.860968327 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.062846241 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.903260688 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.866729458 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.86106815 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.106988879 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.733803177 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.860508888 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.644421635 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.930327574 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.86265029 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.126803553 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.86651019 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.102615181 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.864586264 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.172829954 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.41994534 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.906772121 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.053965513 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.106574021 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.655503835 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.129667186 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.177950596 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.986207459 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.120946313 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.689685361 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.863223589 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.148619059 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.864415758 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.862122187 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.032686095 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.863421243 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.018700782 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.864062618 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.123708167 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.888512772 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.032428915 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.867346731 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.135131397 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.907827091 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.917847422 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.865072275 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.980676641 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.866740482 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.910980549 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.050527274 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.864948758 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.864812052 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.431360948 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.864877148 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.012188363 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.164868946 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.888321616 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.934643096 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.388506071 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.865247405 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.957645028 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.890717697 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.468793648 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.864701647 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.036615303 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.865365517 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.822265504 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.864977192 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.173378632 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.087158567 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.864999432 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.863242492 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.661032344 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.55682337 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.866285724 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.03925733 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.093152827 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.523302919 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.084660001 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.866078539 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.998716679 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.868217998 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.947660313 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.213797473 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.864028342 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.863681072 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.86498755 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.863453439 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.865469381 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.094912134 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.892702526 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.549000502 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.002614703 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.108753375 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.17746851 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.127165145 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.913949253 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.867422573 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.133185087 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.866357183 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.931359687 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.86624283 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.889626434 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.113397331 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.866303898 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.094962779 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.151916178 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.910183083 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.916441747 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.867286795 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.865288117 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.864638619 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.009507195 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.965296963 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.866724871 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.865533978 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.98317692 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.991755704 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.054360601 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.453348294 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.041540143 seconds)
  done (took 902.411395477 seconds)
done (took 1221.646343158 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.86749523 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.866417759 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.850529343 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.860358235 seconds)
  done (took 29.249082904 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.867800819 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.865983658 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.866070093 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.866078169 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.867508613 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.866438648 seconds)
  done (took 12.996651625 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.902089998 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.859565749 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.862046992 seconds)
  done (took 21.421297371 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.934492674 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.269942347 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.969692507 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.303388854 seconds)
  done (took 10.275917987 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.867421937 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.866371087 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.867223848 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.868435398 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.868833928 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.869469585 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.868895857 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.870340474 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.868608889 seconds)
  done (took 18.614460724 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.041561841 seconds)
done (took 98.40237189 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.939516872 seconds)
    (2/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.534356681 seconds)
    (3/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.152339343 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.883872828 seconds)
    (5/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.858595291 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.887923484 seconds)
    (7/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.0893886 seconds)
    (8/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.393700505 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.036029243 seconds)
    (10/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.989535383 seconds)
    (11/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.160782884 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.912818584 seconds)
    (13/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.375236214 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.903402025 seconds)
    (15/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.198197135 seconds)
    (16/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.455238446 seconds)
    (17/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.992562352 seconds)
    (18/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.867109825 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.854488295 seconds)
    (20/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.112720368 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.109524458 seconds)
    (22/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.006508321 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.171461917 seconds)
    (24/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.963579037 seconds)
    (25/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.204247664 seconds)
    (26/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.875790278 seconds)
    (27/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.011867063 seconds)
    (28/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.039678365 seconds)
    (29/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.068950386 seconds)
    (30/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.85474623 seconds)
    (31/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 3.640277017 seconds)
    (32/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.937640147 seconds)
    (33/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.77197692 seconds)
    (34/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.928951703 seconds)
    (35/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.445503477 seconds)
    (36/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.51038737 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.972237877 seconds)
    (38/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.853821313 seconds)
    (39/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.062685923 seconds)
    (40/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.327435325 seconds)
    (41/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.977643358 seconds)
    (42/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.950521028 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.129089257 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.033806003 seconds)
    (45/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.893728513 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.511861365 seconds)
    (47/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.904227827 seconds)
    (48/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.878179268 seconds)
    (49/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.054267796 seconds)
    (50/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.891240835 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.243091534 seconds)
    (52/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.288658004 seconds)
    (53/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.953543061 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.978756332 seconds)
    (55/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.035431319 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.968746579 seconds)
    (57/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.870275536 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.039299849 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.139098313 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.856858697 seconds)
    (61/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.247773111 seconds)
    (62/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.874639822 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.945467083 seconds)
    (64/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.855532604 seconds)
    (65/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.889490036 seconds)
    (66/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.882692987 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.931744026 seconds)
    (68/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.019957782 seconds)
    (69/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.974415934 seconds)
    (70/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.966808793 seconds)
    (71/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.472384483 seconds)
    (72/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.006959912 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.900372195 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.856464705 seconds)
    (75/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.898025931 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.337986799 seconds)
    (77/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.757459549 seconds)
    (78/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.954639542 seconds)
    (79/309) benchmarking ("sort", Int8, false)...
    done (took 4.899516254 seconds)
    (80/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.858484253 seconds)
    (81/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.738233542 seconds)
    (82/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.936757049 seconds)
    (83/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.010169618 seconds)
    (84/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.955311413 seconds)
    (85/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.171430993 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.006538313 seconds)
    (87/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.843913012 seconds)
    (88/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.71311252 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.984106276 seconds)
    (90/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.85587365 seconds)
    (91/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.956154614 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.298561375 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 5.578317215 seconds)
    (94/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.022144022 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.927254504 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.921415877 seconds)
    (97/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.886888587 seconds)
    (98/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.880494321 seconds)
    (99/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.381637087 seconds)
    (100/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.021577783 seconds)
    (101/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.979489729 seconds)
    (102/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.38655887 seconds)
    (103/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.864001901 seconds)
    (104/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 3.003488668 seconds)
    (105/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.957037672 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.683245214 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.533420736 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.778151391 seconds)
    (109/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.810333042 seconds)
    (110/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.048362262 seconds)
    (111/309) benchmarking ("sort", Float64, false)...
    done (took 5.693662878 seconds)
    (112/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.973812713 seconds)
    (113/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.861195842 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.192919057 seconds)
    (115/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.20377852 seconds)
    (116/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.423930828 seconds)
    (117/309) benchmarking ("sort", BigInt, false)...
    done (took 6.95903709 seconds)
    (118/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.980158358 seconds)
    (119/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.860831112 seconds)
    (120/309) benchmarking ("sort", BigFloat, false)...
    done (took 8.254398817 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.09047526 seconds)
    (122/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.151349784 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.76671648 seconds)
    (124/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.910166373 seconds)
    (125/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.177540055 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.876991651 seconds)
    (127/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.906706034 seconds)
    (128/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.056530706 seconds)
    (129/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.419832918 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 2.322405417 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.899071339 seconds)
    (132/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.973428043 seconds)
    (133/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.17243827 seconds)
    (134/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.969230983 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.151895309 seconds)
    (136/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.474233516 seconds)
    (137/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.573938419 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.104019415 seconds)
    (139/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.224254069 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.158353122 seconds)
    (141/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.423027246 seconds)
    (142/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.084917098 seconds)
    (143/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.900502669 seconds)
    (144/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.24183249 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.985089584 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.981525739 seconds)
    (147/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.376961964 seconds)
    (148/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.165347512 seconds)
    (149/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.988477915 seconds)
    (150/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.098408057 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.906320279 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.097470612 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.904238955 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.950960576 seconds)
    (155/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.092170813 seconds)
    (156/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.183460326 seconds)
    (157/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.389555175 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.879528589 seconds)
    (159/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.967135918 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.897332911 seconds)
    (161/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.576362778 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.351219244 seconds)
    (163/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.045088638 seconds)
    (164/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.970076793 seconds)
    (165/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.079271891 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.879664736 seconds)
    (167/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.98571018 seconds)
    (168/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.878807625 seconds)
    (169/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.136715238 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.879540275 seconds)
    (171/309) benchmarking ("map", identity, Bool, false)...
    done (took 3.191581355 seconds)
    (172/309) benchmarking ("sort", Float32, false)...
    done (took 5.635480359 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.881571346 seconds)
    (174/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.907418889 seconds)
    (175/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.072864628 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.224085441 seconds)
    (177/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.702665079 seconds)
    (178/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.887017934 seconds)
    (179/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.957229451 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.865271898 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.213435011 seconds)
    (182/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.314599912 seconds)
    (183/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.085006257 seconds)
    (184/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.819174154 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.943255283 seconds)
    (186/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.885132902 seconds)
    (187/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.322111574 seconds)
    (188/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.986495701 seconds)
    (189/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.288678532 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.908080603 seconds)
    (191/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.903625649 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.540739173 seconds)
    (193/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.879757132 seconds)
    (194/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 9.130516573 seconds)
    (195/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 3.101723293 seconds)
    (196/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.482019338 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.920841571 seconds)
    (198/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.962343986 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.25067542 seconds)
    (200/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.258882127 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.581516501 seconds)
    (202/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.277887283 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.154872562 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.940937559 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.95120904 seconds)
    (206/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.956004577 seconds)
    (207/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.908661798 seconds)
    (208/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.089120029 seconds)
    (209/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.03931996 seconds)
    (210/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.367805265 seconds)
    (211/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.886685077 seconds)
    (212/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.866407012 seconds)
    (213/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.498550323 seconds)
    (214/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.02655564 seconds)
    (215/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.429760973 seconds)
    (216/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.882847402 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.624951009 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.080009224 seconds)
    (219/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.743283774 seconds)
    (220/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.073447224 seconds)
    (221/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.986738226 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.881336329 seconds)
    (223/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.235950467 seconds)
    (224/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.883518731 seconds)
    (225/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.995360325 seconds)
    (226/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.105296154 seconds)
    (227/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.176158171 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.903773462 seconds)
    (229/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.566559508 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.160283623 seconds)
    (231/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.294778081 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.920736313 seconds)
    (233/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.864287826 seconds)
    (234/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.413338096 seconds)
    (235/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.092545504 seconds)
    (236/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.085124284 seconds)
    (237/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.949386501 seconds)
    (238/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.297814984 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.821030427 seconds)
    (240/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.052775307 seconds)
    (241/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.019596215 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.885053661 seconds)
    (243/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.286764497 seconds)
    (244/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.885548069 seconds)
    (245/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.914107027 seconds)
    (246/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 3.558516644 seconds)
    (247/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.89704062 seconds)
    (248/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.884479892 seconds)
    (249/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.095782896 seconds)
    (250/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.221493309 seconds)
    (251/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.245373288 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.31463003 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.94715693 seconds)
    (254/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.911672813 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.978678718 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.885405627 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.697297144 seconds)
    (258/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.957172566 seconds)
    (259/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.882674739 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.273397865 seconds)
    (261/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.169590268 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.908699316 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.477304209 seconds)
    (264/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.161996007 seconds)
    (265/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.020751788 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.278456271 seconds)
    (267/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.011500217 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.58238365 seconds)
    (269/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.071181489 seconds)
    (270/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.888846772 seconds)
    (271/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.901893004 seconds)
    (272/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.0839487 seconds)
    (273/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.369395273 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.930179068 seconds)
    (275/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.93051061 seconds)
    (276/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.054224464 seconds)
    (277/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.976390386 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.18224307 seconds)
    (279/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.066931507 seconds)
    (280/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.915681329 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.182793329 seconds)
    (282/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.887794492 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.982294519 seconds)
    (284/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.794608109 seconds)
    (285/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.169305072 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.968108293 seconds)
    (287/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.487827756 seconds)
    (288/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.121043435 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.999682857 seconds)
    (290/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.886614244 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.054623916 seconds)
    (292/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.909277957 seconds)
    (293/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.869085537 seconds)
    (294/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.205307465 seconds)
    (295/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.180768911 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.17735784 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.213446658 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.931386605 seconds)
    (299/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.069934702 seconds)
    (300/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.888832749 seconds)
    (301/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.15588098 seconds)
    (302/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.911906446 seconds)
    (303/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.008713957 seconds)
    (304/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.031903791 seconds)
    (305/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.964481274 seconds)
    (306/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.918051232 seconds)
    (307/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.900157808 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.911638418 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.542902798 seconds)
  done (took 1026.172091384 seconds)
done (took 1028.195149309 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.91842737 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.912401246 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.896992846 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.917664161 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.00866174 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.927520348 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.906465471 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.898982378 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.945752034 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.945848852 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.896876837 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.926699075 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.899386645 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.897019113 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.89573989 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.911781931 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.205516706 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.925053339 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.913785536 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.905871423 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.914245163 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.8965708 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.946619617 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.927478104 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.901571387 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.900854202 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.9012636 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.918539643 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.01044375 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.901534384 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.901360362 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.909483618 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.207324809 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.923857697 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.895236012 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.91870537 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.911124056 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.907784083 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.9024652 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.931352599 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.348807607 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.906344732 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.901217517 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.899236 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.898938713 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.903775792 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.900850568 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.904842058 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.912901615 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.912737667 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.343842138 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.921301262 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.902540252 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.900303047 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.911208608 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.900541389 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.90371004 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.916415977 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.92023813 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.917026761 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.198442925 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.931144555 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.903717562 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.917839942 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.908561398 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.383205236 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.902107773 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.905168419 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.352293966 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.913246374 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.384224511 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.916962115 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.902324585 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.917388564 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.933592613 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.209607274 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.922087989 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.900631081 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.910708525 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.901085794 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.910977245 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.915286741 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.906301441 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.901553265 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.918929586 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.932834455 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.912843815 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.90329731 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.911213077 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.922934649 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.910698593 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.913298417 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.905039332 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.897906248 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.912767059 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.906276573 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.90608851 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.907496055 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.908414872 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.913924313 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.347399215 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.925744764 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.899018363 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.899435344 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.902635579 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.917146903 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.348781096 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.90998484 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.925256566 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.951826249 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.903945261 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.20070009 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.932421642 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.919760144 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.912316467 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.905771823 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.898807555 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.201316388 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.371878915 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.925683614 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.905088746 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.902825816 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.919891107 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.905217902 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.89999604 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.212989443 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.931870453 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.91814151 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.025934209 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.914906954 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.936221585 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.903956475 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.907204078 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.935175956 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.922065056 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.937987947 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.908567714 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.920325791 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.921090844 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.901058566 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.916484568 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.915419653 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.906316907 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.910441226 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.899146824 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.940312035 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.917613452 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.918383002 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.926267022 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.026366184 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.904308741 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.201715831 seconds)
done (took 298.888102317 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.970902613 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.893887376 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.001898586 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.898861154 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.986375537 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.987990655 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.896351946 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.896988005 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.896732646 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.307254432 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.896902516 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.897834887 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.89515836 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.897392807 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.983418861 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.899476298 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.897107022 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.244864748 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.901907414 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.972767849 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.90163663 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.898231905 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.89928712 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.28336808 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.895133656 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.894809017 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.974371126 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.900600245 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.269800856 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.896849583 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.89858743 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.249571797 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.99451234 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.91993633 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.913136552 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.907916885 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.98835072 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.905020967 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.982912686 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.984005234 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.003999155 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.942113873 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.902997125 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.902288691 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.904572629 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.904673509 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.898867849 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.928512065 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.894637204 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.89914216 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.289090257 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.911351957 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.90120388 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.899131362 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.900030315 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.933572513 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.900071555 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.904384599 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.997313917 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.904824248 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.972178221 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.311293232 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.28584111 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.902530887 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.900908641 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.901833169 seconds)
  done (took 186.611441927 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.971807432 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.977776948 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.972647153 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.908932041 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.955313663 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.976369392 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.908405293 seconds)
  done (took 15.504813214 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.912631771 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.902537581 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.954311996 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.953818996 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.903566556 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.05530868 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.903468074 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.916334993 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.900700045 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.958013002 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.90566708 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.903883087 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.90982106 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.905314774 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.952799905 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.916579764 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.020829273 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.906935512 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.90612385 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.062271132 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.901681952 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.910859715 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.960604603 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.916714469 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.9073831 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.911779952 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.495508776 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.904487122 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.902245995 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.905292478 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.902612201 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.949800219 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.904791932 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.900914266 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.902363327 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.021577715 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.906348339 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.90213641 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.904633965 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.903206477 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.904567747 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.905516717 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.905514925 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.902916873 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.906832182 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.930135034 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.90442636 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.905220987 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.904958222 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.906061734 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.958019487 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.905684801 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.902021747 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.90326223 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.962845462 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.91424342 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.906335211 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.903568582 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.906053563 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.903405733 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.065611564 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.956008297 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.906432271 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.955823796 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.905828044 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.907562698 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.906672369 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.905705234 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.962328891 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.906447578 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.957404667 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.904508717 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.063937844 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.932869247 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.908413909 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.91230503 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.91065933 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.908164477 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.910309371 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.914942493 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.904613646 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.909749987 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.914478847 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.906730621 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.337691427 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.021411928 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.017478038 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.905185216 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.922266527 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.915858751 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.905108131 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.961532836 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.907854003 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.907067784 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.960955804 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.024072164 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.96587301 seconds)
  done (took 209.834194141 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.914742994 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.916705718 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.910571428 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.924637919 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.909487381 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.909718341 seconds)
  done (took 13.324329536 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.91281462 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.908839656 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.907553518 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.907749972 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.909071237 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.909157424 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.909900038 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.910664618 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.912753919 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.908432936 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.911107993 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.910269205 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.910508643 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.909250137 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.910151464 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.908473835 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.910862612 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.906509556 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.909305827 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.910717853 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.054667211 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.911298391 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.910553359 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.913058194 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.91557222 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.909147316 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.919610605 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.90901876 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.909375004 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.916581376 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.914618516 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.911199237 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.912865518 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.916754599 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.914995389 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.912398631 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.913329053 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.911684797 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.907533466 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.911185763 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.91236159 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.910847035 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.910559727 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.911645838 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.912932142 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.917522339 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.916065391 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.919554189 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.911768658 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.911943177 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.913247234 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.909982712 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.912343696 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.911779186 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.916493484 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.917537115 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.918018018 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.912260711 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.912416457 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.913372578 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.911369687 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.914268105 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.915078824 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.915759487 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.918050646 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.912900008 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.914550448 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.916418879 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.912171238 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.911672376 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.914194788 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.909141906 seconds)
  done (took 140.669499132 seconds)
done (took 567.79096155 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.185825273 seconds)
  done (took 9.028320906 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.023825717 seconds)
  done (took 8.962386586 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.53037834 seconds)
  done (took 10.372829969 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.928787102 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.930327577 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.917215593 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.912404894 seconds)
  done (took 29.542677244 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.930974261 seconds)
  done (took 8.773074565 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.919006391 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.905715891 seconds)
  done (took 15.699983782 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.993051566 seconds)
  done (took 8.841404493 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.029439335 seconds)
  done (took 8.876525027 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.927268175 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.914364245 seconds)
  done (took 15.69723899 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.894746633 seconds)
  done (took 8.737305768 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.601460579 seconds)
  done (took 11.45435301 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.919034988 seconds)
  done (took 8.774588283 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.977931059 seconds)
  done (took 8.821011539 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.056027874 seconds)
  done (took 9.898386538 seconds)
done (took 165.321592468 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.910641616 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.909146655 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.90840567 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.909110163 seconds)
  done (took 29.480139794 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.947019753 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.946002399 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.94702007 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.956928759 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.948856426 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.946476618 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.938506698 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.939998274 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.957106388 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.949426677 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.951237369 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.948721898 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.946277473 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.93784422 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.948673757 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.9485226 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.95988098 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.947969845 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.938443971 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.949874019 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.914510782 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.960966713 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.949596718 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.914456077 seconds)
  done (took 48.537999621 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.113876297 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.986779596 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.068750685 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.967325485 seconds)
  done (took 9.980455609 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.965304523 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.969303994 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.978749836 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.018308806 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.053636903 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.978765125 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.945287894 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.937584633 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.922874404 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.967564623 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.043458137 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.985268577 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.051259625 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.914857796 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.100111642 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.915168082 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.91621802 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.966630725 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.018319154 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.031534256 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.915408185 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.971027182 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.970865525 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.984961778 seconds)
  done (took 49.367601511 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.91459377 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.92481434 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.921137062 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.915675046 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.914332209 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.916416584 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.922744868 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.916767636 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.936494356 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.916489156 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.91500746 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.915434974 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.917101342 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.916234167 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.915820616 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.926695938 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.929307983 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.918296858 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.919729519 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.921519702 seconds)
  done (took 40.241381992 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.910230126 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.765048448 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.265124546 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.166131416 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.911948533 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.913124309 seconds)
  done (took 31.778359869 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.933060972 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.982575884 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.925989756 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.975420029 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.062523701 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.931139253 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.919227149 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.986461803 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.02976235 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.991918241 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.941297085 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.947403046 seconds)
  done (took 25.474397952 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.913998731 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.913636714 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.914867179 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.930133656 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.931016776 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.925964298 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.926499045 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.912609054 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.930962865 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.937762678 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.927552594 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.930107654 seconds)
  done (took 44.94669244 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000092199 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.959216979 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.92117191 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.595432359 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.291088239 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.123548752 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.516615012 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.240911511 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.915750691 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186264052 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.982357776 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016817707 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.168543501 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.394856069 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.947382331 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.378744699 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.210392548 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.119344116 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.940650217 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.596758965 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978264085 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.089300348 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.720538308 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.972989968 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.125270234 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.042747114 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.173923067 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.913501459 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048510125 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.951386516 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925078341 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.913489539 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18808506 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.289841548 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017643166 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925251607 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.534716307 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.626248708 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.898997434 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.682916829 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.645716856 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.040186328 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925048478 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914722319 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.8491013 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.053682902 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299002841 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.920276582 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.626454228 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.916034453 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925454684 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009881296 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.919127643 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.734235827 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827328534 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.916750642 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.91263427 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923085709 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.489360325 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.034954352 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.095041996 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.891853266 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.008612697 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.663952609 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.296895579 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.061496171 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.91914244 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.91945204 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850568367 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.605229048 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972468222 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.245371789 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.93644433 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.566078667 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.216076428 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.021638913 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.859544481 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184164953 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.438667966 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.891827088 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144982826 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91685683 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851491665 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.86144453 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.849985822 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.175991028 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954204965 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.665474414 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95705162 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.243595008 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.928016134 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93411985 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941223422 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.140722475 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.802065241 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917559751 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.714419874 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.069746316 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940011817 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.246344702 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85229043 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.921668317 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.175264911 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.129525725 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.980018809 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.41491737 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080779619 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.462138484 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.973033883 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.058324647 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.968902086 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.182540428 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.978410547 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.045678663 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974139209 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.918645133 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207824181 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.502157534 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.058184578 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.949522367 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.047902533 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.229686099 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.947563393 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002149287 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.927331403 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.920728986 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.732310854 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.474506444 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.921210868 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.922041964 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.983033457 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.969745264 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.920747032 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869401077 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.541628418 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.956142163 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.934202053 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.144034607 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.473938394 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.233903968 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853405848 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.248065273 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.011397673 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.143451063 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.566965579 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.999491394 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.181159823 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.992263839 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.025059093 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970704749 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940104162 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020022489 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943842832 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.061529034 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.21713819 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.925391311 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.92548264 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.719806789 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.960292931 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.930026183 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.927456832 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.679974245 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189441302 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.945294707 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.928836257 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.81171098 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.936219198 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987176692 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.927413553 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.932995775 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.480468489 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.63570883 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.929295645 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.508729615 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146616324 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932641298 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.614359757 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042549978 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.003680516 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.1884444 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.98097019 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.857035747 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.634824777 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.615898747 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923492418 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.858312742 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.923931309 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933256023 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.934476953 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.121486411 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.194729327 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.966986337 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.621545388 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.967370617 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936867546 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.928815416 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.924237286 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.438229653 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.060157738 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.10893896 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.972405918 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067888775 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.93744248 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.858635038 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.928201842 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.928829879 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.924034116 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.924820238 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958806228 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.629436508 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304207072 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.18587152 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.536685492 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938660594 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.670271166 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.984242832 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.926845386 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.750461129 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.08448454 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.968489033 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938206708 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.936189471 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.703221114 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.633356911 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.495851968 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232961477 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.220766495 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353903129 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.129247081 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.956288296 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.261143974 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.859395978 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.483522941 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.984045611 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.270402554 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.870420871 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009603829 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.574395807 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.272835348 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939493917 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154571354 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30646715 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.669719248 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.101217454 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.138030819 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961497004 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.066004267 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.892447133 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.213197374 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068879481 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.652738541 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.135392365 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257774586 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.606403593 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.055174425 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.927669111 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.603350238 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009531373 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.644832537 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.098792417 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.10659873 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.918710668 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405874664 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.933627929 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.151163181 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.271100756 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.081513486 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.051615044 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863947496 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.93883066 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.938739951 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.930477272 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.924539514 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.813292534 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.182980768 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940051496 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863038248 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.031461385 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.216205928 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.831007919 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.933511664 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928438709 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215151269 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.457109873 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101914396 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.022265729 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.451298842 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93531902 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.863402164 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863316382 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.621496807 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.933753501 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.903923603 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.132783986 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.031575484 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.843999639 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.000523276 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.013465129 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.185750036 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.943939026 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.195193918 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.205203139 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.627444476 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9555836 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.03071977 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.62130205 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.04451538 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.930957436 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.166275665 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.690008926 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.157793306 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.954299562 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.882215134 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.933467106 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.14445363 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.931944249 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.849289471 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164656093 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.653159189 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.039443303 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.235089993 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004108485 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.841270173 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.980098019 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.024719847 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942882408 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011166048 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941826006 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.943038078 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.943458368 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978978547 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.854424727 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.059376436 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.945331603 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025953494 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.075990522 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.458099424 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.937108769 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201608619 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287637413 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.253111171 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991771082 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.932459876 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.938208734 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.866204605 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080941499 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.15821416 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.20663079 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.063688025 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.049941057 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957970082 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.61031389 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.13562226 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176431914 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.20797825 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.828605376 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.431892841 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.97647173 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.934225689 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944381401 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.143746985 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.139050042 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227045534 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.086037564 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.003718418 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.301867045 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.20818968 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.934289981 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.934308798 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.526216295 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.056507389 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.608934618 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.974013312 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.890830777 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213471917 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944637147 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.312033611 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.955950569 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.090668979 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.70765101 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.698768711 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.224112895 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.919052937 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.997389232 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.202710599 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.313522284 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247094937 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002299624 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946176312 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.044677615 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082512331 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.827908683 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.936140054 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.93514348 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.98520477 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.645118441 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.945353799 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208591847 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246986031 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.932596084 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.842597214 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960434673 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.945316479 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.160696674 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.193417197 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.188635622 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945980372 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.941836702 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.752133998 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.205437352 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.994199939 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.870289215 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.941067204 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034872874 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.183701662 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.955680798 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.388717248 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.647610547 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204678908 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.936046095 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957610133 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.085816823 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.299762082 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256210433 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.472347938 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147212839 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.523451296 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.531582919 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.240752662 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.941193633 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.081453065 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.243111465 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.940537448 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.005092939 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977550652 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.201295492 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.248205806 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.002283916 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.643535897 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.907576629 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.281152659 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.50943267 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.87561031 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.948383517 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.997064654 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.938495591 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.066797223 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949874399 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.84661899 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.087239541 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.723735292 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211476113 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.943823082 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.924445605 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.679393879 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.220403181 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976835758 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08040097 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.940960026 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.613089351 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.289175615 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.195534968 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.013288251 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.949065206 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.943288787 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.939340299 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.925384716 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.134656287 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.137693967 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207176918 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.040416152 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.979207068 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.943932707 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.156371113 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.151765768 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.834347321 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.081711765 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.010567678 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.984216438 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.846995906 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.442292541 seconds)
  done (took 1701.666488136 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.961042503 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.002486277 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.985054367 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.993222407 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.981504251 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.982648152 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.985294955 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.951517874 seconds)
  done (took 57.719216161 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.942223352 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.160768536 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.951996346 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.943520242 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.952005035 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.950656303 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.112729314 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.964266393 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.952698461 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.953953676 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.944594343 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.950929551 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.253937736 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.966118177 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.961071102 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.928104718 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.951284541 seconds)
  done (took 75.725222918 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.944459811 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.167978012 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.958880069 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.959146014 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.927385846 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.950017147 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.725881547 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.969177827 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.946630082 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.062701106 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.576916714 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.948767066 seconds)
  done (took 88.017442855 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.953348229 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.950363187 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.949737824 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.949949316 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.951380308 seconds)
  done (took 11.635396851 seconds)
done (took 2216.441332438 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.1977245 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.159171829 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.177244685 seconds)
  done (took 6.214889047 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.094696755 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.142931989 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.261151479 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.26887839 seconds)
  done (took 10.651307691 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.230495478 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.331433629 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.159995683 seconds)
  done (took 8.602444431 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.348156669 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.953955492 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.057915963 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.944227657 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.94553046 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.945165948 seconds)
  done (took 22.717062868 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.948309649 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.951184485 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.948634009 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.95147017 seconds)
  done (took 9.679997792 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.929929833 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.734965222 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.930495807 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.945648088 seconds)
  done (took 21.421779051 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.697825236 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.708882557 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.6927683 seconds)
  done (took 9.980967617 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.581045597 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.871128084 seconds)
  done (took 9.3332548 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.211528921 seconds)
  done (took 4.093429294 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.080054443 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.212680436 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.416571462 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.454054074 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.529642425 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.8221172 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.259650092 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.194069388 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.340806054 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.385161011 seconds)
  done (took 25.576247065 seconds)
done (took 143.708342027 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.324417642 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.187611166 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.14707588 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.282619946 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.169259604 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.147462417 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.168282369 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.263648304 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.79017053 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.789837223 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.2813228 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.168352583 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.121050314 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.185475741 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.121071981 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.186271583 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.167881547 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.339531206 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.977633413 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.178848669 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.170428323 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.920502607 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.12764083 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.93363214 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.16880232 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.097183915 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.513587603 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.18809213 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.131951182 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.518697153 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.098780986 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.330852044 seconds)
  done (took 175.081255341 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.859263599 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.949862206 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.950324946 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.957271301 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.551036901 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.951243654 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.950736967 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.950289891 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.117752214 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.10534574 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.950122044 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.525841201 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.950276245 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.950550228 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.956361267 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.949789033 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.277896819 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.945755241 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.970425857 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.97465077 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.978697039 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.543449844 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.974726461 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.611247893 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.2932106 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.971408056 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.952497025 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.976858882 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.957285145 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.967924258 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.973567346 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.952011467 seconds)
  done (took 211.833312281 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.950218278 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.959677613 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.96231381 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.951678764 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.95837772 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.959664283 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.952235097 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.951395251 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.719030818 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.711285947 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.959379561 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.959784971 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.962544275 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.952212775 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.964345808 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.95172663 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.968104204 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.968835417 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.963035195 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.964591522 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.967138136 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.765966772 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.971005425 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.74377969 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.988724952 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.965413517 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.953200062 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.968114859 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.972712319 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.974477771 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.976075486 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.952833781 seconds)
  done (took 223.802746874 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.147197835 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.95851795 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.959186498 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.890926598 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.959200908 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.958936776 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.957358516 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.1476149 seconds)
  done (took 19.891370008 seconds)
done (took 632.502133665 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.436911333 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.275957716 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.139151884 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.982543686 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.229390146 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.019920353 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.97912541 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.041361721 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.698668632 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.049685172 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.665551994 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.996330581 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.761245512 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.000769033 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.10274351 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.036678318 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.52465899 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.612714656 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.157543854 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.050249272 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.15533639 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.940018695 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.052082919 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.732390802 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.787708352 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.978469759 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.145206375 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.528302652 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.988367091 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.142287523 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.722069713 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.354047425 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.991374312 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.978038124 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.029918044 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.012997506 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.317547175 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.990297801 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.106723221 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.748276873 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.035022023 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.589332907 seconds)
  done (took 106.976616566 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.949861839 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.948796723 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.947543572 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.950060624 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.950144665 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.950321971 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.948020001 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.949034218 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.950725392 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.949209156 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.949128329 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.949892911 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.948785629 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.95062507 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.948326995 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.949300028 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.950546205 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.951670002 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.949025972 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.947663291 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.950525421 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.94829985 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.950684665 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.948878804 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.951001478 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.95051025 seconds)
  done (took 52.591797562 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.963450744 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.107449242 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.187690633 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.982237282 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.963556568 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.966421331 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.982431761 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.968218741 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.966177832 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.966534775 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.059264269 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.969313058 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.983621158 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.187847839 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.979488858 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.963598749 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.964430668 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.964482481 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.114239943 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.980272962 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.984790711 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.967542615 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.982795156 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.977636255 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.96671593 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.96441589 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.968044561 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.399289351 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.973009643 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.060539737 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.006900577 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.987834965 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.355980023 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.19551572 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.016576235 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.971668836 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.963158314 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.063566413 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.971499299 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.964613986 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.983295765 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.969644176 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.186707929 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.464097242 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.979453323 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.965256796 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.413213441 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.073013292 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.005811467 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.979435102 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.19070898 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.981652164 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.966044531 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.96772249 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.01287207 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.978281572 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.966689592 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.27707285 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.97802665 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.985384047 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.97074763 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.967619888 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.121105902 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.973695416 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.111027871 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.974827752 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.973244842 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.967403043 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.187764446 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.981769717 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.462405876 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.979587523 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.966363076 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.060813083 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.11356775 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.438339973 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.980170596 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.125362985 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.372200168 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.990991185 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.974041454 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.390664853 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.994072557 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.973419183 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.967295203 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.967580876 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.966163672 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.0096163 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.98303565 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.409874758 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.468130907 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.289221028 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.994395282 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.984014742 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.968624605 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.277924528 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.974852982 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.967542419 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.18355024 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.480606461 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.981152742 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.977409323 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.451519855 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.983148407 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.988229558 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.977660428 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.192909231 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.982672172 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.010955686 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.967691121 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.976067229 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.972420574 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.988692542 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.976734115 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.968278845 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.443077997 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.081176422 seconds)
  done (took 243.047502603 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.963430835 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.963964932 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.962351807 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.964500822 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.96317742 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.96947336 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.962791132 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.964005839 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.9697561 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.963269662 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.963845954 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.965217891 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.96547358 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.970238321 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.016952782 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.969863463 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.574018513 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.963612261 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.963568339 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.964557827 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.611895574 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.971412636 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.964224199 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.96464094 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.965623637 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.967243559 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.969386554 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.998061134 seconds)
  done (took 170.276549747 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.969285012 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.085691839 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.984036943 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.998947604 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.976502261 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.967319272 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.994312949 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.987178144 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.97528714 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.967591566 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.967363159 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.03032561 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.982588536 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.066488433 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.001237232 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.998702908 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.072221649 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.977126371 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.968151763 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.96869119 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.9993778 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.96393243 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.031578354 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.098383677 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.984821531 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.085487524 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.972527714 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.971036926 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.972216459 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.087238767 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.981794782 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.029458526 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.999516616 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.988966092 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.090720833 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.08276732 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.073603955 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.998249127 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.975466901 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.969785946 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.969157032 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.960387594 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.086880239 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.98600527 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.973709705 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.077453908 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.985056438 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.97272015 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.980593708 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.969602094 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.985981111 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.990131445 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.037410764 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.102585149 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.001388898 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.997064265 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.997841934 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.256634077 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.982848195 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.07048363 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.96512736 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.087050427 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.987634629 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.960833871 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.97209306 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.977193107 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.000700297 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.002412994 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.077242282 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.980347825 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.071239905 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.004860711 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.977778833 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.971484987 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.97420426 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.089691769 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.085090505 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.00545795 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.010764193 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.003054419 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.968090628 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.97396876 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.96269031 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.992083908 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.975618187 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.088914929 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.08587244 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.979420629 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.974694255 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.974734516 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.975709176 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.000139152 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.095477576 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.004696585 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.067690928 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.04033657 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.045945678 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.985046417 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.986468505 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.97613649 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.03795205 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.985615713 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.985517777 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.305825922 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.047537201 seconds)
  done (took 213.303284714 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.066489958 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.439910121 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 2.026671559 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.030315171 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.264572973 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.392213005 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.77997541 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 2.01994884 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.02198133 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.051875384 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.181783006 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.078662983 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.034648051 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.010338205 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.420829138 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.012361872 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.020811179 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.046012073 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.02565933 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.602793071 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.324375503 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.138368495 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.01901699 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.192089987 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.999737265 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.304220145 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.340652336 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.401424281 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.057588929 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.362999665 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.351778961 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.704469891 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.228832425 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.262078519 seconds)
  done (took 78.125610262 seconds)
done (took 866.20808623 seconds)
SAVING RESULT...
DONE!
