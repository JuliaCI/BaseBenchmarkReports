cset: moving following pidspec: 32027
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.546293722 seconds)
loading group "shootout"... done (took 1.139056295 seconds)
loading group "string"... done (took 0.456087693 seconds)
loading group "linalg"... done (took 7.606058763 seconds)
loading group "parallel"... done (took 0.147884717 seconds)
loading group "find"... done (took 1.427056237 seconds)
loading group "tuple"... done (took 1.848315606 seconds)
loading group "union"... done (took 12.317765827 seconds)
loading group "dates"... done (took 1.252877737 seconds)
loading group "micro"... done (took 0.19260808 seconds)
loading group "simd"... done (took 4.147140728 seconds)
loading group "io"... done (took 0.995744957 seconds)
loading group "random"... done (took 8.254853732 seconds)
loading group "problem"... done (took 1.523407571 seconds)
loading group "array"... done (took 18.482546645 seconds)
loading group "misc"... done (took 1.437338001 seconds)
loading group "scalar"... done (took 37.788428436 seconds)
loading group "sort"... done (took 2.88818385 seconds)
loading group "sparse"... done (took 11.293948219 seconds)
loading group "collection"... done (took 16.689862256 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.484793102 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122934219 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.126001533 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.115002394 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.142136718 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117010595 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121508566 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083220658 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.878417434 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.14005908 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.111075207 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.431078285 seconds)
done (took 5.177453183 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.161173588 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08576571 seconds)
    (2/2) benchmarking "String"...
    done (took 0.076111798 seconds)
  done (took 1.255295899 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.062331191 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.124375861 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.063550704 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.063406145 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.063202102 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.062969615 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06219783 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.062649129 seconds)
  done (took 1.596653003 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.068687175 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.064306357 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.062044345 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.064530815 seconds)
  done (took 1.354077014 seconds)
done (took 5.537076281 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.233320109 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.098954571 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.282595713 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.389282596 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.450387602 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.087665036 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.070733433 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.066104472 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.124759557 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.341848482 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104427588 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.179614889 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.086996896 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.175054995 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.974296468 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.1159344 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081546375 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.119617575 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089010822 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127946304 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.410162646 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.074301284 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.071134849 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.066433954 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.064501225 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.642401328 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.658780637 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.12686009 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079601539 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.099587637 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.113028338 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.642409669 seconds)
  done (took 10.381701365 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.091327026 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.08984117 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.064830989 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.120851742 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.089852399 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.066496836 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071901362 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.064426362 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087809953 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.120894363 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.08669128 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.09758542 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.062450964 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06552892 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.07258152 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.19420693 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.076385126 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.077145867 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.064692201 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076727443 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.103807269 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.074617813 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.075532405 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076021286 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.124649816 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.16455855 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.093060079 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.094148101 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.062982205 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.078037081 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.111422561 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124136163 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.062499909 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06257575 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.117488029 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.091099881 seconds)
  done (took 4.401381709 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.941426635 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.087276917 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.101183848 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.611658069 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.062677478 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.149813187 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.241497333 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069554915 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.361152592 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.142348069 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.137040872 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.143136831 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.110533579 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.06660908 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.233299509 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.112402089 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.393080957 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.064769492 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.063726478 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.061652746 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.065695084 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064836985 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.060198837 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067380531 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.088481499 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.083400344 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.172691171 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.938749859 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.25018511 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.06475654 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.156493069 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.082844363 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.356657965 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.066912748 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.080681104 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.394150736 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.120548149 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.062508559 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.166903724 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.112996663 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066590969 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.112562885 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.075982203 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.06626437 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.066279993 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.065651221 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068993167 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.079029545 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.098801709 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.064622451 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.062256228 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.160455358 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.061895363 seconds)
    (53/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.064521961 seconds)
    (54/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.065273701 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.147660846 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063848899 seconds)
    (57/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.141660784 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06189443 seconds)
    (59/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.065315204 seconds)
    (60/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.094020445 seconds)
    (61/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.065397705 seconds)
    (62/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.089602263 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.10490931 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.335993391 seconds)
    (65/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.013193579 seconds)
    (66/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.065037287 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.924990248 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075448704 seconds)
    (69/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.063255286 seconds)
    (70/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.069489331 seconds)
    (71/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06374335 seconds)
    (72/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.064807005 seconds)
    (73/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064489926 seconds)
    (74/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.072366715 seconds)
    (75/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.066858927 seconds)
    (76/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.065205676 seconds)
    (77/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.106856908 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.063585026 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.083539526 seconds)
    (80/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.06642811 seconds)
    (81/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.064086836 seconds)
    (82/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.069601885 seconds)
    (83/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.096630864 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06288574 seconds)
    (85/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.463804762 seconds)
    (86/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.096276751 seconds)
    (87/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.063805329 seconds)
    (88/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.075107315 seconds)
    (89/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.102808213 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.062002955 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064540607 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.07118031 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.064845272 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.169803844 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063634271 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.065668462 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068335971 seconds)
    (98/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.091086311 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.061545762 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.061312746 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.067074323 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.110364081 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.018746882 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.066751827 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064286316 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.070564515 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068510517 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067063893 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063747227 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067874029 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.065773741 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.062993131 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.113582621 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.063744806 seconds)
  done (took 21.13887205 seconds)
done (took 37.957296686 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.250976548 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081108995 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081270736 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.081708778 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081743408 seconds)
  done (took 1.76568378 seconds)
done (took 2.937079848 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.105248903 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.06132931 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.098514139 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.097496801 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.064444957 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.061661386 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.095187143 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.06136432 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.094763042 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.097651386 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.100253928 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.098828208 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.062385377 seconds)
  done (took 2.28699697 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.067240643 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.078541596 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.080968612 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060235895 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.070608009 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.07949605 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060085747 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.078766044 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.085996414 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.079268666 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.079194527 seconds)
  done (took 1.988941882 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.067133656 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080180941 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.084706072 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060234361 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071374948 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.079679932 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060737669 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.079795305 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.08374913 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.079822863 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.079658596 seconds)
  done (took 1.986345535 seconds)
done (took 7.424255299 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.06734156 seconds)
  done (took 1.216506448 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.531835886 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.737048316 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.069273082 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.089364349 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.187417343 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.103308482 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.239889494 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.07445414 seconds)
  done (took 8.36217386 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.093496846 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.066934581 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067708772 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068318272 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073006099 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068033709 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.068781134 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.068216156 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.067185122 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.068145772 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.068852223 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.067361847 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068064432 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068112396 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.066973387 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068851643 seconds)
  done (took 2.363841764 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096776089 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095888833 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072266281 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074117536 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071237237 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070479125 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073314591 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072509285 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069329116 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071188758 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074147462 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072523532 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071814212 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.07563354 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.069023702 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07077531 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.065780782 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.069442759 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.069757883 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.071181956 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.069811825 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.059865657 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.068043652 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.069696855 seconds)
  done (took 3.014017111 seconds)
done (took 16.117017317 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109111651 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072643411 seconds)
  done (took 1.349402122 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.067445235 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.06905561 seconds)
  done (took 1.321845099 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.074732871 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.057892317 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.081351661 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.069702433 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.058239979 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.057780879 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.079079768 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.058059995 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.058096383 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.058143097 seconds)
  done (took 1.839090425 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.060471778 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.067809944 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.065275997 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.067403359 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.064990704 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.05955464 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.062756271 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.05955311 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.068119128 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.058538359 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.064147981 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.078601286 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.063701519 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.080222828 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.062696556 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.064219499 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.066370495 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.062797557 seconds)
  done (took 2.365793864 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.058368475 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.058863848 seconds)
  done (took 1.308894099 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.062625359 seconds)
    (2/7) benchmarking "second"...
    done (took 0.059477758 seconds)
    (3/7) benchmarking "month"...
    done (took 0.062273186 seconds)
    (4/7) benchmarking "year"...
    done (took 0.062033572 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.058834195 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.058523375 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.05925904 seconds)
  done (took 1.61004822 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.340928032 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11419487 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.30490992 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.064902627 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.074809739 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.239066235 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.059417786 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.064314528 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.064365199 seconds)
  done (took 2.555735337 seconds)
done (took 13.545209291 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.075790075 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.078711262 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.085522758 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.411987306 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.0873966 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.062795591 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.108752073 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.162184478 seconds)
done (took 2.274082868 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.205731978 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.431014218 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.940412619 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.06230382 seconds)
  done (took 3.626100166 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.315786611 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.079805461 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073479931 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.062232374 seconds)
  done (took 1.733721696 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.060826734 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067438942 seconds)
  done (took 1.327539229 seconds)
done (took 8.094796512 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060318224 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.059733399 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.085234034 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.060054084 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06022226 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.060158635 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.060058314 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.059610333 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.059564499 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.059455906 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.05977706 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059858264 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064728752 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.059610818 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.059731035 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059829519 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.059965998 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060050385 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.059781339 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.059589564 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.059878751 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.059802201 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.059817001 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.059653136 seconds)
  done (took 2.692722986 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.077152226 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.061853636 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.063405544 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.064204397 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.064042284 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.063564558 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.063441172 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.061741292 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.063384845 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.061763177 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063733687 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.063773465 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.061462627 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.063647876 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061767627 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.063602989 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.063169249 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062131552 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061239671 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.063632215 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.063445503 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061750071 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.063590974 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062993561 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.063585437 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063572788 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.061859194 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06199274 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06381925 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.063781763 seconds)
  done (took 3.11327044 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06078709 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.056233551 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.057918233 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.065127541 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.056418762 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.05762419 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.057286339 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.056137147 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.05722727 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.058521447 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.057562706 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.056289801 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.057779002 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.056729675 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.056580699 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.057029688 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.060269421 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.073747409 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.056559228 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.056097318 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.060478446 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.056686131 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.056400298 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.056701056 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.057707765 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.056383503 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.056270233 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.056934489 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.056330859 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.057645596 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.056419579 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.060267338 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.060800355 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.056570182 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.065440923 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.060460229 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.056401621 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.059968998 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.05842327 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.056174562 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.056511807 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.056533986 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.056670751 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.056430468 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.06508775 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.057294883 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.057681637 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.057060952 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.056660649 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.056601446 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.056412159 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.058706293 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.061505904 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.058365173 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.056261601 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.057662712 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.056126451 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.057144542 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.056175466 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.056084682 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.056225073 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.059150919 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.058355509 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.057126544 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.073780751 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.05823617 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.064980287 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.056387966 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060283218 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.059713215 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.057260009 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07180901 seconds)
  done (took 5.431140369 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084206923 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085499806 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.061865615 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.061614009 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.057459292 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.057334506 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.065299572 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.057731915 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061656949 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075988195 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.057598216 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.060988199 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061273993 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.061217814 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.057614836 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.061826107 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.065537701 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.057491602 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.057232278 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.060798396 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.057453623 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06482064 seconds)
  done (took 2.618304834 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.136204811 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062918068 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.099555268 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073817605 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065531521 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073834457 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.062800254 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063064645 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062994148 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063625688 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063165175 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063121865 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065679268 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063441169 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063526832 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063534019 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063682829 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063308507 seconds)
  done (took 2.489818345 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.074300592 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06295345 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08469353 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062692248 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06241464 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061993705 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066873803 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.067717772 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.062165444 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.062611279 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.067732356 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061907653 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.061917357 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06222049 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062265271 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.062107784 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06207447 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062960823 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067541864 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066319041 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.066473637 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067366356 seconds)
  done (took 2.656765203 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072610279 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.061752856 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074437468 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063619731 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057149492 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057087866 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.064097674 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062823058 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.062894005 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.061429692 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061807902 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.057764003 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.063115129 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.061628997 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.063805599 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061630606 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06133473 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.061373872 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061608821 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057050895 seconds)
  done (took 2.469457967 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082965315 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060635786 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060329122 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078223827 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060046563 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.060335093 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07782329 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.060276586 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.060280268 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081509501 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060568268 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060418113 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077941339 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078473157 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.059875399 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078192707 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07813217 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078436721 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.060038016 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060006509 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081501195 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.060512114 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078058105 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060776749 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060478848 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06012654 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060497754 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078316228 seconds)
  done (took 3.134911022 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.05984794 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069174782 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.060220712 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.059831842 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.060440189 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.059589644 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.059531728 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.059695836 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.05972803 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.060316257 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.059651153 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.059680394 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059936101 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.059507227 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.059606959 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.059519335 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060046755 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.060675669 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060318955 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060257595 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.059678142 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059590787 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.059670465 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.060079985 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.05959272 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.059781468 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060054876 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06021471 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.05964985 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.060099457 seconds)
  done (took 3.03164311 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.070341412 seconds)
    (2/2) benchmarking "in"...
    done (took 0.068190273 seconds)
  done (took 1.364075651 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.059344449 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073461445 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.056856471 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066733589 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.065774086 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.060164453 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.066778496 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065589774 seconds)
  done (took 1.735678575 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.06495847 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.086211552 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.058869655 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.059874734 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.062496319 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.116013006 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.072227559 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.067992461 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073271416 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.059734018 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.059465353 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.070786081 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.05860233 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.069202899 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060871656 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066368512 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065556509 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069646635 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.068979742 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.057017678 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071265653 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061772908 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.057272078 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.05992817 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.05891115 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.064201836 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.072311442 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.068314698 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.065924048 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.056348021 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.079018995 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.057418433 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.058647099 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066023739 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.06243613 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.057472848 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092347816 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.05810072 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.0638699 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.057413832 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.068666784 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078449963 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.069794524 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.074850139 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.059325073 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.060001682 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.056991991 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.059413289 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.060357585 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.066362623 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.057349035 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063518025 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.05685269 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.059351433 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.066753289 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.057746529 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.064102994 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.065571102 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071654832 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.066813397 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.064450082 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071093013 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.065033243 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.067111366 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.058363777 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075540142 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.059148913 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.068227927 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070167953 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.059034063 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07069692 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.057351511 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.056468143 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.057706872 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088901961 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.058671705 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.058738453 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.057005445 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.057061322 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.058593954 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.065543901 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063719876 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063161837 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061408405 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073002373 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.066794844 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.057467553 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.066225078 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.073931598 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.05983994 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.057451912 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.072181168 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.059346719 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.056674258 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.073392983 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.065103245 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.059084584 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.059076177 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.060018462 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.069853386 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.058547497 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.055694453 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064426476 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.059028138 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.060152581 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.062543015 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063389264 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.056638244 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066119049 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.062693261 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.059026532 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.055604151 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.060072363 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.05735374 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.054749367 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.063905447 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.056072351 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.0698505 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.062157253 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.068385064 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070119363 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.064768753 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071788559 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.056184884 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.183490542 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.07701177 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.067127713 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.059807869 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076642847 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.0586278 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.067319255 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.057285592 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.059776811 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.065893381 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.056897035 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059725606 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.058337126 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.064955035 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.060539077 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059925308 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.061250407 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.064920253 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.06897456 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.059317837 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.065159042 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.058485993 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.071016833 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.066362896 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.061531257 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062958275 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.058905806 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.070136607 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.063588806 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067065943 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.057731349 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.058789927 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.057942562 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.067748666 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.066037719 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.060278417 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.067972306 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.061184743 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.058952175 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.058758017 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.061183913 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061803591 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063552522 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.059777363 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065321635 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068009666 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.07256754 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069679425 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.065124258 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.057748415 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.057378961 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.059511635 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.056882587 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.061769211 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.066400023 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071064968 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.068164994 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076375323 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.057769684 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.066268289 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.059486049 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.072973449 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.068488586 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.058550968 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063292806 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.056311505 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.059636163 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.066076648 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.067705878 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.07055163 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070706368 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06204767 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.060765048 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.057430569 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070552302 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.057982974 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06458601 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.06727785 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.063424509 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.057873237 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.059545778 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.065640197 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.060918711 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.05763382 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.072729572 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.065226728 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.057238576 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.069758096 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.058014199 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.067195862 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.056988411 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.059658531 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.061218934 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.059532389 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.065446062 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074095138 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.056005366 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.05828149 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074043203 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.059144231 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.058814484 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.063724974 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.071216556 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06171866 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.063708011 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066418821 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.065150668 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.060624284 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.065107551 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.057864299 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.066520389 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.060876579 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.067136905 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.056835255 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.073687753 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.055548689 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.069831042 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.057328237 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.066630207 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.057893709 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0645905 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.057308561 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.071737874 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.058775275 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.057308346 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.067646712 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.055582912 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.065679358 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.187114367 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064707558 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066105902 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.070101859 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.062355472 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067562617 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.061726171 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.06719269 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.063438602 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067294085 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.069458529 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.063044023 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.059236522 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068068719 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069667849 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.066179362 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.061599848 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.061856356 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.060577079 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.06903187 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.061534012 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.061077884 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067793863 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.063730622 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.063908768 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061779215 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.06233053 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.061315914 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068948581 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067544349 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076562006 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065767555 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065432002 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069188694 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058717503 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076639222 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.059712998 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065279339 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.058510094 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.068280827 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069411916 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.058770989 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075622805 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.060972579 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.065712026 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071801723 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065974245 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.061407046 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076498976 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.063438449 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067370248 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.065795846 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.061848661 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.064173747 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.061311134 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066664807 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068412627 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.067205526 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.058605465 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.063752382 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065285216 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059818703 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.068111101 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.059898041 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065220787 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.059622905 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.056495742 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.061978247 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.067820104 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.061140195 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.061839549 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.057695333 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.056336339 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.058046754 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.066751657 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06208869 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.064889814 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071193531 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.056339004 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.058504232 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.057370421 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063007945 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.074075073 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.066427993 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064430344 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.062391831 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.056579766 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.059465142 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.059811316 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.057567266 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.061877924 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.056722713 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.057159314 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066674229 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.059767235 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.060959065 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057787717 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.058794326 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.065583481 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.063099095 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.057966817 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.062676864 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.057885981 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.061057074 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.056873784 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.059036737 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.060755239 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.056818823 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.059710711 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.066212545 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.071746907 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.062237668 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.064143961 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.059440929 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.0635019 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071598788 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.065453343 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058782024 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.064641212 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.055954748 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075967641 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.064320325 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06359067 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.064595698 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.058272448 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07115836 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.059482383 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.06481123 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.07266107 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.057784716 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.200540406 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.05874361 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.076260759 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.062693589 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.057773654 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.065777738 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064119703 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.062955949 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.069774772 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.058777726 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.065440287 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064656712 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.0611654 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.060340897 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.060001881 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.065185712 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.072214672 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.05887688 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.064355029 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.064470397 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065560661 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.062133534 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.068747181 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.065217953 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.05977331 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.060543841 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.060754269 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.05954475 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.069981372 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059871874 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.063943559 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.062812914 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.058809873 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064500242 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073763249 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067556316 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066716558 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.057459105 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.058047462 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.076028551 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.060338894 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.061999428 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.065510755 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.065995444 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069442383 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067086021 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.073240851 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.058505495 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.062947599 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068674961 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.05839674 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.057564371 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.060356716 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.059296289 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.065831161 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.066669603 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.063685146 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061944023 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.063234465 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069073552 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.059239771 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.061163196 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.06466984 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.058751511 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.066349794 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.064545952 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.064819178 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.05954157 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.057489006 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.060241582 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.06660528 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.063664005 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.066978947 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058875729 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.06696661 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.070500554 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.063680391 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.0621846 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.057551438 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06214131 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.065282727 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.063626197 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.057642221 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.061673712 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.060092402 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.066631547 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066772997 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.061201106 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.05744423 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072772902 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.065009608 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.065411075 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.059825229 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.05995825 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.057807526 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.057059894 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067729621 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.057234766 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.059372705 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.062283962 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.059802125 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.073482974 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.065116402 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.075024337 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.05909239 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.060893735 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.056790666 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06519224 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.061127199 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.057465475 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.066063484 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.056943803 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073948884 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.067583273 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.066347774 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.056731138 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.060644846 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.064468072 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07139437 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.065635336 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.065734629 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.060430684 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.064602814 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.058124536 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.06555726 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.055907458 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.05498541 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.064656925 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.063014893 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.204239126 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059726558 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.069040461 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.062951188 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066778345 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.066876253 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.061911142 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061621265 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.062228834 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067802573 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.063582584 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068109966 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.063302204 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076396406 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.061282907 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.06929772 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067183884 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.069333262 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071780449 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071526364 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.066942369 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.060074493 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06561998 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.066737182 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.060819343 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.062885629 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.063667712 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.083503194 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.061364157 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.061380514 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073336071 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.069294079 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.059361467 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.069069106 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.062905762 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.068776018 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.06064378 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.068953742 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.065163107 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.060239522 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.063312693 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.063279741 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.058078856 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059466451 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.059176455 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067819911 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.06301995 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.059084243 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.076645869 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.061267121 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06638665 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069184004 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.064699589 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.061045143 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.057798748 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.061692433 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069939889 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07282438 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.061638321 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065992726 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.061171746 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068186464 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.058070434 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066784022 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.065950455 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066159583 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.058802247 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059338417 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072292502 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072985712 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.062608776 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.067844781 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.066367285 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.059895775 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.080948804 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.066122886 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059170944 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.067670789 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060946546 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.05784286 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.057342041 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.062015423 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.068435545 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.057669451 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.061016445 seconds)
  done (took 39.844295029 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.097910123 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059014828 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.057922236 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058364677 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071545494 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060214109 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059063274 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060068663 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.060322678 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062379843 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058846512 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059075171 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071640442 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074987129 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070441477 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063747026 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058892485 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059909269 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058924017 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060011445 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070323512 seconds)
  done (took 2.687733606 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.066738099 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.07412845 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070429347 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075083246 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066139786 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062735015 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071415326 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063456635 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070791603 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06847944 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071125113 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062900746 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.06789091 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068029804 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067809922 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062796427 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071779357 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067851495 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.064809862 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071634018 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064874217 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071637005 seconds)
  done (took 2.811270902 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.059762038 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.058970104 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.065447841 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.057340523 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.057139702 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.062411777 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.05853381 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.061440309 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.061877484 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.061630426 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066097136 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.059109702 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.058511243 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.063090178 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.057930552 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.059334925 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.102206176 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.059036261 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.059796435 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.058370049 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.063964107 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06759251 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.05715737 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.057427837 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.060156895 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06134531 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.057337134 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.060430282 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.058156393 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06104626 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.058178534 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.056836216 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.064778495 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066367606 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.060979453 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.060687121 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.05956022 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.058068255 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.057310534 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.057093327 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065462548 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.058764415 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.057642498 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.059543907 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066672084 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.057955505 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.05675496 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.065072923 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.056762114 seconds)
  done (took 4.310691119 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.071961192 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.106855088 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.063140285 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087067585 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.071866035 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.065576651 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.063093838 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088342349 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.059427895 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.060314426 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.073506934 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.073273123 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061580147 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.063146074 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.064694961 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061059404 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061826923 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060292071 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.064853998 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.060950297 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.064828364 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.065154212 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.072058841 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.072428694 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.062306261 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060437497 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06102045 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.062838871 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.072388119 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.065508878 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.063016258 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063966188 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.072498009 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.062816621 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.060965404 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.060835894 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.073235096 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.061428577 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.061047826 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.059353412 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.060567871 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.062897753 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.06442105 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.073651176 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061580056 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.064823311 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061362721 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.058557034 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.073067905 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.061081753 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.066057469 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.074048129 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.062665768 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.061712367 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06373431 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.072511435 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06153412 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.059834734 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.062093332 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.072172945 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.059336101 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.062470627 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.074299723 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.062296237 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.067310819 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.075312612 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.067121558 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064210923 seconds)
  done (took 5.957380564 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0679866 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.088010949 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070185592 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069488698 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070683416 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070810075 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070421198 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070683402 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07016579 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07124266 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070356565 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107558026 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.064012299 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07555188 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.068565322 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068790607 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.068300897 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068187146 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068510016 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068349996 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.068395165 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069240938 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06892221 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070102275 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073880625 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06539935 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068065181 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.068697347 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069402406 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.068069157 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.072146522 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.068801633 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.068634869 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069525998 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.072164153 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.068574426 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.058242313 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068187031 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.068346445 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068546696 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063962676 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069100537 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068498452 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.064445769 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069488555 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.068449382 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069477656 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.072349622 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078133818 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.06963979 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.068958617 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069515849 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068521564 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068713636 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069954668 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.078196781 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069362561 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069597374 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068890522 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.069507109 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070111675 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.07770814 seconds)
  done (took 5.708612366 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074778476 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0664477 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.078636485 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.059837074 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.057743524 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06754005 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.057196628 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.057512205 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065947707 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.06614936 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067981271 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067582838 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070130743 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067931106 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067972102 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070255607 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06771948 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067724485 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065759817 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067267561 seconds)
  done (took 2.671271482 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.069935976 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.075321952 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.063722948 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067699259 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.063061445 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067308868 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.062470971 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063689527 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06361641 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063447295 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069280052 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068976809 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06356445 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067726253 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068897522 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067554315 seconds)
  done (took 2.394017546 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.064105525 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.067096745 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.066035475 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.05916695 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.062595258 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.058315051 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.05918175 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.057325988 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.058281474 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.071798488 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.058896361 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070213314 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.059101755 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.057646215 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.058213561 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.064423063 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.058301278 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.058786288 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.058854657 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.064411257 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.065492713 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.060155155 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.062446098 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.059050907 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064283574 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.065936543 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.060521869 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.061970451 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.058694408 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.05928282 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.06429053 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.065464989 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.058890535 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.059573639 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.057458972 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.05863621 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.059220508 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.059356346 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.064209967 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.058757712 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.057082048 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.063453115 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.059107437 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.059900634 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.05850284 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.059428085 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.057793243 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.064267844 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.059368842 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064044384 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.059098186 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.061161491 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.059326803 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.066431459 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.062123571 seconds)
  done (took 4.695756943 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073498949 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063262294 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057310373 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057309301 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06334403 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.063209894 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.062875039 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06298561 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064185307 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058316286 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064541 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.063152239 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063619022 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063566414 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063326774 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062954336 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.05684923 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.062284791 seconds)
  done (took 2.469171069 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.067932236 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062464849 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.06735567 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062401195 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.062498144 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062048206 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058207176 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.058145059 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.05800353 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.062041999 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062113004 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.061451576 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.057581313 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.0616465 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.061928117 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061890348 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.061482354 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.057682336 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062096105 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.057746573 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06169618 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.057559965 seconds)
  done (took 2.680618614 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.084460198 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.079726528 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.118320556 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.074869494 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082244668 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.067328024 seconds)
  done (took 1.841772463 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08674328 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100487768 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062628121 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.062734099 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073180726 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065865967 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065914487 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065862744 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07343079 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071574645 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065935768 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073443002 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073594969 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068278066 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073062012 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076560934 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066358321 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066295287 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06260664 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076650488 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066202554 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073127899 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066287177 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06568975 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065882589 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06831393 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094158395 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071364553 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068456731 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073080387 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076260467 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06618605 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073307069 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071559884 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06232359 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073218079 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065866854 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076658706 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073328032 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068439699 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062635427 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07349366 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073588969 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068386799 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0766123 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066255822 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068518227 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06598656 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066475514 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079989051 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073645939 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068499455 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074094908 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076811831 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076491739 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079504684 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071551211 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06830836 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073423388 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071749041 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068209829 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073276826 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068159043 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071452138 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076191973 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068554051 seconds)
  done (took 6.052373489 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095066292 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063307934 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06628004 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072069823 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069433254 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066354091 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067829918 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067069593 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066401562 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.063173102 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100467016 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06661079 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068826943 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068478074 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066650557 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066129789 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066074858 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068452442 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.062783112 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079761199 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06681735 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068605448 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06878926 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068666994 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071683837 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076467493 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066137851 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066081424 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065901614 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065943295 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068442642 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06623672 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068536519 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06235126 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068561551 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066288914 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065855744 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068304829 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065846259 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073130348 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06858448 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076428881 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066094693 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066139984 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071833753 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066106903 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065899572 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.062727282 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065966008 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.062883334 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07154503 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071551453 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071904831 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068963636 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066271071 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066502628 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066327934 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06632264 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066458036 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076655093 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068513152 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06612842 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079755885 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066389343 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066077439 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068494675 seconds)
  done (took 5.912138672 seconds)
done (took 121.974244061 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.205245898 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.18085952 seconds)
  done (took 1.711582226 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069223236 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.091870186 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.070583594 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.12922884 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.0663916 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100851246 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099397763 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.070973628 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065935605 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066129255 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066455301 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068708557 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131711747 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066549173 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066249981 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069127977 seconds)
  done (took 2.642929571 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099947719 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.175601378 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103678191 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06450638 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099796927 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.071847714 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064538253 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074810021 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.068389059 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067425689 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072083167 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07075486 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067297063 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070081222 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.068687904 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071750462 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067515252 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07185448 seconds)
  done (took 2.797560309 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.089204805 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.081521456 seconds)
  done (took 1.521371329 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.151694963 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.101222163 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.140096887 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.319992431 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.134895994 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.276533574 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.128107781 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126096866 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.107621153 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122366633 seconds)
  done (took 2.954111494 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097416568 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.161319084 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.294240692 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11372379 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.070985481 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.082297098 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.114978836 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076794791 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.076539676 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.075504059 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.075615709 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07518697 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.09297733 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072017927 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.071932729 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.072343504 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.096036977 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071135321 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.070951865 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.071601197 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.095378113 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065026198 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.071992226 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07075687 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.073326609 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.073498465 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066565616 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064753628 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.071751699 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.070785028 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.074204777 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.079436562 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.073529838 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.099752878 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069602993 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.100284796 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.070531075 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.069249688 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.070770985 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.069523122 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.072700689 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07289617 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073691 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.0722916 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065958618 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.070342353 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066578676 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06468327 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.075301484 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066242204 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.074607774 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.074049576 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.098845896 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066233032 seconds)
  done (took 5.821678408 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105806532 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106185396 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070240362 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112468383 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104268319 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068927139 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103916139 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096902522 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.105619596 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068441644 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066151599 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068086496 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078701059 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.078103271 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115133219 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107123185 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07109304 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068958254 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105935697 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105458881 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066353745 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099755494 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.094691143 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104713312 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.064862542 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06769513 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065569006 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.06811617 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.071504816 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.074003598 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067046068 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077348602 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.080466169 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073543466 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064947897 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065886639 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065919933 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.075989479 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075650205 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07440299 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07349202 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064973309 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065618982 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066952222 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.0678572 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064604718 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07455689 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.076347826 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.074132273 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067039633 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068006791 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06587797 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066980437 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075886693 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.073171592 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.07652188 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075436086 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065819524 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065933077 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070251394 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075692297 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075050364 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075219652 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068088868 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.074236753 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065872321 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075551392 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07906827 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065959182 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067826592 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065756227 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066338389 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066739752 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072241644 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.072647659 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067283048 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.066136699 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065696137 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.074911245 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072965745 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065323366 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.072313827 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064569764 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065880941 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067478766 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067062022 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07264735 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.075658067 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067361021 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065412239 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066061671 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065301125 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.064086678 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.071253796 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075089997 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.074220705 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.072869578 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066542562 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.073752868 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072478704 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066081438 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.073482068 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.064560841 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066451411 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065654304 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.072788618 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.071269022 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.204315272 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068177372 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066868049 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.074676043 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076626722 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067003588 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074374964 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07599166 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.074935254 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065505625 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080074902 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066858009 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075115911 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067409119 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075433697 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066968146 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075601897 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066588479 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06507171 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066383161 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.07524779 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068344308 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066957962 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067672845 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067012578 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.075231338 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077663183 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068871113 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073767628 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.074201415 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068896941 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074009953 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066197179 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07493744 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067208751 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067506369 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064868659 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076926024 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066259835 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06647646 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066742693 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075310347 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066902508 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075879823 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073642436 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065169773 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07609979 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075675979 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.072853427 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.076138032 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068680526 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066259319 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06571147 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066774363 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073025413 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075475528 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068283724 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066325279 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.073481101 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.074649404 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.064734014 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.073390711 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073424865 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.073530346 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066406862 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06628367 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076161236 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075480621 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.074695683 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.073568935 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074177404 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066288223 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073155335 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073686535 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066016881 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079859319 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066046013 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.079087386 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073971261 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072244863 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073877672 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.07562093 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.075650102 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.076293449 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.078796917 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065359896 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065266363 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.075230627 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066114222 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067161636 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.074233211 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068008144 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067718205 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.078748547 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066291008 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.074586351 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.064766203 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.074906099 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064403209 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06740901 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079045587 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065803915 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067198279 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074318069 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065075454 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.070950843 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.073321339 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.071465673 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064238214 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066352049 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.072875361 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.071786691 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064159782 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.063895527 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066718649 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.070746179 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.070135873 seconds)
  done (took 17.791383858 seconds)
done (took 36.603264569 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.203720291 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154070955 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.186356648 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.111956081 seconds)
  done (took 2.112383531 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.096558613 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.094286514 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.076053395 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06078993 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.081861582 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.061040543 seconds)
  done (took 1.867158948 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277305677 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.195877928 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172677097 seconds)
  done (took 2.037033944 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.210042761 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190841484 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.449153188 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.28282581 seconds)
  done (took 2.620682952 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.130056445 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.078085697 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.060300236 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.070940755 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.111963084 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.145766211 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.088581342 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.113120486 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.071157518 seconds)
  done (took 2.320196646 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.131019713 seconds)
done (took 12.516876212 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.494891525 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.092794759 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.109755215 seconds)
    (4/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.127123167 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.063812993 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073070023 seconds)
    (7/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.227173985 seconds)
    (8/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.161830199 seconds)
    (9/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071381429 seconds)
    (10/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.167441242 seconds)
    (11/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.18771342 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.076990995 seconds)
    (13/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.224716631 seconds)
    (14/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072067274 seconds)
    (15/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.16539634 seconds)
    (16/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.212845651 seconds)
    (17/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.072936073 seconds)
    (18/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.169190782 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.070512563 seconds)
    (20/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.172503868 seconds)
    (21/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.069315408 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.06985783 seconds)
    (23/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.083163995 seconds)
    (24/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066210013 seconds)
    (25/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.169591123 seconds)
    (26/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.214250302 seconds)
    (27/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.166489852 seconds)
    (28/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.069426363 seconds)
    (29/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.062056881 seconds)
    (30/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.070706369 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.072556465 seconds)
    (32/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.073985518 seconds)
    (33/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.172108829 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.159284401 seconds)
    (35/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.069428874 seconds)
    (36/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.172186693 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.156010998 seconds)
    (38/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.059899621 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.08196432 seconds)
    (40/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076215213 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.081036312 seconds)
    (42/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.184670857 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.083966164 seconds)
    (44/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.199602256 seconds)
    (45/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.189073333 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.064915125 seconds)
    (47/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.060207305 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.080702426 seconds)
    (49/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.074368197 seconds)
    (50/309) benchmarking ("sort", Bool, false)...
    done (took 0.147749544 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.167946977 seconds)
    (52/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.101998101 seconds)
    (53/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.171795733 seconds)
    (54/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.187157128 seconds)
    (55/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.073668757 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.08390514 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.114699003 seconds)
    (58/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.165256567 seconds)
    (59/309) benchmarking ("sort", Int64, false)...
    done (took 0.062110002 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.083253822 seconds)
    (61/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.151238063 seconds)
    (62/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.067409035 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.086114403 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071316382 seconds)
    (65/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.173071455 seconds)
    (66/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.072262774 seconds)
    (67/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.199118589 seconds)
    (68/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.060552104 seconds)
    (69/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.155055748 seconds)
    (70/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.060121442 seconds)
    (71/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.113854705 seconds)
    (72/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086491349 seconds)
    (73/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.069152387 seconds)
    (74/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.158888942 seconds)
    (75/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.083729814 seconds)
    (76/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.185835358 seconds)
    (77/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067726964 seconds)
    (78/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.068083005 seconds)
    (79/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.150834586 seconds)
    (80/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.213146724 seconds)
    (81/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.194560138 seconds)
    (82/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.156969605 seconds)
    (83/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07147009 seconds)
    (84/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.185412809 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136358091 seconds)
    (86/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.075140144 seconds)
    (87/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077731164 seconds)
    (88/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.073247088 seconds)
    (89/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.085745916 seconds)
    (90/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.062101849 seconds)
    (91/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.069118479 seconds)
    (92/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062369902 seconds)
    (93/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.157577459 seconds)
    (94/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.158535638 seconds)
    (95/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.135745421 seconds)
    (96/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.136572081 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.084530326 seconds)
    (98/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.070726168 seconds)
    (99/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.133587131 seconds)
    (100/309) benchmarking ("sort", BigInt, false)...
    done (took 0.23614371 seconds)
    (101/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067563907 seconds)
    (102/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067477612 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.118106267 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085157916 seconds)
    (105/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.065017996 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.131099013 seconds)
    (107/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.150576937 seconds)
    (108/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.061673174 seconds)
    (109/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.068082082 seconds)
    (110/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.072770724 seconds)
    (111/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.062318022 seconds)
    (112/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.073563584 seconds)
    (113/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.061624032 seconds)
    (114/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062385639 seconds)
    (115/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.060770859 seconds)
    (116/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.061240443 seconds)
    (117/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.066395921 seconds)
    (118/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070317253 seconds)
    (119/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.061900446 seconds)
    (120/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.181741288 seconds)
    (121/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.131797752 seconds)
    (122/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.060425188 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072334235 seconds)
    (124/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.063745117 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.112788268 seconds)
    (126/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.070655771 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.069591891 seconds)
    (128/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.071220587 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.112410496 seconds)
    (130/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078773748 seconds)
    (131/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.063040139 seconds)
    (132/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.132463115 seconds)
    (133/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.060368524 seconds)
    (134/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.069571222 seconds)
    (135/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.079388532 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06075221 seconds)
    (137/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070495206 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071449706 seconds)
    (139/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.062191088 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.060930892 seconds)
    (141/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061374527 seconds)
    (142/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.068777994 seconds)
    (143/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.073108773 seconds)
    (144/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.068630637 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072764076 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.060594944 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.086864309 seconds)
    (148/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.068781554 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.082306008 seconds)
    (150/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.062700184 seconds)
    (151/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.0626528 seconds)
    (152/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.19752313 seconds)
    (153/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.072836576 seconds)
    (154/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.061445003 seconds)
    (155/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068029215 seconds)
    (156/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.088949429 seconds)
    (157/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069143722 seconds)
    (158/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.060379893 seconds)
    (159/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.059612156 seconds)
    (160/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.060426961 seconds)
    (161/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.16336082 seconds)
    (162/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069053147 seconds)
    (163/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.063121413 seconds)
    (164/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.077730064 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.13524063 seconds)
    (166/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.061627873 seconds)
    (167/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.060499523 seconds)
    (168/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.069593223 seconds)
    (169/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.062237878 seconds)
    (170/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.162479633 seconds)
    (171/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.060642802 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.13782615 seconds)
    (173/309) benchmarking ("sort", Float64, false)...
    done (took 0.126766452 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.140016773 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.115946642 seconds)
    (176/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.059813765 seconds)
    (177/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.064255092 seconds)
    (178/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.061519136 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.083892019 seconds)
    (180/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.061800585 seconds)
    (181/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.061235216 seconds)
    (182/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.086330631 seconds)
    (183/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.189903589 seconds)
    (184/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.06818239 seconds)
    (185/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.059314395 seconds)
    (186/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.059513935 seconds)
    (187/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.071835617 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.060207114 seconds)
    (189/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.061609107 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.083601422 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.27109128 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.064257631 seconds)
    (193/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071832691 seconds)
    (194/309) benchmarking ("sort", Float32, false)...
    done (took 0.131406608 seconds)
    (195/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.064072586 seconds)
    (196/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.063085304 seconds)
    (197/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.067296976 seconds)
    (198/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.062166759 seconds)
    (199/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.062998984 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.119070357 seconds)
    (201/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.198459089 seconds)
    (202/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.133792037 seconds)
    (203/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062338923 seconds)
    (204/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.061042743 seconds)
    (205/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.062668591 seconds)
    (206/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.123214242 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.069424347 seconds)
    (208/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.070557236 seconds)
    (209/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.068029351 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.12216176 seconds)
    (211/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06909896 seconds)
    (212/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.062441257 seconds)
    (213/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.077697535 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.091665291 seconds)
    (215/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.192469734 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068674018 seconds)
    (217/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062088756 seconds)
    (218/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.068984527 seconds)
    (219/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.062594082 seconds)
    (220/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.063896185 seconds)
    (221/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.066297625 seconds)
    (222/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.071039439 seconds)
    (223/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.063699968 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073977302 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.072240719 seconds)
    (226/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.061247091 seconds)
    (227/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.062897686 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137878107 seconds)
    (229/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070255181 seconds)
    (230/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.063849261 seconds)
    (231/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.062309839 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071116849 seconds)
    (233/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078382315 seconds)
    (234/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.186657272 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.105575041 seconds)
    (236/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.062827546 seconds)
    (237/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.061686942 seconds)
    (238/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.062539355 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.085571056 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.11985566 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.075457573 seconds)
    (242/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.060911587 seconds)
    (243/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.086365715 seconds)
    (244/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.06154536 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.088186719 seconds)
    (246/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.06038733 seconds)
    (247/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.060871276 seconds)
    (248/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.06208187 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.061119577 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.061068361 seconds)
    (251/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.060463376 seconds)
    (252/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.060889689 seconds)
    (253/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.06096005 seconds)
    (254/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.062342161 seconds)
    (255/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.060572868 seconds)
    (256/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.168250048 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.087034226 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.14090988 seconds)
    (259/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.061847445 seconds)
    (260/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06117947 seconds)
    (261/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061932766 seconds)
    (262/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.158568492 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.06113929 seconds)
    (264/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.069882155 seconds)
    (265/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.061018779 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.061068072 seconds)
    (267/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.061863673 seconds)
    (268/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.062261948 seconds)
    (269/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.062495466 seconds)
    (270/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.061437291 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.124921731 seconds)
    (272/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.069626011 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.06785387 seconds)
    (274/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.133353884 seconds)
    (275/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.066097187 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.132407359 seconds)
    (277/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.062115108 seconds)
    (278/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.063961919 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.061006396 seconds)
    (280/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.060915517 seconds)
    (281/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.073592825 seconds)
    (282/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.062152472 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.160592074 seconds)
    (284/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.060743111 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.10738186 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.121925948 seconds)
    (287/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.061491563 seconds)
    (288/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.060273338 seconds)
    (289/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.062294537 seconds)
    (290/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.060901047 seconds)
    (291/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.061726436 seconds)
    (292/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061733465 seconds)
    (293/309) benchmarking ("sort", Int8, false)...
    done (took 0.164786385 seconds)
    (294/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.061538718 seconds)
    (295/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.060222693 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072371361 seconds)
    (297/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.060255996 seconds)
    (298/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.060160337 seconds)
    (299/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.067381717 seconds)
    (300/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.061517291 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.068107288 seconds)
    (302/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.12761433 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.061357633 seconds)
    (304/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.060727612 seconds)
    (305/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.060000394 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.082538392 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.060018877 seconds)
    (308/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.06075206 seconds)
    (309/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.059676302 seconds)
  done (took 31.265576378 seconds)
done (took 32.673475051 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081298591 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085640836 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.069162477 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.081763321 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.076905371 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091946912 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.069276782 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.073582043 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.076216508 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.075487148 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.075336138 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.067569432 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.070284878 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.0713515 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.069059512 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.084061589 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.075057722 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.069835897 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.069545677 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.061208722 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.069658596 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.061673019 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06075432 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.067675457 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.072794833 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.068911718 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071966245 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.070763436 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.061057082 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.061893247 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06607859 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.070214397 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.063717541 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.074633611 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070130733 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.070146688 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.071207152 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.073275596 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.061226292 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.061630159 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07114282 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.061442166 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.069798987 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.067840599 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.065744531 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.067617548 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.069373923 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.073525931 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084095533 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065089258 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.071043209 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.072438692 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.072452404 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.066581714 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.065910801 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.070087321 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.067393068 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08422484 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.06988843 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064849444 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07098369 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.070472035 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.067263395 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.06928002 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.069397207 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.072487508 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.073906202 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.067388012 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.071551109 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.067907959 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.060827574 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.069254651 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.065624181 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.060922096 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07211689 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.073352767 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.060611883 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.065566324 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.068945065 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.0694839 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.061044093 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065066036 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.060234809 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.065713349 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064675714 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.066750052 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.066229396 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.068808855 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.060859968 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.06995062 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.068522093 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.069318517 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.060712948 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075380301 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.061187051 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.067247195 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.061558625 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.061542236 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.060611613 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.066435148 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.060984292 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064833219 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.069988387 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.060638424 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.065505452 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.074252203 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.060811655 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.068485232 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.060831784 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.060903954 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.072587847 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.071654795 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.061452516 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064913029 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.060927708 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.066670937 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06075964 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.061223523 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.061138657 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.060863464 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.065993084 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.061299671 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06510126 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.066571479 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.073788624 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.060940757 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.065837091 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.064968284 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.060633553 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.067335625 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.060829313 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06040697 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.059677153 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.073965996 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.063453841 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.060775298 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.065062113 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.063676659 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.068278898 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.058988731 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.20736256 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068388222 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.067253679 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.06903736 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.062847296 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07528691 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067570418 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067283045 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.062891183 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062819348 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.062303973 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.062747426 seconds)
done (took 11.968963974 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.062262614 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.104248548 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.070421025 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.07861209 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.074190346 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.062024698 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.066579555 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.081063048 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.065108987 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.081587586 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.082898169 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.081817766 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.089557986 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.061059972 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.061609941 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.062701577 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.060288492 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.068136137 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.077216228 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.083253579 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.091891279 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06148281 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.071383624 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.076809171 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.072652373 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.081145961 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.062397731 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.062801489 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.064151161 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.077592598 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.084772658 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.061365153 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.062457366 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.076756703 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.076037403 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.071372554 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06209518 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.066659139 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.061994693 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.061165226 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.063013232 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.07663683 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.065941 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.071053221 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.062403266 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.062682499 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.062750399 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.066197825 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.07335051 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.066399489 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.070055131 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.074554511 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.063996976 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.062059229 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.060665028 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.066641624 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.061885461 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.062504419 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.061612025 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.062001485 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.061755071 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.064019166 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.062484431 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.062399372 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.064926039 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.065520032 seconds)
  done (took 6.04218468 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.079943394 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.08997671 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.077738581 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.078819722 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.061436135 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.061789641 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.062445665 seconds)
  done (took 2.023243467 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.062408166 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.074792594 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078093966 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078287451 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.070536906 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.079700075 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06263843 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.091305727 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.061523558 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.074243287 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.108958178 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078826002 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066034517 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075800255 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.064061163 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.071188139 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.061975794 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070246674 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070838392 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.078528904 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066349002 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.088922254 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.075493054 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.062613071 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.082671101 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.067521373 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.061524727 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.062316591 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063270909 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.063577056 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063186523 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.101078337 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.067001017 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076253685 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063494981 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.062164749 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.068608493 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065448483 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.065719136 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.068406351 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.068049137 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.063494627 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06109894 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06365732 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.064898157 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.066501789 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.061422763 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.063646864 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.063520308 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.074010344 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.061403594 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.068800452 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.066577284 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069391844 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067867272 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066793821 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.069966343 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.063636006 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.073942166 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.070042402 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063338265 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.071435054 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.070832405 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.068138587 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.070888244 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.066099159 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.066900117 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.068158208 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.063736856 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.064442995 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.063586308 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.070890741 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.062537527 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.064311799 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065492466 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.064196969 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.066365279 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.078732383 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.078281551 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074671545 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.063950953 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.064059739 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066635319 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.078739857 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067187674 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063854173 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065825447 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.061926578 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.066452484 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064390361 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068480215 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.063640711 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.070313013 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.064746125 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.065500703 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071147634 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.062326516 seconds)
  done (took 8.188359704 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06531704 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.063903523 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.064918466 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.063692455 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.063799553 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.063801346 seconds)
  done (took 1.921968411 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.086837368 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.064493753 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.077050673 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.064041122 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.097522504 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.070452089 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.071108573 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072816999 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.076607588 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.076057653 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.070777772 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.074026869 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.070574852 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.065724728 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.070611739 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.0650131 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.071008434 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.067257258 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.075342874 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065514834 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.077083371 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.065053667 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.065593167 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.074727642 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.065953938 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.064926731 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.063186052 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.075354046 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.075220324 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.075482606 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.064761192 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.066374273 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070547661 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.071880748 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.070712202 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070433144 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.063879682 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.06891404 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065275815 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.066067411 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.0729787 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.065451795 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.066278005 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.069399414 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.071719072 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070307418 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.068970973 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.067135257 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.070516669 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.069007781 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.068897419 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.064715917 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.065882136 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.068775222 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070677097 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072092207 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.068943886 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.071225782 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.064864029 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070933635 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.063951871 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.066172171 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07170203 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.066362071 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.070137364 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.069116167 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070794647 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.064922294 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065512116 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.063629143 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.068983809 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.064162416 seconds)
  done (took 6.525298544 seconds)
done (took 26.19574539 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.990073516 seconds)
  done (took 2.479542992 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.563654471 seconds)
  done (took 2.087110004 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.781454758 seconds)
  done (took 8.301277718 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.30099786 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.341291716 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.71301499 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130590471 seconds)
  done (took 3.042049361 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.705387474 seconds)
  done (took 2.233674977 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.230819286 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.221849492 seconds)
  done (took 1.994207166 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.346376964 seconds)
  done (took 1.870903479 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.069295831 seconds)
  done (took 2.592277936 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.230237368 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.156898695 seconds)
  done (took 1.917719312 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.450127973 seconds)
  done (took 1.975787969 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.289129531 seconds)
  done (took 5.821823692 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.232513578 seconds)
  done (took 1.80210211 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.229572332 seconds)
  done (took 1.758052558 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.723234046 seconds)
  done (took 3.248543963 seconds)
done (took 42.658573009 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078466143 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081577623 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081136568 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076941471 seconds)
  done (took 1.823904624 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.070941321 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.065921573 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.07011517 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.070782109 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.067875551 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.069232384 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.068967877 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.065863952 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.067811324 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.065826199 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.06451589 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.065903249 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.069239056 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.06617411 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.068699756 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.070196175 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.06610753 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.066059843 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.068714263 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.065585071 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.069017989 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.066106695 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.064635662 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.065046073 seconds)
  done (took 3.148047495 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.074690246 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.068846432 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.071301841 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.067340252 seconds)
  done (took 1.819433766 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.072704562 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.082741295 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.083448295 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.08932964 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.072770358 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.072556602 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.080170494 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.081624974 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.061378064 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.08444459 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.064136656 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.062577216 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.062321584 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.083036562 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.080294578 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.059376646 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.060882633 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.072955947 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.072057697 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.074401093 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.064150385 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.061521991 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.072101389 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.072242123 seconds)
  done (took 3.277961424 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076190699 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.061708425 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076387723 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088665143 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090302272 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.061394823 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.076717871 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090164981 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.136076529 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.061614547 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.067362214 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.061569545 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.102284594 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.061538826 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077699927 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107103108 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110343737 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.065041138 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094238305 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.061659163 seconds)
  done (took 3.172195593 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072848775 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.065192585 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06573993 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.061617825 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07349295 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.06902092 seconds)
  done (took 1.953638926 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06424481 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.063507723 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.063792771 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.062921502 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.06801226 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.063190362 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.061575711 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.063116025 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.063239675 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.063327679 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.062648021 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.061555477 seconds)
  done (took 2.300988536 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.157507288 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.066088055 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.066053554 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064736326 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.067674073 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.062899584 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.077703955 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.064506357 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.080520974 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.062334571 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.062947399 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.064617627 seconds)
  done (took 2.439902144 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099034172 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128559121 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093886746 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.069435778 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168278653 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092822504 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.087344033 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.119875064 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091481726 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.066222887 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089778336 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132443494 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092350139 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.095758104 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079382843 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123127235 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107802455 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084771074 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111202323 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078907742 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.067438335 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130558713 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.066638589 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08962631 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098111265 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.094539882 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107535485 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130322459 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081410988 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.086676563 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079544657 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.071576346 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.102091023 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.080809594 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.094269943 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090555738 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095354108 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082882041 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.083553887 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116277928 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157115018 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098365516 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097593535 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131534266 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07600082 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.106087645 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078331138 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096522784 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101636125 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090539845 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072547455 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088616654 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.103814558 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099551293 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.079051827 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078992072 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115821811 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.095357699 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0924037 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07682058 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10369242 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.083556786 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248655944 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118830707 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1396934 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099408733 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13641534 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120813676 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094828794 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.0862677 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.088834811 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073257727 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109750495 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096490326 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133925615 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107361043 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097397254 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.091963779 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07996765 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105159634 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112041025 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092596504 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09257966 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146365399 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106389084 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093037285 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089330932 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.137173683 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.068879299 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145925977 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086681724 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11869424 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095158735 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136284087 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088483003 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.080566618 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103455576 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102445686 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086722406 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100242255 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08193679 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111647178 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089377999 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09943902 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.079041923 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088345508 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084211974 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.094330114 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.072606987 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102240518 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113135502 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111960941 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.071841247 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105509705 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08372507 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.073869641 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090173766 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136694036 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08009786 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.071557938 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145844317 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.088850031 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.112213395 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256136508 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.082595274 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116080192 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135556653 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090642084 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089351438 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073844751 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152041956 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073163645 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11589439 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078972853 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100314779 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103650921 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136169237 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137063013 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094158902 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075397223 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089363094 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.104695038 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084523469 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083032543 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074578129 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.106701147 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123107883 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.096788354 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078522046 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.090101295 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.067087879 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112457578 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073922694 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082206427 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094271987 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.085067973 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.087413769 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140946997 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.082051976 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106602755 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095342816 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.064765926 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089309069 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156376047 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080866217 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.10826731 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114664437 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081411074 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.065485728 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.094291915 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.070904004 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106759295 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.08977187 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104743569 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075861843 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104429367 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.065619753 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071552105 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131434903 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098694002 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086153762 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.12925247 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101502028 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.085579281 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.100909766 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.23930474 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097264552 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101671311 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.10612696 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10520958 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.071759824 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128374773 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090166908 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.076398428 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086569313 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076977571 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.075044893 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097436251 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112529349 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087010563 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098683208 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101388013 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089739936 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.107356788 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086991827 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077165835 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130092559 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073218063 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.072533255 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085683722 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.103091611 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086253347 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.132257331 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.077047711 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134942979 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090240416 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079588362 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114566709 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.066295624 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.06723862 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.079469595 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089279839 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114837385 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076832503 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07564776 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117057481 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130708567 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095272251 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102212028 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.066070194 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08818448 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133997785 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.110833788 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079352293 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10915419 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082184807 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127855641 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095138654 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118007932 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104328882 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108305103 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.089215414 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.078370791 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.071322577 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085230177 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108541224 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082625296 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079122536 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.064536061 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.071266876 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090449747 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088159161 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108537244 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085019936 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285088191 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071774737 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101701663 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106064462 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105874468 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089835055 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092933121 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.090363936 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089664072 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089673889 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089910334 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.071747004 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126619036 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10044563 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076703988 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087251839 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094222914 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105710866 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107678855 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108699849 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091883093 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105648456 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120576656 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096865442 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080378225 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082165587 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.092297811 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.082726396 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079081069 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.102691512 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111079492 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096570527 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107399256 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.092873986 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.088800458 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106177229 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091149471 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087235293 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.115801813 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151466186 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.100158536 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.102287944 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083320915 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105688684 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103408254 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110767952 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.109381639 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107221261 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.068360027 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.073197932 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.06800943 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10451063 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076939731 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116750302 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074325161 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104673929 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096053526 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077851421 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.064559574 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099604033 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091585851 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.079795424 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120074646 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.109430372 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.069885868 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086561919 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101855008 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.231062516 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12441635 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.101666204 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099762132 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.070602787 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091811976 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.072627735 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108066863 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.099456208 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.075571311 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.074146425 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.068073762 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105134705 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082069722 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108380869 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088366094 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099097727 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118248015 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135600879 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08554793 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094091881 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116554666 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111063654 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.079215327 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111496289 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135046367 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.117930651 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.079726385 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.082008022 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104485658 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1044143 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099604853 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073844395 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076580157 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107621958 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113183834 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.065632639 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082400321 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068620563 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.082588003 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112144867 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094814844 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080732127 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116067983 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072919136 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106476825 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093966434 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121825922 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12137519 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145122575 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094843737 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083151805 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074667948 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122623795 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.068699961 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116078002 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111865853 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085806397 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.066293237 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081997211 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.093223078 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.624785081 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105411212 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.072469394 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13055052 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083246154 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264140534 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083786021 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.118643904 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090168899 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101491385 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090862149 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130970384 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.080219288 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108278664 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.170728238 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109640333 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.105924151 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072369526 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.083603602 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.072063022 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.076933649 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.080123778 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084952154 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106628489 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08346932 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10372615 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.078142344 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.105326955 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08968047 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087366433 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.096846232 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079424696 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137257116 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085353788 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123313935 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105084705 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076513557 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072517718 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.084963498 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.099590848 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080314614 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092760506 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.07663707 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.074761901 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152889557 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101780835 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082788427 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100579335 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.088744953 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.086172438 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089530508 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116412288 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108938253 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071180219 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.085077688 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101499429 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076875105 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.072664988 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094674265 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.067632175 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088141112 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098241795 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094905931 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088612748 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.101619455 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076109639 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086040437 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107593174 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08249201 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.074254233 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073854885 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.073191726 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.072968706 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.252443114 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108155444 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114573623 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108167189 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090317157 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093515226 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.077071997 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.217172965 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078088686 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095336818 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.102210192 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.074014111 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.128626589 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087012666 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087632747 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094901866 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099600458 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15246602 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071776043 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108357121 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091736338 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108171373 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08537681 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10531053 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094364124 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091357307 seconds)
  done (took 49.539693728 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.090681781 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.143859851 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.151407407 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.078055722 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.092105068 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.116224448 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.205591384 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189501265 seconds)
  done (took 2.731171965 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072001254 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.077404521 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099789002 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.079125001 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.062392812 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070834206 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.200673145 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.076859302 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.061769116 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091503752 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.072255348 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.063754144 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.409170513 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.061305711 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.062479694 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.071027407 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.062380939 seconds)
  done (took 3.340548969 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.360572119 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.603012257 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.342774963 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.070868749 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.956653287 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087502944 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.174965563 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136008103 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.076749874 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.533764933 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.370524665 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.13079859 seconds)
  done (took 18.500294609 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.071156969 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070433468 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.074734973 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.074602006 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.070014659 seconds)
  done (took 2.013110475 seconds)
done (took 97.611010868 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.076873556 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.162098665 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.063609706 seconds)
  done (took 1.912798006 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.079109463 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.077689695 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.077391814 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.074902822 seconds)
  done (took 1.96906466 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.069649756 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.072488653 seconds)
  done (took 1.795001669 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.22559174 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.160469105 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089060042 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.079012375 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076005745 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.076602254 seconds)
  done (took 1.891227035 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.068380172 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.068806979 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.068608954 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.069523132 seconds)
  done (took 1.926641446 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.064290536 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.062616397 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.065144288 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.067539951 seconds)
  done (took 1.912331292 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.080972265 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079172528 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.074179563 seconds)
  done (took 1.887947561 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.091980206 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.093457869 seconds)
  done (took 1.838349735 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.075910391 seconds)
  done (took 1.729761198 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.084706478 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.093805969 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.116225354 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.098111583 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.116466813 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.097654626 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.075155016 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.076101353 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.071041251 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.06874783 seconds)
  done (took 2.551409917 seconds)
done (took 21.618153784 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073820966 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368173481 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.356092349 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.081469213 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.666139298 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.354243857 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.987035497 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.087118064 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.094911101 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064393722 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080051158 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.644658682 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.978916749 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.326061427 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.965662542 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324649741 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.646441479 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064190685 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.062883282 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064008583 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.970037016 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.063140425 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064237471 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.063878022 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.678579189 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.368526883 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065101172 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.32051506 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064142013 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066991302 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35189106 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066003613 seconds)
  done (took 16.068360854 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.066063143 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116316768 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.068979579 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.079809163 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.066740128 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.065166519 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.067292053 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.064624759 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.104818504 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06433218 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08067843 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.063410718 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.068184729 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065751044 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083988842 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064693311 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066226319 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065476723 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064429116 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068281711 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082503008 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064305554 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065323474 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064995547 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065335662 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.077881499 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065858935 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064767127 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064668023 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067273119 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067988335 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066305615 seconds)
  done (took 3.937728376 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11621319 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122382318 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.069186132 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10257714 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118263711 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06852103 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148043754 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09135423 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111184482 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.0662617 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080729912 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064457517 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098781401 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.0663191 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084843951 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064985797 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066217393 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065111981 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064680498 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065657667 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082608689 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064296616 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065226427 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065186606 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066060934 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079582522 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065799278 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06498935 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064774606 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06736153 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.06886744 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066011862 seconds)
  done (took 4.224989904 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.06583059 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.068462134 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.075816569 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.078007785 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.063456469 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.065644608 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.066735317 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.063171002 seconds)
  done (took 2.218336174 seconds)
done (took 28.116727426 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07426499 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.063838169 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.067177141 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083292593 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.069966641 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.067187775 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.061522755 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.069895144 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.067796451 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.067701151 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.06902874 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.062497409 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.066508427 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.061735957 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.068526928 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06328016 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.069042118 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.066922803 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.067713464 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.068494765 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.064921146 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.06841504 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.070584443 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.067458572 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.067521964 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.067535124 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.071980949 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.068046983 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.063399022 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.065598018 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.064501927 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.074098942 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069342162 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.069692414 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.063101308 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.062748751 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067131786 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.064814733 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.06904701 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.072075128 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.06447262 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.072051286 seconds)
  done (took 4.484949625 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.080421362 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.085357445 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.077982238 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.077662839 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.094926583 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.077985361 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.082222446 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07416983 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.07254156 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.081552556 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.069811635 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.075842276 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.073700988 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.068544893 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.072398977 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.069553427 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.075308153 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.069375868 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.073310516 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.073439349 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.082733522 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.067775006 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.075659711 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.074329332 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.070115284 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.075955556 seconds)
  done (took 3.651727697 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.069311578 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.080112842 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087526795 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143665274 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.107785609 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075432416 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076822105 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.086629218 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.093522188 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.063943724 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.06746317 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.088410901 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087603326 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.069730422 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.103238979 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.079559458 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.078119485 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.065487102 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.070435318 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092003209 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083840622 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080738806 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.0893694 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.07908941 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.062667616 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.0654303 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.069482336 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.076382468 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.070540477 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.074778319 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.067672165 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.066668327 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.06427445 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.074142296 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.067519058 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.062469755 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.086644278 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074981718 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.075729097 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.104619499 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.072234191 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.064570044 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09072954 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123348919 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.062756465 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.06648593 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.066490252 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07455919 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06422074 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091158454 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07723588 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.062846863 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.063942874 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.064332051 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.064300427 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078289415 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.06507729 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.065146269 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.074446038 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069161321 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084317873 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.068517903 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081993091 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06321799 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.073435184 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06405934 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.064559354 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.062174854 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093117029 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069710223 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110818086 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.063929282 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.061626115 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.074509081 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.073361034 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.069465513 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.063171673 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080363675 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073903024 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.066890622 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.074169374 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.065894739 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.066101317 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.093839773 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.063766415 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06278216 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.062086773 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.066886135 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.066087357 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.064056475 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.076580263 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.062573998 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.066298918 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.077368664 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.063267886 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.063712593 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.066593938 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.065822639 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.063218791 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075448674 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.067104009 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.064334106 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07451235 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.063979234 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.066302324 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076288089 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.069775246 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.062727372 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.064963401 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.066450526 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.064400709 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.066996053 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.066278568 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.065070836 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.070003172 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.070151705 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.068529448 seconds)
  done (took 10.303586724 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.157179858 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.148408943 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.065506594 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.140878085 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.070348457 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.068901179 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.141806207 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.08248171 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.064311242 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.064893555 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.063413387 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.092255398 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.088715545 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.098657046 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.06813889 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.063826172 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086713897 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.095649465 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.142941807 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.139982605 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.087053721 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07033717 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.065606139 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.065096878 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.065025321 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.072357286 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.078580454 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.070725093 seconds)
  done (took 4.233339923 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.074758751 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.086830655 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.068180965 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.074121728 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.083969367 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.064466055 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.065462944 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.065669657 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.078512872 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.074732155 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.06405562 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.069552866 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.068677542 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.06760557 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.065126311 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.070970082 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07029591 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06294409 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.0677284 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.068804522 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.073633064 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.089254421 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.067744804 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06306308 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.066161569 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.063677207 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.073376107 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.076445494 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.063501798 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.078081346 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.061906489 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.067894312 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.077992756 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.064082807 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.063200055 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.063636167 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.063750006 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.063875754 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.063856516 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06230505 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.062260924 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.067978696 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.062517061 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07283793 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076975829 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.07033972 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.065659539 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.0662442 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.066549207 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.061195652 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.066414952 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.066213126 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.065913249 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.070765091 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.067088022 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.066685899 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.064582621 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.091598369 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.069683509 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.063329349 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06338786 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.062673955 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.066305179 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.074293409 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.07953347 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.065781942 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.062349544 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.064246394 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069300996 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077742685 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.063421499 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.068339731 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.061598045 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.064273428 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.066315855 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.065890622 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.064587717 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.062349429 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.063535087 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.064156618 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.064120974 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.063581772 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.06380258 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.066201191 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.062160742 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.062350922 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.064043222 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.065541655 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.073404492 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.062927315 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.067456629 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.064864512 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.062676147 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.066059386 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.068942525 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.066335649 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.076703092 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.075821873 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.064123353 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.062662534 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.076504167 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.066156943 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.063081126 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.070304474 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.06781359 seconds)
  done (took 8.851844267 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.085910653 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.066221124 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08059699 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.086375416 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.073851268 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.069184052 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074967497 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.065262273 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.079529575 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.063420561 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.072274165 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.062912383 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07492561 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.073899299 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.065507991 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.074173818 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.066511653 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.080496148 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.077816446 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.062588391 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072342871 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.075255929 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.07535857 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.07740233 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.076995794 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.078269596 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.075888324 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.066827826 seconds)
  done (took 3.77760058 seconds)
done (took 36.967633964 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.758123141 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.012461431 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.746307414 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.006977703 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.039863051 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.757816398 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.855445874 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.741400467 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.885143876 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.791134337 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.050629529 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.20314328 seconds)
done (took 65.582626631 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.7733488 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.901724857 seconds)
    (2/2) benchmarking "String"...
    done (took 2.013415647 seconds)
  done (took 5.592649202 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.973441831 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.528850603 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.00767664 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.739667169 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.745007277 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.194518373 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.532255687 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.191037893 seconds)
  done (took 30.617761028 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.884435267 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.974558771 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.424018301 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.461301206 seconds)
  done (took 15.464434962 seconds)
done (took 63.189775778 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.752268636 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.740136723 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.799316479 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.76908341 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.744433422 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.742681684 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.744689084 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.743283994 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.776005285 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.740307471 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.741778868 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.74429848 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.741979366 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.75658556 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.211719103 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.78929302 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.756286303 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.751507013 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.762344426 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.746451738 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.745076309 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.75067721 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.21751272 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.895270095 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.355925466 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.901111276 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.107096306 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.129533045 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.751728399 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.740247596 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.938405316 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.040989554 seconds)
  done (took 202.805836381 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.741191446 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.782670718 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.897265465 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.762214327 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.27697201 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.918707048 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.838272629 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.310192544 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.745761444 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.760487387 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.977062069 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.74366066 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.00711477 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.69443048 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.784732692 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.752558112 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.996533959 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.026538545 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.790415374 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.902950424 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.759960809 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.969904665 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.898202466 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.051106596 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.777310885 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.753881589 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.769541624 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.764471013 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.931480746 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.974319632 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.755767946 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.784214616 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.945445462 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.611596598 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.754396702 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.763270116 seconds)
  done (took 169.654654429 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.933569254 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.749205867 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.742733577 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.797009676 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.865129443 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.74455572 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.409629833 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.751338902 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.164403127 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.746565274 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.741635469 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.742522291 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.743038472 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.753770393 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.835536742 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.744489697 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.757771347 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.744102302 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.768309027 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.745223689 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.742117803 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.743204146 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.743121004 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.74305885 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.741960282 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.743075899 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.281175332 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.999350901 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.745160972 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.74460486 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.386543942 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.759813518 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.833152981 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.747826638 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.835906612 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.799599024 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.862186245 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.746601761 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.961032613 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.821691985 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.744437603 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.743700191 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.807980997 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.757171226 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.744094384 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.744916899 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.749600954 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.810618141 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.013642107 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.747768141 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.865510473 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.234079067 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.744733076 seconds)
    (53/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.74421308 seconds)
    (54/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.744406035 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.346877759 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.747163393 seconds)
    (57/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.744334097 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.751456427 seconds)
    (59/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.7520057 seconds)
    (60/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.746159865 seconds)
    (61/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.744848535 seconds)
    (62/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.130528227 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.815674593 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.834447332 seconds)
    (65/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.312878245 seconds)
    (66/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.749153091 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.394481802 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.871818613 seconds)
    (69/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.744627678 seconds)
    (70/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.745016099 seconds)
    (71/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.745271923 seconds)
    (72/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.7473572 seconds)
    (73/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.745747004 seconds)
    (74/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.74708222 seconds)
    (75/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.868257642 seconds)
    (76/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.75507791 seconds)
    (77/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.883195208 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.829400576 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.746386451 seconds)
    (80/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.868987529 seconds)
    (81/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.748427297 seconds)
    (82/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.754627992 seconds)
    (83/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.584458174 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.819382576 seconds)
    (85/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.782297029 seconds)
    (86/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.572449157 seconds)
    (87/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.750695836 seconds)
    (88/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.119310214 seconds)
    (89/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.538821668 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.749908118 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.746963988 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.745933195 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.75883122 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.746583642 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.746676092 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.748022032 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.826675086 seconds)
    (98/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.749489669 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.746412264 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.745967842 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.869573113 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.457654925 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.125930943 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.748673865 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.747581958 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.752802006 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.828501444 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.870420767 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.749640466 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.813266253 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.754338433 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.751503748 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.839821624 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.748847863 seconds)
  done (took 397.833171517 seconds)
done (took 773.966959083 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.326163338 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.300184991 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.41139297 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.31444384 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.293889558 seconds)
  done (took 13.331798315 seconds)
done (took 15.01779227 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.762224741 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.753527194 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.807735659 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.832891732 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.764083764 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.767471356 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.82989646 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.768167222 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.798363022 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.803845465 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.834380821 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.83380895 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.77263538 seconds)
  done (took 25.0147093 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.757574816 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.903191964 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.973547654 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.78981477 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.75721355 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.982660906 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.814168025 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.895171161 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.901229507 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.988508346 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.98943435 seconds)
  done (took 22.440359158 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.757021883 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.913893404 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.983908243 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.793323541 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.76088106 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.98278052 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.820690753 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.90008835 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.904226779 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.989260156 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.003949009 seconds)
  done (took 22.504747559 seconds)
done (took 71.646252155 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.752204423 seconds)
  done (took 3.439337968 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.78302575 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.917647851 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.752389561 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.750780469 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.753575995 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.751856862 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.750819596 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.752552598 seconds)
  done (took 15.900712478 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.75230375 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.752649175 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.753379711 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.752981879 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.752496519 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.753293411 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.752843948 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.75301547 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.753077768 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.753102102 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.754387408 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.753751442 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.753756248 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.753595108 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.752423826 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.7537727 seconds)
  done (took 29.73958176 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.755791075 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.754698185 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.754268036 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.754536525 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.756223287 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.756806011 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.75774873 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.757612167 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.756032128 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.757214046 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.756897399 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.756308612 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.757213819 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.757533488 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.758657001 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.757790401 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.757059814 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.757967372 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.762284534 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.759061827 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.756829366 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.758160088 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.756658825 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.757859833 seconds)
  done (took 43.861236239 seconds)
done (took 94.636438356 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.467334314 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.499007761 seconds)
  done (took 9.659449569 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.757095664 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.757403793 seconds)
  done (took 5.210949404 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.757677124 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.759719585 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.757750329 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.757906903 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.758399997 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.759382235 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.758861801 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.760591248 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.758807869 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.759981143 seconds)
  done (took 19.280797752 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.759403928 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.759316908 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.759461959 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.760764188 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.760472568 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.75898288 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.760791714 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.758874904 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.760216289 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.760424311 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.760493991 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.760509596 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.759726273 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.760360707 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.761216594 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.759568011 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.760827902 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.759426056 seconds)
  done (took 33.374423173 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.759159287 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.760498526 seconds)
  done (took 5.214424831 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.758813666 seconds)
    (2/7) benchmarking "second"...
    done (took 1.762906591 seconds)
    (3/7) benchmarking "month"...
    done (took 1.761380393 seconds)
    (4/7) benchmarking "year"...
    done (took 1.759080786 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.761120518 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.759682002 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.761738081 seconds)
  done (took 14.020208234 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.7602921 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.921649203 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.987216682 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.593275915 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.762699702 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.763779244 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.151579091 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.762337936 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.764773628 seconds)
  done (took 20.163965674 seconds)
done (took 108.616709597 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.573200362 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.761255066 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.001035944 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.813973881 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.77824544 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.052853864 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.773794744 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.034394207 seconds)
done (took 42.483805906 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.767645593 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.758534169 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.787264708 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.78629703 seconds)
  done (took 22.028999903 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.760663764 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.107699892 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.784726192 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.594934725 seconds)
  done (took 21.959881886 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.14234404 seconds)
    (2/2) benchmarking "read"...
    done (took 2.100377199 seconds)
  done (took 5.943001196 seconds)
done (took 58.397123248 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.762112938 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.761337665 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.75992781 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.763189593 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.760331542 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.760604014 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.761362897 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.761688508 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.761906518 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.762376176 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.761645904 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.762330492 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.762672563 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.762498293 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.762961155 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761427939 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.762374873 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.762965888 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.761560681 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.762583276 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.761676223 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.762366294 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.76242916 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.760383082 seconds)
  done (took 43.983323631 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.76403502 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.762326615 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.764020086 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.762462879 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.762750669 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.761836932 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.762129207 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.762700354 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.762847828 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.765846086 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.763846962 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.764554604 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.762595429 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.765996551 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.762377358 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.765248569 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.763227602 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.764264899 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.763917026 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.764458287 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.765145037 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.764517775 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.766147571 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.763619317 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.765623997 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.765121408 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.765028543 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.764569956 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.76470943 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.763701006 seconds)
  done (took 54.617717987 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.764197604 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.764085888 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.763762654 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.764666933 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.765257851 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.765988774 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.763596574 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.765205529 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.764155652 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.764961516 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.764703284 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.765945991 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.766008492 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.765300762 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.764447533 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.764683707 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.765122503 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.766599587 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.764561074 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.766070571 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.766077252 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.765348825 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.765350766 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.765838123 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.765621468 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.765754792 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.765480498 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.766811411 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.766262207 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.766178386 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.765661201 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.765818572 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.764533777 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.76540008 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.76587928 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.764446465 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.765790473 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.765313078 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.766567088 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.765667801 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.76727453 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.764966061 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.764712561 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.765791158 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.765384023 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.765152584 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.765506401 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.76551559 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.765783198 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.764727401 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.766586211 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.767038004 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.76507997 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.767062151 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.766141307 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.766443937 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.765136289 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.76585174 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.765981438 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.765557695 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.765637011 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.765720349 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.766771039 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.766351302 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.766026195 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.767158245 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.766146505 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.765839548 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.767170557 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.766612104 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.766764462 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.76635085 seconds)
  done (took 128.82799801 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.766930482 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.766314276 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.765846447 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.767156582 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.767370509 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.767722705 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.76618926 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.766677031 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766568236 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.766485627 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767019145 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.767626024 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767322826 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.767899948 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.766704122 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.766341843 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.766923362 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.767332457 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.767633437 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.766944339 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.767533769 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.767628579 seconds)
  done (took 40.575736643 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.767330732 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.767473795 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.766550074 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.767930623 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.76719403 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.767452879 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.768777462 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.768093925 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.767698904 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.768431285 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768749047 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.768171666 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.76815033 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.768090909 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.768108497 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.767452732 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.768610421 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.768550589 seconds)
  done (took 33.525580976 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.768321816 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.768088602 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.768767696 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.768585705 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.768872302 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.769061942 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.768425944 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.768554669 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.768714085 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.768896268 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.768445057 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.768551168 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.768428775 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768925237 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.769071507 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.770501654 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.769356303 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770284973 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.769677242 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.771480995 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.769614332 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.770506722 seconds)
  done (took 40.623742993 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.770002305 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.770572752 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.770283637 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.769532552 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.770336634 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.770871789 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.769181129 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.769678784 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.769897556 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.769869709 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.769646046 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.769668512 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.770271416 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.770320289 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.770260749 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.770720941 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.769835643 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.770689206 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.76961369 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.773901771 seconds)
  done (took 37.109856251 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.770128113 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.770906922 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.770687122 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.771444259 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.771021791 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.769959952 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.770757152 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.770623804 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.770764341 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.770189488 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.771317957 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.771296782 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.771386911 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.771134963 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.772261395 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.771211982 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.77097417 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.772032567 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.771500511 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.771253147 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.771906857 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.772023301 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.771790213 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.772542371 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.772409107 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.772219408 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.771826585 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.77204426 seconds)
  done (took 51.303117455 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.771769443 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.772126762 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.772252671 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.771693607 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.772145545 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.772288774 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.772514094 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.77168048 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.772944944 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.772008864 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.773182119 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.772456209 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.772256479 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.772712101 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.772252479 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.773069386 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774012565 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.773476824 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.772397353 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.772698374 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.772599252 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.7732011 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.773395054 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.773123324 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.772284732 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.773778849 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.772847379 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.774743382 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.774388526 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.773641781 seconds)
  done (took 54.890397218 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.793762408 seconds)
    (2/2) benchmarking "in"...
    done (took 1.795147255 seconds)
  done (took 5.296466804 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.773489287 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.774963873 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.773834472 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.773587917 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.774162235 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.77432214 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.774211769 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.772939857 seconds)
  done (took 15.899862304 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.774720912 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.777354283 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.775069863 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.774042163 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.773568773 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.78084457 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.77556772 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.776192451 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.776021494 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.776497308 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.77935017 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.778806115 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.782987634 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.778345207 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.775073264 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.776567002 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.777039816 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.778667124 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.77736511 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.776014358 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.778844645 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.775975768 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.776198665 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.776235711 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.776226331 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.777337097 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.784944919 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.777251798 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.776677404 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.775718396 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.782535534 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.776609874 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.775679051 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.777519256 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.775115928 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.776618254 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.781995213 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.775808588 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.7763768 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.77671473 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.77886329 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.778533103 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.778983759 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.784209701 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.776965687 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.777151295 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.777876467 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.776479814 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.777177275 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.780432231 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.785568575 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.780494661 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.776343156 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.776567983 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.779567901 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.776964607 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.777863932 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.780643884 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.783938629 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.783273237 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.781124984 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.797684442 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.785789641 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.778090873 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.777586705 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.787217406 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.801947033 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.78018031 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.779700553 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.77824741 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.784308586 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.778453548 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.778776386 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.777799323 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.790666197 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.785535762 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.778503561 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.779152345 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.778504572 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.778582892 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.780397834 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.778540474 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.778872051 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.778856638 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.787776168 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.803273641 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.77877568 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.779458588 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.781236596 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.780012713 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.783482953 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.781307679 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.779052776 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.779073532 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.780903322 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.781842693 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.779928995 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.779629677 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.779588752 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.787247734 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.779985127 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.779447983 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.784572452 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.788273215 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.780275548 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.780278925 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.781363589 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.779943663 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.787849598 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.779584869 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.780074855 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.781459452 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.780955571 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.784396148 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.781176684 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.784190042 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.78850632 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.788108449 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.782752201 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.784004143 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.78447711 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.78285972 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.791205218 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.803496069 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.782127303 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.784757435 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.78617696 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.792376618 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.786742228 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.782257447 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.784453036 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.781650694 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.782042653 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.783045302 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.781294152 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.782259065 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.782451752 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.781890868 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.783289852 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.78240266 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.784501785 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.784583197 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.785203551 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.781751172 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.784669437 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.782897428 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.784106838 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.788854537 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.783217752 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.782723338 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.78304243 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.784759181 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.784581513 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.784347875 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.783598164 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.78335165 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.782915599 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.784516197 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.785737987 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.783207839 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.78414318 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.784630762 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.787661696 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.783830809 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.783095546 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.783236064 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.783869211 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.783918083 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.785659228 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.78480592 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.786662269 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.78371778 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.786294134 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.783488259 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.783513784 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.783309745 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.78497575 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.784135335 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.78879085 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.795815913 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.78796749 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.793701494 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.785464704 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.790811003 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.785225871 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.786172578 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.785237898 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.784410868 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.785055745 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.784902798 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.784572489 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.787932443 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.805282216 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.795058745 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.786944774 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.785996946 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.790843223 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.789331665 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.789582286 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.784882231 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.785098449 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.787927907 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.784708801 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.784860046 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.78544442 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.788158646 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.786276698 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.785374283 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.789656444 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.78536505 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.786653578 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.787119468 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.786626969 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.787371553 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.786054 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.786091149 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.787110282 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.785737745 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.793433521 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.788376057 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.785804541 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.78611899 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.788464702 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.785768147 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.786392434 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.788756622 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.789954702 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.786707428 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.788131004 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.793510804 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.788846977 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.787518284 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.786191503 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.787351717 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.789840405 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.787142005 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.790932056 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.795233608 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.790309226 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.786820543 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.79149697 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.787184952 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.789237408 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.787004554 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.789234868 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.787957381 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.789375511 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.786919621 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.787812548 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.795001346 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.788224865 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.788985591 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.788524224 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.79050188 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.790439477 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.78931502 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.787687817 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.791565077 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.796457313 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.793968404 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.789247781 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.791422472 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.790859272 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.790123492 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.793701326 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.78969063 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.800347219 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.798055137 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.789343243 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.789349027 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.788572549 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.791755389 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.789035792 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.788615854 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.794549489 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.789927182 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.791071505 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.79324089 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.789518816 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.789223879 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.794634384 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.79072449 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.792029401 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.790732202 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.790349605 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.790720621 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.790240273 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.791284152 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.78977172 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.791706694 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.79409061 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.790716791 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.792232624 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.789847645 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.798278622 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.79044554 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.790504372 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.79698464 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.791054859 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.790832906 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.792306419 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.791509099 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.791557638 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.79201206 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.791005322 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.793333829 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.790388224 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.794438048 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.800927608 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.795611057 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.798740883 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.795581826 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.800905319 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.790459722 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.791232367 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.791235698 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.795430596 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.799155431 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.792047048 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.7913974 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.798573284 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.793414698 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.792439433 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.795923086 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.792401912 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.792066728 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.79135206 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.793124056 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.797696868 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.794796608 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.791862173 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.793163689 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.793054228 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.792601483 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.795558404 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.794793102 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.793094343 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.793025801 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.793380039 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.791835406 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.792925349 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.792644189 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.792742648 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.793031178 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.792818908 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.799601881 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.793269851 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.794738135 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.797929423 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.793542074 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.801952218 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.793543887 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.793836022 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.79486742 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.794455796 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.79610749 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.793577777 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.792810286 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.794604079 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.793126202 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.794748133 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.804625694 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.79989654 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.796542882 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.796213227 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.794542004 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.795056577 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.803059593 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.817026405 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.79385797 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.795994053 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.798611767 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.801686173 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.79623599 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.800977401 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.798343383 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.803292852 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.795719896 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.794478348 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.798973297 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.807340492 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.794471567 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.795304108 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.794800301 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.800464244 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.797074026 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.795094313 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.796951711 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.797199437 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.797503348 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.806559841 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.795591683 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.797891836 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.795482327 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.794689591 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.795713246 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.795617826 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.797842738 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.797358409 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.794690774 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.795507933 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.798891779 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.801315501 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.797273385 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.799079818 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.806236179 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.796022352 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.79704002 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.798559788 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.797075239 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.799523713 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.796910433 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.796997005 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.798478467 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.79743201 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.798581746 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.800465288 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.805623111 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.79819766 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.797341024 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.797591688 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.801268876 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.796176868 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.797513763 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.797934918 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.805441589 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.800740357 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.808748175 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.807032807 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.79763301 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.799610865 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.80532733 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.804854279 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.797646099 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.797989296 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.797563756 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.800437166 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.799873017 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.798593748 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.798094817 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.799012115 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.803925072 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.797861468 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.799307512 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.797101632 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.799012561 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.800081012 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.799373223 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.804785679 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.798982538 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.798758309 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.797991589 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.79833748 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.799470758 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.800420502 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.79800713 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.798659161 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.801384503 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.801920345 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.804575303 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.800265239 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.799356611 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.800539452 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.799585454 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.800020734 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.80091637 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.800399725 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.799854709 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.803324228 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.807977561 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.80037797 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.800553586 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.801235814 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.80363057 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.800215225 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.799342314 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.799381992 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.799301776 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.806809063 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.800805536 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.799671663 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.800413988 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.799807519 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.804088921 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.801406897 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.804703609 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.800163081 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.801606391 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.800570048 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.803294557 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.809444171 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.804487095 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.80401804 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.808450197 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.806337407 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.802404335 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.801926182 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.801209045 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.80148331 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.80290801 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.804777261 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.803023716 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.803906639 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.801504279 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.802207706 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.801238084 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.803333903 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.801276827 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.802607277 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.80526265 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.810989584 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.809041408 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.803139602 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.803176919 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.801944548 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.805276861 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.811861009 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.802855339 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.800701522 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.802503326 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.803843079 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.803654283 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.808908375 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.811356957 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.806159444 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.803506699 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.80836808 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.819594252 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.804875802 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.813417874 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.833473618 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.805288092 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.803149473 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.803703996 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.804736152 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.802621195 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.806014114 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.802838472 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.809657942 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.803427275 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.802969416 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.810090684 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.80294742 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.803181259 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.803233772 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.805644128 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.80989861 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.802854525 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.810079907 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.804225369 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.804297817 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.804690697 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.805644252 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.803892118 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.804453997 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.804141916 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.806092624 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.80407674 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.803560618 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.811933586 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.803423517 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.807286227 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.816695074 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.816296664 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.803648932 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.804855315 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.804042525 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.809354767 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.807931512 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.803856986 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.808151539 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.813122273 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.808857014 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.813113862 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.807200117 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.805912369 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.807006889 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.805265568 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.805149965 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.818068474 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.816630351 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.807200528 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.807042063 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.812602426 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.805572498 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.813168056 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.811687156 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.805816581 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.808474331 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.805343728 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.806391546 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.806110345 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.806307738 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.810110299 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.814683817 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.806222689 seconds)
  done (took 1070.291662469 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.806459399 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.807005939 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.806513842 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.80685504 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.807196987 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.806644559 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.807110503 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.806428844 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.806861616 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.806495536 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.807525853 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.807594546 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.806570461 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.807403751 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.80766305 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.807187196 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.807651823 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.808365492 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.807705537 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.806977141 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.806675463 seconds)
  done (took 39.688351209 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.807177562 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.808692182 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.807752219 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.807866213 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.80817524 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.808424227 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.809013456 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.808506257 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.808110722 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.80820101 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.808437801 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.809451077 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.808818601 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.80840962 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.808803778 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.809432117 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.807653478 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.808779146 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.80799107 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.808323485 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.80835924 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.808583944 seconds)
  done (took 41.525722603 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.809098611 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.808994408 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.810169619 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.808992637 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.808994724 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.808688509 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.810022753 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.810761351 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.809501955 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.810594206 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.816619727 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.816722148 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.809277477 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.812447823 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.809356076 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.809265817 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.957415453 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.810769745 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.809247154 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.80943917 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.81022976 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.813673557 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.808309168 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.808693435 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.808038504 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.809564954 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.80862169 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.807772643 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.808189841 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.810108779 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.812615034 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.808809424 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.809223524 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.811526277 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.809322857 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.808884528 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.814455632 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.807977182 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.80892276 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.80815178 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.817395508 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.832236872 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.809383337 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.808182282 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.814237388 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.807894304 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.809433336 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.812200786 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.81641777 seconds)
  done (took 90.619381277 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.808494541 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.809069783 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.808216562 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.808745246 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.811611625 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.809406642 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.809531519 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.810031886 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.810036163 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.810149464 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.808071601 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.808183273 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.808096678 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.807611515 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.809292891 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.807430756 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.807633352 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.806816771 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.806471076 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.80745556 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.808580367 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.806311519 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.807347644 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.806772029 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.807335222 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.807598958 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.801970299 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.80307696 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.803026629 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.802362825 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.803008855 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.802626376 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.801827789 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.802209828 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.802466257 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.802318259 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.802515746 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.803014355 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.801769136 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.802874504 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.802595981 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.802926565 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.80408434 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.802523136 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.802554671 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.803382408 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.804044307 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.804433351 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.803337803 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.803171166 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.802823295 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.803035639 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.803561342 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.804425808 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.80378443 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.802863562 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.803044856 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.804314227 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.803508442 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.802952513 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.802345449 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.803152542 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.803110294 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.80397258 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.803518412 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.802418537 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.8026632 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.802961492 seconds)
  done (took 124.486053257 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.802535737 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.802888515 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.802009853 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.801532877 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.801514637 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.801669133 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.802628379 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.799622564 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.799764584 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.799607367 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.799241815 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.800553874 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.801506759 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.799099377 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.799101353 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.799528112 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.799986516 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.801326928 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.799192761 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.799555628 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.799455822 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.799783676 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.799122713 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.799451399 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.800488461 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.799657889 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.798604776 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.800306762 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.801804914 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.800313698 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.799986483 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.799585681 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.801032054 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.800064818 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.800375425 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.799909788 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.799514366 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.800004553 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.800165639 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.801019909 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.799820116 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.800194234 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.800032357 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.800882673 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.800381548 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.800313622 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.800938675 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.800889246 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.800608696 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.800289154 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.800801188 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.801477751 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.801119897 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.799967516 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.801117756 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.800629225 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.801414632 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.801483455 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.801498783 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.801261773 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.800380513 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.80013356 seconds)
  done (took 113.366822673 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.800682114 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.801574415 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.800343801 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.8007933 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.801776238 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.801019447 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.800826533 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.801228743 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.8009991 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.801064404 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802018191 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.801116995 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802392368 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800875246 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.801239373 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.803566814 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.801028184 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.801197819 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.801540021 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.801070079 seconds)
  done (took 37.761988907 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.801476711 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.802171709 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.800971691 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.801895335 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.802498529 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.801500639 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.802388481 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802486239 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802531458 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.802871389 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.802175409 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.804316812 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801840752 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.801723616 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.801325094 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.801888413 seconds)
  done (took 30.569093457 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.799954147 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.796044899 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.795198367 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.794970319 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.795416587 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.796904536 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.792835286 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.792960937 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.792226491 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.793161202 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.792488005 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.793447951 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.792227058 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.791947521 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.793478819 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.792551879 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.794631379 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.791969743 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.791799447 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.792103852 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.791702936 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.791236577 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.792468428 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.792206034 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.791989456 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.792791061 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.792029004 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.791643625 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.792275207 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.790580234 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.791894624 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.792375147 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.791757491 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.792921375 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.791062259 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.790282123 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.791073077 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.789902772 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.790000578 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.791700474 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.79107044 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.791565292 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.791026072 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.790966484 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.79382385 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.790765258 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.789907014 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.790709954 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.789904456 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.79040373 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.790668588 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.790557749 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.790754573 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.79039308 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.790752259 seconds)
  done (took 100.307400148 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.790222236 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.791107485 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.790580194 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.791841725 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.790716734 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.792246687 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.790425429 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.790439348 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.790248478 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.79004021 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.79029005 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.79132177 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.789932487 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.790099432 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.789161975 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.790754673 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.79109988 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.789609115 seconds)
  done (took 33.954754092 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.790486681 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.79013933 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.789945523 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.790747687 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.789533785 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.789355744 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.790159252 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.79053776 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.790860936 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.789629709 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.789481974 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.789696809 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.790295647 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.790018139 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.790816373 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788670647 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.789921011 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.790385187 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.789765277 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.789092342 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.790466144 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.788995186 seconds)
  done (took 41.103006962 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.790073337 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.790335521 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.805621801 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.811205111 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.809090175 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.822745722 seconds)
  done (took 12.551560755 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790169859 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790157931 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.790095301 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789675314 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789262974 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79046016 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790737963 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788873899 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789644271 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790652969 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.790103421 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789916795 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789703792 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789314562 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79002213 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789584965 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789455414 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789857088 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790559615 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78924164 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789367755 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788725797 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.7894546 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791360862 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789278321 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788488345 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789808787 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789563371 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789404362 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790213494 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789339644 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78918991 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789448734 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789055469 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790066513 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.7901907 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788828582 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789361562 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789349569 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789444459 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.788897625 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789336449 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789416367 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789910065 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789584525 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789760884 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789919801 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789734746 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789472178 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789488494 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790480604 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79171832 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790270788 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789556101 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789314214 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789931157 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789898881 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791767324 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789129109 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790001641 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788289854 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789835285 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791819335 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789974252 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789399352 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789391902 seconds)
  done (took 119.848085008 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789717455 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.790394018 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789536131 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789577704 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789460435 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789668719 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792120642 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789634428 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789422436 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789583999 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789571901 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789535237 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790522594 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789382867 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789112865 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78962013 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789608135 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789642426 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789836165 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788702339 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78956234 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78991677 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789089212 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.790266098 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789728491 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789439499 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789882049 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789969193 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790342768 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791029261 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788998922 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788964439 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789704451 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.789260281 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791235985 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789252671 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.788525871 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790048049 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789464262 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789776847 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.790974568 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790197514 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789764288 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789866336 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790579093 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789522581 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790863249 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789775363 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790002337 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789145967 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789724705 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794697065 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789522389 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78987914 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78983042 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789853297 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790578888 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791516015 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78972309 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790198004 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790148332 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789692032 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791464291 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790635912 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790281696 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789758736 seconds)
  done (took 119.862250928 seconds)
done (took 2484.290172192 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.811738228 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.990750025 seconds)
  done (took 15.526048842 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.962860497 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.91686931 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.802230192 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.828963447 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.802272289 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.826953642 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.825382985 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.801394337 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.80096473 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.801721523 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.801637414 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.987613407 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.80385146 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.804455129 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.803008694 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.895001099 seconds)
  done (took 51.200215514 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.807688381 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.806857564 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.819824777 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.806959019 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.80663634 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.825015699 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.83769464 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.812725146 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.866872455 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.821591707 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.933326641 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.822138799 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.807488135 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.869609673 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.821258579 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.821382028 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.904396187 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.885665726 seconds)
  done (took 34.810519601 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.886903265 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.822821159 seconds)
  done (took 10.45186928 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.801140504 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.804799955 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.829273411 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.831697939 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.821125257 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.821785313 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.828691187 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.811671443 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.824417675 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.813944183 seconds)
  done (took 69.927290253 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.80908214 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.807781502 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.80880252 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.802447768 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.802143513 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.807698098 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.802794659 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.8024088 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.500707171 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.846047775 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.816493827 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.812512618 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.807084563 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.805544247 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.802537721 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.830829346 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.945240798 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.803325685 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.804807769 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.809768209 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.804548776 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.85949124 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.819739653 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.80788353 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.838275593 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.494749077 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.819235934 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.810799869 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.914453981 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.803579668 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.804527554 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.016222654 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.811136595 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.270055117 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.088480203 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.812036016 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.819107264 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.813162979 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.804734461 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.917289763 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.806242749 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.811357896 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.765920616 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.060864408 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.907473511 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.851867737 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.150608444 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.80922259 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.805789355 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.840183694 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.80945725 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.807417096 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.824158723 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.321525891 seconds)
  done (took 129.46734961 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.805871028 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.151306362 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.970972858 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.806197133 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.09130829 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.012177862 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.807107986 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.850802555 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.807517419 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.033952227 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.056204598 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.911439628 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.809856168 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.804446638 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.809278899 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.804300807 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.957419042 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.87509193 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.80774931 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.805096586 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.833882303 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.045077126 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.927438228 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.808487926 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.831317775 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.015058063 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.926052225 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.910547649 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.58154715 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.805363104 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.868649768 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.808300714 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.808750901 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.805237804 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.961505307 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.898636484 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.891739861 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.808999198 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.806099689 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.805952066 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.467771078 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.004438548 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.90047445 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.935128879 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.058408898 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.011091757 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.583206462 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.806466167 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.548549019 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.966685038 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.033193285 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.033639173 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.927422488 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.80899219 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.333663728 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.806113152 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.806556544 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.055754367 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.056572858 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.90544262 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.808953647 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.807037263 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.80889531 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.044285133 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.810900203 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.900817953 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.809469088 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.807588514 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.904562599 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.907029627 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.053564011 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.017136954 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.837587365 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.15106711 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.306090953 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.052373705 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.87293588 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.056870256 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.810318677 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.80809425 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.884643763 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.647951968 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.059992395 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.049805793 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.052278955 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.843338497 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.523774206 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.809433537 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.032812654 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.027847096 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.06775385 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.052824251 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.043258075 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.116402638 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.80861327 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.808485668 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.055939272 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.932351411 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.811830757 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.147333198 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.041115972 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.366802039 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.837274553 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.112544638 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.939346475 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.812596363 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.43585946 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.810497011 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.037153779 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.849007769 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.811935289 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.810617149 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.028680212 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.795573503 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.811232684 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.445031253 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.869437999 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.81385793 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.040352363 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.813243164 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.079209973 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.815632283 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.040773072 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.38895266 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.839874124 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.03780327 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.055610594 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.812898838 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.056259862 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.052095994 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.924333608 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.029933205 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.421316057 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.812320627 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.096572318 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.81374987 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.810362699 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.980609497 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.812458771 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.981096886 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.814692536 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.103967743 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.832717245 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.041093294 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.814720971 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.062336369 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.844071764 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.860437397 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.812976518 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.933777196 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.812801131 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.736247727 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.967827103 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.815473771 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.813033113 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.622322422 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.81225673 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.965692389 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.037755634 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.833154681 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.884975023 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.475295383 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.812691655 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.898444007 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.833842583 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.20084513 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.814200501 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.061269396 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.814831865 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.813269835 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.814298648 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.046072034 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.996768673 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.818371482 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.814473992 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.719111303 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.813236486 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.812552636 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.99375797 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.116330083 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.813269182 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.013527722 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.818608188 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.940246841 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.817047826 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.887105155 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.149369881 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.815137791 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.813953505 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.815617585 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 7.257963169 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.813925006 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.072282654 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.839725422 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.344996326 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.949475384 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.088217729 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.122503239 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.052780644 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.857891903 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.817958799 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.068485876 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.817221705 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.875989721 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.818834123 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.834365751 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.044732167 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.821107897 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.021776146 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.082961892 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.852973138 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.862285493 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.817493117 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.814627493 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.81750307 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.959491272 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.900633555 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.81945553 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.81479927 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.929412596 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.93545229 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.025340391 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.81870531 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.896093074 seconds)
  done (took 890.466587435 seconds)
done (took 1203.574794417 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.815232759 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.819329475 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.819605275 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.819518235 seconds)
  done (took 29.021719061 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.817594503 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.816142806 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.816974151 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.816687131 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.818033584 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.817060854 seconds)
  done (took 12.652426168 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.943560734 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.818605099 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.818333579 seconds)
  done (took 21.329734818 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.893709293 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.225924871 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.958550547 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.256301175 seconds)
  done (took 10.083742652 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.819841923 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.818871648 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.819042381 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.819118906 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.818719492 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.819632925 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.818655406 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.819247951 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.820258021 seconds)
  done (took 18.123557273 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.590510262 seconds)
done (took 97.551787838 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.150613865 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.882758148 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.684228886 seconds)
    (4/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.823858716 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.912153298 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.000346085 seconds)
    (7/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.138431765 seconds)
    (8/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.911102179 seconds)
    (9/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.836972612 seconds)
    (10/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.019565826 seconds)
    (11/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.82014771 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.162051099 seconds)
    (13/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.820286826 seconds)
    (14/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.87371847 seconds)
    (15/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.866996079 seconds)
    (16/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.287739698 seconds)
    (17/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.212258275 seconds)
    (18/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.030728535 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.080995405 seconds)
    (20/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.818008121 seconds)
    (21/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.925833474 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.840112372 seconds)
    (23/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.818456529 seconds)
    (24/309) benchmarking ("perf_sum", Float64, false)...
    done (took 3.702912074 seconds)
    (25/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.961782055 seconds)
    (26/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.656839197 seconds)
    (27/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.786580815 seconds)
    (28/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.318813972 seconds)
    (29/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.438352217 seconds)
    (30/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.842133997 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.905911284 seconds)
    (32/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 1.994229804 seconds)
    (33/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.085005989 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.954029033 seconds)
    (35/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.99423576 seconds)
    (36/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.918818928 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.846959233 seconds)
    (38/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.922420742 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.130935312 seconds)
    (40/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.828421236 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.152176335 seconds)
    (42/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.208537263 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.953823081 seconds)
    (44/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.288208459 seconds)
    (45/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.228608082 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.880762423 seconds)
    (47/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.915679954 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.147792639 seconds)
    (49/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.242135202 seconds)
    (50/309) benchmarking ("sort", Bool, false)...
    done (took 2.035347114 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.820771089 seconds)
    (52/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.639372857 seconds)
    (53/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.929110678 seconds)
    (54/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.118679224 seconds)
    (55/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.828949749 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.720340011 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.432903708 seconds)
    (58/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.130330642 seconds)
    (59/309) benchmarking ("sort", Int64, false)...
    done (took 5.470722739 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.856916104 seconds)
    (61/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.082735709 seconds)
    (62/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.84121235 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.588972657 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.085938443 seconds)
    (65/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.673649991 seconds)
    (66/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.215862931 seconds)
    (67/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.019826204 seconds)
    (68/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.001613096 seconds)
    (69/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.977106419 seconds)
    (70/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.979750916 seconds)
    (71/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.850469142 seconds)
    (72/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.83272043 seconds)
    (73/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.836964929 seconds)
    (74/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.919172636 seconds)
    (75/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.837473823 seconds)
    (76/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.200631118 seconds)
    (77/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.901322337 seconds)
    (78/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.843851772 seconds)
    (79/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.079617306 seconds)
    (80/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.911432684 seconds)
    (81/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.063927006 seconds)
    (82/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.923508343 seconds)
    (83/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.828829114 seconds)
    (84/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.964661191 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.827013991 seconds)
    (86/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.841565339 seconds)
    (87/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.824870913 seconds)
    (88/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.891605662 seconds)
    (89/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.840360005 seconds)
    (90/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.943610557 seconds)
    (91/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.031630539 seconds)
    (92/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.021889617 seconds)
    (93/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.016766379 seconds)
    (94/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.086232254 seconds)
    (95/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.901194738 seconds)
    (96/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.921358502 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.706425834 seconds)
    (98/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.855377904 seconds)
    (99/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.102225147 seconds)
    (100/309) benchmarking ("sort", BigInt, false)...
    done (took 6.825208208 seconds)
    (101/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.888501066 seconds)
    (102/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.882167653 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.824753306 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.72907873 seconds)
    (105/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.262183795 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.073346303 seconds)
    (107/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.933502445 seconds)
    (108/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 1.955242996 seconds)
    (109/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.838802799 seconds)
    (110/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.825803765 seconds)
    (111/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.825222745 seconds)
    (112/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 3.664465806 seconds)
    (113/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.633666456 seconds)
    (114/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.172978027 seconds)
    (115/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.928158935 seconds)
    (116/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.220638393 seconds)
    (117/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.921945231 seconds)
    (118/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.372879062 seconds)
    (119/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.934030911 seconds)
    (120/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 3.775173188 seconds)
    (121/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.315583271 seconds)
    (122/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.903792136 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.130148126 seconds)
    (124/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.825464443 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 9.172370705 seconds)
    (126/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.931294229 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.846328426 seconds)
    (128/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.826080947 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.845029178 seconds)
    (130/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.318059059 seconds)
    (131/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.830353437 seconds)
    (132/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.928623922 seconds)
    (133/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.059161947 seconds)
    (134/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.850583527 seconds)
    (135/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.714742134 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.151303614 seconds)
    (137/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.859909174 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.063616488 seconds)
    (139/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.23908644 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.218135236 seconds)
    (141/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.007321838 seconds)
    (142/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.854444752 seconds)
    (143/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.493035673 seconds)
    (144/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.914537213 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.104520794 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.114787088 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.435503442 seconds)
    (148/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.857583094 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.966667158 seconds)
    (150/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.656423181 seconds)
    (151/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.688290776 seconds)
    (152/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.129384615 seconds)
    (153/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.319502068 seconds)
    (154/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.403941233 seconds)
    (155/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.250416761 seconds)
    (156/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.865406856 seconds)
    (157/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.394920119 seconds)
    (158/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.249777234 seconds)
    (159/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.852733021 seconds)
    (160/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.093529979 seconds)
    (161/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.829867767 seconds)
    (162/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.907160852 seconds)
    (163/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.905383031 seconds)
    (164/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.516319025 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.826345428 seconds)
    (166/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 1.962477855 seconds)
    (167/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.992487198 seconds)
    (168/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 1.986752921 seconds)
    (169/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.117086573 seconds)
    (170/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.044665309 seconds)
    (171/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.969668775 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.83166842 seconds)
    (173/309) benchmarking ("sort", Float64, false)...
    done (took 5.579076926 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.830839603 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.964497122 seconds)
    (176/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.145275103 seconds)
    (177/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.891270643 seconds)
    (178/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.116929467 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.771165263 seconds)
    (180/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.629737584 seconds)
    (181/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.045788216 seconds)
    (182/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.831550818 seconds)
    (183/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.08466945 seconds)
    (184/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.852802681 seconds)
    (185/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.118682945 seconds)
    (186/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.229840228 seconds)
    (187/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.482660866 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.18401153 seconds)
    (189/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.83142349 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 4.863990804 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.960350267 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.009548394 seconds)
    (193/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.854966547 seconds)
    (194/309) benchmarking ("sort", Float32, false)...
    done (took 5.564001991 seconds)
    (195/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.160924527 seconds)
    (196/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.833226798 seconds)
    (197/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.957042942 seconds)
    (198/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.963250515 seconds)
    (199/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.118207932 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.955249764 seconds)
    (201/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.08475512 seconds)
    (202/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.015936849 seconds)
    (203/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.111590371 seconds)
    (204/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.016087584 seconds)
    (205/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.147595819 seconds)
    (206/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.756292822 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.897312639 seconds)
    (208/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.983148694 seconds)
    (209/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.831944681 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.932094713 seconds)
    (211/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.144305918 seconds)
    (212/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.306718244 seconds)
    (213/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.743327403 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.820644498 seconds)
    (215/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.236538139 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.058600525 seconds)
    (217/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.9787822 seconds)
    (218/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.850672427 seconds)
    (219/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.845768097 seconds)
    (220/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.835669937 seconds)
    (221/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 1.977474168 seconds)
    (222/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.840024063 seconds)
    (223/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.829655253 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 4.16161621 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.535280964 seconds)
    (226/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.940255901 seconds)
    (227/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.438875961 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.93620547 seconds)
    (229/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.990065528 seconds)
    (230/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.833926755 seconds)
    (231/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.014809655 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.859712605 seconds)
    (233/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.656267102 seconds)
    (234/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.593930441 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.955559856 seconds)
    (236/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.83156036 seconds)
    (237/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.320648345 seconds)
    (238/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.22443043 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.596723494 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.966899841 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.148312411 seconds)
    (242/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.945062384 seconds)
    (243/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.580102525 seconds)
    (244/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.565837737 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.502630097 seconds)
    (246/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.850482326 seconds)
    (247/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.042094148 seconds)
    (248/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.910593962 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.094434702 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.236254731 seconds)
    (251/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.935028675 seconds)
    (252/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.077959213 seconds)
    (253/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.225325198 seconds)
    (254/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.075812309 seconds)
    (255/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.932609251 seconds)
    (256/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.830820163 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.443390413 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.839739981 seconds)
    (259/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.868730906 seconds)
    (260/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.924258261 seconds)
    (261/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.120851699 seconds)
    (262/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.833015575 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.092407339 seconds)
    (264/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.918306583 seconds)
    (265/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.955309396 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.230025319 seconds)
    (267/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.494166502 seconds)
    (268/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.941718841 seconds)
    (269/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 8.561072767 seconds)
    (270/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.839720164 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.87329578 seconds)
    (272/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.855067702 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.850146696 seconds)
    (274/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.039810713 seconds)
    (275/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.863586351 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 1.968831366 seconds)
    (277/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.83372206 seconds)
    (278/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.936076887 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.22754746 seconds)
    (280/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.589231855 seconds)
    (281/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.388552358 seconds)
    (282/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.161528242 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.838913694 seconds)
    (284/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.14072888 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.965946212 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.93287849 seconds)
    (287/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.522207192 seconds)
    (288/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.097518793 seconds)
    (289/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.136501883 seconds)
    (290/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.028465066 seconds)
    (291/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.92007222 seconds)
    (292/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.988893002 seconds)
    (293/309) benchmarking ("sort", Int8, false)...
    done (took 4.723125113 seconds)
    (294/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.20385542 seconds)
    (295/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.170037066 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.706342408 seconds)
    (297/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.935464471 seconds)
    (298/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.969313458 seconds)
    (299/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.845383357 seconds)
    (300/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.836623743 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.870926391 seconds)
    (302/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.836387824 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.15048469 seconds)
    (304/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.089621427 seconds)
    (305/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.733026183 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.799990244 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.055006732 seconds)
    (308/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.838221566 seconds)
    (309/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.936708119 seconds)
  done (took 998.260689139 seconds)
done (took 1000.088410407 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.862958875 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.854524402 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.837942498 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.859149538 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.950717219 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.8832512 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.853154729 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.842136346 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.888381485 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.888367041 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.836750447 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.880292855 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.839084593 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.838058101 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.838247613 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.853897293 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.13853655 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.864000679 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.856696552 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.850431142 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.857325144 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.83681766 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.889752421 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.879801507 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.843750039 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.844149778 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.843315935 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.860233115 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.952406126 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.84455114 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.844706557 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.852771474 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.137533326 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.86156034 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.836520402 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.858166275 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.852499626 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.851883244 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.844411512 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.871975561 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.276626279 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.843666583 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.840716868 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.84062138 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.840040817 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.845900916 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.840416731 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.848974234 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.85630161 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.85629222 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.272272788 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.861960381 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.844679015 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.842410582 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.85290869 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.840140107 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.844245436 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.85658201 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.860396767 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.857672528 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.125873577 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.871642327 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.844282241 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.859257277 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.849637294 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.307322702 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.846276749 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.849428348 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.277259622 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.85441445 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.308322849 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.85652282 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.84392107 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.855795458 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.874707789 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.137555737 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.862694677 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.839984156 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.851474954 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.840440988 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.854282372 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.856360161 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.845695209 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.841814629 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.860154421 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.886643797 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.855501356 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.842468987 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.856002931 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.862061042 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.852835771 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.856549093 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.84563052 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.841204189 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.854569418 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.847804289 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.847633049 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.846135984 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.847816764 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.856219062 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.275946365 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.865415616 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.840466128 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.840455162 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.84251162 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.858155097 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.27653896 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.848458539 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.865648956 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.892430995 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.844794625 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.130617872 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.870908039 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.860847619 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.855735815 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.846173964 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.842637017 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.128472657 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.298575792 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.864364585 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.844332713 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.842159368 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.860681531 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.845791574 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.840653763 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.142305687 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.870247806 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.860682971 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.967208316 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.857199146 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.877759894 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.842700409 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.849654478 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.892741918 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.861834522 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.877626322 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.847309672 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.861646897 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.862056172 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.841945594 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.857968677 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.858402151 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.844365393 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.85424193 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.842451583 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.89051074 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.860301723 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.860237862 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.867463008 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.968554943 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.843121998 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.131627697 seconds)
done (took 289.766566121 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.921577764 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.843835113 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.962771351 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.844230797 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.93089714 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.916001485 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.844946509 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.845690996 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.845326793 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.343307672 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.844307434 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.851156608 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.845300061 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.845573907 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.913800565 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.846271177 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.845379652 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.289572837 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.845932533 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.925995652 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.846098269 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.845123231 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.844808284 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.364809452 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.843362842 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.84687735 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.923977464 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.845107645 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.296866599 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.845271911 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.845266824 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.309913635 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.925011855 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.87408603 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.853846029 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.853285332 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.934254577 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.853931615 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.913925695 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.911803776 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.965310419 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.878194093 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.845100079 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.845277883 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.848526132 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.848360549 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.846212113 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.876108803 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.845523984 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.851907024 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.291491027 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.851784007 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.854376133 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.845891314 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.846882955 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.873686261 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.847249148 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.848601739 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.926057034 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.846610473 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.913954199 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.349940701 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.346365082 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.846795201 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.847913665 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.84843754 seconds)
  done (took 183.743863502 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.91514441 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.922764081 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.913300252 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.852710847 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.896645677 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.914133488 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.851749127 seconds)
  done (took 15.044087789 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.853622989 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.84728198 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.89689508 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.896092846 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.847300128 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.0272322 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.858693832 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.852409124 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.875118 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.847886915 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.513722179 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.89690089 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.855466535 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.847145147 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.859431307 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.904981384 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.850716813 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.849052357 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.963471347 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.997749963 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.852656802 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.855340105 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.875197223 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.860175742 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.849695916 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.849511404 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.848479745 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.854612084 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.849084384 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.849124529 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.848824933 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.900769044 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.848796813 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.849566714 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.849009048 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.850073926 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.849157098 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.850756992 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.84956845 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.849958539 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.849969216 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.849765361 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.849438288 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.849522263 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.850385625 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.873974272 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.849904972 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.850230659 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.850474664 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.849865518 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.87667406 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.851159713 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.850387036 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.854158525 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.892094868 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.857521698 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.851721878 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.850371062 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.850849748 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.850934704 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.850891807 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.000091031 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.899679463 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.849629261 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.899986055 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.005109838 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.851348262 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.850696712 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.850716941 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.939031847 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.850652341 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.901005784 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.85152897 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.965479968 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.851688531 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.030257675 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.874303643 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.855924842 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.855409528 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.850685889 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.859726401 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.851030427 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.854194809 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.85814996 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.856633888 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.852958812 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.852056214 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.854453538 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.858977738 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.851792306 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.900834839 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.852577041 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.852642949 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.993168676 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.852872982 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.968461795 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.881119327 seconds)
  done (took 204.057263625 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.859542372 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.860093034 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.854531877 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.867661828 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.854450888 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.853721906 seconds)
  done (took 12.933169482 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.856788446 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.856284262 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.853951454 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.853175339 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.853429944 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.853464885 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.853285153 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.856849558 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.857416666 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.852555503 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.854001182 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.853189013 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.855708867 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.853997214 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.853663822 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.853018843 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.853703856 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.853817923 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.854369052 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.853428928 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.060214819 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.854162905 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.85351676 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.858667518 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.858141771 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.853991442 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.867088679 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.854062566 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.855045747 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.86151993 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.85779744 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.854024972 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.858194344 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.860836777 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.858301267 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.857941706 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.859594923 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.853958413 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.854282628 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.856077514 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.854965436 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.854857911 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.855199447 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.855752483 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.858083449 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.863222044 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.858629429 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.867518618 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.856061203 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.855333891 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.85593382 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.856553541 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.855905186 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.854946568 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.860299674 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.861554466 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.85884962 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.857548042 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.855727685 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.859716461 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.860769118 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.855904053 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.858426615 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.860819244 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.863950205 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.8553971 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.861298643 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.859586472 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.856416444 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.856424892 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.856599573 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.856820402 seconds)
  done (took 136.677967135 seconds)
done (took 554.244447656 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.889113225 seconds)
  done (took 8.674714651 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.99345969 seconds)
  done (took 8.873961566 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.364065035 seconds)
  done (took 10.150390979 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.869766006 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.881242405 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.867448539 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.863794494 seconds)
  done (took 29.277424702 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.211071427 seconds)
  done (took 8.998851176 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.869649025 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.855834172 seconds)
  done (took 15.587797246 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.881562583 seconds)
  done (took 8.668619102 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.21683038 seconds)
  done (took 9.015261132 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.871091996 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.856262035 seconds)
  done (took 15.53643037 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.859988457 seconds)
  done (took 8.646953653 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.165021758 seconds)
  done (took 10.027907065 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.8794034 seconds)
  done (took 8.708387156 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.865118307 seconds)
  done (took 8.652396186 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.039218271 seconds)
  done (took 9.826358674 seconds)
done (took 162.432162339 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.861560924 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.857236406 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.857538582 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.857569302 seconds)
  done (took 29.22182585 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.893321268 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.892746726 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.903075976 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.89312698 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.882712628 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.884470403 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.893408167 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.894274182 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.884956825 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.890968098 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.893738949 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.890969997 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.892638293 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.902851087 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.902275566 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.891400925 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.893522215 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.893702503 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.884379646 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.90211463 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.891106046 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.893556595 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.859882051 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.859775374 seconds)
  done (took 47.154468348 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.049777604 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.931413788 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.01287919 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.91258495 seconds)
  done (took 9.696197772 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.859019757 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.92405282 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.911755887 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.907663197 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.909920612 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.962771589 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.91305897 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.999644687 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.988145447 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.987108413 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.867445193 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.880981023 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.88167146 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.907725092 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.965667659 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.860236871 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.860616833 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.976035765 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.921927708 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.040841269 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.860201148 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.914975207 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.911871462 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.913210404 seconds)
  done (took 47.916349992 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.860930238 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.86885819 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.868395373 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.861830701 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.862446131 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.862315815 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.868015337 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.86326458 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.883235217 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.863746493 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.860904044 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.86309298 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.868764131 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.862738375 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.862673945 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.87524937 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.876043429 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.862840985 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.866930477 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.869296172 seconds)
  done (took 39.122098131 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.861285989 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.707524087 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.206958742 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.113539755 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.859883246 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.860671463 seconds)
  done (took 31.401023467 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.874029603 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.866889677 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.861428015 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.917206884 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.00182675 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.869168551 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.862487193 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.871906474 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.905850538 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.92812052 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.882011974 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.88983048 seconds)
  done (took 24.522623787 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.862281636 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.864694081 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.863609607 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.875312391 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.87313144 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.870141214 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.871211286 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.862433319 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.87592595 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.88101939 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.871880841 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.87440184 seconds)
  done (took 44.240485076 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.568361447 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938154029 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.863593444 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.738172298 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.318986383 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.418749905 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.756792992 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.571934075 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.333163552 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.790268892 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.065639806 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.863229267 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.946184644 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.864500468 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134195318 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.237114842 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060246068 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.106150464 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.522227047 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.895315159 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.066343786 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089183934 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.156757039 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865778993 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866044201 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.956156739 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.308793275 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.617823892 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.900147065 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.170246813 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.107731012 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.819921606 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920639332 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.866958086 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.876490683 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868407614 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870071068 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13623995 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.954624766 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998470688 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939058037 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.113177686 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870127412 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.283091258 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.568838446 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.162474611 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.982130055 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.863575798 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868811975 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866436726 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.791763549 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949001069 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.868670801 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.871288264 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.565568008 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.865516821 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938658757 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.867167236 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068052705 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.672599718 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.552532025 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.868607181 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869880767 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.415250922 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.965511279 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.978206942 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.589260809 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.250459345 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.291677453 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.964588402 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.868300386 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.867658674 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.013211578 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832184877 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.637466732 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.905664735 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.003812229 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.884500401 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.506892431 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.156482822 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.288482503 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.427857845 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.78739217 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162054506 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.571152438 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.854524464 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084522373 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.701723558 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.79356121 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.088652086 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904228449 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87227212 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.130446126 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.641502479 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.979318122 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.880933344 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301214035 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884443812 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.873145668 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869449679 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.081600048 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.274546704 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900506302 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.988541042 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884625334 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.952290093 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794970543 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.881962217 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.869126275 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.771481562 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.874270041 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.808131119 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.917068518 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.549976225 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.911690983 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.808072974 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.871547451 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.974086685 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910256877 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.825948899 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12370864 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.174994633 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.549163641 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.832283138 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.00308818 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.265266573 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.098984283 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.876520137 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.085494103 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.396432068 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.302119799 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.918619703 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.157878945 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.930925977 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.159722949 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29961449 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94635583 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.655876943 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.498468992 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.085790006 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884549477 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.872081078 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.872806055 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875394587 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809855474 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.516791353 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.24716758 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.040651767 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.084117539 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.195409295 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.855219323 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.828563676 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180817257 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.006983734 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.859178145 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.5266448 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.27381567 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.680547811 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.897301671 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.013084126 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.05358986 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.83414135 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885614115 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948136225 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890796478 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.886030566 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.243662047 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.237402985 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.874375243 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.873674278 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.822652523 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879663262 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.873646777 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.403594569 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.838888168 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.879776062 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.884269749 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.745312632 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946638381 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.875269662 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.876192076 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.408448472 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.375756325 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.876663414 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.534781545 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.976575216 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950433345 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.145466588 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.234001099 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.004092299 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.57219367 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.301626409 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9886313 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.574232017 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.800112419 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.873414979 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.814255057 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875599116 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.877091032 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.878359156 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.059648672 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.150396831 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.17583813 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.340478916 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941392801 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077852168 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.598703363 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829105718 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.874721748 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.879185714 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.876837488 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.8744385 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.383488813 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.166667604 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.970520925 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904157935 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.880299239 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003935955 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.885980386 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.801249568 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.875896012 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.876921217 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.315050694 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.9041266 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.822172876 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.183531218 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.769820638 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996915249 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922953524 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.886940743 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880956372 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.594126873 seconds)
    (233/481) benchmarking "4d"...
    done (took 2.918149942 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802435336 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315184377 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911644035 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.641156952 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364984622 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.435185112 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170296155 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.195708337 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.204164859 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.946348736 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.090505708 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.960480098 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.931068745 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.966443792 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811800931 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.801686535 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.531834768 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.212731242 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.143680003 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884291987 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09359808 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.593155485 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.107103849 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906611911 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.572601373 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182853948 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.85536007 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892611809 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.197168005 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.982754689 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.958051897 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.879586106 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.827157059 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.21389634 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920007806 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.583360839 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.891267571 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.2283035 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.314357331 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.091953374 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.246698265 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084595643 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.884199384 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231325227 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.076898807 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.916250603 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.882728011 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.865449762 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.093335013 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.454880575 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.73767168 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883781046 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.034634503 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.171553174 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.785883147 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.881978877 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.030071479 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.136885425 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879019509 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.235618718 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.251508301 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.986241681 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937601874 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.105015729 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.561325136 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181524464 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.43249892 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.360377373 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886250107 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.805493266 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.579168835 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.082278599 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.882966839 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.843423643 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.097714471 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114921929 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.562601147 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.099447032 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.123184903 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.890961474 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.148813594 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954813508 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.977956495 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.189200716 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.318587369 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.12916637 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.106543362 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.417780883 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.099386451 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.339435308 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.046115024 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.881939524 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.085601218 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.098075676 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.094682604 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.255526763 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053378139 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.590182195 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.886075775 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.087980154 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.178448229 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939877211 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.265518726 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.051196589 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.962872974 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887981075 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9465369 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.887452827 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890493474 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.283002755 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.410762371 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.89576969 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959181794 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.98799686 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.38546281 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.88542449 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.886804113 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154102352 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232839524 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.215161685 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.8677763 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.882682575 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886820451 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010642837 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.808417315 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887362114 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152355274 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.885280913 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.29800936 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.032159208 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89979396 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.198254714 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.27249788 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.552191329 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.843924505 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888505901 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104419834 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194069448 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.068799052 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.99649999 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153962134 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.221843345 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.917800252 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.253114524 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128530461 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88680254 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.758051398 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.886959148 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013790165 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.087096506 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.158223311 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.392091021 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.656338066 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.152877529 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.73966244 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.887995703 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.605113215 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15471579 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.155607637 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.938794588 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949475629 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889109018 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.31647084 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.605122913 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016912281 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.75460529 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.812255116 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.884390078 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.219051615 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.125278964 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.594402849 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.888455778 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.162344293 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190233656 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159136536 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.938394723 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.751551357 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100970315 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888178625 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.888696788 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.149784391 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104898817 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.131545305 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887512741 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.887687008 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.686000665 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801610723 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.876973113 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92995263 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.102050783 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.896591942 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.389683378 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.575522641 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161999851 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924288417 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877622358 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.145261266 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.39326214 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.427518797 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.876412544 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092596002 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.855817796 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169868394 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.871808697 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.340421371 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170684301 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.869900056 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.402727692 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.110620523 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134553558 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.797946048 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.874497752 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078544063 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.726953832 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.864230254 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.845532642 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.299963617 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092911813 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.59592901 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.415540838 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.862233721 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.864291052 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.303216933 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887958691 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.302794426 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882462098 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.870238863 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.374660701 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.566713851 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.138829419 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.094563047 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.387847621 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.433059105 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.85113701 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.846159324 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849173187 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.763237035 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.031122987 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.029250193 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126340028 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.876630465 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.279085661 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.873446836 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.209745942 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007034415 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.0490533 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922581381 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.405542182 seconds)
  done (took 1660.809962761 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.889570193 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.935500492 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.900240789 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.912870613 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.89135447 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.899094093 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.959673442 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.885567925 seconds)
  done (took 57.091639195 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.887016985 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.893238151 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.882744592 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.880358033 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.881044589 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.877962306 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.031346964 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.884639271 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.878039725 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.879459301 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.875602131 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.87188044 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.152494415 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.886660085 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.871217196 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.870204219 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.874652877 seconds)
  done (took 74.192552524 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.872680712 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.108375945 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.92901509 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.867571854 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.811509562 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.878851711 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.857142888 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.891873603 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.867455833 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.106298671 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.165548793 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.896205191 seconds)
  done (took 90.054782122 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.869546726 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.865395437 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.864942676 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.864850294 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.865213946 seconds)
  done (took 11.127869424 seconds)
done (took 2168.375456679 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.093215898 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.923302733 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.961526202 seconds)
  done (took 5.680363287 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.010606385 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.056835842 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.169434024 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.930419455 seconds)
  done (took 9.96770026 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.167184417 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.241743197 seconds)
  done (took 6.204497836 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.215120512 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.864464527 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.235334788 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.868846981 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.867286845 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.866530267 seconds)
  done (took 22.404113091 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.86579476 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.865268615 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.865298899 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.866015978 seconds)
  done (took 9.256744047 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.870294169 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.572283266 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.866171255 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.880870817 seconds)
  done (took 20.985628816 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.074123532 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.98234721 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.010624773 seconds)
  done (took 7.86498488 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.009636412 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.709741227 seconds)
  done (took 6.51722457 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.0132172 seconds)
  done (took 3.811120278 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.896309279 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.137860047 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.366198332 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.411542175 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.530965036 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.638793563 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.166735219 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.091862984 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.303613856 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.300083217 seconds)
  done (took 24.642406711 seconds)
done (took 132.538866555 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.209812056 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.8835751 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.070471912 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.225249994 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.091264869 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.068829423 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.089153965 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.216583954 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.895305863 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.884722969 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.225979362 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.08922795 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.034503473 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.880975128 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.04313126 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.88028787 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.088078403 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.218258618 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.904037945 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.124242366 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.097783949 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.870746922 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.069260074 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.881750877 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.118182026 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.020639391 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.413977069 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.881964944 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.048279253 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.424130029 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.021156066 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.272166362 seconds)
  done (took 168.043451144 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.870281341 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.870055311 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.870894334 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.870220034 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.407332816 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.871708678 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.873307528 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.871460773 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.335710448 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.312302368 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.871743035 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.39586495 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.873473168 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.870800852 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.873238328 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.871198534 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.516243348 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.871422118 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.871424544 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.873171791 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.872347581 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.223766004 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.870264877 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.24238498 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.502358773 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.866214488 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.866453883 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.865755966 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.865121876 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.863156739 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.86436974 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.863134009 seconds)
  done (took 209.608886851 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.849103094 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.861831149 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.862325715 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.863534128 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.863777147 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.864763208 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.864601685 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.863821533 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.677825879 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.66643941 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.862633183 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.8615519 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.862852954 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.859907269 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.866666392 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.859144579 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.865390053 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.877395221 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.856219232 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.853478947 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.85357193 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.514488596 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.849190096 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.534247372 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.852301722 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.851459485 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.845752819 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.845231355 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.844545586 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.842557614 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.840332197 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.839075674 seconds)
  done (took 220.171064894 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.076629108 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.836708598 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.83777438 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.754308251 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.835385296 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.834288449 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.814607641 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.081048205 seconds)
  done (took 18.838992364 seconds)
done (took 618.471674957 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.195146566 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.019296573 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.001036782 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.851711376 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.106071199 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.38551077 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.849118752 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.938058913 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.795428983 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.935223538 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.558926751 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.871537779 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.587226779 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.877702089 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.977783092 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.90680964 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.42924208 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.520285735 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.997366503 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.924501938 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.038568793 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.770724433 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.930104723 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.730220147 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.504610223 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.82042869 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.901248205 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.428917417 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.861895657 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.012462923 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.572458235 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.14863062 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.867871634 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.850271592 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.90214762 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.883617652 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.089123873 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.863660725 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.973043006 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.564379149 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.932996484 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.589334507 seconds)
  done (took 101.729167693 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.838665454 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.835080272 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.834865729 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.835405559 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.844267649 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.833799562 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.834070669 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.834419414 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.833996956 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.834843398 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.834855178 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.844077458 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.834995167 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.843967484 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.83527909 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.834706383 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.834754205 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.845088751 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.835362755 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.834941391 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.835374701 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.834658208 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.831783859 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.835316487 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.83655612 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.835227971 seconds)
  done (took 49.523839231 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.83125568 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.985377081 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.077480324 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.852733867 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.832223323 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.834835259 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.850120214 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.836661999 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.834526374 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.834970683 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.921173855 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.838957719 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.850740084 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.07801255 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.85066369 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.832111877 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.832845107 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.833338565 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.993966529 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.849271038 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.852497439 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.836937036 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.852002231 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.846362474 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.835321341 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.832793385 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.836057389 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.27194759 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.843090222 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.922804271 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.924877331 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.857933575 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.209640244 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.084396727 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.896084605 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.841488314 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.832669573 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.92811549 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.842573822 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.834095324 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.850635362 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.840229884 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.076858762 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.355071183 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.849560721 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.832908448 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.282376605 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.93781949 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.875627654 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.848187442 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.08242275 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.851780606 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.834012525 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.835641388 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.870562191 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.848908096 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.834925232 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.150364413 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.848107246 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.852282986 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.838846415 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.835257379 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.000617475 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.844600998 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.990165143 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.844832 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.84150577 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.836526614 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.079980506 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.853134505 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.37147187 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.850917835 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.836142653 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.925379889 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.996384781 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.312493269 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.852067636 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.001327996 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.227043298 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.860394289 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.848054422 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.264702301 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.8648549 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.845831723 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.837551108 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.837446717 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.836414749 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.881915118 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.851787028 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.273950376 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.366572809 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.169913759 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.862942591 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.846767604 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.838513459 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.152869295 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.844404399 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.837030177 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.075090785 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.378872934 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.853338488 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.844668787 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.348880662 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.853494609 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.856153101 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.845196497 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.09092123 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.853568992 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.881673918 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.836854497 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.84435478 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.839725094 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.855285348 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.84482069 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.837965932 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.340420324 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.9458466 seconds)
  done (took 228.04471906 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.838182851 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.838895488 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.836129083 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.837135081 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.836743397 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.838159337 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.836170083 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.835991307 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.837909628 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.836273973 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.835722607 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.837210295 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.837806234 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.84331524 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.887879945 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.838136594 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.460052684 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.838201016 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.837675456 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.838641956 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.479992284 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.842806698 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.837340789 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.835026706 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.833648617 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.831905508 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.837339156 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.88158944 seconds)
  done (took 166.577601491 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.825623626 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.939188722 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.844618944 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.856765936 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.83344935 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.822930791 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.924244655 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.843519044 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.829290857 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.823538154 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.823839485 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.883729913 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.837435383 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.921373777 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.856489987 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.928960136 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.930768742 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.833553617 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.823071899 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.824043792 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.852861412 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.832979925 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.884536485 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.95163109 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.842804065 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.937559541 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.842970487 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.824566988 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.824187195 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.937675924 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.842930223 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.885270465 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.857766148 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.843076297 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.942838513 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.942687324 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.932131687 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.931590975 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.833936405 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.823939226 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.824599018 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.827042201 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.938502554 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.843609225 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.82651203 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.94181711 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.842492113 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.825936236 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.825939876 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.825453387 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.837654012 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.842533423 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.890562628 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.958137445 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.860401205 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.848737147 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.923530565 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.962590098 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.826656582 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.923242068 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.836909347 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.939124369 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.847067771 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.828766195 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.828072249 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.830346099 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.855670202 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.934457165 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.935096475 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.835371877 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.92296663 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.863092548 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.835548329 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.827614503 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.821582424 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.936055896 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.93953757 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.860258396 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.858339924 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.856002284 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.829348223 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.820465119 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.822579134 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.837046214 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.827838122 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.933050325 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.936597703 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.826466019 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.817860871 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.818342055 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.818486298 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.842629931 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.939329589 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.853625963 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.925606007 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.886849592 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.89299225 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.833624078 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.831074553 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.822745585 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.881572012 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.831292501 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.826300905 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.13280386 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.875135403 seconds)
  done (took 197.985816174 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.190842065 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.862325759 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.867719514 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.131396776 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.204848247 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.767565912 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.85657491 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.85822914 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.890905391 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.084342947 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.922576951 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.872984792 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.844293923 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.828576716 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.853281026 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.889037351 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.861573449 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.209307959 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.073308268 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.339383144 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.849205333 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.142158969 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.191418634 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.445567557 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.904162424 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.258354828 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.449936071 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.025300098 seconds)
  done (took 61.429082785 seconds)
done (took 807.054174851 seconds)
SAVING RESULT...
DONE!
