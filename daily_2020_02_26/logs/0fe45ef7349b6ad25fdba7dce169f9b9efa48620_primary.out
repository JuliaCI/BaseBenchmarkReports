cset: moving following pidspec: 22277
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.415773446 seconds)
loading group "string"... done (took 0.605739186 seconds)
loading group "linalg"... done (took 7.85250346 seconds)
loading group "parallel"... done (took 0.167014899 seconds)
loading group "find"... done (took 1.173874866 seconds)
loading group "tuple"... done (took 1.870860606 seconds)
loading group "dates"... done (took 1.350135757 seconds)
loading group "micro"... done (took 0.235716618 seconds)
loading group "io"... done (took 1.047712539 seconds)
loading group "scalar"... done (took 40.179107444 seconds)
loading group "sparse"... done (took 12.25878271 seconds)
loading group "broadcast"... done (took 0.974528306 seconds)
loading group "union"... done (took 12.772702538 seconds)
loading group "simd"... done (took 4.832537665 seconds)
loading group "random"... done (took 9.323126988 seconds)
loading group "problem"... done (took 1.872132111 seconds)
loading group "array"... done (took 21.830634689 seconds)
loading group "misc"... done (took 1.773335971 seconds)
loading group "sort"... done (took 3.551844815 seconds)
loading group "collection"... done (took 17.91330784 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.567443429 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.134065721 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.136149588 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.12827318 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.156168303 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.123328355 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.135394223 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.094673395 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.863644581 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.16205252 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.126484254 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.432552829 seconds)
done (took 5.605661134 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.185287282 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.091835255 seconds)
    (2/2) benchmarking "String"...
    done (took 0.091413422 seconds)
  done (took 1.359386516 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.073097545 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.136584742 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.074894852 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.076194835 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.075444172 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.074463455 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.074429198 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.074389357 seconds)
  done (took 1.761942511 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.081737644 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.07610759 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.077850625 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.075935518 seconds)
  done (took 1.491340715 seconds)
done (took 6.057966128 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.809299234 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.219784344 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.196222169 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.418152432 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.136895104 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.181731342 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.649212431 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.340245685 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.196471406 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.084429973 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.118024237 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.352490573 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131519028 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.647603604 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.08224094 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.098268554 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.145766366 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.448841586 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.074826166 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.090153425 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.096635673 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.137847813 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.093616482 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.08173013 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.155442284 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.075230207 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143350268 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.087876623 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.074469187 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.227368849 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.180013137 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.693770173 seconds)
  done (took 10.687241001 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.109326841 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.108520173 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076601084 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.132937039 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.107008396 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077427339 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083049521 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075188396 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.098796091 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.141359045 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.099161827 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.111948805 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.0737143 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07662873 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.092731396 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.212916242 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.089273899 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.090219543 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.0784627 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086154081 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115553326 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.085434989 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.087987451 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.087657714 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.136822522 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.186971929 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.105118986 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.105020946 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.073829244 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.090638067 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.122199548 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.135623513 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073649821 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.073315267 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.134841619 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.102278942 seconds)
  done (took 4.960050843 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.024124316 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.151776359 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.098426581 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.141560975 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.121485407 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.072821851 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.11565241 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.076001063 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.089398554 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.217973601 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.35729414 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.076061867 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.632356886 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118616787 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112756154 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074910294 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.076746306 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074378363 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.548659253 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.10442342 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.114048848 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088909407 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.078062879 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.077052204 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365381443 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075536349 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.07229416 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077021071 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064817018 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.131719629 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076182858 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.982548681 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.168942386 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.074095904 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1082799 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.307220022 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098099954 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.15011834 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077863448 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.072373347 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.163670069 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07862196 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.074204239 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.092444395 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111312266 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124662626 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.073721232 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074812004 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.173212223 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.072020476 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.072277563 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.087280838 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.105948536 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.162777065 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.088754536 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.075789516 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.287265091 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097571231 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.077482527 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.073296895 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.20730256 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132381099 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.075565237 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074415535 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076590358 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07680302 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.367961967 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.073945708 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.193288662 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.075502603 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.083648672 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077261796 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.077679899 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080150922 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080317898 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.095971812 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.074170844 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081890947 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.074057701 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07390366 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.074649552 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.092607355 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.404660023 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.074292318 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.075571767 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.072612826 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.071905764 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.201676829 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.074926278 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.073220988 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103140187 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107553085 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076261392 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.074375067 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.119387474 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.074518949 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.09036075 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.076942105 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.121127019 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.073971105 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.116488399 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.07646237 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.10558815 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.076999853 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110871171 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.086778304 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076184849 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.449620406 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076227219 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.073411571 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07615947 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.072785521 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.075253869 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.074294322 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.085654633 seconds)
  done (took 22.965160469 seconds)
done (took 40.815838955 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.263083605 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.085901651 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080336751 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.08034249 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080663224 seconds)
  done (took 1.862008922 seconds)
done (took 3.117041218 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.132576579 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108493213 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072646739 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.105538623 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072465676 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110572302 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109257907 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.085060253 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.1084548 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.072239174 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106505358 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072509908 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072218067 seconds)
  done (took 2.503836211 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092644208 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.093356921 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078741349 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.091870781 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07137934 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.092116965 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.090031909 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097899506 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090240183 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081176835 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071362587 seconds)
  done (took 2.199995516 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093758098 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.092865149 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079424836 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090739027 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071927768 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090655181 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092702521 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094456108 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090503225 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082135647 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071441923 seconds)
  done (took 2.196906376 seconds)
done (took 8.144855046 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.086404463 seconds)
  done (took 1.320025556 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.579619306 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.946445856 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.089740086 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.11804543 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.202058554 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.123754832 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.268267627 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.094456357 seconds)
  done (took 8.83958631 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.115118507 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.081365954 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.07774048 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.079866558 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.078874864 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.078622722 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.082464325 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.078691162 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.079525765 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.078885763 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.077494123 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.079486676 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.080196632 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.078897021 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.076151322 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.076536415 seconds)
  done (took 2.610230325 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.10115964 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.099467703 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.081263621 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.082552357 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.080406131 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079156228 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.082572683 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.081726353 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.078589279 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079866524 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.082254232 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.080646643 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.079260738 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.071809661 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.081230736 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.082461243 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.078436081 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.080868892 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.081709296 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.083746828 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.082194901 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.071690296 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.079821461 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.081457336 seconds)
  done (took 3.31117337 seconds)
done (took 17.326569861 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114695606 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075865105 seconds)
  done (took 1.430520842 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.091916134 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.089510179 seconds)
  done (took 1.431452022 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.090686695 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.074121036 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.096082775 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.084763496 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.073922915 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.074097433 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.093710398 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.073790525 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.073644929 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.073973359 seconds)
  done (took 2.05707453 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.077742507 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.085356893 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.077240031 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.088741769 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.080737169 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.071153783 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.079451278 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.075248766 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.084917689 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.070620218 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.078725465 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.089933464 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.078367779 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.091619856 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.079663944 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.076223841 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.077578273 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.074574304 seconds)
  done (took 2.694637625 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.075498315 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.074754953 seconds)
  done (took 1.408084491 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.075301445 seconds)
    (2/7) benchmarking "second"...
    done (took 0.071738713 seconds)
    (3/7) benchmarking "month"...
    done (took 0.07376835 seconds)
    (4/7) benchmarking "year"...
    done (took 0.074506153 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.070941312 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.069880541 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.070693419 seconds)
  done (took 1.759857727 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.396324029 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.127485954 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.330842457 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.080008925 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.089371053 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.274027332 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.073836749 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.078440768 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.078884648 seconds)
  done (took 2.826232316 seconds)
done (took 14.866434839 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.090958965 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.094799446 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.104570236 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.386426196 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.098666238 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.073759808 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.122029311 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.194525884 seconds)
done (took 2.433865582 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.222131069 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.706113108 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.448867437 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.220773224 seconds)
  done (took 2.639432494 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.361490846 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09776445 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067309035 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.074917368 seconds)
  done (took 1.875209345 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.076939704 seconds)
    (2/2) benchmarking "read"...
    done (took 0.077596439 seconds)
  done (took 1.421135994 seconds)
done (took 7.429083529 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075513573 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.094917397 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.073643336 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.070952176 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.073446216 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.07132713 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.071366779 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.073729 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.074240646 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.074559 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.073610388 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.073755257 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073690716 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071239439 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071081195 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073347262 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.071225394 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07083659 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.071251269 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.071686086 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.185309318 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073859733 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.07100379 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.070998287 seconds)
  done (took 3.176179884 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.093359962 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.07400853 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.079289713 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07890016 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.077138098 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.078891932 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.078833796 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.073766618 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.079001599 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.076065317 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077148 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.077217363 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.075993796 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.077133313 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076256264 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.077254798 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.079190473 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073336924 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076027095 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.077330091 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.078862864 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073618195 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.076722324 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078662515 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.077127206 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076689242 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.075721032 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.073678355 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078174204 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.076799197 seconds)
  done (took 3.599113135 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.080245324 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071074413 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.071466006 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.078519743 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.071068318 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.072947764 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.071024272 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.070909626 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.0722182 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.07081464 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.07205099 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.070792511 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.070627658 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.071989732 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.071635894 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.074975532 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.086833479 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.071328362 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.071078344 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.071788137 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.074393678 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.073491454 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.070551259 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.071324624 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.070897607 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.070592831 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.07151565 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.071613141 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.071834802 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.071336703 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.074286259 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.074677825 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.07061824 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.078419709 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.07505667 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.070921788 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.075089649 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.070806459 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.071643777 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.070440214 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.07120753 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.070740075 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.070638098 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.078373857 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.072096248 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.072308803 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.07074408 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.072097158 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.071386659 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.073310419 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.070638404 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.070664365 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.07318348 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.072237955 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.07542345 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.070648941 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.072137598 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07090457 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.072010895 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.070982025 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.070879856 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.0706839 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.074014208 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.072034944 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.087091574 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.078309769 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.070732115 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.072486135 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.071581752 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.073567999 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.073032912 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.085542868 seconds)
  done (took 6.531738857 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.098189193 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095014257 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073611855 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.072498076 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069544955 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071559033 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077390012 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07147036 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072832045 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090330206 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07152477 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07327338 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073502608 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075146484 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071534985 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.073066516 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079328299 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069400194 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.071467972 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075809035 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071521635 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07731726 seconds)
  done (took 2.967251868 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.16305832 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078515287 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112824695 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082031129 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07713728 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081966372 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.077008395 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077690443 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077451242 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075410896 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07461891 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077725198 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077345144 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074720604 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074622878 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074935598 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076904272 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07509867 seconds)
  done (took 2.797236574 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.085808154 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.073855649 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.09470119 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.073010527 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.073517105 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.076647339 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077150472 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.081165553 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.075960663 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.073852461 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.081495195 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076105061 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.076096904 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073159752 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076385456 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073079014 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.076518988 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073641889 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081128163 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077027966 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.077280899 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080854819 seconds)
  done (took 2.996810413 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088771412 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075895007 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.088940275 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.075893814 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.069316288 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.071692966 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.076958835 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.073165324 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.077665033 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.075267668 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073200348 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.071765681 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07569223 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07332279 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.076033599 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073308932 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075361535 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073236383 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075451831 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.069450849 seconds)
  done (took 2.80116027 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094473062 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075968973 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076106725 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082282275 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075669388 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075383682 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081917056 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07596866 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075513842 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096096471 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075508598 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075791349 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081708295 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079630828 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077729406 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082493965 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082283512 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082423928 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07502674 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075172833 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.096739503 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075598955 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082397506 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075174746 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075519983 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075350207 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076114941 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08107485 seconds)
  done (took 3.52715473 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075942504 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073543274 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.071008964 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.072306623 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.071257388 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.070841465 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.071611958 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.071154031 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074099278 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071265318 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.074290905 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.073490148 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073885291 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.073840108 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074059506 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.073642147 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073436148 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.071067866 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071326527 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070975457 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.073552751 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073688223 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.073606158 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070620432 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071059205 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.073755323 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071088686 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071297449 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073714275 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070774111 seconds)
  done (took 3.47071995 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.084809313 seconds)
    (2/2) benchmarking "in"...
    done (took 0.080790282 seconds)
  done (took 1.460865943 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.072322565 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08672217 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.07058578 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.077722856 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.077249147 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.074623214 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.080306546 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077149862 seconds)
  done (took 1.906894283 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.091065508 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.086074332 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.07451324 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.085432045 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.084867262 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.091393118 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.144015459 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.074632963 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.079796407 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.07220007 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.087748021 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.073284257 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.08028853 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074799962 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.079737933 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080839809 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.07141187 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.079446983 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.075702852 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.072533232 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074902849 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082654002 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076906925 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.069304404 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.075097772 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097091653 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.084680298 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.072777904 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07728119 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.081842393 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.080504517 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.068315316 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.074009802 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.074212751 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.072372742 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.08435999 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089017521 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077143483 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.082704801 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074910449 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082753658 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.069239882 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.078448414 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.080674849 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08413245 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.074344831 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.074274348 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.068771014 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.072240848 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.078495529 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.069046248 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074628821 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.068894413 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.081378365 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.077568874 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.084825845 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.072800604 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.075751694 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.076813606 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.077675664 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.081181751 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.075767245 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076592054 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.073940856 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084329313 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.079388478 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082913275 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.068808758 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.068532269 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.072609492 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.083568233 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097327012 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.080689574 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.074426944 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074571522 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.071895878 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077125821 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074738304 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079714735 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.080746883 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.074352177 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.079871979 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081289865 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074606602 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.077233781 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.081722779 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.073319736 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.076478365 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.072804759 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090365991 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.073141765 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.072148089 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.071809316 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.087056799 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.077303883 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.073404784 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.072251518 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.081433172 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.068179888 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.07374649 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074109861 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074869089 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.083183269 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07750372 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.077437768 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.082024786 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.080340317 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07372328 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.07527686 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.069843809 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.199541973 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.07405274 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.082269135 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.068744342 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078534086 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.076300773 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.075538909 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.083624567 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.073229763 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.074498443 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082302847 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.080294567 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.073078991 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.070848266 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.077733281 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.074464551 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.076761188 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.081951446 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.072705 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.069012215 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.068843098 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.077882696 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.075331582 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.078625655 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.078846396 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078195463 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.068540202 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.071269367 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.079051301 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.084267204 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.074902868 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.075009562 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.080937889 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.076200438 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.074438005 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.080701346 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.077901772 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.073959312 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.080048564 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.075601564 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.069542563 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076473863 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.077051154 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.073183095 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.077668121 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.077081056 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.077358446 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.074277547 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072632565 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.080513249 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074135016 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.073133864 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073993771 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.072986027 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.083807981 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.075747156 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.068915167 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.070622954 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.081039264 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.071843434 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.073930576 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.074188712 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.076217944 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.074792777 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.072190497 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.074575242 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.076587781 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083137117 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.077096566 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.075067956 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.079111879 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.085838122 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.073363081 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.077040146 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.074347124 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074946942 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.074981577 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.083229078 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.080081513 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.078121381 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.076805578 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.071488772 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07976311 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081793527 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.073400526 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.071674521 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.073715461 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.079094757 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.079966709 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.078668733 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.074455464 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07310886 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075027379 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07674168 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.076896833 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.074005719 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.073701387 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.079386862 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.072031371 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.080140159 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073792601 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.083904744 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076712738 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.068752817 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076055404 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072675425 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.079293069 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.068102179 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.071282932 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.072513065 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.073315736 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.072106508 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.075194284 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.067487099 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.207615106 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082744028 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.075689281 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.074184346 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.075101147 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081956545 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.076257465 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077959642 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.078606204 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.080822721 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.084358473 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.073969861 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.077531201 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.085425975 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.074765093 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.068933864 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.082208238 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.072870046 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.073042595 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.073128361 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.073205384 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077660954 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082298332 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.080984771 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.068411993 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07774342 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.071667053 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.073331559 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.069884128 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.079515285 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.077546646 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.076673702 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081024944 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075253483 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.074014971 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078182751 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.073512001 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.074795043 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.075687932 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077019662 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.074873055 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.075590341 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.07375054 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.077462999 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.073345589 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.072481653 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.076031659 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.074613896 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.075204211 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079393316 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.073402617 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073922227 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.076910463 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.074886756 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075021755 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.074882922 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.073445374 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076985835 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075681746 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.074032004 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.076413832 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.068869024 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08123611 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.073100965 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082509334 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.074582973 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.070481109 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.079203504 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.076351263 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.080162678 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.074402379 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.074261441 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.076195035 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.073569725 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.077241434 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081388135 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.071886933 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.085566137 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.081461137 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075015307 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.077029963 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.074719013 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.075615942 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.073366847 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.075864323 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.07455235 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.074730173 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.073923637 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.0785286 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.076746542 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.074101924 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.076370722 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.074719843 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.075176969 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.075081091 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.068695123 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.073529844 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.074010144 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.074124559 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08328475 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.074736982 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.073138155 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.072762948 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074184464 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.0723857 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.070756818 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.080213711 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.081203213 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.073847594 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080313061 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.072651848 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.074443522 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083597707 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.067371519 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.071226757 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.071885559 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.202583556 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082537548 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.074928908 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.084448232 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.075256647 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.074720111 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.071300604 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.075625632 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.073106472 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06859247 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.07262454 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078363987 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.072859856 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073571413 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.074444865 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.07701835 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075324299 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084283734 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.074218495 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.07575632 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.074831923 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.071039741 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.073429722 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.074700541 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.077605657 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.075155161 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.072201625 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.072443352 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.073476128 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.076416968 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.07593328 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.073547519 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.076102596 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.082072075 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073870527 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.077679662 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076749959 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.068693654 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07728702 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.074668117 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.074560033 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.074075057 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.077561988 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077219806 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075300021 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.082925749 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.073231821 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077678292 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074074517 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.071610326 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.074012927 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.073604705 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.073581112 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.074009091 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.075936712 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081969703 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.073067663 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.077452633 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074110783 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.07464176 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.080511534 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.074758139 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.077285579 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.079283708 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.074737363 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.075557523 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.082418772 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.077785089 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076989088 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074842329 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.076165222 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080107515 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.072701805 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.08046147 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.074204512 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.074757015 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.075793959 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.072208591 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073899574 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.073768254 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07348429 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07976079 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.074589842 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.073870886 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.073772355 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.071734774 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.075425242 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076628912 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.082650531 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.076576285 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077531636 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.069202231 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.071348444 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074334885 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.072580322 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.076082701 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.076571215 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080364577 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.076541797 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.075125651 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.073038428 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.083614905 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079747587 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.077282769 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.072090577 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.077210814 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.074183545 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.075722363 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.075355521 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.073905964 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074928865 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.077366446 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.074775905 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.073086984 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079507591 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.076144477 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073608054 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.204278177 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.076038267 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.075453675 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.069311473 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.074380703 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.076861035 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078671341 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.077848356 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074572151 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084920089 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.072861642 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.075089283 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.076671219 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073225454 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.079743497 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.069199715 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.076471088 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07526699 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075188097 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.069224651 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.073475803 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.072632207 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.076888989 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.073231104 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06849122 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084352226 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.08346324 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.078289192 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073948583 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074056684 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.069066142 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.069507075 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.074468939 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075074403 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.076107875 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.085183237 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.073979039 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.074162692 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.069628908 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073623375 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077754082 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.077266493 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.071501517 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.069285524 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.072883206 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.077274284 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.079834762 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072274731 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.074369391 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077724169 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.076568549 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.072340081 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.077470077 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.071513918 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.077489326 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.087653905 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.074251016 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075441536 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.080611051 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.081783573 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.074288884 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.069205631 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.073469852 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.0770182 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.075728667 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.075894433 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.076059981 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.089190207 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077495159 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.073483919 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.072972491 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.07724733 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.073909982 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.082093222 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075254883 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.074588605 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.078772984 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.078488524 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.081995751 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07763669 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081609547 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.078363902 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.077604134 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.072967951 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074737708 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.07246249 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.073483773 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.075518419 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.075146082 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.078290515 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.081298438 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.07416005 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085208109 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.083183996 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.076121553 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.071064519 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.073903732 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.073500069 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.069378203 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.074962825 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.072443135 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.072510522 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.072317105 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.072843712 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.074884317 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078563536 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.074968448 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.073863921 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.073708954 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.068158983 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.076379046 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.076153255 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074221499 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.07030031 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.072941565 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.073473269 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.077026666 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.20670126 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.0736529 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.077058668 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.076998545 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075239697 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.069802196 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.081126837 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073984211 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.076645132 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.073875799 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075191875 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.07477388 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077125838 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.078901511 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.075247391 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.076059179 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078365467 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.076784327 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.071829408 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.071795933 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.080964791 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.072279509 seconds)
  done (took 47.375830749 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111267678 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071142034 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070031217 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069211196 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079594194 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070314165 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068901909 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070032425 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07038206 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072077207 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068822535 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069042759 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076708402 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083777994 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079577441 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073461882 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069124454 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070293466 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068979156 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069911502 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077143523 seconds)
  done (took 2.93453323 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.082531394 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.086935677 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081842695 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088493992 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07805408 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.076904558 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.082012863 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076994459 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084331494 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079205291 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084796798 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076937463 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.079413713 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.079172307 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078986824 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077751838 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08479963 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077655896 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.077490414 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082360982 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077411762 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082693432 seconds)
  done (took 3.142077163 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.076874519 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.074742444 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.075549778 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06902281 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.073041677 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.068545668 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.076308647 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.071536662 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.07585927 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.072514211 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.072557357 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.073323554 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.075109537 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.068623528 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.073735927 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.07109876 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.114728117 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.076527333 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.073215471 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.074107398 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.068406767 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.074623054 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.068212232 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06920661 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.0724274 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.076063705 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.07384508 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.071256689 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.073152431 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.073102431 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.073261776 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.07152544 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.074769543 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.07334911 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.072636526 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.072836724 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.072577095 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.073604847 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.068472213 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.071310418 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.073865016 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.071297837 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.073693985 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.075326457 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.072035334 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.071645822 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.075059919 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.073143111 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.068468811 seconds)
  done (took 4.974526146 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.087988612 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.117362567 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.075519085 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.096838978 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.086751965 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.079115331 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.076925259 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.097122219 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.070564859 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.07102526 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08767907 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.085597191 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.072634258 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.076651543 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.077039726 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072293914 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.073546961 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.071519919 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.075857767 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.071994665 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.075926832 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.080435227 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.087128713 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.085080297 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.076049899 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.07128731 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.072740154 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.076740124 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.084705741 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.076478507 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.076719631 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.077740494 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.086781869 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074779898 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.071941722 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.074364944 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.087750632 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.073194824 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.074865506 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.070689944 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.075017508 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.076746385 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.079864507 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.088445685 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.072712953 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07856455 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072519978 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.070032929 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.085147421 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.075111231 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.079721357 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.086936136 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076993252 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.072608241 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.077018213 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.087041402 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.0723441 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.071272495 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.075396224 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.084565209 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.070672649 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.076307824 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.085529826 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.074582798 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.078900775 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.086166445 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.078488267 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.076869668 seconds)
  done (took 6.872570869 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086633031 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.105273647 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091779394 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089235901 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082744026 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.083058355 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.082477994 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.083194782 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09099311 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08682788 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08289456 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.123518534 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.078460578 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.084521361 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082957103 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083054113 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.082688398 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082918842 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082810967 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082803412 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.082753358 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.089392024 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082799254 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.089563728 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086113401 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078687647 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082982491 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.083289342 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090578466 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08289951 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086348357 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.082811071 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08270195 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.089644392 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087102172 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.082489464 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073367336 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083450885 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.083092986 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.082812126 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078304574 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089567296 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082875225 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.078704668 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082829531 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083030443 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08958088 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086410019 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.084709539 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087094452 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.083265823 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089613338 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08346913 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083123408 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.090432689 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.091750558 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089195746 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089739268 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083039892 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089290698 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089592023 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.092212185 seconds)
  done (took 6.719820644 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091818075 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08101831 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.089661642 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.069162285 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071870784 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.078782093 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071944086 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.071953129 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080659373 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.083316395 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082674389 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078913114 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081659076 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082987029 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079138435 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081779844 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078869388 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078825894 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080819448 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.079103836 seconds)
  done (took 2.987180519 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.08384591 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.09111457 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.075143277 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07875745 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.076717449 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.078961244 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.075993713 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07665815 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074466706 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077982488 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.083285299 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.082840244 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074608341 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.078773991 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.082515971 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.0792393 seconds)
  done (took 2.653686744 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096318775 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.082046486 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.088341951 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.074304033 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.075304515 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.070100662 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.07402416 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.068560518 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06971207 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.086539646 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.073346972 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.084089491 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.07346024 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.072658068 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.069929186 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.078962323 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.069809326 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.070496766 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.072964722 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.085787189 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077178566 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.071632211 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.076727183 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.07418954 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.076141683 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.077850429 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.07240695 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.073717912 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.070846001 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.073633633 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.076456811 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076523716 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.070705298 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.070781163 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.072391656 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.070469166 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.072897309 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.073879304 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.078359967 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.073388946 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.071760387 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.075778954 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.073413336 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.074415816 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.070237412 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.073862825 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.070344162 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075016977 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.070859918 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.075721525 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.073082999 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.075941175 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.073860712 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.080162414 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.076134459 seconds)
  done (took 5.511100285 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09014521 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.080034561 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.069950861 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.072007114 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.076651573 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.074690658 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.077111134 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074918866 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075292639 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.071564601 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075116114 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07651239 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074549837 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077003065 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074704925 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077009174 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.069537517 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074975532 seconds)
  done (took 2.757912357 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081821115 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075436918 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.080714413 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073366735 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.073501283 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076206814 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069496131 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.072420595 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0719994 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073806697 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073560525 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.076042221 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072417738 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.076088954 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073269174 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07338591 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.076163728 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073593795 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.073811228 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069385495 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076095234 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071872148 seconds)
  done (took 3.023365328 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.105606035 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.092630912 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.147019745 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.086448903 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.093700553 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.079457477 seconds)
  done (took 1.992500298 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102571348 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108678443 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07376558 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077150948 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082839391 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077290909 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077263003 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077183876 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084867981 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082982017 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077844042 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085385558 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085228342 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083840351 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082401175 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082546795 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077297944 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079482085 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07368146 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089566087 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077474782 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08485088 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077461689 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077344424 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077354179 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084029558 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085044651 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082884386 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076875979 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084725712 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082413994 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07711101 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084873998 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082555561 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076649371 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085367943 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078369567 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089713803 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082501975 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08390088 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07631781 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082464274 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084887172 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081475689 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085018681 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07786693 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081245008 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077301994 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077639648 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091940579 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082884452 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083857658 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083126743 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08537367 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085702384 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091600386 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08297573 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084335401 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082442238 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082570806 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084708426 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082629693 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084207593 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082538735 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08307478 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084021866 seconds)
  done (took 6.846873473 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115081254 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074848413 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07767361 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082239069 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084308042 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077488622 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077467039 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077231752 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077272297 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074787852 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115337516 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078081869 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084238468 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084070579 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077452244 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077291625 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077570276 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083772857 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074810076 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091254599 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077414924 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083956081 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083865752 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084009773 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082418264 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08280315 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077535713 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077238917 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077227109 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077494818 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081231699 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077583184 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08432944 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07450727 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084046204 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07749597 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077684837 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081169411 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077433306 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082432048 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084270583 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089916957 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078043293 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077180677 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082721804 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077289208 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077070957 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074617528 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077497358 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07418494 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082456939 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082496102 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082340657 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08385002 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077360201 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077981881 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077158678 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07707673 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077141718 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0827284 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084142328 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077471425 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091608979 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077788254 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077672825 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084179486 seconds)
  done (took 6.759400946 seconds)
done (took 141.055445931 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.200024578 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.177379957 seconds)
  done (took 1.760793437 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07891188 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.108867177 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.08476682 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.137103721 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.074070555 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.107607751 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.106850534 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.086417384 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.073809005 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.074751859 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073632641 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.076100956 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.138502847 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.074010655 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.073613674 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.076072083 seconds)
  done (took 2.844318204 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.110026833 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.172190069 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.11079374 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.073491397 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106693788 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080199891 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.072563207 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.083015646 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078689609 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.073218723 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080486537 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078414794 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072357457 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077944639 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.08060615 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.080108694 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.073224973 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079332002 seconds)
  done (took 2.98566718 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.110451056 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.098928487 seconds)
  done (took 1.61381078 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.165078812 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.141094574 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.210674763 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.356153959 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164825036 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.154024733 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.149467316 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.14916595 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.1204055 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.14369364 seconds)
  done (took 3.153918498 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.111792992 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.161931253 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.278619314 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.126147742 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.080154754 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.100840791 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.127683665 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.087013882 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.087899172 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.086823949 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.087002319 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.084305267 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.10823857 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.080763176 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.082030578 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.084947335 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.111032762 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.080803351 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.08252134 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.084148212 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.109150485 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.073290055 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.080389636 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.080898426 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.084079535 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.084377783 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.074272591 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.073685507 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.083659358 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.082642303 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.083662212 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.098967056 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.084500905 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.112158897 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.078720236 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.11266471 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.084428496 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.080756554 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.082276375 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.080745146 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.085429502 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.085285554 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.081238737 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.08424957 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.073498399 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.084501576 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.074317024 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.073362853 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.084764381 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.075026456 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.086482673 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.083991356 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.112404862 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.074324971 seconds)
  done (took 6.441397257 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.116124807 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.113203812 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077311721 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.121841843 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111240365 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07688523 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.111644939 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104448626 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.112986362 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.077825715 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.075542411 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.077009546 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.087824893 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.088796113 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.122599147 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.115003374 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.080347964 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.076779648 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.114955919 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.113817109 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07652531 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106753029 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101013335 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111114782 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074771346 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07783833 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.075928021 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.077213944 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.083360186 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.08483047 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076040529 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.086245575 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.090862901 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.084679122 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.075293746 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07550102 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07537911 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.085776084 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085847128 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.085401764 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.083934952 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075616553 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.075819205 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.076601055 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076558671 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074713807 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.08487518 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.085988519 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.084786992 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075910772 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077228199 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.075863432 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.076513591 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.086475822 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083353376 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.087511493 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.086242929 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.076130137 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076740929 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.078524846 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086786858 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085869202 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085357979 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076878412 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.086754654 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.076206243 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087025795 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.090629915 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.075943362 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.077240774 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.075418248 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076178133 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.079003487 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.083859299 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.084090285 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.077807542 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075955823 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076075918 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085766197 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084516991 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075747785 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.083666079 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074696344 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076709015 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.077468746 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.077371659 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.084345071 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.085732017 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.077045988 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.076314189 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075405835 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075455856 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.074461177 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.083113729 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.084400773 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.083562444 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.083283141 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075573838 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.083433397 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.212483329 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077514589 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.085637458 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.077635121 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077106792 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.078788047 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.085536845 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.084010911 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085256228 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075762776 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.076484208 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.085563115 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088372199 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.077336799 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.085349645 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.087275553 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.085483957 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.075072997 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08789596 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076312491 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.086973598 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07611272 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086300076 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076656691 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.086574735 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075283114 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.075876634 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.076551708 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.085733707 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077283858 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075872991 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.077330251 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076820447 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.085132441 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.088919942 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077584214 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085675823 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.085373888 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077054691 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084791818 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.077117277 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.086683283 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076315705 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.077317377 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074929509 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.088329309 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.077140093 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.077075683 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074842761 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.086499133 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076247145 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086230395 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.084709686 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074964417 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.088110479 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086663316 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.083529099 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086231529 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077979431 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.075872932 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.075467616 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076549591 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.084423845 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085662123 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.078137025 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075687753 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.083766463 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.086291868 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.074944593 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.085333891 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084333951 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.084708032 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07574955 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076039111 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087989383 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.086854924 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.08490684 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.08531381 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.085413526 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.076186811 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.084882644 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085610268 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076134947 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090598337 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076217508 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.088867935 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.085414912 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.083549397 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.085601291 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.086534324 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.086046311 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.086318544 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.088542805 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07502451 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.075054013 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.083785023 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07454933 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074562731 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.082559964 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.075843423 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.076213591 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.087243239 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.206711862 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.088867791 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.074989465 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.086796838 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075766028 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077975512 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090870063 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.077270125 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077889005 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.086475529 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07626716 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.085403012 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.088374969 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.08502017 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076606433 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077248389 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.086586278 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.086134763 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07866612 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076543722 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078033213 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.085323436 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.084158454 seconds)
  done (took 20.278634454 seconds)
done (took 40.488993084 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.214224441 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.158430279 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.177981173 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.122952356 seconds)
  done (took 2.173710161 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.123412445 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.114746968 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.099082586 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.072915568 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10613487 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.072860938 seconds)
  done (took 2.03048374 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.30556676 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.20945764 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.187983835 seconds)
  done (took 2.140419013 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.213350112 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.197039952 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.456793244 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.279991145 seconds)
  done (took 2.691022082 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.150087744 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.094049373 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.075756459 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.092990629 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.137008274 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.164884181 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.105446888 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.131398623 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.087182786 seconds)
  done (took 2.529060315 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.151846637 seconds)
done (took 13.160489437 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.270179215 seconds)
    (2/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.215015577 seconds)
    (3/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.112666095 seconds)
    (4/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.196745445 seconds)
    (5/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.191341625 seconds)
    (6/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.176434172 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.091125356 seconds)
    (8/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.121544736 seconds)
    (9/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.187901304 seconds)
    (10/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.085450618 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.087241488 seconds)
    (12/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.214252143 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.081961122 seconds)
    (14/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.208212945 seconds)
    (15/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.093922311 seconds)
    (16/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.12315784 seconds)
    (17/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.196701546 seconds)
    (18/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.083410107 seconds)
    (19/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.112671383 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.132730772 seconds)
    (21/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.076915729 seconds)
    (22/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.162888866 seconds)
    (23/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.198745699 seconds)
    (24/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.084740768 seconds)
    (25/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.185448624 seconds)
    (26/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.186035274 seconds)
    (27/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.060249728 seconds)
    (28/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.071258128 seconds)
    (29/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.180316561 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.131895224 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.103308815 seconds)
    (32/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.086218912 seconds)
    (33/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.123354223 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.09656443 seconds)
    (35/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.080491575 seconds)
    (36/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.463519355 seconds)
    (37/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.154842621 seconds)
    (38/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.084588465 seconds)
    (39/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.16578046 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.079692254 seconds)
    (41/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074832167 seconds)
    (42/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.193545529 seconds)
    (43/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.059070448 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.100645131 seconds)
    (45/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.0694742 seconds)
    (46/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.061067098 seconds)
    (47/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.121104088 seconds)
    (48/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.156735992 seconds)
    (49/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.109551252 seconds)
    (50/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.083295884 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.101415844 seconds)
    (52/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.058622936 seconds)
    (53/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.080313298 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.081163861 seconds)
    (55/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.091308152 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.092765974 seconds)
    (57/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.178456571 seconds)
    (58/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.07558346 seconds)
    (59/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.162258996 seconds)
    (60/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.238938265 seconds)
    (61/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073019776 seconds)
    (62/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.1217762 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.075817882 seconds)
    (64/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.204419988 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.100629128 seconds)
    (66/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.058951922 seconds)
    (67/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.077353931 seconds)
    (68/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.140924217 seconds)
    (69/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.081340162 seconds)
    (70/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.08552479 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.096168034 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.096850037 seconds)
    (73/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.11842028 seconds)
    (74/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.162771051 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.12284247 seconds)
    (76/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.070212348 seconds)
    (77/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097876364 seconds)
    (78/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.080735326 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.168780385 seconds)
    (80/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07658152 seconds)
    (81/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.100081012 seconds)
    (82/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.123633413 seconds)
    (83/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.080878325 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.279914598 seconds)
    (85/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.194577839 seconds)
    (86/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.165654093 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.125340146 seconds)
    (88/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.212777827 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 0.074665004 seconds)
    (90/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.059924126 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.07447745 seconds)
    (92/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.084992083 seconds)
    (93/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07942264 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.097200793 seconds)
    (95/309) benchmarking ("sort", Int8, false)...
    done (took 0.153400006 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.102027028 seconds)
    (97/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.192146392 seconds)
    (98/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.082203946 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.139829609 seconds)
    (100/309) benchmarking ("sort", Float32, false)...
    done (took 0.144014465 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.100845488 seconds)
    (102/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.163809039 seconds)
    (103/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.176370374 seconds)
    (104/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.177043558 seconds)
    (105/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.111141828 seconds)
    (106/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.082942133 seconds)
    (107/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.161918045 seconds)
    (108/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.075795725 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.08088631 seconds)
    (110/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.0821349 seconds)
    (111/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.076336427 seconds)
    (112/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.058569159 seconds)
    (113/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.088799773 seconds)
    (114/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.080819305 seconds)
    (115/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.060439954 seconds)
    (116/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.083301298 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.154847795 seconds)
    (118/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.071974778 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.157677823 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.087289435 seconds)
    (121/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.167563416 seconds)
    (122/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.079879512 seconds)
    (123/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.082700646 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 0.148066261 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.08187516 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.102821066 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.092788118 seconds)
    (128/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.083385405 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.084813551 seconds)
    (130/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.060646766 seconds)
    (131/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.059206965 seconds)
    (132/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.058665381 seconds)
    (133/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.080179704 seconds)
    (134/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.058305427 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.080136054 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.080791886 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.079514294 seconds)
    (138/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.058408419 seconds)
    (139/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.081091637 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.07358583 seconds)
    (141/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.151019192 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.079852276 seconds)
    (143/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.156728272 seconds)
    (144/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.089575513 seconds)
    (145/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.193149263 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.073609704 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.081134765 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.096292609 seconds)
    (149/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.084834218 seconds)
    (150/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.214052219 seconds)
    (151/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.150251457 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.100187783 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.136470691 seconds)
    (154/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.071318661 seconds)
    (155/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.189879236 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.082019796 seconds)
    (157/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073340642 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.108254179 seconds)
    (159/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.060744924 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073485162 seconds)
    (161/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.158683152 seconds)
    (162/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.059462477 seconds)
    (163/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.061161137 seconds)
    (164/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.08828147 seconds)
    (165/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.075300502 seconds)
    (166/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.126752257 seconds)
    (167/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.08814425 seconds)
    (168/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072409576 seconds)
    (169/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.060009503 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.073378419 seconds)
    (171/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.058246357 seconds)
    (172/309) benchmarking ("sort", BigInt, false)...
    done (took 0.204104102 seconds)
    (173/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.058789998 seconds)
    (174/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.169864033 seconds)
    (175/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.083794252 seconds)
    (176/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.101255963 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.133759475 seconds)
    (178/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.058863663 seconds)
    (179/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.058267415 seconds)
    (180/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.079861487 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.072719287 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.141247801 seconds)
    (183/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.075562749 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.104387913 seconds)
    (185/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.061702769 seconds)
    (186/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.322334504 seconds)
    (187/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.11819344 seconds)
    (188/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.06013722 seconds)
    (189/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.061020898 seconds)
    (190/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.059774907 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.082470747 seconds)
    (192/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.05962102 seconds)
    (193/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.122786317 seconds)
    (194/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.059099579 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.074502162 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.120603918 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.075076306 seconds)
    (198/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.059172169 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.083570309 seconds)
    (200/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.084001727 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.099643055 seconds)
    (202/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.059893756 seconds)
    (203/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.073950471 seconds)
    (204/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075035699 seconds)
    (205/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.080654606 seconds)
    (206/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.059321859 seconds)
    (207/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.060645495 seconds)
    (208/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.059811327 seconds)
    (209/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076544005 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072268717 seconds)
    (211/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.058129924 seconds)
    (212/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.076638359 seconds)
    (213/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.072940461 seconds)
    (214/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.082326452 seconds)
    (215/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07453439 seconds)
    (216/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.058625332 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.121573138 seconds)
    (218/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.080524531 seconds)
    (219/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072491769 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.083203768 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.081138811 seconds)
    (222/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.059261314 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.098502071 seconds)
    (224/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.080126465 seconds)
    (225/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.058397322 seconds)
    (226/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.071561183 seconds)
    (227/309) benchmarking ("sort", Float64, false)...
    done (took 0.14006009 seconds)
    (228/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.059613375 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.138560616 seconds)
    (230/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07483851 seconds)
    (231/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.087181444 seconds)
    (232/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.084950286 seconds)
    (233/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.070388593 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.079299448 seconds)
    (235/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.05957509 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.074363972 seconds)
    (237/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.077836253 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.071976368 seconds)
    (239/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.085037015 seconds)
    (240/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.2039597 seconds)
    (241/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076643167 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.141903845 seconds)
    (243/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.058447149 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.150528102 seconds)
    (245/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.058642812 seconds)
    (246/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.060659253 seconds)
    (247/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.079683279 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.076963681 seconds)
    (249/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.214465524 seconds)
    (250/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.195106112 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.097310275 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.096837386 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.094404244 seconds)
    (254/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.058238181 seconds)
    (255/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073100062 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.143740995 seconds)
    (257/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074802614 seconds)
    (258/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.086140193 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.073473263 seconds)
    (260/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.090274803 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.074757636 seconds)
    (262/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.194708539 seconds)
    (263/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.058700522 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.073074277 seconds)
    (265/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.082534379 seconds)
    (266/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073179415 seconds)
    (267/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.073912345 seconds)
    (268/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.183441111 seconds)
    (269/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.079098536 seconds)
    (270/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.059404498 seconds)
    (271/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.082595587 seconds)
    (272/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.071366833 seconds)
    (273/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.182967876 seconds)
    (274/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.080783086 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.073116651 seconds)
    (276/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073586963 seconds)
    (277/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.081885903 seconds)
    (278/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.080666665 seconds)
    (279/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.073715804 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.07354924 seconds)
    (281/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.080824326 seconds)
    (282/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.059737399 seconds)
    (283/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.059630533 seconds)
    (284/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.088930136 seconds)
    (285/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.05971431 seconds)
    (286/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075177612 seconds)
    (287/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.123312779 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.096661106 seconds)
    (289/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.058544481 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.081435277 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.071582402 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.098104376 seconds)
    (293/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.094998641 seconds)
    (294/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073646895 seconds)
    (295/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.071078041 seconds)
    (296/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.059399054 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.073482791 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.080319883 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.079350326 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.07327152 seconds)
    (301/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.058638537 seconds)
    (302/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.059774103 seconds)
    (303/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.058139359 seconds)
    (304/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.060243795 seconds)
    (305/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.09399119 seconds)
    (306/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.060319537 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.078738516 seconds)
    (308/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.098401011 seconds)
    (309/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.239051126 seconds)
  done (took 33.854777657 seconds)
done (took 35.30276486 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.091027036 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101643976 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.084315606 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.10170127 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.088775457 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.083709483 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.081028442 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.08670465 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.087759502 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08963519 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.086049582 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.062117032 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.0822104 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.082156579 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.083167659 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099128716 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.087004965 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.081722312 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.081853722 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.072573476 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.081797674 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.073479664 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.074858417 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.061697982 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.086838965 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07997814 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.079600602 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.082235227 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.073572001 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.073493363 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.076953617 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.081936629 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.073232315 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.086101891 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.079780845 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.082296153 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.082484126 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.084539993 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.075291922 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.073750251 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.08337172 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.073411093 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.081094846 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.082051597 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.080520971 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.079384861 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.081693032 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.084962503 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099338521 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075589829 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.0830068 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.083983187 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.082790417 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.081684366 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.077591054 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.08134748 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.078232172 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098622624 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.081604082 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075782602 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.082429479 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.082552216 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.078892322 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.080893818 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.080809401 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.083582371 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.084024774 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.079164761 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.083227326 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.080199081 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.073790139 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.081205991 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.077368746 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.073376748 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.084080453 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.086638102 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.072049925 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.079731604 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.08106809 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.079142229 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.073151879 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.075013118 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.075090508 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.079882674 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075209326 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.064223592 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.078117233 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.080368728 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.071951729 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.081660669 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.080269356 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.08030789 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.074858121 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.084304718 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.07302067 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.078557168 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.073360692 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.073304399 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.074958473 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.077779885 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.074034059 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07605139 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.083140457 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.074818321 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.079916522 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.086427435 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.073375097 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.080275136 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.071900009 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.071967021 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.086797924 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.082427748 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.07362943 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075032907 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.072350364 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.080371035 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.071839217 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.073157224 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.07218799 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.07269642 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.078615898 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.071998257 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.074457043 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07966106 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.220822078 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.074294577 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.077381393 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.075673198 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.074406324 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.079953312 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.073988064 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.073776648 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.074847447 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.070033078 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.076117485 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.07377901 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.080752476 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.076015755 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.081150926 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.075045535 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.082400084 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.078536228 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.080155603 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07888193 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.07223691 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.066737297 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076312175 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.075955599 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.075589229 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.074510614 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.074974959 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.073433665 seconds)
done (took 13.677110709 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.075662848 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147043232 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.10353648 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.102928053 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.092709271 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.074910053 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.083143344 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.105760061 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.075648526 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.107422576 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.09584909 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.093619155 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.121289405 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.072535472 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.073901334 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.077908199 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.075044927 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.088965655 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.107414159 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.094918261 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.120478778 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.072923369 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.099843365 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.096912506 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.095114858 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.10967503 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.074838297 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.077623538 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.078322928 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099019968 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.096583468 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07808746 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.074385616 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.104848964 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100179643 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.090792038 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.074319097 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.089786012 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.074229602 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.07320808 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.075988104 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.105264452 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.087389674 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.087415883 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.078432438 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.085015244 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.075008255 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.089950857 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.096492253 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.085656614 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.092496172 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10692245 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.07611115 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.091710171 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.071920318 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.09301789 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.084116703 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.076671082 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.074737493 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.082206073 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.074038976 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.07765491 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.08799979 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.087686008 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.077963822 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.092222189 seconds)
  done (took 7.367068651 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.093974931 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.099575503 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.091056343 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.091771403 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.073283324 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.073835762 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.074415113 seconds)
  done (took 2.135711785 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.075980904 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.096580861 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.097886613 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09733021 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.089538166 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.096397834 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085974798 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.074633688 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095985175 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.075567648 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.095550776 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.108593044 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.077526015 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.081645958 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.098698017 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.074302738 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09877868 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.073999998 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.077229165 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.098232868 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076157419 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.104719326 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.077694458 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.074899606 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089232625 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.074146913 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122796851 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.078883169 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.076847801 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.077200547 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072447885 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.114837361 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.087885811 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.082121853 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074303361 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.089425337 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.089416237 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072931642 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.091571402 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.083780746 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08932976 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.074944238 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.075157023 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.07254998 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.078480139 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.085762649 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.075242358 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.074524393 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.076967614 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.094707318 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.075069102 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087963205 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.077108704 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.079908434 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.076894519 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.08075159 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084859889 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.075360415 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.094488963 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.076099997 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091430625 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090915508 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.088509084 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090926347 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076363934 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088262012 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.088337757 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.077204827 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076376184 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.078152326 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090409285 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.072572768 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.076640752 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.085330017 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076732308 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.098018246 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.097815002 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076359261 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.088683003 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.07518001 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.07463503 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.075076805 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.098142371 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.079835804 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074838289 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.078749321 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.078094169 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.07279101 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.07341781 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.078764793 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.072480879 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.076276074 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.077533344 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.077944604 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077514821 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.091512489 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.077795227 seconds)
  done (took 9.634750701 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.078932981 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.076158642 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.076570894 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.075687954 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.076549759 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.076204404 seconds)
  done (took 2.024438537 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.101886395 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.076221071 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.087329262 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.078770965 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.112339191 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.094881261 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.095107275 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.085434314 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.091531248 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.086585141 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.09462328 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.09592535 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.100237727 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.079979478 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.095374888 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.079226003 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.095842301 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081712238 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08634891 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080262909 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.092914096 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.079393939 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080554183 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.089895112 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.083706629 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.079329511 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.085722768 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.08705667 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.085807927 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.085271461 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.079448661 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.083445802 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.078298666 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.084758991 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.095121303 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.078474331 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078906401 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.085459997 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079380465 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.083736739 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.095549362 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080320665 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.081940162 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.084783701 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.085056876 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.078132223 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.084538931 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.086358662 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.094945877 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.084670609 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.087136351 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.079178963 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.083249152 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.085377309 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.078652027 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.085005972 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.084943225 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.095757441 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.079674602 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.078237495 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.075777723 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.083360833 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.084833067 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.083397017 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.085365855 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.084524687 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.078221665 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079480607 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080232323 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.078890301 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.084395141 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.076396032 seconds)
  done (took 7.685471947 seconds)
done (took 30.373016077 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.545908241 seconds)
  done (took 2.073326435 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.631920059 seconds)
  done (took 2.186570981 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.662851236 seconds)
  done (took 8.215395275 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.409723793 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.510559118 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.750078086 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.142606381 seconds)
  done (took 3.410333643 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.7308216 seconds)
  done (took 2.29228595 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.23754171 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222037835 seconds)
  done (took 2.02886319 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.389615589 seconds)
  done (took 1.943586846 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.164198392 seconds)
  done (took 2.721689546 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.259661757 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.186083175 seconds)
  done (took 2.00762274 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.499682103 seconds)
  done (took 2.057678378 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.899590984 seconds)
  done (took 6.459664921 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.228278032 seconds)
  done (took 1.8341482 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.249965145 seconds)
  done (took 1.8076978 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.760113425 seconds)
  done (took 3.317586417 seconds)
done (took 43.91807788 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.093618285 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.093173196 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.093150023 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.089564891 seconds)
  done (took 1.913701733 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.086276934 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.080822096 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.083796013 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.081042775 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.085838788 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.080558275 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.082255347 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.083484166 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.080565215 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.081450054 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.080760028 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.083125702 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.083263283 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.082147521 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.079389407 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.083093258 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.084628505 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.080737078 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.083122204 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.080256063 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.079236187 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.083024909 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.0825227 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.079557858 seconds)
  done (took 3.534175887 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.087369235 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.080686694 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.083813189 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.080565732 seconds)
  done (took 1.900925179 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.087440666 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.100395641 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.097551463 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.086077358 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.100855622 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.094780705 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.076838477 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.077005163 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.078628252 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.08512379 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.075734696 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.10374863 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.09722055 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.08597203 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.088964262 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.073431518 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.076630163 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.096042795 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.086200259 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.086800346 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07832803 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.086502986 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.076289531 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.097001762 seconds)
  done (took 3.657440241 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.095970719 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10986757 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.089474285 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.098444563 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.099904868 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.072993212 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.095569707 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.099147154 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.135120382 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.07308605 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.078426877 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.073349481 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.081081946 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.073541877 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08997157 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.117365057 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.121323157 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.076908855 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.10585471 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.075351022 seconds)
  done (took 3.437542906 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.081069375 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.077661305 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.076242007 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.073710971 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.085381305 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.081078231 seconds)
  done (took 2.052100744 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07735049 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.078256792 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.075380747 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.075335516 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.080255008 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.075498588 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.073869706 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.076582048 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.075637401 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.075259587 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.074912593 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.07419267 seconds)
  done (took 2.481791133 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.208618622 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.075962586 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.077326445 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.073822767 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.078538085 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.074714995 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.089776607 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.07574915 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.100937007 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.074437753 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.075151814 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.076589355 seconds)
  done (took 2.652756736 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21706715 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084213997 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245652738 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159509385 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120529457 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124183847 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120830038 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122037138 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.15146329 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109391367 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173653099 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175090234 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115581307 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144472549 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097686138 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.111561705 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163860741 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17153824 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114600866 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17349079 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154374695 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134696567 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15484546 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10946483 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114050427 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130728999 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.079680072 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088738116 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178570132 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140903099 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151934683 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119673145 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102187369 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183847707 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180099282 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148815481 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155546804 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093261274 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.11038153 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.139860133 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205291948 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096274274 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168211625 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257561322 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090686807 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141177282 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126498065 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.127691332 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.112964103 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098154555 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154191455 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193909744 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.145219559 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097373168 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13273475 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123532888 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.123217741 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121817184 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188438702 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167573874 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135281689 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.078711143 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116995925 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158744243 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140831983 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.116622972 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.133636521 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09945181 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143244009 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162072191 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131390022 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151496568 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.125958738 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097470416 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12621841 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149233391 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13543883 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166738877 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13078335 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.080105539 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1311805 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110706373 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088161926 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.156984347 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083033242 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182039847 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106467608 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.11305304 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133452495 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11650168 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116933776 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167157705 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.293877034 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112732744 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.07461706 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114992085 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.128097072 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15563406 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095843664 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117601149 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124884878 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.085389632 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147104882 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.083617566 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130102843 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.082151508 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132231529 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136901068 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.08644933 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130435335 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111615005 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10905914 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139967259 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166475693 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095281208 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090719732 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176307281 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129013854 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.110867974 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151097238 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163064733 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.106232236 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109089655 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157597432 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178258428 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097212074 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169090033 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115000112 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09134565 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.095505354 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130183192 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118924664 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.13378412 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088949885 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.12475965 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174281836 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.082845955 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103744701 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141488682 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085990279 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087690312 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11209229 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112659764 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.103276991 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.10688785 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.110042807 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144319141 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129496251 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.257473145 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134436884 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107694795 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1799607 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096374035 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.109513475 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111201 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.077768316 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.143886672 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167387984 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088041426 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171644206 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.129270595 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124556511 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127149093 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091523186 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147181944 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086725159 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.078390599 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153852323 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116981672 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117858775 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.158496695 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124163468 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.133212029 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.125354316 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141702046 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138056602 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.13593926 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113406523 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.095491438 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118781485 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13597078 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.081253069 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.097733187 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.087301095 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112238004 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103779937 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091190048 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148943304 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130609357 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117401201 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11877218 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104638242 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153865489 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.083733629 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134879331 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.125659262 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102550852 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.15749844 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157594633 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138813224 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105367765 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142693539 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.221479963 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082659576 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.097803089 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130252313 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090539139 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093054105 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125659406 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154751483 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136627415 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145028917 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132155936 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128411661 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162532362 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.077921704 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.126415459 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152695319 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128647378 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.112196262 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09821477 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.107343708 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150140243 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114888854 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188789691 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120526612 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130042654 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16039135 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.108296809 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087582187 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110101114 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143146117 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111354359 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149036798 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106770487 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095902611 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11598842 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.082607063 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105836728 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134267749 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126766965 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14139907 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.12203354 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140315814 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085064221 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124019457 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131495195 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128687136 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.070971356 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125517764 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165531548 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102464156 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124233528 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157223819 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086493803 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.288822312 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182556035 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153809176 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094608832 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118203597 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12812718 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135346914 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128501921 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1474848 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11668426 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144950536 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117386403 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.092791832 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095098657 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10491801 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112247231 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.102136959 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.111751906 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.121706449 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.104206951 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139787773 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111573778 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118151818 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125313899 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.107712046 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.099832152 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104211012 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184336673 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126571206 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177251457 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.106178502 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.148019553 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168648441 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082345842 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086183971 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.085661857 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146802103 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091745533 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136972761 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.115090679 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127261102 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130391044 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149154723 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103528916 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.076444225 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116366636 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141805722 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132815202 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106176744 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.111020686 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167836534 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.107709987 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08756815 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121104185 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122985722 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.254584734 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179181824 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.069688657 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11556969 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084957341 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089560552 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135549852 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159160388 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.086952881 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.108284667 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126236824 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121058238 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134724826 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109323724 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11581089 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133769508 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159816081 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135999767 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09807405 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119194135 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134878315 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161503444 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110426255 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.105444908 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180097677 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158886188 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.165477208 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.096238458 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120898457 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120381632 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11780596 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143821114 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09103308 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169069737 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089735993 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143436164 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111566633 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095993574 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137145876 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.116409991 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095860259 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153556366 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123911173 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090584776 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084608196 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125825884 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125107279 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113158685 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.08405072 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145892613 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.080822912 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138256324 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314617961 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088950197 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113618974 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103582655 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088055702 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115565687 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111088898 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096064828 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.107397338 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178598174 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.093723202 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155627078 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141172549 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120165595 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14148027 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109633108 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.648481222 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.085106798 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158445292 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123465496 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179007054 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106976052 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124555776 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116752048 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13100006 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153083161 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110305518 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.193372048 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138062835 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.123423953 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087560472 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109183283 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11127343 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.09568157 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11452485 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119856123 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124387357 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.100297388 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.123420406 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130886986 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.090341658 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103824527 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161925361 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124829162 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151568261 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146125707 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093247697 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123641169 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143107295 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08743632 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.127110557 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.304074253 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113989259 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10950359 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.089897113 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.109774318 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165760539 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.08145209 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169948608 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128021753 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117596825 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119541182 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.118594719 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140884919 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11569805 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128186917 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101221998 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.115951584 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121390203 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088961981 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.085193554 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112518966 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118965888 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.104368854 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10509061 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.10614717 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15704405 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.079495772 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107302361 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122808212 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15335935 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180408998 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.095937735 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090947256 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127470575 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123203264 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.120187534 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128002212 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.086263863 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089388852 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.087806341 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.086624322 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.115302925 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120042535 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121855822 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117450963 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169076696 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.091417401 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.245927066 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103220733 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112177356 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.078115892 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.085511109 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103131861 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104859046 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11412668 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116316365 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163411457 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.248386716 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.098954772 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099870767 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.082434098 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091122564 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134170683 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118638739 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126481729 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111019455 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.069960421 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117236327 seconds)
  done (took 62.746776241 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.116999627 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.090974222 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.102939501 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150322938 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.129444075 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.208515327 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.160582624 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197538511 seconds)
  done (took 2.828830682 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.078089928 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.10314409 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.110510276 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.09072914 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.073455974 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.07701401 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.237977363 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.089589273 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.074587431 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.103682463 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.085781829 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.076839604 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.443879944 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.07366991 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.07508959 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.070687288 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.075082633 seconds)
  done (took 3.60053595 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.41785862 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.621409077 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.360910146 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.084464211 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.948217388 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.102492905 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.144665106 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.144372584 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.084570618 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.532416961 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.412688816 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.136527801 seconds)
  done (took 18.663579048 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.090449097 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.082452953 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.096587332 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.097629301 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.086440864 seconds)
  done (took 2.118474315 seconds)
done (took 113.184524972 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.091639356 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.627387741 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.060899902 seconds)
  done (took 2.386686597 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.09472567 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.093336962 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.092746528 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.091573535 seconds)
  done (took 2.049251134 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.083558333 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.083283596 seconds)
  done (took 1.835790627 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.2447262 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.176303087 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.104008446 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.091843742 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.088208693 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.086995717 seconds)
  done (took 1.939068693 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.081495039 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.083138805 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.079807957 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.08473129 seconds)
  done (took 1.995016094 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.087801496 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.061160231 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.062691911 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.064984936 seconds)
  done (took 1.944514738 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.095991452 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.086559913 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.087235655 seconds)
  done (took 1.937888101 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.111342482 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094786062 seconds)
  done (took 1.874337603 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.091618092 seconds)
  done (took 1.759926314 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.104631312 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.108158268 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.140773484 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.119651263 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14731244 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.119029959 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.091763448 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.092303005 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.083755139 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.09336689 seconds)
  done (took 2.768253054 seconds)
done (took 22.771595433 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.088482598 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.376184766 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.368711216 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.097362312 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.675043488 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.364261242 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.978326231 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.101782402 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122993048 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074806612 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.09247754 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.656227586 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.969152294 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.327962753 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.95465641 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32993064 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.657913418 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075731959 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07511941 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075594541 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.963196424 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.075213376 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075865542 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075892691 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.657193611 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.380125725 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075769817 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.346970819 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.076023503 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.0777552 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.362660511 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075816886 seconds)
  done (took 16.357382538 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079842187 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129616077 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.08105239 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092208058 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.078486683 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07710417 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.078553005 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.076058025 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129136462 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.075116344 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.09274895 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075229925 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.079859468 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075752432 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.095082377 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.075439289 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.077074753 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.076312765 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076238486 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.076518465 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.094685061 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.075350854 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.076008248 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.076568382 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.075660189 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.088797354 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075765084 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.076066411 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.075849705 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077410233 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07867162 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.076118507 seconds)
  done (took 4.325835453 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.124290126 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.135945567 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.081177202 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112009922 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.120460274 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.077860589 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.152249382 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.101064837 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.135056757 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.075825684 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.092916832 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075368963 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.110724166 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.076325245 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.096201612 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.075897893 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076341229 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.076087163 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076011741 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.076439804 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.095912481 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.076069037 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07597998 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.076650733 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.076195067 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.09018709 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.076373109 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075892227 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.076246269 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077937789 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.079593391 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07636147 seconds)
  done (took 4.58808499 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.082325211 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.083111586 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.091509015 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.092153554 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.076567625 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.079245406 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.080614034 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.077536284 seconds)
  done (took 2.35070229 seconds)
done (took 29.299093391 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.087571953 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07621817 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.080733915 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.091135536 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.080449865 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.085766832 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.074203766 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.083294996 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.080057832 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.080697059 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.082298074 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.075495734 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.079031947 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.074120833 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.081987354 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.075101256 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.087999219 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.079561798 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.086861731 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.08838096 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.07752851 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.080797918 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.082875849 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.087568581 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.087573342 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.087051593 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.08506488 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.08088068 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.075608754 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.078703782 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.084601837 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.09202816 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.075702824 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.086977436 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.07578417 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.075327263 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.079767062 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.07489064 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.087189059 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.084700916 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.077548687 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.083514286 seconds)
  done (took 5.095816877 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.096577652 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.100266286 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.092320028 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06918429 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.07414615 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.073334873 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.096991658 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.067315639 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.066703816 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.095966989 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.063376482 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.067112703 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.070930049 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.061091835 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.06766916 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.064529685 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.069628971 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.062786124 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.067577749 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.067513122 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.096778953 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.06119826 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.085826064 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.070794233 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.063272857 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.069213535 seconds)
  done (took 3.636596743 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.08296033 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.093192526 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.100084733 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137999396 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.113147917 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.086685171 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.087535903 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.104003607 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096432394 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.074151576 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.078639437 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.100727357 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098388315 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.081484474 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.074858013 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.093802269 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.091610625 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.077188853 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.080916214 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102909597 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.094797037 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.093670053 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.103601612 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.090683651 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.074412914 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077801168 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.078755015 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.101315417 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.078531408 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.084789564 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.078223608 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.078944899 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.077430867 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.087047081 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.078430522 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.07670768 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.103172378 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.085847265 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.089036501 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.076220011 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.083504761 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.076359977 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.100833409 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.135472527 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.074850912 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.081093176 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.079345187 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.085834014 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.074189135 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095851773 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08685356 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.074397679 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07892039 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.074239931 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.074088 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07821431 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.076800693 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.077503062 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.083625963 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.081869608 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.1008721 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.079851995 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.091820372 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.075743955 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.083391251 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.074363363 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.076017728 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.075753922 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.103918748 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077166083 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11919771 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.076548886 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.076108559 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.08481178 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.083555229 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.082192445 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.075106068 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.091688595 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.086254139 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.078827614 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.083621624 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.078806381 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.078634391 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.09922023 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.077445538 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.076470416 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.076452299 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.080866137 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.078207961 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.076057955 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088171701 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.075055359 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.078242704 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.092405292 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.074722059 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.076726017 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.081891408 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.080027474 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.074690613 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087146589 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.079488001 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.076753562 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.086150351 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.075475055 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.078798964 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.087782982 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.081771285 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.074195772 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.079722969 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.080672518 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.076278078 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.077449126 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.078103973 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.076809903 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.083917265 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.081440066 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.079157508 seconds)
  done (took 11.601295638 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.176672056 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.165699408 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.078285463 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.157353725 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.084408567 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.086834713 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.159522691 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.103024866 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.075542396 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.07621602 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.076211931 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.119111153 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.114248523 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.124705349 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.086633512 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.075246434 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.09240883 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.123046385 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.162236708 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.155454674 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092887125 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.085172684 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.078040546 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.076262585 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.078019369 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.086717313 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.093287691 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.085136611 seconds)
  done (took 4.696012194 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.09119087 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.114251795 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.082854174 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.100604531 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.098165171 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.075633116 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.0782537 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.077540375 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.089901121 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.086222332 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.075212165 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.081558321 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.08224645 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.079491217 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.076805989 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.082760677 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.083431894 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.076938907 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.078814995 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.080936864 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.086321359 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100265475 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.080209495 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.074584365 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.080315673 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.075506366 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.070357263 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.091448527 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.0763401 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.103940236 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.07346672 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.081355755 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.090933729 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.077139748 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.07540424 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.075260041 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.075993621 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.07546393 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.077535561 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.075987838 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.073837719 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.065593297 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.075025381 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.086814625 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082720134 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.064683538 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.080145357 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.080362369 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.080696974 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.072854538 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.078625942 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.078669628 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.079317743 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.083741032 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.079696803 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.081483748 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.076920224 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.082165287 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.085341341 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.075429202 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.072910547 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.074043109 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.080492664 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.072169533 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084526446 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.080143784 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.074316132 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.075224687 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.078080494 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082837539 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.076008087 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.080127576 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.072921722 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.077599388 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.080576487 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.077357581 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.076908566 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.073959467 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.075483597 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.076160119 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.062763686 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.075585255 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.060958528 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.078742809 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.073527245 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.074040837 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.075749652 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.080135344 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.086632073 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.077150811 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.08173145 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.076905588 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.074912937 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07849316 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.068677775 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.078498372 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.087271636 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.089454764 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.07588947 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.073549693 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.089611074 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.080122239 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.07471993 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.063729007 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.079941903 seconds)
  done (took 10.05404157 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.100643134 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.078442189 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.092701014 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.098228787 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.096288669 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.082310267 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.086393131 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07708413 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.091779071 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.082460436 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.084660983 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.076153704 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.086422477 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.08585722 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.077617561 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.085843518 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.080075526 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.092721112 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.090895829 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.07544079 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.08422556 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.088996163 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.099479035 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.089602238 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.08928607 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.089737337 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.10149245 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.085844731 seconds)
  done (took 4.183597354 seconds)
done (took 40.949964582 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.797687104 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.030793542 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.775139025 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.145133698 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.854707851 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.985574132 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.857223501 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.771301117 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.955138143 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.805471075 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.111352429 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.960823056 seconds)
done (took 65.886349258 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.815984235 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.908515416 seconds)
    (2/2) benchmarking "String"...
    done (took 2.014487281 seconds)
  done (took 5.615560483 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.024071744 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.337009819 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.008737021 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.763386169 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.766023236 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.077278367 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.575278327 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.276905958 seconds)
  done (took 30.498592848 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.98213385 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.9838836 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.478768488 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.516604949 seconds)
  done (took 15.711049109 seconds)
done (took 63.452620893 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.773483689 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.792386477 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.765366497 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.744767292 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.818328972 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.765732869 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.898138043 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.004574872 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.758899058 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.746452936 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.759817617 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.230066633 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.757782708 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.879320519 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.755523372 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.762784392 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.799411661 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.238395172 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.911017749 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.761524546 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.766608551 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.770047086 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.75601486 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.764435244 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.775565879 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.751735372 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.141516573 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.750441492 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.364406142 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.751999372 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.776738421 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.054694341 seconds)
  done (took 204.03959522 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.751458606 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.582267785 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.696986567 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.791311454 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.967807192 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.929659184 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.832948347 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.203076564 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.752113881 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.751930517 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.892425302 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.748767283 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.932089234 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.783332838 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.778173442 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.827537357 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.926745569 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.975498569 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.782091048 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.917225801 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.760074014 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.727604521 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.684117775 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.897133351 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.766273032 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.816714505 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.911260891 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.789261236 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.927827814 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.885908204 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.79467657 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.759816101 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.980202168 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.626606732 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.777930814 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.756476879 seconds)
  done (took 168.367166917 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.922388916 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.756701493 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.75287571 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.752207567 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.752442018 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.766491361 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.753241272 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.878631704 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.878005437 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.377923646 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.385790456 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.755993175 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.804955078 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.544947137 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.752193052 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.820852282 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.766445931 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.753448921 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.770457767 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.782639829 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.752616468 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.7588784 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.883233247 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.763603324 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.901328345 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.758385998 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.754035891 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.761677791 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.127801574 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.75059773 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.760114639 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.011244524 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.751629525 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.754487285 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.595395878 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.829305001 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.839809336 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.75222514 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.759141977 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.753836437 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.973195879 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.752605481 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.754961888 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.757362257 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.887513788 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.752575062 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.880992556 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.750984039 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.233751607 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.751328592 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.755034075 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.7550325 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.577209972 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.331007545 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.751199538 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.754215424 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.758572158 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.75493736 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.754859311 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.759837313 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.600518156 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.833789017 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.757068208 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.757798901 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.760089737 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.755615352 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.96969438 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.752192189 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.030881692 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.806842904 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.882293384 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.879118445 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.755846547 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.822502202 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.845490243 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.753748127 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.755267312 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.758027171 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.755377299 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.837297707 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.752637634 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.883988545 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.761260203 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.75668365 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.809101524 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.827378975 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.753504171 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.757830954 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.756781476 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.756914323 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.600354206 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.0115471 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.819863411 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.75278235 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.756781488 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.758538788 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.882942188 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.87634322 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.463772797 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.756856663 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.4180506 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.76256101 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.901081944 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.75482111 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.894419613 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.757559366 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.838244661 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.758131204 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.760428039 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.756437436 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.790956083 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.758333997 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.814573086 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.756959153 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.131923004 seconds)
  done (took 400.391691499 seconds)
done (took 776.469847662 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.41400692 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.380582682 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.477311109 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.397066148 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.374414963 seconds)
  done (took 13.731121314 seconds)
done (took 15.418827136 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.845302167 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.851288599 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.780571296 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.848410425 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.77624209 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.848855838 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.830187469 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.781400106 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.818513321 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.779412949 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.817725033 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.779083372 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.771522602 seconds)
  done (took 25.216454711 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.991274514 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.986752687 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.827253698 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.991559171 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.805736056 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.989800623 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.920301512 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.911655164 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.911101972 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.778938956 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.772438583 seconds)
  done (took 22.57573411 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.989798226 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.993842786 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.837732713 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.00631709 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.809259137 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.99857234 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.921888669 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.913365226 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.914233415 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.775896318 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.772267095 seconds)
  done (took 22.622780767 seconds)
done (took 72.10205902 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.771111997 seconds)
  done (took 3.460718394 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.794913401 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.960306583 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.773401162 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.772283853 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.768541798 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.76933535 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.772946683 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.767926575 seconds)
  done (took 16.071293986 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.768988211 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.767339672 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.765509752 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.763937035 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.764139388 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.767018092 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.768222772 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.765635159 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.76851134 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.767903607 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.765781251 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.768200506 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.770028315 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.768004905 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.764580245 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.76531004 seconds)
  done (took 29.960003936 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.766917931 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.765907522 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.764644566 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.766201272 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.766069043 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.765920467 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.768306277 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.765163319 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.765368076 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.765940552 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.767883873 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.766846968 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.767019163 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.766713453 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.76555475 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.767475931 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.767408465 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.767677833 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.771433194 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.76700289 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.766560574 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.766290038 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.76637522 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.767889139 seconds)
  done (took 44.096683292 seconds)
done (took 95.277053189 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.5426625 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.429548094 seconds)
  done (took 9.662797592 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.773497856 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.76849244 seconds)
  done (took 5.295667416 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.770769621 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.768724949 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.770524221 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.769039081 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.769339076 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.770994272 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.771888776 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.768904052 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.769972084 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.769712367 seconds)
  done (took 19.392704429 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.770793348 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.770138882 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.769369062 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.771019469 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.770706233 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.768234858 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.772129873 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.772342618 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.770488944 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.767640488 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.771095855 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.768957574 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.773760546 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.768167536 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.771684916 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.768669282 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.768628639 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.769468853 seconds)
  done (took 33.556066606 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.77183158 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.77252577 seconds)
  done (took 5.238549933 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.768094472 seconds)
    (2/7) benchmarking "second"...
    done (took 1.770093812 seconds)
    (3/7) benchmarking "month"...
    done (took 1.769399489 seconds)
    (4/7) benchmarking "year"...
    done (took 1.769412353 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.768522559 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.769095702 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.769170244 seconds)
  done (took 14.078544811 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.772929117 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.942241561 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.009934384 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.403591719 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.774594109 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.776256484 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.737336551 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.776295034 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.776667995 seconds)
  done (took 19.66594944 seconds)
done (took 108.58219779 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.573647313 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.766069704 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.001753068 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.871473488 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.782436385 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.065133439 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.801820362 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.070897637 seconds)
done (took 42.627815458 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.799858144 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.039699522 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.111300647 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.789614512 seconds)
  done (took 16.637349952 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.757846113 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.300244785 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.808729353 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.356548626 seconds)
  done (took 19.953615292 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.148647897 seconds)
    (2/2) benchmarking "read"...
    done (took 2.12022749 seconds)
  done (took 5.969713712 seconds)
done (took 51.056915643 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.774024376 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.773178841 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.774236579 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.771644492 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.77313796 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.771704427 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.770386912 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.774922384 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.773419337 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.775292596 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.773685066 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.775169542 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773896104 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.771985074 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77179443 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.77541987 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.771633603 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.771550609 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.771990714 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.771737693 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.771259931 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.775052077 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.771792069 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.771676802 seconds)
  done (took 44.247328048 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.77485529 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.774786863 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.774533059 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.77560293 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.774676967 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.776614768 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.775603939 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.773716947 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.776550069 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.775458444 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.775103528 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.772873254 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.776092727 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.773791524 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776826451 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.773908584 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.777922184 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774056671 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775935413 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.773538775 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.775159833 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.773359055 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.775260955 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.776174787 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.773941328 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.773060028 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.776211997 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.774961243 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.776012019 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.773949356 seconds)
  done (took 54.952412149 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.78086897 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.78314388 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.778341949 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.778596619 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.77657245 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.776834364 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.777404399 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.777370896 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.776974353 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.777611996 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.776300595 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.776600816 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.776827848 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.777809934 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.777037935 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.777769384 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.777113351 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.776542334 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.778131707 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.779075178 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.778043422 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.777077145 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.778339271 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.77590088 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.774688063 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.776043039 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.775602755 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.778370791 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.777341847 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.777451661 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.778743103 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.775790096 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.774970019 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.775642588 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.777635624 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.775879335 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.780098056 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.784355201 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.776903338 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.77716641 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.777523479 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.778249616 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.77804987 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.776292108 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.775528867 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.776023249 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.776053599 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.779217007 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.778943827 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.778257026 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.77569797 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.778185805 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.77864285 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.778981536 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.777283745 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.777125758 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.778791052 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.779987433 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.778705106 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.776920183 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.780439243 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.778751493 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.780400566 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.777174021 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.782415938 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.779022106 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.778646662 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.777981554 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.777537783 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.779908626 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.778492197 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.780066433 seconds)
  done (took 129.709719603 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.777306256 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.774789057 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.780538054 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.775709251 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.775157287 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.778496547 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.775375556 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.778751626 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.779354753 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.780868064 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.779217347 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.776497762 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.777418164 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.781204338 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.777896856 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.776794929 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.78003623 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.776349067 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.778587929 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.780131943 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.781028589 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.777450408 seconds)
  done (took 40.820758487 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.780198462 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.78015772 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.784269756 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.778923545 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.779311742 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.779904693 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.780171049 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.781359198 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.778970311 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.776321251 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777098721 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.779754272 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.77890919 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781698528 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.77798519 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.777182802 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.779806547 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.777494516 seconds)
  done (took 33.732343161 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.778181589 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.776709486 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.782126684 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.777628044 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.77808821 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.781112959 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.776723954 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.780448067 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.780140846 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.775977847 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.779553901 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.781925989 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.780808299 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.778712804 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.779385979 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.776968638 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.780587816 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.780108442 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.780644699 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.778576551 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.777588174 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.780260239 seconds)
  done (took 40.847610679 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.781492088 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.782210293 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.778917071 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.777253163 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.779103388 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.78195807 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.781399883 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.779001864 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.780667446 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.782533396 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.779265294 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.784290168 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.778251589 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.780114212 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.780443876 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.778467837 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.783371156 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.781214881 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.78240816 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.778615882 seconds)
  done (took 37.319759209 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.784151035 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.783339069 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.783533465 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.785232027 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.783084741 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.783640205 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.784748456 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.784991846 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.784801804 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.783254602 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.784873234 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.784659056 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.785141866 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.784771918 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.784023402 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.784519319 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.78666432 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.787041371 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.786939514 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.783272957 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.784080777 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.783145055 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.783810861 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.78615066 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.785923485 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.78424053 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.783104267 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.786115953 seconds)
  done (took 51.676234276 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.787686847 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.784869727 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.781518157 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.781835036 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.782636385 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.78210458 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.782604717 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.783417678 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.784297046 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.781611074 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.78561304 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.787022814 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.786767727 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.784926002 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.786887023 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.785020023 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.784452789 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.783680034 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.784779592 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782023936 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.78592817 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78574501 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.787348987 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.783258646 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784071199 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.786826332 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.783613362 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.785851824 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.789307952 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.782874777 seconds)
  done (took 55.245508969 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.803380706 seconds)
    (2/2) benchmarking "in"...
    done (took 1.804353501 seconds)
  done (took 5.31465272 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.782313401 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.784771703 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.786720597 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.783419204 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.782733694 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.784801446 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.786393238 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.783408824 seconds)
  done (took 15.982653457 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.786737891 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.789250113 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.790526477 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.788728071 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.787170656 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.7874355 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.793723523 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.787415897 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.789198849 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.787872328 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.794963656 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.793940015 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.789375142 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.786511327 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.789640748 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.791072045 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.788135568 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.788044255 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.791908793 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.787993268 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.788200282 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.790147669 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.791870889 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.786976956 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.789345305 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.798679296 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.793614173 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.789290324 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.78748235 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.793622125 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.790803435 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.787698013 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.78952976 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.78869141 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.79000927 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.790448495 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.797766517 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.789484757 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.795255991 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.790905371 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.788640423 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.786823846 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.788079679 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.791017202 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.790480412 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.792018203 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.788856524 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.785767327 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.788239817 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.795400518 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.793224986 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.788762143 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.787465193 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.793024405 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.792976742 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.794733515 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.791015938 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.792672731 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.799980842 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.799460737 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.805411222 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.799190282 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.792037402 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.793341782 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.801286655 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.816576326 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.796039244 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.790252973 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.787396528 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.788947666 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.796749866 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.802668049 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.801973744 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.790823074 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.795893322 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.789195136 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790600603 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.792360222 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.800059226 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.794754199 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.792517201 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.791569937 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.801424769 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.811595591 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.790508663 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.792844079 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.792521676 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.793501685 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.792077528 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.804072406 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.794284208 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.791996754 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.789255264 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.791353618 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.795701118 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.791888348 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.792017299 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.793184548 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.791247267 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.793563171 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.79240291 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.794341556 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.80261836 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.794012231 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.791997587 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.799510635 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.793164451 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.792810122 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.800024623 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.79237127 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.792378815 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.796053841 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.79918243 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.792034634 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.795453502 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.800245962 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.795603093 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.794132655 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.791977848 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.796107524 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.80413325 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.820050039 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.792544846 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.792378798 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.797808734 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.804618262 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.793736166 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.796161246 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.794850651 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.790583226 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.791543136 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.794533786 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.792677107 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.793249076 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.79343917 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.797211135 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.790786738 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.792581702 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.794838294 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.796845936 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.794081707 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.796388238 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.794480071 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.797262654 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.793695704 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.797024331 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.800907734 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.794448829 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.797549965 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.79486444 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.791459596 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.794661171 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.799254175 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.796096963 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.795425388 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.79463708 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.794899906 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.796580855 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.796380983 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.794260114 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.795858385 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.795454499 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.799571895 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.79534918 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.801258939 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.793948507 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.793019284 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.796198761 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.79599739 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.797461449 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.797340413 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.794434063 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.798051426 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.807447518 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.800865678 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.79696241 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.797742887 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.797090299 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.796032774 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.798882654 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.802986728 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.803705472 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.798496739 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.80246877 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.795127933 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.797702191 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.798757447 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.797494608 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.796166589 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.798629081 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.800720883 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.804420539 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.810412847 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.81094699 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.798449849 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.800866376 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.800049838 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.805371443 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.804461525 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.799762838 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.797562328 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.79962113 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.802778936 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.797297561 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.799673304 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.797136926 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.798586204 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.799909707 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.796258377 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.800408998 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.799105043 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.801029862 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.799730646 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.796757187 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.798837831 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.796406096 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.798694364 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.798300346 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.797615252 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.80114699 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.799137349 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.802457962 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.807170883 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.795912432 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.802829701 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.800136593 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.799649478 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.797568063 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.799304856 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.802700467 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.800087083 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.807378686 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.801150494 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.800251529 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.805911112 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.800190703 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.797686562 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.80625149 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.799851211 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.797437782 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.800717652 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.809106359 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.798756472 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.801028661 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.802576458 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.801454804 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.799006507 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.808193386 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.79914753 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.798573118 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.800110754 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.801584346 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.797605279 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.801118969 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.801265838 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.802295998 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.80164373 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.800868346 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.801242301 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.80233503 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.801319641 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.801583492 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.802842688 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.803492788 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.807830407 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.805840447 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.803729727 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.80257829 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.800951504 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.807965441 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.80249426 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.803276384 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.801691755 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.811670298 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.815188683 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.807855885 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.805131775 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.803398467 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.807747724 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.8055326 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.808727158 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.803828943 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.802150878 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.801039062 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.802238347 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.799277684 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.801183526 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.804048995 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.80359112 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.802982304 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.805394774 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.803765245 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.800622412 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.805969084 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.803914044 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.801806068 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.802876155 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.80481256 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.804358006 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.803535725 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.803640626 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.804240533 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.810323325 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.805968767 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.805859584 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.80374404 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.801266296 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.80361444 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.805919929 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.805991818 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.810425327 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.814781692 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.808918582 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.815517789 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.803046825 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.811988328 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.80598527 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.805607773 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.811451481 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.801042897 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.802232826 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.803414617 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.804367487 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.811362735 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.80475979 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.806219712 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.811479344 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.804216883 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.806373574 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.805600275 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.803334257 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.805077308 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.803827819 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.814135453 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.806245902 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.808372174 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.806479321 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.80091623 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.806320886 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.808734579 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.802660236 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.81074849 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.806818686 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.807661938 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.803683303 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.807262009 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.806590119 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.80891905 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.805686203 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.801472917 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.808205217 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.811577343 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.807760821 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.809619836 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.806636152 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.817390046 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.806388354 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.815333765 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.811551683 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.808558533 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.807478265 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.807524704 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.80846338 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.807162752 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.807842974 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.811355594 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.808428703 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.808649472 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.808948189 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.81159554 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.808882287 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.8109638 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.808391454 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.815667388 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.829385427 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.808375824 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.810678351 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.805276489 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.808988708 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.816052509 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.810912084 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.80441695 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.810839361 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.817299013 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.814031881 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.809522278 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.809135121 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.808881792 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.808476677 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.807252954 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.809624671 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.807675232 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.80854179 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.808218918 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.810265175 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.811628641 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.808784366 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.810986113 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.810229665 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.809418457 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.817696885 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.807308596 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.810612567 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.810321822 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.806193221 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.809594483 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.810518755 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.809678374 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.810270215 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.809344454 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.808282762 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.81568482 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.813434289 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.812029506 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.810126114 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.809502433 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.810064421 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.809126984 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.812178378 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.808588424 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.810187939 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.808635786 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.813692181 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.812280375 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.80938192 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.810989854 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.809935918 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.809071596 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.813065592 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.819907518 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.809368848 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.807175329 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.811144777 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.807263527 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.810041475 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.81359821 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.818431908 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.813148419 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.820603588 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.818094104 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.816182848 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.81153172 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.813981803 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.819397642 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.810276485 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.810855069 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.810259442 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.813525168 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.814011187 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.813941006 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.811456516 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.817001268 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.809691272 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.811168539 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.820030433 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.814197435 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.81254894 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.813676741 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.816804622 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.811192866 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.807523408 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.811829795 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.811165291 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.820272726 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.812003701 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.812864487 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.81425207 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.809526465 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.812428746 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.817512943 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.811692423 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.81338505 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.809657664 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.814016312 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.814708853 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.815366837 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.80975802 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.812129712 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.813483427 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.81691783 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.819219511 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.809250605 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.815694851 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.811516575 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.815058007 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.812946719 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.816647776 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.811087829 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.811267422 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.812721554 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.814800188 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.813701085 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.816127211 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.813618634 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.814740015 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.814950348 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.81775819 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.818562607 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.82371518 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.821685777 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.808742556 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.812498553 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.815809977 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.814914778 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.814857229 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.814575301 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.813316809 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.815661813 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.812877239 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.814690454 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.813299596 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.815561566 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.829673353 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.81513862 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.813581893 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.812452972 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.819023543 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.815573274 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.812399619 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.815106073 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.819893112 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.815132107 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.821741701 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.815386252 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.820475556 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.815346051 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.815581319 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.818184627 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.818782465 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.821741916 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.81733294 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.813448066 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.814532876 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.820067714 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.833212254 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.815769206 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.826367806 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.84365651 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.816744488 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.817815404 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.815952269 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.815299829 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.815471269 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.817548253 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.818044523 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.816458325 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.813992514 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.816010546 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.816878828 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.821775894 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.817192104 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.813987271 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.815565069 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.817351751 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.817628841 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.813451196 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.815825749 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.815225736 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.816297082 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.817345165 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.818199873 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.820570581 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.828571194 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.827695418 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.814865669 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.816673536 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.812964806 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.819709507 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.81967435 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.827992557 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.82531923 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.815990158 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.816439154 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.818057508 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.81743711 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.813979568 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.815870524 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.816792109 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.818386968 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.815429225 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.829277597 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.827345324 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.822555935 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.817546088 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.817414209 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.819360098 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.822349709 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.821293769 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.81853378 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.81928889 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.818349185 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.823280974 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.81806832 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.819887023 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.819901885 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.824407781 seconds)
  done (took 1077.576172417 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.815804235 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.816698566 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.814517147 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.815818512 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.814631516 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.81578255 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.817265831 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.815339853 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.818641694 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.813584298 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.814389585 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.815862177 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.817027827 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.815448128 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.816061423 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.814436373 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.814403607 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.815351254 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.814096018 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.817876448 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.818256738 seconds)
  done (took 39.870402016 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.819428814 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.817217395 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.817693064 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.82134891 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.815844474 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.81884279 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.817725154 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.819283513 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.819712048 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.818566717 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.818320992 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.819966189 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.819097997 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.816988217 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.81630022 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.821097299 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.820280644 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.818662322 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.818987785 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.8171542 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.819255519 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.818917135 seconds)
  done (took 41.753188398 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.823573666 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.82433262 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.823850218 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.817357781 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.820738853 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.81797422 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.821197204 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.820699291 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.82339485 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.82304408 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.820127107 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.821209147 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.827974066 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.827014916 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.821640842 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.822995793 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.966726593 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.823427218 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.823560023 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.823766923 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.818976803 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.825919063 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.822530856 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.819152068 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.82091973 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.821813366 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.824049777 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.82197541 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.825484429 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.822512589 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.827980991 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.823378214 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.823651268 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.825324749 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.824622726 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.826553206 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.82875867 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.822852491 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.821001548 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.827329649 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.833367798 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.844344216 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.826689913 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.830105632 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.824818305 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.826770948 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.826881236 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.82983792 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.820376585 seconds)
  done (took 91.277915691 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.822776092 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.824948705 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.818263685 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.823383862 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.824700074 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.82507576 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.823964058 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.827058916 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.821647408 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.81969854 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.826889387 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.822442262 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.823510586 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.825405587 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.825992363 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.822579252 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.820565476 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.821126453 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.821165594 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.822094971 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.821175961 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.823593656 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.823795035 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.822652807 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.822704457 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.821475203 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.824240403 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.827717851 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.820722549 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.821983933 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.824666751 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.82464372 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.824484971 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.824308809 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.821215289 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.826010881 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.824690941 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.822051371 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.823763395 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.821191543 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.830008187 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.826109119 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.825569694 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.827750439 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.822408151 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.823088785 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.82372578 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.822987743 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.824400004 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.824962821 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.82368442 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.824559461 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.826123412 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.823973976 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.824375214 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.825505261 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.822015731 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.823732006 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.825037062 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.824828897 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.825500026 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.826151207 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.824549936 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.82829591 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.828206366 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.823919488 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.822948658 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.826058691 seconds)
  done (took 125.777775928 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.828126933 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.829598347 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.826843337 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.827905305 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.826578821 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.829121222 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.827072922 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.828754041 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.827709551 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.829259173 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.829488815 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.827992411 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.828213727 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.826821237 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.828276255 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.830409014 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.828101592 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.831095163 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.830853334 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.829667023 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.828125117 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.829671874 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.828023142 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.829558354 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.832542763 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.831069622 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.829582171 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.83092768 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.832286349 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.831760222 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.83163908 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.834704668 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.830885641 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.829091446 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.829647103 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.834776698 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.83293572 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.831433155 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.831320253 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.832764662 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.832751002 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.830563525 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.829791085 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.830573243 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.831648437 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.832581669 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.830680597 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.833493918 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.829913246 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.833124527 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.832135091 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.831015411 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.833758184 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.832810891 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.831899167 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.831286377 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.831072602 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.832021401 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.83525178 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.831649843 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.832571886 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.831212579 seconds)
  done (took 115.247601085 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.829763304 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.831824016 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.82894372 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.829592273 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.829917426 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.829122612 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.833137764 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.829393834 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.832165758 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.832070341 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.831005221 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.827217747 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.830031003 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.82962582 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.82996021 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.830025479 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.828193071 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.828471392 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.830744347 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.82950541 seconds)
  done (took 38.353233047 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.830447624 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.831681815 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.830008775 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.827944514 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.830464604 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.832522758 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.833137147 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.832035048 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.829760413 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.831603334 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.833265454 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.833300673 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.830778639 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.829594415 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.832484362 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.828843947 seconds)
  done (took 31.052743084 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.831129408 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.835604951 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.834679771 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.834288688 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.83189061 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.832008134 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.835336688 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.831359617 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.829833671 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.833900998 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.834402959 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.834973176 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.836254657 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.834121614 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.830342229 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.835144178 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.829430425 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.832809627 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.835111298 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.835069001 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.832477228 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.830677212 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.834585882 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.833847183 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.83254726 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.833056927 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.832448631 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.831178916 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.831523999 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.835146975 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.833003253 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.831552247 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.832535386 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.831985094 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.836418331 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.836070041 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.834060559 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.836733672 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.835790653 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.834638468 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.834358987 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.833732705 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.834319999 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.833960038 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.834619316 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.837497687 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.833975024 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.833339144 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.832380326 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.832279313 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.839755497 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.836209867 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.833648681 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.839815397 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.835695351 seconds)
  done (took 102.621794847 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.837759384 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.834676422 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.831799277 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.835401745 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.83650384 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.835391387 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.836410562 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.83456761 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.832984224 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.837113674 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.836113155 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.836288798 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.831129621 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.83604431 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.833295092 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.837133744 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.835386384 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.836404627 seconds)
  done (took 34.790347008 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.835782427 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.835082752 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.836732282 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.831442916 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.833455679 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.837482717 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.836720037 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.838170585 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.836720163 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.833475557 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.833015972 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.83793183 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.838775747 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.84023037 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.834856888 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.83428532 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.837746273 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.837729651 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.836868296 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.837387447 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.840777176 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.837363126 seconds)
  done (took 42.160657317 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.837970276 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.840554888 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.854198874 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.858120624 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.858862365 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.873216062 seconds)
  done (took 12.880591241 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836934133 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839997358 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.834650521 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839423783 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83928276 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837798491 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836287352 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83617805 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840893698 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835754316 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83907359 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837997165 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840548122 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838182826 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839233657 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840250354 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837654078 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83882824 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837381844 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840365733 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841683916 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839443111 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839272491 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839735348 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839644381 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838385896 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841574034 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840876953 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838079506 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841504441 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841676604 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839165582 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841003768 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836637908 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840889694 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841020409 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837639316 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844114677 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841779022 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836872582 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.84190501 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838658423 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841433779 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838661433 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842574391 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835207003 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836533175 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838783114 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840218397 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843379368 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84191912 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839091382 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840724843 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843002858 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843385071 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840504398 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839197527 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838506603 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840852113 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841296652 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839258181 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843212831 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840523888 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840762245 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843538379 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841907221 seconds)
  done (took 123.185005786 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840294203 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.838214557 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841416093 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84405215 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840415033 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840892388 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837525928 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840472729 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838419477 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839467406 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843780758 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840590657 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843021326 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839519372 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837415146 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841189072 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840781476 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843695248 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840370809 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840791954 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842397489 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840339809 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841100418 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840691089 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840199355 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843776866 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841670092 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843350763 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839807847 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840381549 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843435067 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843102839 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842030963 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.84183675 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842429103 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843123185 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842623145 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841254497 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839972002 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845230654 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842527075 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843494677 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842822497 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84260933 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841476616 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839260975 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84216273 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843752674 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841710248 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839629211 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843576815 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842801198 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84308666 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842320893 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843797946 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842721771 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84014244 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841265864 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844113011 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842327438 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838889772 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844198321 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848189394 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844239947 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842559184 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843129704 seconds)
  done (took 123.321964409 seconds)
done (took 2511.418623344 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.917503541 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.055285207 seconds)
  done (took 15.736955948 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.016196254 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.96895278 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.853775764 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.888221398 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.848007877 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.871363252 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.853559829 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.849277422 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.854986213 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.852406095 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.852900278 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.041128965 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.851207063 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.849255929 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.854572123 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.94641512 seconds)
  done (took 52.029756462 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.857438049 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.858057954 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.868073096 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.861267394 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.857744724 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.8735466 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.89422123 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.86179129 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.920269503 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.868175469 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.975748209 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.868917522 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.857398624 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.922986295 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.867905225 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.87228555 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.957594359 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.931110076 seconds)
  done (took 35.747623498 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.93687003 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.858062353 seconds)
  done (took 10.576163153 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.869708608 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.871018651 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.883789749 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.845423933 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.855370959 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.876459292 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.856940866 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.859484845 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.885226032 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.893839723 seconds)
  done (took 70.476428031 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.862641183 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.858368374 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.859699763 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.85810977 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.850508688 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.850968859 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.857855011 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.853247448 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.530410451 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.890640005 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.865009255 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.864482398 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.858338842 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.859153837 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.856931267 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.881269022 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.952144504 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.855241932 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.856796889 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.865023297 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.85844393 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.916291625 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.873803101 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.862532802 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.890479066 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.534815813 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.862526433 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.865463017 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.953607263 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.85639062 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.859627998 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.860575963 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.862535188 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.230508883 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.127849633 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.859169315 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.869768925 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.867759997 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.857629096 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.955722605 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.859814486 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.867426681 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.466103954 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.110150613 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.953244888 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.90453611 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.180828623 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.875653452 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.861803524 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.887578862 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.863275987 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.86106432 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.872990109 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.339075327 seconds)
  done (took 131.498671356 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.852925481 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.204517436 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.028354419 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.85549959 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.144351824 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.064879173 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.853650647 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.906770323 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.854710782 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.087329467 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.112572222 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.970654204 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.855705216 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.856184624 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.850156164 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.852009669 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.020716555 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.93264406 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.85516369 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.853213111 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.888498248 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.105644103 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.984253139 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.859296822 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.88426734 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.07336404 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.981509704 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.964556045 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.630221995 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.857893043 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.925130323 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.853274871 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.854694427 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.851735891 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.020211511 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.954194561 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.944699036 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.854756049 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.85451829 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.855123682 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.531990888 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.062811162 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.955519917 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.000528577 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.056644801 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.067606772 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.642972623 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.857923892 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.603696814 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.025870232 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.094905304 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.096171323 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.982294225 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.856691363 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.192808283 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.855931904 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.856831811 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.108924684 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.002441025 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.96074621 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.857288524 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.85599151 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.853146735 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.111107875 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.856692282 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.955632215 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.856947988 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.85660794 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.960895713 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.962077522 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.000111392 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.074864554 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.892459126 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.765599053 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.394585424 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.111881519 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.928049654 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.111556727 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.859005823 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.854009269 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.941698681 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.70125134 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.117646328 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.11260999 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.118328467 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.897830173 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.582071557 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.859977592 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.09235053 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.084898041 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.110685232 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.071171318 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.098199757 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.188752998 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.858823824 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.859963991 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.078631103 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.997737225 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.858205348 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.214504037 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.09833516 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.429144539 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.884200783 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.174443441 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.994372419 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.858473994 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.507190475 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.860736015 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.087245476 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.906612167 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.862740742 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.860853525 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.083855061 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.834591456 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.862919317 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.72591006 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.928155472 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.859019703 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.098891478 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.859279281 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.125661705 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.860158902 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.108306198 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.9709523 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.896135962 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.039528458 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.070480446 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.860078032 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.113466281 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.109848599 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.982098121 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.13753179 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.769239521 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.863194789 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.154009407 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.860020804 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.860208359 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.034754203 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.864214201 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.014215577 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.863507892 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.152841997 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.88501135 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.100759576 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.860350664 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.122229512 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.89751062 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.917084306 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.861992111 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.998805762 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.867339852 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.692133818 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.025886629 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.863723949 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.860001239 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.417118974 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.862551329 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.016542522 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.104132654 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.88824204 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.941471769 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.53301779 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.863448099 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.957004211 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.890528965 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.256156683 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.863323896 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.12322934 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.863214208 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.863366223 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.863763355 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.110127996 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.102220622 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.865229995 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.858609331 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.761133071 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.863884928 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.862554719 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.051940036 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.223279009 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.864345088 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.072486828 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.868452008 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.995276295 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.860326736 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.943301468 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.201873112 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.86064944 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.863232216 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.86321992 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.863877842 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.862825103 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.079693417 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.89789522 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.412901013 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.006816509 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.137841884 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.181505604 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.119448743 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.910926397 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.870143808 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.124734782 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.867918047 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.929157695 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.866738783 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.890476326 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.103963475 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.867725586 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.07832904 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.154652002 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.906844527 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.918146531 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.86986105 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.866238839 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.861998636 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.017075572 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.958063803 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.868387412 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.866299786 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.986687322 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.992242921 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.077349628 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.866740102 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.907737201 seconds)
  done (took 901.809983103 seconds)
done (took 1219.64069684 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.867299019 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.868023353 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.857005764 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.863208755 seconds)
  done (took 29.243429002 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.873250717 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.876471557 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.873714235 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.870592655 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.872900905 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.870684993 seconds)
  done (took 13.025965271 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.907334051 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.866186708 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.865207438 seconds)
  done (took 21.427626834 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.940409151 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.257349116 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.980308291 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.298558769 seconds)
  done (took 10.268305066 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 2.314777605 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.872333655 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.871453601 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.872658252 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.875362586 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.876005413 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.872098558 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.873869377 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.87498387 seconds)
  done (took 19.095470229 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.230934412 seconds)
done (took 99.079618107 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.391056302 seconds)
    (2/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.04787095 seconds)
    (3/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.009747342 seconds)
    (4/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.96402657 seconds)
    (5/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.186101341 seconds)
    (6/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.780529249 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.014084333 seconds)
    (8/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.864032879 seconds)
    (9/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.390648034 seconds)
    (10/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.96019403 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.9054772 seconds)
    (12/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.45016688 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.889681508 seconds)
    (14/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.044509773 seconds)
    (15/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.021135773 seconds)
    (16/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.097691812 seconds)
    (17/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.044612231 seconds)
    (18/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.888153342 seconds)
    (19/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.172936652 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.283657346 seconds)
    (21/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.923973479 seconds)
    (22/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.097267087 seconds)
    (23/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.032585171 seconds)
    (24/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.97189944 seconds)
    (25/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.214076573 seconds)
    (26/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.040046818 seconds)
    (27/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.154461427 seconds)
    (28/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.929828045 seconds)
    (29/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.845153227 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.146130051 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.493692471 seconds)
    (32/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.859529306 seconds)
    (33/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.205275881 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.81630596 seconds)
    (35/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.249966789 seconds)
    (36/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.154835811 seconds)
    (37/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.947519161 seconds)
    (38/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.866075016 seconds)
    (39/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.031104831 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.956415896 seconds)
    (41/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.946660168 seconds)
    (42/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.027923364 seconds)
    (43/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.958944839 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.667578702 seconds)
    (45/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.304809367 seconds)
    (46/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.852553312 seconds)
    (47/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.590565667 seconds)
    (48/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.162871616 seconds)
    (49/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.545556022 seconds)
    (50/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.080322642 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.598478194 seconds)
    (52/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.217608924 seconds)
    (53/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.083684144 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.0114557 seconds)
    (55/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.700637964 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.11362357 seconds)
    (57/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.249619934 seconds)
    (58/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.290114015 seconds)
    (59/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.05378693 seconds)
    (60/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.827437425 seconds)
    (61/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.081249177 seconds)
    (62/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.961817234 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.922307932 seconds)
    (64/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.992194666 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.663399599 seconds)
    (66/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.160755075 seconds)
    (67/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.928573853 seconds)
    (68/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.861224025 seconds)
    (69/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.887482401 seconds)
    (70/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.960222222 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.799939121 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.205055071 seconds)
    (73/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.995413052 seconds)
    (74/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.968234071 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.941325268 seconds)
    (76/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.29543564 seconds)
    (77/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.872591994 seconds)
    (78/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.962518545 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.861678811 seconds)
    (80/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.879085328 seconds)
    (81/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.886589968 seconds)
    (82/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.847681641 seconds)
    (83/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 3.022820918 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.859706646 seconds)
    (85/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 3.250770941 seconds)
    (86/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.103153354 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.93938063 seconds)
    (88/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.369003377 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 5.677317711 seconds)
    (90/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.28558735 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.855610861 seconds)
    (92/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.198464468 seconds)
    (93/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.247402158 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.013662066 seconds)
    (95/309) benchmarking ("sort", Int8, false)...
    done (took 4.834442509 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.988794322 seconds)
    (97/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.860878722 seconds)
    (98/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.978268549 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.954505594 seconds)
    (100/309) benchmarking ("sort", Float32, false)...
    done (took 5.57734483 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.162259868 seconds)
    (102/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.95662075 seconds)
    (103/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.361902777 seconds)
    (104/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.280478695 seconds)
    (105/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.942744147 seconds)
    (106/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.889207423 seconds)
    (107/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.952627272 seconds)
    (108/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.941661531 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.047600661 seconds)
    (110/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.880078249 seconds)
    (111/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.917930194 seconds)
    (112/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.192954764 seconds)
    (113/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.561437336 seconds)
    (114/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.942916419 seconds)
    (115/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.239175869 seconds)
    (116/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.06348333 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.851119761 seconds)
    (118/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.022879008 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.854522567 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.141465096 seconds)
    (121/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.836983509 seconds)
    (122/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.334873491 seconds)
    (123/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.062780678 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 3.11515762 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.86509574 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.484817144 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.107411111 seconds)
    (128/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.053137903 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 3.284663265 seconds)
    (130/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.824718973 seconds)
    (131/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.34485972 seconds)
    (132/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.749934524 seconds)
    (133/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.859121456 seconds)
    (134/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.968784067 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.061245937 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.086640005 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.976658924 seconds)
    (138/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.187387527 seconds)
    (139/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.861097544 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.129994355 seconds)
    (141/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.83540118 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.933556336 seconds)
    (143/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.83126675 seconds)
    (144/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.737761487 seconds)
    (145/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.832122758 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.046980085 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.855740452 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.765039455 seconds)
    (149/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.847095783 seconds)
    (150/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.8133824 seconds)
    (151/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.312294326 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.514848218 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.918869924 seconds)
    (154/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.057966146 seconds)
    (155/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.824005253 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.839223463 seconds)
    (157/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.20264502 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.13666814 seconds)
    (159/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.65453403 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.98170741 seconds)
    (161/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.860822289 seconds)
    (162/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.898398479 seconds)
    (163/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.375442943 seconds)
    (164/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.059538754 seconds)
    (165/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.823790928 seconds)
    (166/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.060891085 seconds)
    (167/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.335891516 seconds)
    (168/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.912674042 seconds)
    (169/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.289698284 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.063402558 seconds)
    (171/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.977512261 seconds)
    (172/309) benchmarking ("sort", BigInt, false)...
    done (took 6.823274042 seconds)
    (173/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.120923959 seconds)
    (174/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.962377539 seconds)
    (175/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.818933003 seconds)
    (176/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.987167451 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.065914019 seconds)
    (178/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.011450821 seconds)
    (179/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.984306226 seconds)
    (180/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.212361171 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.121194568 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.895610078 seconds)
    (183/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.028233854 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.880618524 seconds)
    (185/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.444605759 seconds)
    (186/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.082575254 seconds)
    (187/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.056739693 seconds)
    (188/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.984570124 seconds)
    (189/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.171920822 seconds)
    (190/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.185844879 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.902833212 seconds)
    (192/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.04950887 seconds)
    (193/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.0193068 seconds)
    (194/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.073169591 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.197822986 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.857532535 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.60312179 seconds)
    (198/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.11240675 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.912081006 seconds)
    (200/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.974129379 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.200063781 seconds)
    (202/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.880121943 seconds)
    (203/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.878667792 seconds)
    (204/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.964730257 seconds)
    (205/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 3.184544021 seconds)
    (206/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.969994933 seconds)
    (207/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.164618029 seconds)
    (208/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.342795194 seconds)
    (209/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.895076659 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.167221392 seconds)
    (211/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.121964502 seconds)
    (212/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.945335455 seconds)
    (213/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.876531727 seconds)
    (214/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.983866882 seconds)
    (215/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.960820859 seconds)
    (216/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.946998596 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.869527237 seconds)
    (218/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.23161846 seconds)
    (219/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.979411546 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.715347442 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.078277095 seconds)
    (222/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.998424436 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.876063583 seconds)
    (224/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.040308938 seconds)
    (225/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.161378428 seconds)
    (226/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.071977037 seconds)
    (227/309) benchmarking ("sort", Float64, false)...
    done (took 5.652484222 seconds)
    (228/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.867448171 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.037494901 seconds)
    (230/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.875321166 seconds)
    (231/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 3.642861856 seconds)
    (232/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.897656252 seconds)
    (233/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.026666724 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.904500628 seconds)
    (235/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.3227211 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.580325037 seconds)
    (237/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.964419316 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.916973285 seconds)
    (239/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.985104115 seconds)
    (240/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.308141544 seconds)
    (241/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.966849819 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.971441387 seconds)
    (243/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.793596823 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.755542807 seconds)
    (245/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.128898524 seconds)
    (246/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.174068664 seconds)
    (247/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.90160622 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.254834763 seconds)
    (249/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.866591825 seconds)
    (250/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.951983311 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.824569504 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.906986052 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.848349233 seconds)
    (254/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.511084026 seconds)
    (255/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.216040961 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.982421596 seconds)
    (257/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.011201105 seconds)
    (258/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.879532297 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.202683006 seconds)
    (260/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.74560461 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.881429174 seconds)
    (262/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.960721832 seconds)
    (263/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.200711744 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.980362583 seconds)
    (265/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.979487002 seconds)
    (266/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.052002563 seconds)
    (267/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.884328913 seconds)
    (268/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.831062812 seconds)
    (269/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.899060725 seconds)
    (270/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.865952812 seconds)
    (271/309) benchmarking ("perf_sum", Int8, true)...
    done (took 2.002478927 seconds)
    (272/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.412235078 seconds)
    (273/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.879720029 seconds)
    (274/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.909563497 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.177207922 seconds)
    (276/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.163677616 seconds)
    (277/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.225087167 seconds)
    (278/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.904147346 seconds)
    (279/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.880073983 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.374711268 seconds)
    (281/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.907625867 seconds)
    (282/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.851341247 seconds)
    (283/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.867143885 seconds)
    (284/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.540475486 seconds)
    (285/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.242859399 seconds)
    (286/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.934265261 seconds)
    (287/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.129371531 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.036524832 seconds)
    (289/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.467070095 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.995266058 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.96047426 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.981890312 seconds)
    (293/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.896786861 seconds)
    (294/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.880619399 seconds)
    (295/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 3.258108939 seconds)
    (296/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.892959028 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.351054962 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.616864806 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.912293543 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.21737523 seconds)
    (301/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.996967678 seconds)
    (302/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.871746279 seconds)
    (303/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 3.24873941 seconds)
    (304/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.912297897 seconds)
    (305/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.981351213 seconds)
    (306/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.354831606 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.909283779 seconds)
    (308/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.215536577 seconds)
    (309/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.81200822 seconds)
  done (took 1006.024933832 seconds)
done (took 1007.870394285 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.934173693 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.904918273 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.889208762 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.912721541 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.99908124 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.915668363 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.898279592 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.889436639 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.935426004 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.937180107 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.884994867 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.913720054 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.887274736 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.885986173 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.885518785 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.899304573 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.20308664 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.919696892 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.901624544 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.893493117 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.899803434 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.881206565 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.932573 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.909579045 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.889755808 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.882820893 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.883062828 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.901037436 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.99306083 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.88797031 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.883116724 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.889456567 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.196498039 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.913497385 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.873566248 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.897828165 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.888179787 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.8856177 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.881266077 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.909004984 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.287502495 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.919269068 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.875568592 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.875564734 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.876357811 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.879304343 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.87789781 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.882150757 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.888201131 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.888793876 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.280886321 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.937391607 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.879156108 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.876595819 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.887048753 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.877097485 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.878143852 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.890972586 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.893030309 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.89123713 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.184884972 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.910041208 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.874150748 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.888868413 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.879684774 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.316119902 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.909766208 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.873114161 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.279536442 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.916416725 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.315544231 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.920033294 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.870255472 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.882049379 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.899356437 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.188614725 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.895650587 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.865580909 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.87258482 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.865470192 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.876042717 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.879129681 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.868859536 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.865773958 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.878693664 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.892328802 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.877401659 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.863294768 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.870586457 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.881113301 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.869671846 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.874741402 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.861873683 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.853631988 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.868850712 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.863357974 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.862698775 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.863641962 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.863362676 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.868543309 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.265455671 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.918077451 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.855644913 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.853336539 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.8552306 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.8693434 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.263088789 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.900063156 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.877330912 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.900223384 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.856816094 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.16089308 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.89241752 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.866940025 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.861103855 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.854025897 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.8458253 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.159146642 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.290934935 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.908786498 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.853084576 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.849194804 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.866023928 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.852560811 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.848292757 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.170253234 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.885755756 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.865073159 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.972493615 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.860993963 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.882175603 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.849697553 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.854740395 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.880381978 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.871077098 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.882656381 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.854781293 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.867008683 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.867595303 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.848461638 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.863170669 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.861427274 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.853822793 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.857821806 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.847547589 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.880826632 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.864567142 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.864437686 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.874022856 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.974246549 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.85062087 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.159457298 seconds)
done (took 293.825323743 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.923953984 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.844092174 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.945831901 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.848440872 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.931685999 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.934751592 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.846549278 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.84647181 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.847724042 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.220498894 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.848581339 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.848314676 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.847847275 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.846504115 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.930249325 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.849221993 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.846958726 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.18519519 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.851324908 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.922210633 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.848929812 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.847751342 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.84970877 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.224761076 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.843800676 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.845996809 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.923858218 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.851184714 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.189523399 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.845201843 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.842699713 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.189279123 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.941537889 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.878678935 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.861363197 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.848939638 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.933703645 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.863656354 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.932181296 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.933498327 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.948530013 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.881552312 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.850777893 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.852874909 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.856465738 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.853092569 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.848240939 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.878405509 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.845704414 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.849142805 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.187418657 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.860973027 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.85013549 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.850362105 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.849670785 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.883818702 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.849727201 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.853770727 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.942170451 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.854561023 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.91484409 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.224981827 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.225014767 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.852557962 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.84713419 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.848747206 seconds)
  done (took 182.996453356 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.918310533 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.924782022 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.918547294 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.856951742 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.90038042 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.919992536 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.858121364 seconds)
  done (took 15.071379378 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.859919827 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.853608019 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.906115854 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.906680076 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.854002105 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.002779625 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.853059524 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.865431018 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.849925614 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.905553054 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.853856848 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.853648115 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.860097763 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.847843885 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.903474815 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.867902201 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.972606804 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.85557292 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.854590091 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.006284223 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.851241206 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.860146321 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.908359563 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.86577654 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.854399563 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.859240902 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.447053618 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.855922088 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.850980282 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.854022987 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.851638072 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.897567555 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.856032653 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.85024094 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.852623303 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.970615593 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.855572827 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.851977019 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.855391066 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.851056948 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.853857521 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.855296004 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.856031148 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.851342722 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.854027214 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.879309289 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.855059449 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.854805138 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.855086281 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.855962395 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.905391846 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.857016824 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.853055929 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.853046018 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.910849854 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.86185039 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.856586533 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.852487544 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.857025101 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.852078299 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.007408327 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.904946908 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.855311029 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.906731773 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.854818178 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.857429813 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.856716938 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.856591589 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.95383273 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.85673 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.907490456 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.85335544 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.016690983 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.881274359 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.857181909 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.860085387 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.860373696 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.85723469 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.859126576 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.86289555 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.85373669 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.859168885 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.863234058 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.855835555 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.854278057 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.969294394 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.965348617 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.85509707 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.870450232 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.864003599 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.854854611 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.910336556 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.857534119 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.853942735 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.914733642 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.975139701 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.914354884 seconds)
  done (took 204.458523354 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.861200237 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.864559554 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.85842824 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.873255472 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.859014645 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.853652872 seconds)
  done (took 12.949890299 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.856405619 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.854147121 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.853195053 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.853527773 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.85271305 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.85428832 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.855306999 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.854392687 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.85834152 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.851704841 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.855134261 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.853860577 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.855082299 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.853726946 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.854183265 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.851579248 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.854082712 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.849124954 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.852254357 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.853539984 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.000599792 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.850578628 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.849888732 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.851022276 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.855339499 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.84692496 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.853827908 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.845882051 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.846776069 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.855797462 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.84822691 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.844080966 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.843990657 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.849670247 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.848095919 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.843935569 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.844829876 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.842108575 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.83688836 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.841253907 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.8455309 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.841177562 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.841199374 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.842142563 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.842767763 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.845169426 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.843787822 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.845834477 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.838901218 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.838574591 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.839614365 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.837795647 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.837349312 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.838045715 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.839761181 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.842873227 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.843205709 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.838498414 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.83861608 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.840428309 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.840264215 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.839997958 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.841064178 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.8447106 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.845949407 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.8413665 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.840445739 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.845094317 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.839755382 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.839371313 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.840563117 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.835701139 seconds)
  done (took 135.868041307 seconds)
done (took 553.135009963 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.964784204 seconds)
  done (took 8.72662913 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.992850129 seconds)
  done (took 8.848914535 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.406388773 seconds)
  done (took 10.223052268 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.899519652 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.935806203 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.899715267 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.888272552 seconds)
  done (took 29.462568603 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.007612798 seconds)
  done (took 8.822135658 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.910927937 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.885977854 seconds)
  done (took 15.645817557 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.922119258 seconds)
  done (took 8.74402138 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.026433485 seconds)
  done (took 8.86726782 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.907277324 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.917247281 seconds)
  done (took 15.6559513 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.876241478 seconds)
  done (took 8.691516608 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.498833352 seconds)
  done (took 11.41292091 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.910175182 seconds)
  done (took 8.83192836 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.934921018 seconds)
  done (took 8.75140333 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.993869347 seconds)
  done (took 8.808291377 seconds)
done (took 163.254200516 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.888314527 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.885555236 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.886016207 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.875053191 seconds)
  done (took 29.348435476 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.911355376 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.912097355 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.913053441 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.923114504 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.911831436 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.908730063 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.902478841 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.903157343 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.920587651 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.911441094 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.911784133 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.911209183 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.907534928 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.903223764 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.913816135 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.91085051 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.920063666 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.918357617 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.915198994 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.913504483 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.87800536 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.921406004 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.912352828 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.876682319 seconds)
  done (took 47.633540396 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.07733197 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.949891527 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.029785431 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.929141353 seconds)
  done (took 9.784127253 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.929844263 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.930294395 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.941456209 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.979889619 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.003397171 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.939852511 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.904848028 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.899787584 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.885152821 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.930988934 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.006092894 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.923694031 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.016217701 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.87799853 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.063968925 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.876693483 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.878451579 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.928394173 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.980336538 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.994383431 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.877654094 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.929137212 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.933347708 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.931344124 seconds)
  done (took 48.363647859 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.876670687 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.88381181 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.882625341 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.877877521 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.87772853 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.877624085 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.885092889 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.879715157 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.899092248 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.878281663 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.875938497 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.876648778 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.877378519 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.877823704 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.877461655 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.889914152 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.890477 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.879103058 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.880668582 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.883995192 seconds)
  done (took 39.429085657 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.871540608 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.726533613 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.223782129 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.128357494 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.873808167 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.8723835 seconds)
  done (took 31.496105614 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.892790237 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.886311473 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.87767348 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.938851531 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.020489853 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.886631836 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.879281427 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.89167544 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.929062134 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.943960208 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.900076296 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.910714395 seconds)
  done (took 24.758769545 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.876117293 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.890657187 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.877389976 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.906858878 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.892499303 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.888688461 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.88650635 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.874333339 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.894745136 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.90048391 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.890272047 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.891909824 seconds)
  done (took 44.476197252 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963882232 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.763574413 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.937813117 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.598003496 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.414854741 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.085620193 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.392028509 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.220123379 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.878398401 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.147979742 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.877994829 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125281501 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.130044933 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87388457 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.945761105 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.327499545 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.180191894 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109136497 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906106872 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.530429039 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022317921 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.478263204 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.684882821 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.028579982 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.111827336 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.030063463 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.159806175 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.858366478 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035509642 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93740526 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908784764 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.899698564 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174579414 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.282123423 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014957705 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909960274 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.56018372 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.621057401 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.89274717 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.691797853 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.766469029 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.037463217 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908557179 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900304968 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.833748227 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.514040874 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239681584 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.906013249 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.602274877 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.900365722 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911992133 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989336251 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.903968564 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.716708407 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.855545308 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.182060417 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.896814043 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907429068 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.472030297 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.985688987 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.490489053 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.966269647 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.994980848 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.571737363 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.37747304 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.051762911 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.903781984 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.904679995 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835529837 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.649785435 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.031400128 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.045713973 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.919930135 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.551706216 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.222737497 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.970991969 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.989237958 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.197999752 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.69324162 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.947928665 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129602421 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.861654266 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837923468 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.748282785 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.836799998 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173240201 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944284672 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.536741686 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943840736 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.242589138 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.914082919 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925989257 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908855098 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.126483182 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.788663246 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902177699 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.668442404 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.193910311 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925036962 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.243981063 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836836585 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.906970753 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15891138 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.114553879 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.079797488 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.467385529 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070280974 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903131016 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.994309537 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.76137647 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.024754141 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.186112727 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964181161 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.986086794 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03691748 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.863292903 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209732768 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.935221605 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.078083382 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.911942126 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174111887 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.225942061 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.159927569 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987486323 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.905327586 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.904056126 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.653849417 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.534202555 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.129004995 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.908821072 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.333125814 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.025516508 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.905862865 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840209529 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.613928094 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.907598302 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.027083164 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.129890433 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.797157979 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.289397702 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838545861 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.05108423 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.016293293 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.129286246 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.562542765 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.989002613 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.165611358 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340897007 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.184127475 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026163967 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924525545 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999170296 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927661677 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.279588588 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.271643793 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.910010067 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.90988453 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.618957838 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.979041808 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908087887 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.911864676 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.710518021 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.193664604 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.934646304 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.91525991 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.795574981 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.921476732 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974593353 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.912137233 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.91686151 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.410702913 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.661834096 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.918774072 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.642347316 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162937554 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916781903 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.580145257 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.104817348 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.993112378 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.189900292 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96832888 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.841465305 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.609324503 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.610044541 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907172098 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.842024912 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.909247832 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916666193 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.919211059 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.106879 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.198000746 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.954307112 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.581508447 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.026213876 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920369255 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.912835152 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908946233 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.410102642 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.997867946 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.692497967 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.028392627 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046592324 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.922309315 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.842734451 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.911212332 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.913803682 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.908166846 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.866354509 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963067884 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.574482948 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366661055 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.171046451 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.566151023 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929271583 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.600301249 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.044325481 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.93582275 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.667600872 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.940063043 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.011144548 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984696955 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.920864601 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.574802118 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.684328365 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.48208761 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224368525 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.222741696 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350537789 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.353528748 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.241882271 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.251685213 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146016274 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.440346492 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.970880445 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.258714206 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856849068 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001823411 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.565440745 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.276716991 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925193343 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139343268 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301021187 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.741956555 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.076455141 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.121568109 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946772578 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.776310136 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.948765488 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.120093582 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067070392 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.660059586 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.14195464 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255142412 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.670193955 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.033807467 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.912795896 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.619041535 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000670158 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.622118781 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.272430515 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376740003 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.029820446 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411484286 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.921811864 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.357347793 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.26917041 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.18687828 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.115291985 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.848708607 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.924242787 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.923680866 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.915870495 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.90633389 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.883184417 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.212398871 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923438025 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149259251 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.126341914 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.288021964 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.820744966 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.919348821 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914540261 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219308504 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.651958184 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161137284 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.304081384 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.532922336 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93857598 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.847904402 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849470363 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.616270349 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.914932001 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.88910214 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.146642695 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.022964911 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.870504285 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.532039735 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233643383 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.169426291 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.9264339 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.193245904 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.192293705 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.655961049 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945266881 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.01540524 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.684449378 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.623242045 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.137375999 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.150559512 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.748750661 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.146716724 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.964755358 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.89046894 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.915664969 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.131141293 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.13879771 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.914394126 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172088451 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.640775089 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.924630171 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29864378 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973707805 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.90599077 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.137807038 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.010843981 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927863392 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996416593 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92613653 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.927902517 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.92821315 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966658654 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.901623607 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.055018419 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.931116458 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00876685 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.998752256 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.550753851 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.938925318 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197904672 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285384184 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.249134697 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977260599 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.916915652 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921573445 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850616702 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054909349 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.361770868 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.192311667 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.046311976 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.060648574 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943807344 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.668325067 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.266848839 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23911888 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.191400942 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.812613948 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916671796 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.005459017 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.143999169 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930937078 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.12971408 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.152765329 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246530461 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.394724945 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.124349904 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.365116352 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.192239555 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.28763419 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.919115595 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.51044897 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.925265562 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.684049121 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.962590706 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.894597056 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209840556 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929026556 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.30626457 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.94308044 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.11478425 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.435466561 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.580648838 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.289256059 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.912967523 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.986114655 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.204356942 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.320355121 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23660718 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98821938 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92958689 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.639229981 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058526286 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.910761644 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.198150022 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.920101804 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.132597586 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.631593867 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.928843134 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2073882 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232872244 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.918623871 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.918832171 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983585287 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.930974307 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.144019511 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.187651863 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.177498371 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930342836 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.9229668 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.737822971 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.203640834 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.981055858 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856389801 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.924157638 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019157869 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.171170612 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.941452503 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.438876909 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.62414454 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220721809 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.841650425 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942702165 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374698016 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.368185982 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253933749 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.456938739 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.155562835 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.482225741 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.824054233 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.303641025 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.926218723 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.379131325 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.306170875 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.926986549 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.479427116 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039804971 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.192234312 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.247327806 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.942216221 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.718664325 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.966242587 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146810073 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.525889199 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864719732 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.930786493 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.988555322 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.922963015 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.052188284 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.934650189 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.913588774 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849970933 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.766622012 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.415847741 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.928271173 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.917349259 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.712040348 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.529186017 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.036489496 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07972914 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.930070265 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.647947458 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.214745288 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.178421624 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.476133241 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.001148629 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.927125491 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925198167 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.852734864 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.119809102 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.123743849 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224906407 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.339376306 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.040006317 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.929586129 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.139485701 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.135750699 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.859231037 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.081706681 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362933137 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.040181179 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.849263606 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.638013845 seconds)
  done (took 1708.490373257 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.939742801 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.024564845 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.931218302 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.008622498 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.966430409 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.994447548 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.970963826 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.995872658 seconds)
  done (took 57.684366795 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.929779621 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.141807871 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.941036453 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.930202641 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.954124372 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.929610126 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.522946922 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.945324792 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.963605086 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.942483926 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.931893682 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.942200054 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.299805754 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.958590101 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.937978764 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.941666663 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.951346157 seconds)
  done (took 76.054678419 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.933770358 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.264958474 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.955415952 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.950633114 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.907030092 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.940211244 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.958105296 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.977292262 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.934883241 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.10583176 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.273504565 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.941481873 seconds)
  done (took 91.000288732 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.947286075 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.938601975 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.938325251 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.93885298 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.938517201 seconds)
  done (took 11.568250447 seconds)
done (took 2221.91631237 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.196821376 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.161374211 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.168150717 seconds)
  done (took 6.187398948 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.082524125 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.129473128 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.249036679 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.25431565 seconds)
  done (took 10.578265221 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.220743738 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.317716271 seconds)
  done (took 6.397368851 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.271348706 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.958720001 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.325574389 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.933830469 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.935544804 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.934752771 seconds)
  done (took 22.66611169 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.936804164 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.938779079 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.940221054 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.941857009 seconds)
  done (took 9.617162959 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.920920885 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.679177082 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.92508277 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.938970424 seconds)
  done (took 21.325205193 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.685300473 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.335295936 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.681172909 seconds)
  done (took 9.561100492 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.422301989 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.157239562 seconds)
  done (took 9.438295052 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.186585916 seconds)
  done (took 4.045398697 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.966392106 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.208755061 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.47094355 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.45842112 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.550093008 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.762719643 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.267441089 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.180786567 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.386475928 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.401116205 seconds)
  done (took 25.516328508 seconds)
done (took 140.942704436 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.359860573 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.960993731 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.141333605 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.294017968 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.173791256 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.140012579 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.154821114 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.28870638 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.825952145 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.814999821 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.298009461 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.169270975 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.10484889 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.950246968 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.109659012 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.952525857 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.164953736 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.37912771 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.018014571 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.202026311 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.17168807 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.943815258 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.143704433 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.966701129 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.170077048 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.085524947 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.490083985 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.959187453 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.160497733 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.501579705 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.090361791 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.348050277 seconds)
  done (took 170.397207658 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.938490474 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.939029864 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.936363452 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.935553711 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.227679135 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.93833407 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.938446421 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.937176422 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.967327758 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.947589001 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.935683319 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.217623983 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.938770563 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.934666632 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.93559904 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.936226206 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.117898731 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.939347862 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.937217531 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.934402802 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.936473822 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.094967797 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.935129452 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.108379192 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.082203543 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.941733199 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.932866678 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.939077752 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.938184208 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.941879207 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.938547675 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.939749502 seconds)
  done (took 209.128509276 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.937932633 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.94036092 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.941839666 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.939888669 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.940866539 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.937762131 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.943694372 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.941084381 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.438923597 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.429439786 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.936729355 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.941928704 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.942534987 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.937931514 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.941845301 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.93937212 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.941320188 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.937519315 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.941719562 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.945731436 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.952781406 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.597167885 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.950734758 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.611269239 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.951136579 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.952013538 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.941730823 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.956091691 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.957780738 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.957504038 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.958051934 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.94229934 seconds)
  done (took 222.39320681 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.132427893 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.945148251 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.947841835 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.879005525 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.95031646 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.945341449 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.941484757 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.130602997 seconds)
  done (took 19.765296972 seconds)
done (took 623.551324754 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.418338114 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.266670598 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.128518765 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.974090253 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.220455879 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.005758904 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.970719776 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.036907235 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.699898873 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.041155838 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.620272907 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.994911166 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.708097723 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.000764232 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.089673105 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.029738989 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.566745982 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.656714648 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.147261712 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.035168522 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.141701739 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.938880755 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.052620379 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.743041263 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.725729558 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.997175444 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.15054904 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.561821008 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.98030779 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.131121612 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.750980734 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.37839121 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.985173898 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.968755212 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.027384129 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.006509698 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.319214205 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.983533138 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.097982954 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.745117937 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.031453664 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.581802041 seconds)
  done (took 106.779013972 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.940200657 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.940132487 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.936729742 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.940814087 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.939000816 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.93650666 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.937521703 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.939948187 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.939171205 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.938825795 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.937250372 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.93945335 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.937473523 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.938893378 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.936750884 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.937924522 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.941667412 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.939696839 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.940477245 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.939665896 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.938653423 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.940091151 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.949856193 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.937495872 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.941194064 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.940130635 seconds)
  done (took 52.302993797 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.949072775 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.11650489 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.193504636 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.973742602 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.947316483 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.952464281 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.970086095 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.960740805 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.950912995 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.954262888 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.050488672 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.959155231 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.97181768 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.195028547 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.972963932 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.952920032 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.952824459 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.94968339 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.126306269 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.970938241 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.969738308 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.959588815 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.974004016 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.968511502 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.953449073 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.955092805 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.955693143 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.463339493 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.965726899 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.046328939 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.998676746 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.975294671 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.40750282 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.201265583 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.009207487 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.963336204 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.953366788 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.052257322 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.961621706 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.952115392 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.97172904 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.960552114 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.18890338 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.443815341 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.96725213 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.954698381 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.461934826 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.059452846 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.998749769 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.962573288 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.190676937 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.971006847 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.95578717 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.954309527 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.988503542 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.957995467 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.954363904 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.308462132 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.971802739 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.97383688 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.95784922 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.955709557 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.128619534 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.96722246 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.116584984 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.964419372 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.959975463 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.952021858 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.193307944 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.972916645 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.449904955 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.968453108 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.955422982 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.048685478 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.127339201 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.497021081 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.966481621 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.132919101 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.423338497 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.976382131 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.960425764 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.444545623 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.983879859 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.962157749 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.956178187 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.955817653 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.955540306 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.997430736 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.971203891 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.38637049 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.4525949 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.330580587 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.98220058 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.968572779 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.955412226 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.307774412 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.965237514 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.960423502 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.185907728 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.461132616 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.969642326 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.962574943 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.44103349 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.974190954 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.977252119 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.965727423 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.197765143 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.972191128 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.001160211 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.956235109 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.96133301 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.958977208 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.976202182 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.965480246 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.954882068 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.426324979 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.077155417 seconds)
  done (took 242.425683849 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.955656517 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.97351978 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.950398313 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.958048114 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.952035006 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.958443372 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.950881884 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.949289989 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.955307693 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.946870992 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.952638632 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.952396776 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.954978 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.956225475 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.060963366 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.957898427 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.560551913 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.954814259 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.950812193 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.952527202 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.7001912 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.961952839 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.951914453 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.962007133 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.949832621 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.950793198 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.960163109 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.053681566 seconds)
  done (took 170.173973142 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.959446075 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.07711071 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.981510507 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.985938067 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.96780266 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.957477709 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.984103994 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.97442224 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.965262513 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.954502307 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.954726937 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.02290491 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.970801818 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.057698912 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.990717623 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.988181481 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.061079865 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.965774831 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.956892891 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.957785465 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.984841979 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.956215345 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.021132582 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.085591522 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.977763269 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.078984735 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.971147806 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.957794026 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.957845339 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.080651957 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.976856864 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.018537384 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.988833891 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.975473661 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.084303699 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.080335028 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.069091678 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.985310563 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.962193758 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.959405559 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.95830407 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.949495585 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.079031789 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.980940458 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.959198471 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.071313967 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.982425844 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.959747842 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.968758955 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.957892569 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.972294182 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.979465816 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.027067174 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.094147798 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.996324713 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.985644922 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.985611077 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.253214726 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.969152063 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.064113039 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.959147533 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.080725018 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.981562596 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.949454219 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.960892758 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.96862081 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.989632771 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.9906344 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.063174479 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.967361133 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.061325504 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.99543039 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.965527506 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.959224953 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.963068077 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.079234697 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.082820423 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.998028803 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.998899363 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.994634372 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.958581711 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.959488399 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.950015819 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.978142424 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.96454568 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.082588574 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.082565803 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.967344212 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.96548245 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.963032873 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.964374657 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.988791998 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.087223034 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.000402045 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.061116786 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.03289767 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.041275595 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.978096293 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.974248118 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.965243592 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.027429712 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.98077099 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.975545609 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.304641135 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.034377764 seconds)
  done (took 212.274441953 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.436666285 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.021054805 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.025241132 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.290596738 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.399360241 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.805106839 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.014657775 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.010717986 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.036776684 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.204614994 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.082717262 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.03359431 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.999751681 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.984915231 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.015203507 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.03413107 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.036306435 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.347489148 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.135642609 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.130862354 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.999517111 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.306113904 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.339183153 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.414649655 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.049992504 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.360186511 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.69514856 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.154837254 seconds)
  done (took 64.256990618 seconds)
done (took 850.08070697 seconds)
SAVING RESULT...
DONE!
