cset: moving following pidspec: 25668
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.039958193 seconds)
loading group "string"... done (took 0.607585867 seconds)
loading group "linalg"... done (took 9.65404839 seconds)
loading group "parallel"... done (took 0.184444052 seconds)
loading group "find"... done (took 1.534390694 seconds)
loading group "tuple"... done (took 2.193619758 seconds)
loading group "dates"... done (took 1.529024289 seconds)
loading group "micro"... done (took 0.24032489 seconds)
loading group "io"... done (took 0.586932105 seconds)
loading group "scalar"... done (took 46.566875314 seconds)
loading group "sparse"... done (took 14.287326822 seconds)
loading group "broadcast"... done (took 1.267546388 seconds)
loading group "union"... done (took 12.97101131 seconds)
loading group "simd"... done (took 2.721471777 seconds)
loading group "random"... done (took 10.980176699 seconds)
loading group "problem"... done (took 1833.430555399 seconds)
loading group "array"... done (took 27.73023291 seconds)
loading group "misc"... done (took 1.206704078 seconds)
loading group "sort"... done (took 4.004493963 seconds)
loading group "collection"... done (took 20.238126383 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.758166596 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143171854 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.215576088 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.377907635 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.242909366 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.166395435 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.174384785 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.584441899 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.023694485 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.287292081 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154420608 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.603858721 seconds)
done (took 6.450017675 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.285152861 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.389671251 seconds)
    (2/2) benchmarking "String"...
    done (took 0.179731743 seconds)
  done (took 1.229077814 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.074678133 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.188676524 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.115400958 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.113099894 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097858422 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.112136206 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.113493549 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.113502227 seconds)
  done (took 1.516675122 seconds)
done (took 3.775424191 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.56352385 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.872020529 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.578585322 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.173690143 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.203320706 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.180409333 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.32693303 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.161281004 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.109346511 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.107961872 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.222577819 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.349379633 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.507740859 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.024729001 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.089429012 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.125928622 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.095809481 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.677760028 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.082370685 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.141206087 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.600524094 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.116475037 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.113969693 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124991079 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.207374828 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133157269 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.165658769 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.092825598 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.677438868 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103523023 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.231756363 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.082528918 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.178152732 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.261257291 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.07865115 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.109591337 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.673878972 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.182951818 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.116950089 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101526589 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.671731961 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080078114 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.246823133 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.108176233 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.111755664 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.186377248 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.105069066 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.099736758 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.102759893 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084827239 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.172988877 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.456538632 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105715154 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.171486412 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.107280905 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.693521939 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096487862 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.155532439 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.139849118 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.108294301 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.082144317 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.10973715 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156556747 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.113540707 seconds)
  done (took 20.179415759 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.160524112 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.1695868 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.093246978 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142096699 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.146825223 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.095837342 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.098479714 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077353709 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12805237 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.238747446 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.142910879 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.186701658 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.076385304 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.1009899 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.143351457 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.252489321 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106033711 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.123169292 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.10011866 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.091279626 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142370284 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112441292 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110186596 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096105091 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.186123427 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204477689 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109345305 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123169492 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099543796 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.117185588 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14087225 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.147407528 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091277459 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083572418 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.205793383 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.10446096 seconds)
  done (took 5.428905446 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.228179528 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117068856 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.239982726 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.181218674 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.149323843 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.18461915 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.144834721 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.303874607 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.305114142 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.182818375 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128719123 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111189736 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07659694 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.09459025 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.093502459 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.720001863 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.180505881 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.151016217 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.151127133 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105457359 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.0965903 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.191934705 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104124296 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.097914698 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083979812 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.142852385 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.332363647 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.223644962 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086763295 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.392686446 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.098553638 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.109032087 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131585248 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.202603297 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.118874186 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142770966 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102742964 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079750162 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.238279921 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.109778074 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.075718619 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.129420191 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131625666 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13361124 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098123081 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.094317387 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.24754209 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.097271597 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.105914218 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.167708929 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199193345 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083103999 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.132185255 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097266851 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.370048172 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116004136 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105403571 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079218945 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.344227286 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.139167816 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081071529 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.094589977 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083974863 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.09631154 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.443690018 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.091331237 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.353022868 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.092858351 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.165633236 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.098640926 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098518046 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106407548 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083806756 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101292423 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116093002 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079472594 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.095352218 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078159969 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.094960093 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.09978084 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.102829342 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099536291 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.094882119 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145729536 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.117695805 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115485525 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123165376 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083625729 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094868567 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127039941 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079942462 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.099624177 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.173891539 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103938259 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.102514885 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10254342 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.140690283 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096745724 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.230744833 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095002348 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123696887 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081793294 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099303082 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126704101 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.122225016 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095988606 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083303815 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094990212 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.09518539 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146329946 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.093835443 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.078627836 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099430411 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110200975 seconds)
  done (took 25.041160946 seconds)
done (took 51.311670185 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.525472852 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.123089645 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.121168154 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.121177293 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.12078683 seconds)
  done (took 1.756369121 seconds)
done (took 2.472275042 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.389421064 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.189691145 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.122013556 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.187552099 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.106546666 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.2110882 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.177792747 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.119273256 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.208384452 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.101020331 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.185794665 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.100700683 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.106848059 seconds)
  done (took 2.95148881 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098292026 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.124581858 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084185322 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115044336 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078539801 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114985596 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11214848 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119967186 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114867887 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.106557833 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078679202 seconds)
  done (took 1.863334749 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095388794 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117989529 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084026411 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112646642 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077694164 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112349309 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108834687 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105098384 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11235911 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090037328 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096029129 seconds)
  done (took 1.830800293 seconds)
done (took 7.352227235 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.240001167 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.78427807 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.151939824 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.203887565 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.402971317 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.25587013 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.648780834 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.169391218 seconds)
  done (took 13.788447862 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.117679273 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.103169578 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.101378127 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085270406 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.145313302 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.100336848 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085084681 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101371771 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.100339545 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085090035 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.101799656 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.0841528 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.101108262 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.083985451 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101121829 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.099033538 seconds)
  done (took 2.383486816 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.14019591 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.138192904 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.093419069 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.113849845 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.106954101 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.089467132 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107989302 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.106019068 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088703483 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105581225 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.112273292 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.094848152 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.109898211 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.103866601 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.0928461 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.113387441 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.10449455 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.092905327 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108697796 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.108815841 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.096541895 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.10615345 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.1114647 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.097199625 seconds)
  done (took 3.357610828 seconds)
done (took 20.248534777 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.182989928 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100570681 seconds)
  done (took 1.007098527 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.15146992 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.154210716 seconds)
  done (took 1.033159843 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.114997567 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098579771 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.145983806 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.120851407 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.098624149 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.084429485 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.137383999 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.099567013 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083469623 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.099984507 seconds)
  done (took 1.814775993 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088554612 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.103581419 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.111402827 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.149260181 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.098241423 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.104662796 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.105578156 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.088057685 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.106073177 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.100744418 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.094671632 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.125456129 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.107070176 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.247803598 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.089796706 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.110104717 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.115081492 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.10732446 seconds)
  done (took 2.78809486 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083621322 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.099763251 seconds)
  done (took 0.915230165 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.089585193 seconds)
    (2/7) benchmarking "second"...
    done (took 0.100888759 seconds)
    (3/7) benchmarking "month"...
    done (took 0.089405778 seconds)
    (4/7) benchmarking "year"...
    done (took 0.104443353 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.100943825 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.083423671 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.100324832 seconds)
  done (took 1.400246931 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.549359353 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.274424221 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.379652076 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.12246797 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.143303215 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.401489999 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.145732211 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.117630055 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.118233501 seconds)
  done (took 3.027832343 seconds)
done (took 12.716237137 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090765978 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.235536287 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.600477893 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.123783743 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.083874669 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.158477293 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.329903895 seconds)
done (took 2.356480304 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.362009994 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.156019404 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.091679646 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.097227713 seconds)
  done (took 1.440533081 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.077636953 seconds)
    (2/2) benchmarking "read"...
    done (took 0.107757088 seconds)
  done (took 0.921834261 seconds)
done (took 3.109031346 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080741984 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.133205765 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080616636 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.098713644 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.097107305 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080249687 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.096850434 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.080626613 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.094694856 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.08042491 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.095404378 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.080144688 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095864303 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081430331 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095752228 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080527676 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.09801908 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08199702 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097033987 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.080448683 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.096851751 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0952694 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.081170336 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.095799569 seconds)
  done (took 2.953187903 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.108079609 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.102621629 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105636134 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089144765 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10671733 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.106014335 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.089170595 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.100670458 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.104778133 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.084057288 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105160623 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.10734079 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083957926 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.105661651 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099948668 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.090285329 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.104479729 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101150871 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08573417 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.105254099 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103450238 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085042109 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.106221517 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103524346 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.09175572 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105239003 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084702767 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101639636 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105925152 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.089491866 seconds)
  done (took 3.701897854 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.09002392 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093944703 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082238953 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.107233588 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078485987 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098388006 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078363353 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095812865 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.098592271 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.081804556 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.100703342 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.081798311 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.095277108 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.08496928 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.09984578 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.086152539 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.115595583 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.095366691 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079508401 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.098902618 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084281525 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.094805449 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.081777901 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.097586158 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.081784146 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.094602182 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081434237 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.09779362 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.082666909 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.096897877 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100997332 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.086222493 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097674798 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.092531182 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.102678077 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.08310999 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.105800881 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.095049459 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.083674621 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094225579 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078810853 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097807478 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078565735 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.107838035 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081398702 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099450809 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079227156 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.100137551 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.098074318 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.086652698 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.095355935 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.079397332 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.101763652 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.084494104 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100901779 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.08048192 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.099639411 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077248848 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.101815371 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.097366282 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.0795405 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.09516349 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.086535652 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.099129752 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.104817899 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.109595345 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095206095 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.085282951 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099010793 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.088447996 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100540496 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.114512687 seconds)
  done (took 7.409728186 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.09730556 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112263112 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084492239 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101794732 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099355564 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.083574196 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.107365667 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083189236 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100681288 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.109597993 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08408946 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099279498 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08437351 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101297241 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083672283 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099727525 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.10977752 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082584954 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.099186458 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083612826 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098662421 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.106824736 seconds)
  done (took 2.859600407 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.265504891 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089909427 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.154138508 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.116893587 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.124967692 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.117606673 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.087301346 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.106389048 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104639012 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094524943 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111034078 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105014781 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.123838447 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094659353 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111407346 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.113332975 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088644131 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.112459187 seconds)
  done (took 2.871440257 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.102304181 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.103103285 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.125885208 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.085653805 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.103757616 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086748219 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112873416 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118406284 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.102245816 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.086935329 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.113080645 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101595942 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.08565702 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102181905 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085029246 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102498524 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102385528 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08831388 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114413003 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111814924 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094746737 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114401312 seconds)
  done (took 2.996703959 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102270728 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103754028 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.140731563 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089735485 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.101643096 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099707818 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.091065759 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.10318618 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.093395835 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102183302 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104112126 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084549186 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.111099807 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102535169 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.09395955 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102315904 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085448722 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103525527 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101754373 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084735866 seconds)
  done (took 2.753448807 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.180040445 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100890528 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.118273531 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133095957 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117500776 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.100304484 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.131336247 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.118972252 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099802951 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133453263 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.116515208 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.116690529 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1312943 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109196944 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115960333 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132245161 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132463249 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132807853 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102044381 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117032541 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.135903621 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.099688739 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13241042 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116715014 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.117468658 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101795298 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117496214 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.126966067 seconds)
  done (took 4.145809312 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082511991 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097829589 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082318813 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098789876 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081607616 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099329633 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.083077285 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098773084 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082982371 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098979541 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082369655 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09901658 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082163551 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.099673439 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082082744 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097857506 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081032675 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098616853 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098632579 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083555408 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.099197415 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082479263 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.098567772 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083568578 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09813282 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.083551392 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099939116 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081892551 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098745168 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081548414 seconds)
  done (took 3.474438823 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.096745104 seconds)
    (2/2) benchmarking "in"...
    done (took 0.128194848 seconds)
  done (took 0.983511484 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.091993698 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.121177887 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08128837 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.100285314 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.111820388 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08362808 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112685386 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113057483 seconds)
  done (took 1.575803882 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.151924502 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.151184133 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08960445 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114779491 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.151884134 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.144352993 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.170348219 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.107434441 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086901378 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.09859475 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.149363448 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079810636 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108317128 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103206593 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089597162 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112383159 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.102502939 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.094628038 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.110139218 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.086224235 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107578644 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115713423 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091993066 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.113003908 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.100109924 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091866416 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112693761 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.11376272 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085418227 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111428612 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086560251 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.101469481 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.105145141 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.089795799 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.102604001 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.151306482 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116746512 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086854605 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107685155 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089769343 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112266952 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.101868809 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091406066 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.103944214 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110684677 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.090308528 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.10853317 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.084753231 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098457515 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084535232 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.101502257 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100837392 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.083039709 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108634715 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.089949211 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118562882 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.104341041 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084648997 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.10321127 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.100994847 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087836882 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102624286 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091098744 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.113704871 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108124006 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090161774 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106938263 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.102571334 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.086402033 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.102384188 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.08993702 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124934154 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.112336288 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.089703845 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108452818 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.102262684 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08656429 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110074128 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089442718 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.109650689 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.107679559 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092664234 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109467577 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102423779 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084959382 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.110693423 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.087508182 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.104689228 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.080382766 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120535616 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.104734074 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.08450977 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099334609 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109731639 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084801281 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.104867865 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081075576 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107326097 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.100211456 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.090881932 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110813854 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087122031 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112156317 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108509527 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091913193 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109434787 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.148110135 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103131333 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085738246 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.103844092 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091584505 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103764684 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091415958 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.100639577 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10328005 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084575924 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.108262294 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109604095 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.086958011 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.107295993 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091673866 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.111853695 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.104998379 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.083372209 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.103300029 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.089345597 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11307051 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.11146064 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.087291008 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.10310638 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.084322412 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.109214616 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.106717678 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088494371 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107455164 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085921372 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.102578603 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.102893451 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.090120095 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111331858 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.083721537 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.105927071 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109817656 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.087741916 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.104959737 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109568248 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.082464911 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.098489873 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091172211 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103369548 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.10385033 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094950302 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.10323468 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.086809265 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105659197 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113137965 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085582856 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.109543897 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086390581 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.10893881 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108466263 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080022478 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103829024 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.087094793 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112959612 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.103638811 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.085742873 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.103497584 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09189675 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.100433531 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.106131046 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080796537 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103552237 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.090787089 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.104459623 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.088806523 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.102327072 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.12118763 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099420148 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10963685 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.10798643 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093395582 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.108915984 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.10626442 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.088979831 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109639618 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.091076264 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109120492 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105464281 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091451399 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.10308144 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.088460533 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105355767 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109086569 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.08062046 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.104190291 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.07980206 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.107393341 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.093420489 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.108755511 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10888509 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087431162 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108009968 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113045265 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086055577 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.107684704 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080371361 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.107986586 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.094851164 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.11026665 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109428821 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094370598 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105791533 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.085266837 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112414718 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104757015 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090153988 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.104859058 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082462993 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.101235077 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.109838428 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.089536041 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103111453 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.084183041 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110296207 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11144073 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.086668283 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.099421561 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.088844339 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115315301 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.103154193 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089326609 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104540179 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.10757151 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102118749 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.100074538 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086361039 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.11372321 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.108124991 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.083588169 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107978867 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.086875983 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.109381686 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.10541405 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.086330768 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105134339 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092030083 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105403226 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.101977908 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086434341 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.105617101 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.082479676 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.10555771 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.092074753 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105981051 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.105193186 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096764446 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109823241 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.110145881 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08893397 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.108252908 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.091444481 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.11054476 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105597066 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.090886572 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.102830983 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082113694 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105954019 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100273353 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.086697428 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104235884 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.089778038 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.105830923 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107530343 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.089300952 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112483374 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086914853 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.109760951 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.128370096 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101650215 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081721602 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106346969 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088174774 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.103886511 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104418702 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.085540691 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110882106 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.090119907 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11151693 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.10427003 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083861218 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.110445825 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085443995 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.110863365 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.110855014 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.091458786 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.102730883 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.089624696 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105460443 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.1151777 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082002132 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112030488 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10774668 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088963724 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.105214698 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.087374369 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.103899799 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099928476 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086749354 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.109910406 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.087785358 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.107819086 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107056379 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086490668 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.104759194 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084164103 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.110864778 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.105871102 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.093541956 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.104547511 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082181626 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.101922405 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.092200419 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111119942 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.110516396 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085819193 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.106814987 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09248613 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.106693228 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.103267783 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.095931786 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113343964 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.091576377 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11739667 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100257808 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086796836 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118726414 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.103148814 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.08811105 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.105874923 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082855047 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111807027 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.091257608 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.111924703 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.106637654 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082066122 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.103711616 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.091490102 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.105651634 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.106770889 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.086734068 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109303212 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083525105 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10747962 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.091025154 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.107842473 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111066954 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092493446 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.107240838 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.105951497 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.090585623 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.103507201 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081477269 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101475927 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.086452221 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.111755079 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.10196257 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.089803041 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.10892567 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.087192202 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.105629032 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.090841249 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.10555114 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111911388 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090233916 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.10595334 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114898622 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.085749282 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106133498 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.090349252 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.109327731 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.082707694 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.107959883 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107061614 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092800427 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111328854 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.10947245 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090005328 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110342962 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.087022487 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.110103529 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.089849445 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.110022946 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.102636852 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.093407705 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113463558 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.087903299 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106951583 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106667973 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08432188 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.107584941 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.092274426 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.108521721 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11600107 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.09322361 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.107253363 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109977739 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.09193406 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108404941 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.093805849 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.105196207 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112674662 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.08314357 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.114289897 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.088315568 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.11244504 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.104920547 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084457539 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109960261 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.0918107 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107903632 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.112900543 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.093207333 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.102981803 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082353081 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.108921297 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.107276371 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097453322 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113965418 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.087244124 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108358842 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.106175783 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.086476632 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114613236 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.083591393 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.105167506 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.108786709 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093500951 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.107084306 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.086053947 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.108423217 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.112406654 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093255962 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.110066111 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.0840061 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.109513869 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.112250647 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087541108 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104444889 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.105292799 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09270266 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.109135785 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086183587 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.103031208 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118096002 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.093073925 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112447246 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104581423 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.090118676 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.106081069 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.088222658 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.11229018 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087102574 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111056754 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.10771233 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090626045 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119543246 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.102365595 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086754628 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.119969843 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090641624 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.113674203 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.108104513 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087798567 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113073895 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112859624 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.088154667 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.103072467 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.084897824 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.10861465 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083376437 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.107006241 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119883287 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094161066 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.108733349 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088735228 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110637244 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.107508667 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.088372142 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.103153315 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093133729 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.106219325 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.116011813 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083916355 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.102901848 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.087957916 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111263662 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089321131 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.110026844 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.105390873 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.089502529 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.104094531 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088694291 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.116615512 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.109127667 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.090627835 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108759033 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088010873 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.109803718 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.118078264 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.085591629 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109432738 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120868037 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.094565622 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110481624 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092863555 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113696956 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.114206696 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.088538211 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.11433709 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.108588446 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.089463479 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.113122162 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.093964964 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125338197 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10830702 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.083917368 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.11005922 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.087617814 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.104111669 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.116249812 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094900467 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.114105906 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.110166064 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086109048 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11508875 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0964526 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110699285 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.109449635 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089463141 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.109750072 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088565191 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.109555037 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.106078153 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.094143487 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.113073836 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091314226 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.114859943 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.103098972 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101356127 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117364093 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.114596383 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.08693823 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.102648837 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083910537 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.108414073 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.094276499 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.113711805 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.088953953 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.10944491 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.109779474 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.092095851 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110953533 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088442072 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.114911356 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.111051237 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.087022275 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.111659317 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089078388 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111169926 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.105630445 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.092037038 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.114656629 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093875912 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.118431169 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.112221487 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.08981213 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.107338977 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091372503 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.108738566 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.110744307 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090471692 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.107136378 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.084877277 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112733329 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.114442769 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090710995 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114905998 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096195967 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.108487052 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.113409246 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096026642 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.112544689 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.086472828 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.112395284 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.109233836 seconds)
  done (took 61.149680081 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.167587999 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096813224 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109491264 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089414539 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.138502456 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109497066 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108117831 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091572879 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.110836913 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10193883 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.107986077 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108517292 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.132687441 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141209361 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137900769 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102866598 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108201635 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.110918421 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090069435 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110648068 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131276174 seconds)
  done (took 3.212479911 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.112236197 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.129440272 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.126955864 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.130358375 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.118648081 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.105493317 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.127935653 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.125013832 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.13120958 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123828087 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131097165 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125017335 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.102855739 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.12072129 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122956897 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.122283961 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111080724 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121036825 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.127198228 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.128241215 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.120961843 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.10843154 seconds)
  done (took 3.478660795 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.096796227 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.111323095 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.093667511 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.107812272 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.090920884 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.10801142 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.118208425 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.087828676 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.117090509 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.089009138 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.106422648 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.088527902 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.113520269 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.107825609 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.085672593 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.10815245 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.097558812 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.111448733 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.093578997 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.108865322 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.132430904 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.1078343 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.089453146 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.105206694 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.102481522 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.114200667 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.091398817 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.110739726 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.105302366 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.091174475 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.108151552 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.090404146 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.112224086 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.085190128 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.105223982 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.112256583 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.0918697 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.108236188 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.08850491 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.112176725 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.089324006 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.111995397 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.117143411 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.088936457 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.109076552 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.090272078 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.110802925 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.108934973 seconds)
  done (took 5.74623394 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.15350579 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.171383933 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.120145948 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.158766918 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.136324973 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.104509047 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.115431819 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.162679405 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.11673695 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.094610192 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.136058387 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.135631496 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123463279 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.125162049 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.099194556 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.119547845 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.120013586 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.097891322 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.127272181 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.116965589 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.124087886 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.103804412 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.13519017 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.133897387 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.119017762 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.094405853 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.1230477 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.125889866 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.133639183 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.104915098 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.123421118 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.12559893 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.133929622 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.123069001 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.097038823 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.12275982 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.138501243 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.117775787 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.097156872 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.114126646 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.101150826 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.125961528 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.118731453 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.137720125 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.118248427 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.104889847 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.118108144 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.112681228 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.115766993 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.122978763 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.129394616 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.136034714 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.120406556 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.098148538 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.127434137 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.137906577 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.119204669 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.095408476 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.119241898 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.137146868 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.095058787 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.120605275 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.138130928 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.122833399 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107793561 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.136179343 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.120596028 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.11915578 seconds)
  done (took 9.225357879 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126701792 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.121031468 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135504453 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135476245 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119198266 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.100318571 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.120613333 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.120659498 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100911841 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.129435381 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120355008 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.209767701 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.117900033 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.129108912 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099212092 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.121362636 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.120678659 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120076022 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100322307 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119661449 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.119938041 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.135421712 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.100637438 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134343656 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136866254 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.115840073 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.121105181 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.101329843 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135513635 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120612511 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.137397775 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.100754301 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120746027 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.13567781 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.13766371 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.121885152 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091466535 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120565875 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.121531833 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099640787 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.115999464 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135032821 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.121366983 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.096432185 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121004532 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121598253 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.136704693 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.137988195 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.108160184 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128872158 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.120198204 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.135479479 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120651255 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101208498 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.136069844 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145802568 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136321346 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.136152066 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121403029 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.136124543 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13510949 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.146033954 seconds)
  done (took 8.490295331 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089289969 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.110301292 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.09060713 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.109305773 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088563028 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110432272 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088730798 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.10983412 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089220453 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.109835167 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088660765 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110752938 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089746896 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109207238 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.0904803 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110539146 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088732812 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110676591 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109210613 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090495154 seconds)
  done (took 2.816236972 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.101976393 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.135350551 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.115528626 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104128471 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.114929634 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.123296823 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.092447592 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114887459 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114815351 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094301422 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.126022566 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.127149212 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093567282 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.125189598 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.125942293 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.12209571 seconds)
  done (took 2.657099302 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118681997 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.135936116 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.170798037 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.117091153 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.115522316 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.102105522 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.114950091 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.094679073 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.112012897 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120244403 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.096727474 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.118141097 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.092662564 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.113220318 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.114949269 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.097627333 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.112135501 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.097760352 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.115609224 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.170928057 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.121210639 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.096382078 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.11628403 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.118999985 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.096188516 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.122173213 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.121951244 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.093213345 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.116236517 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.114850826 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.097438332 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.124015827 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.113409191 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.098622866 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.115339013 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.094372019 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.11399329 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.114235604 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.097753619 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.113059671 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.094574547 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.116603894 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.114013388 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.098200518 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.112537864 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.094712719 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.11136458 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.122489041 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.096623834 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.118857428 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.09417466 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.121208079 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.119540044 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.104993646 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.124068522 seconds)
  done (took 6.999673749 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107952208 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11621155 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.129881037 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.091238933 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116310294 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.096025791 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.116302552 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.11719531 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096597854 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.111232455 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095977534 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116453005 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117643173 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.095371349 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.118294504 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09551806 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.11073351 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.116823706 seconds)
  done (took 2.795316674 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100213324 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.113405418 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.098335068 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.11364164 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.092680607 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115326329 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111866937 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.091644828 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111590781 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.094085207 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114094288 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.091804146 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112664476 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.113863437 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093559853 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114187991 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.092846247 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112526344 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.114763592 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092402745 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114271022 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091359001 seconds)
  done (took 3.129161041 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.10587373 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.172063858 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.123713697 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.18210578 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.113174974 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.111385798 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.103875547 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.113616109 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.131871579 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.090127653 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.11155024 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.090214702 seconds)
  done (took 2.282782092 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1233397 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.158598663 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116026572 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092969445 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129482132 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121086792 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121250333 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100805337 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132975823 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13834556 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121460182 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1341057 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113397741 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135709444 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127506198 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127194033 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120888797 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10086655 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115148241 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145529674 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121570354 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13440213 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100304014 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121547787 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122505486 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135394353 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113715698 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139329687 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122670928 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135094997 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128293076 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10030966 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135068014 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13859114 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115507865 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134347296 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100031132 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.16802202 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107782852 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136669826 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.11456635 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128717093 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112722308 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131964671 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133737348 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121340906 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131197071 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101104941 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122526577 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.155249895 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128466117 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136103474 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128938079 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134543616 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133926142 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.156089997 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139272569 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136152004 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108728188 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138982755 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135181361 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12892006 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135900603 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139604903 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128584608 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13780455 seconds)
  done (took 9.226971091 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165632342 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096683849 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122696429 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140246888 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137765525 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10052315 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121958784 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121819417 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100275987 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119367397 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.176097962 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1216434 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137294581 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136913354 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121805531 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100593502 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122465543 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135861732 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096043041 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.174934638 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101470312 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136979456 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136256558 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136506901 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139139161 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129423166 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100018498 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122682472 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12199542 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121593986 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110408876 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122877045 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136452704 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.116810312 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135672949 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102141625 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12141025 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131738361 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101296877 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128696074 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136605063 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147805362 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12187361 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121752739 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139612536 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100632863 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122146729 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116640556 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102051825 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118515833 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139701907 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139591843 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140331988 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13612391 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100538497 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122483747 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121927911 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101952054 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122469679 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129279939 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137334201 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101368491 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17687664 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101557168 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123670342 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138026819 seconds)
  done (took 9.104381311 seconds)
done (took 166.777101372 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.156756347 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.177954864 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.153922032 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.152046101 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.109588823 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.122544279 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.143720634 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.154094662 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108059935 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087348838 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108573359 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091198823 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.175612215 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.087557603 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108260548 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.112298622 seconds)
  done (took 2.886122796 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.211290527 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.30363023 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.129921812 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.114105423 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096256791 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.112267068 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.092086813 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.115694332 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110115453 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.102809994 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.110815999 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.090772742 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.124614484 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.112200376 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.089943094 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.11126259 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.123987238 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090648476 seconds)
  done (took 3.08386443 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115982493 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.166951053 seconds)
  done (took 1.1331089 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.128272151 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.218980127 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298478782 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172521462 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.140569875 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.136230115 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.172887662 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.12970657 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.205643358 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.137044766 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.135859437 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.094469676 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.143557291 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.123926943 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.107206768 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.116651187 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.145898071 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.10465134 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.368511831 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117770713 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140010597 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.097627581 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.123186668 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.126909007 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.194925181 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.134463687 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.097281834 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.118402492 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117429992 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.104396683 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.123872611 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.134965885 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.135390267 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.186957261 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123628553 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.201682036 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.104092899 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.116328807 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.124867223 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.094484872 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120212355 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.122112166 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.112986463 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.116739066 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.116851183 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.104073763 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.116906934 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.116783367 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.104034171 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.128154294 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.126216086 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.123898361 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.18010429 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.12808542 seconds)
  done (took 8.362061429 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.914440799 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.159301396 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093555869 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.041124351 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147902595 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132950799 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.917233097 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117303621 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.282155396 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.911703735 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13350176 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106007259 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.291216236 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.275795708 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.193132291 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.398615342 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.756694142 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.132458887 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.146057533 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.168086687 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123667467 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147126642 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.114788046 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.475609472 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095011176 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.115067138 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122040024 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108074394 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.203253165 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.092510323 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.120301117 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.227838601 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.288250101 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.234018529 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117275451 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090456138 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113902268 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.191134805 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.303249347 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.273796411 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.186819746 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088671613 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113619382 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129981214 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115017512 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112185834 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.206199876 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.197830982 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.217478705 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097626299 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128019214 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.125033635 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12668643 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.18525505 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.111122885 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.375825667 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.378655821 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113769758 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103155169 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135409443 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.297753365 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.113587064 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.263411651 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.144608272 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.244496992 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.114369546 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.819008475 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.188525782 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113300589 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.103534214 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123705516 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12126818 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.127378111 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.181157068 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.397100856 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133796469 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.097183529 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113567816 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.276164268 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092279272 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113650263 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186120131 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118874678 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123755726 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109816508 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132610436 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.213695468 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.272587813 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131294475 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.124509773 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.099097434 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130116952 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.122414301 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.235771585 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.276493689 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.181783679 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.257144612 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108102093 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.209266827 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.188072905 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129415391 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.215577529 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.102609317 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134712075 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129631737 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.251855142 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.156956128 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.114707802 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09894634 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.125301101 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.160243532 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.117970736 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123216906 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191282119 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.517474901 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.188098882 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.113399016 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.096040506 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125015369 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.204309393 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102704261 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.295109453 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127216171 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.212426324 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103420939 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.112296086 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102365521 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.211007481 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130517819 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124865872 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107780628 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125573069 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.295578139 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.25423356 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109070123 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.26957925 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.216797991 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.104330863 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.218283166 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124500546 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191457879 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127571637 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106918099 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119516272 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813005159 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131466313 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124358305 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097574802 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.235928267 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093326513 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.114827537 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.092208369 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110604087 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.846218866 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.096083652 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.112015081 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.093254771 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126044662 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.125125733 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12258051 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.099616696 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.207849363 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.270976738 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.130024729 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100421162 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.11568237 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181998618 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.12026853 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.114228763 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.092146726 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.114971613 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.103348459 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.121374345 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.116742735 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.195878464 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.202967191 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.255947849 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.579414726 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091969882 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.11485349 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.26712911 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115525952 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.343135443 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124762491 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.263183751 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.190155473 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.11204078 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.374356259 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.213818006 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.213620056 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.09726135 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.215903333 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08940026 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.124453401 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.206615954 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092803843 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125656099 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.179225517 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.134911744 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.131451857 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.200282525 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.115307742 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250358572 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.112529185 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.191004253 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118068202 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128604549 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.346158884 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091965044 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137641602 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.207054336 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097608154 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.116584929 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.746899469 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.092317981 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128584971 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126437575 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.259953535 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.210771658 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.103141461 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126699216 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129981082 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.184375948 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.254942464 seconds)
  done (took 48.340973856 seconds)
done (took 64.647750818 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.334810065 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.289509906 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.344564596 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.23913288 seconds)
  done (took 2.163714962 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.239128887 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.164623302 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.218621557 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.09162555 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.228847734 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090595308 seconds)
  done (took 1.907698683 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.549255042 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.451562176 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.381267437 seconds)
  done (took 2.260322778 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.271190033 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.27660235 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.370367366 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.506031955 seconds)
  done (took 2.431698132 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.291430128 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115950143 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.133758512 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.185536446 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.259648572 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.286498921 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.160943486 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.210306697 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.118862618 seconds)
  done (took 2.689250377 seconds)
done (took 12.33056438 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.313759313 seconds)
    (2/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.281992872 seconds)
    (3/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.172618944 seconds)
    (4/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.306884815 seconds)
    (5/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.307652216 seconds)
    (6/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.174944946 seconds)
    (7/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.177013632 seconds)
    (8/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.251301706 seconds)
    (9/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.288274821 seconds)
    (10/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.321403506 seconds)
    (11/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.160178779 seconds)
    (12/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.122695826 seconds)
    (13/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.224299213 seconds)
    (14/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.117982254 seconds)
    (15/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.221392305 seconds)
    (16/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.125796851 seconds)
    (17/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.125445017 seconds)
    (18/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.128243862 seconds)
    (19/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.254476068 seconds)
    (20/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.152382449 seconds)
    (21/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.252142077 seconds)
    (22/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.099891188 seconds)
    (23/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.282743161 seconds)
    (24/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.188019382 seconds)
    (25/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.120344026 seconds)
    (26/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.201458649 seconds)
    (27/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.133336271 seconds)
    (28/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.152766979 seconds)
    (29/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.278851454 seconds)
    (30/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.182524545 seconds)
    (31/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.13351042 seconds)
    (32/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.150148473 seconds)
    (33/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.109567519 seconds)
    (34/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.343585758 seconds)
    (35/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.206945867 seconds)
    (36/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.082857722 seconds)
    (37/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.152767561 seconds)
    (38/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.229531303 seconds)
    (39/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.165103417 seconds)
    (40/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.147019046 seconds)
    (41/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.193980565 seconds)
    (42/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.200311787 seconds)
    (43/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.181660954 seconds)
    (44/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.121880227 seconds)
    (45/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.21622927 seconds)
    (46/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.157408127 seconds)
    (47/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.233200624 seconds)
    (48/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.169057185 seconds)
    (49/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.184676931 seconds)
    (50/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.108276415 seconds)
    (51/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.124116366 seconds)
    (52/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.098232473 seconds)
    (53/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.12250842 seconds)
    (54/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.082185401 seconds)
    (55/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.207952913 seconds)
    (56/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.170893872 seconds)
    (57/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.125081127 seconds)
    (58/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.083813863 seconds)
    (59/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.123267043 seconds)
    (60/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.100628054 seconds)
    (61/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.105878883 seconds)
    (62/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.142222671 seconds)
    (63/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.166537951 seconds)
    (64/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.121974156 seconds)
    (65/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.099727678 seconds)
    (66/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.114532407 seconds)
    (67/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.150787448 seconds)
    (68/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.144544673 seconds)
    (69/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.13164555 seconds)
    (70/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.089138315 seconds)
    (71/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.134381278 seconds)
    (72/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.139789389 seconds)
    (73/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.104606471 seconds)
    (74/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.151267448 seconds)
    (75/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.217613693 seconds)
    (76/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.164911424 seconds)
    (77/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.177148029 seconds)
    (78/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.121114167 seconds)
    (79/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.106551673 seconds)
    (80/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.082801015 seconds)
    (81/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.124694789 seconds)
    (82/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.101529818 seconds)
    (83/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.105633056 seconds)
    (84/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.112845932 seconds)
    (85/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.155537618 seconds)
    (86/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.158561207 seconds)
    (87/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.122241729 seconds)
    (88/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.187470964 seconds)
    (89/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.156328765 seconds)
    (90/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.166054597 seconds)
    (91/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.121385268 seconds)
    (92/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.209448176 seconds)
    (93/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.197315822 seconds)
    (94/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.138735827 seconds)
    (95/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.137110873 seconds)
    (96/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.089641116 seconds)
    (97/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.137239822 seconds)
    (98/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.123049557 seconds)
    (99/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.099029326 seconds)
    (100/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.106817697 seconds)
    (101/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.098653568 seconds)
    (102/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.135812275 seconds)
    (103/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.146519658 seconds)
    (104/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.216745442 seconds)
    (105/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.085839046 seconds)
    (106/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.122090233 seconds)
    (107/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.237514494 seconds)
    (108/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.083266922 seconds)
    (109/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.106313588 seconds)
    (110/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.08358828 seconds)
    (111/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.114954955 seconds)
    (112/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.101425635 seconds)
    (113/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.1121079 seconds)
    (114/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.090869605 seconds)
    (115/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.16417124 seconds)
    (116/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.102844441 seconds)
    (117/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.132264434 seconds)
    (118/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.196849106 seconds)
    (119/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.097668933 seconds)
    (120/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.124027653 seconds)
    (121/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.12140828 seconds)
    (122/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.198191949 seconds)
    (123/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.098727949 seconds)
    (124/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.135552064 seconds)
    (125/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.216461102 seconds)
    (126/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.214747875 seconds)
    (127/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.083580651 seconds)
    (128/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.12229332 seconds)
    (129/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.167183041 seconds)
    (130/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.084792545 seconds)
    (131/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.083679767 seconds)
    (132/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.130717421 seconds)
    (133/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.164116195 seconds)
    (134/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.196870769 seconds)
    (135/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.084539545 seconds)
    (136/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.114443297 seconds)
    (137/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.098279534 seconds)
    (138/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.124982809 seconds)
    (139/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.09879034 seconds)
    (140/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.121979435 seconds)
    (141/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.19848426 seconds)
    (142/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.146142951 seconds)
    (143/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.100646682 seconds)
    (144/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.106972298 seconds)
    (145/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.082860805 seconds)
    (146/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.107558281 seconds)
    (147/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.0970655 seconds)
    (148/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.135013633 seconds)
    (149/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.083663169 seconds)
    (150/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.170303484 seconds)
    (151/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.169130566 seconds)
    (152/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.084581621 seconds)
    (153/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.124178124 seconds)
    (154/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.102136783 seconds)
    (155/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.106920298 seconds)
    (156/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.082189525 seconds)
    (157/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.107672304 seconds)
    (158/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.083457243 seconds)
    (159/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.131894621 seconds)
    (160/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.101059357 seconds)
    (161/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.137189477 seconds)
    (162/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.13724742 seconds)
    (163/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.103968415 seconds)
    (164/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.128309886 seconds)
    (165/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.146051514 seconds)
    (166/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.12503454 seconds)
    (167/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.095290675 seconds)
    (168/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.114745493 seconds)
    (169/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.198635422 seconds)
    (170/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.090224238 seconds)
    (171/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.105923869 seconds)
    (172/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.091671243 seconds)
    (173/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135456404 seconds)
    (174/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.09988384 seconds)
    (175/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.108438493 seconds)
    (176/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.123649549 seconds)
    (177/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.084817593 seconds)
    (178/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.115040588 seconds)
    (179/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116945626 seconds)
    (180/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.106749406 seconds)
    (181/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.100806915 seconds)
    (182/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.123395978 seconds)
    (183/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.131656436 seconds)
    (184/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.092248397 seconds)
    (185/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.137677035 seconds)
    (186/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.100187038 seconds)
    (187/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.108221592 seconds)
    (188/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.103440878 seconds)
    (189/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.123418986 seconds)
    (190/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.14805428 seconds)
    (191/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.084234073 seconds)
    (192/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.106342074 seconds)
    (193/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.085024246 seconds)
    (194/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.122644848 seconds)
    (195/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.084898319 seconds)
    (196/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.166657357 seconds)
    (197/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.155780377 seconds)
    (198/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.08429097 seconds)
    (199/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.123953816 seconds)
    (200/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.102681944 seconds)
    (201/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.132544805 seconds)
    (202/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.083337492 seconds)
    (203/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.131987878 seconds)
    (204/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.082281945 seconds)
    (205/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.126517131 seconds)
    (206/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.164271552 seconds)
    (207/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.084746744 seconds)
    (208/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.10718208 seconds)
    (209/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.084023658 seconds)
    (210/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.082907215 seconds)
    (211/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.108462061 seconds)
    (212/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.13720436 seconds)
    (213/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.10969173 seconds)
    (214/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.113465048 seconds)
    (215/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.132455029 seconds)
    (216/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.11469085 seconds)
    (217/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.083925502 seconds)
    (218/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.106954477 seconds)
    (219/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.084923182 seconds)
    (220/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.115022994 seconds)
    (221/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.084223989 seconds)
    (222/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.124520388 seconds)
    (223/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.091630087 seconds)
    (224/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.107300015 seconds)
  done (took 32.317111095 seconds)
done (took 33.205599243 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.51252698 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.133610406 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.103675911 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.128973944 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.187015736 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.130882938 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.113002735 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.132271479 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.133050339 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.09960512 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.117531542 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.109220544 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.1278858 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.184710309 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.131920523 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.09614277 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.121116147 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.133169383 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.111301387 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.137175015 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.183158074 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.12107003 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.108621109 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120960609 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.185658436 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.121577156 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.103448559 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.128550333 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.133485829 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.101980584 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.128366765 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095687296 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.137123002 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.135546429 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093393975 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.124342436 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092765442 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.116244002 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.124825278 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.102049611 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.134360941 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.102350878 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.130538966 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.121021964 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.10285424 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.124320797 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093385162 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.132090301 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.11692932 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.102573563 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.120253057 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.137297519 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.100846051 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.117283355 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.093737792 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.120947887 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.132683766 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093278476 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.133974424 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093861946 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.121189057 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118022995 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.104315387 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117186401 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.100171557 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120460527 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.126160407 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.104899852 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.123908643 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096005082 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11766906 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.100342408 seconds)
done (took 9.982741776 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.10025049 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.181191898 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.187411649 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.19224724 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.153147579 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.137309605 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.141971977 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.151507822 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112665345 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144342308 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.157594726 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.149494557 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.193452641 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.135457305 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112720106 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.127863135 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.134662052 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.108725412 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.193060515 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.147196397 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.156691671 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.133889095 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.159809509 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.11759281 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.128263927 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.159198752 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.128151289 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.102516779 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.128556744 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.133997217 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.121848943 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.12740335 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.128963329 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124625967 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.137454105 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.132530697 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.112492331 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.126977355 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.124408167 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.100237077 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140988 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.142410443 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.100314531 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.138054333 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.12768966 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.10714017 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.133259444 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.13406776 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.103828678 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.128138426 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.129101356 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132126354 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.133104053 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.133816627 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.133764369 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.108267989 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.13414306 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.107160696 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.129037596 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.134060652 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.099995249 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.127577213 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129180316 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.154209813 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.102890694 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.134307924 seconds)
  done (took 9.750712105 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.120111543 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.160252542 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.135872757 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.13607453 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.10764487 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.115621789 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090933758 seconds)
  done (took 1.800239659 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092601203 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.188768111 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.186284939 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.188463082 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.208481711 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.198671477 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.141039588 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.092792437 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.158601573 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.130377955 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.188726813 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.220340884 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.127866617 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.112836112 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.216710646 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.092413539 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.190823696 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.118198245 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.131050969 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.188764285 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.110289687 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.151805943 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.134090185 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.09462396 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.20851079 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.095430793 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.270196439 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110635436 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.125271648 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.103374147 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.132003262 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.204738012 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.181597673 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.136142443 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.122899872 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.184667508 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.182676303 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.132572128 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.19985943 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.098698459 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.182208542 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.131922806 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.132740701 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.107588583 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.130700646 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.170608474 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.137036315 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.106814104 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.12938114 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.188969263 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.132318958 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.183871892 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.101633574 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.133004028 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.130793404 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.107928067 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.139617874 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.131919721 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.191510437 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.133918874 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.183542559 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.183798388 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.183716186 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.184478242 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.143120196 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.184518116 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.181540673 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.104002099 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.128888932 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.132581395 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184828699 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.104892448 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.132955396 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.170152847 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.135438022 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.184295769 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.186492135 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.127899773 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.108930193 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.124301672 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.102075083 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.119780666 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.171817543 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.133947497 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.103085369 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140424441 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.133318328 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.107202689 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.123617517 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.145709561 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.106321962 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.132802115 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.135668377 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.105494261 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136924037 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.18639343 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.132242245 seconds)
  done (took 15.187876325 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096389011 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.1206824 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.100971356 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.121742334 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.095561597 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.121254427 seconds)
  done (took 1.60833816 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.129410697 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.134414914 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.144267989 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.109274651 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.19154543 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.218831035 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.19560886 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.133128203 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.124718509 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.145235613 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.193149063 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.195645714 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.216628561 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.111640902 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.194985905 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.136378299 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.195295535 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.133070849 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.143533034 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103397529 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.142382315 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.135699792 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.103652233 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.18362383 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.138220498 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.137090984 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.133574834 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.118292545 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.14146332 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.132915181 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.110934482 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.135681981 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.129455858 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.132403049 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.197909487 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.103265709 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.130030027 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.14035168 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.110374448 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.138006769 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.195380755 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.130194918 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.142307216 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.140679929 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.106142158 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.129360743 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.14107272 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.107727759 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.221555637 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.113426615 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.141311194 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.133825009 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.111260865 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.140107536 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.129410845 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.132139762 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.115090191 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.221448711 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.111517439 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.129934551 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.135505854 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.112021678 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.13365727 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.139262398 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.139877177 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.115129587 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.132411567 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.136435118 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.10414236 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.13570724 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.140542968 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.110726258 seconds)
  done (took 11.132215059 seconds)
done (took 40.410853279 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.143134472 seconds)
  done (took 2.094728102 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.98544995 seconds)
  done (took 1.938358676 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.122174539 seconds)
  done (took 19.114888823 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.579917726 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.656722 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.005141398 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.148071682 seconds)
  done (took 3.345885147 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.088922391 seconds)
  done (took 2.06710866 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.330646034 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.287750201 seconds)
  done (took 1.578604102 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.875415959 seconds)
  done (took 1.842755413 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.478063565 seconds)
  done (took 3.441717979 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.385727573 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.19962458 seconds)
  done (took 1.561723701 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.678133879 seconds)
  done (took 1.650287337 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.198796309 seconds)
  done (took 37.170493862 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.250302526 seconds)
  done (took 1.234857577 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.319771766 seconds)
  done (took 1.293421858 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.76954897 seconds)
  done (took 4.744296658 seconds)
done (took 84.043672949 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.105162696 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.135008607 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107745964 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.132049694 seconds)
  done (took 1.448767916 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.115133355 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.133747221 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.135917897 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.107266373 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.142049554 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.106418224 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.132948545 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.139818795 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.105803143 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.134836803 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.13202073 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.106766421 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.135154515 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.130400529 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.105155927 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.134620202 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.111856747 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.135249024 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.133345388 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.108155666 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.132186926 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.134860274 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.110303553 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.133037729 seconds)
  done (took 3.97469624 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.107593131 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.125116628 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101176757 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.124956249 seconds)
  done (took 1.436908628 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.116365386 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.14798474 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.14825294 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.114514386 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.150180649 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.146917631 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.101305373 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.128073101 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.104255961 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.141860372 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.129687658 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.15342159 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.122647393 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.134596947 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.141646876 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.1010086 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.134199214 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.123738004 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.141675771 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.141088624 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.10061181 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.140343785 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.12952305 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.119333853 seconds)
  done (took 4.092952314 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.216275148 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.11931396 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.156847699 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.185133467 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.157992545 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.103027102 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.160110746 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.136702265 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.139155118 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.108696861 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.135893966 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.192596639 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.134783045 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.111135902 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.134712746 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.139159597 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.110588326 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.135498863 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.136726479 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.118103263 seconds)
  done (took 3.818877671 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.106916053 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.124255043 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093637574 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.124600228 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.132538191 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.101727981 seconds)
  done (took 1.67102247 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.094070548 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.117537999 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093315142 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.118980762 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.099021837 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.118529624 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.091798195 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.118608629 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09268917 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.118505864 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.091586464 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.117813878 seconds)
  done (took 2.260084541 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.308253359 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.097953284 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.13134607 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.123767584 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.103090089 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.124365132 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.139872007 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.097006669 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.262102388 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.12488577 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114966253 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.20285586 seconds)
  done (took 2.81495365 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232837617 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107394306 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292723966 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.400593231 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173952661 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184097697 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.295724682 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182638983 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.234635046 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127062888 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243747311 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171436257 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168051615 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198527222 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125746697 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.205038657 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21907986 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222718571 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164463245 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229485282 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183328385 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186694339 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198969335 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168575116 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152007533 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175974807 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.131948724 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113414808 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218200503 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190031597 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195376674 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162934624 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155109557 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223901244 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26828999 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199389716 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.334419299 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147118269 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.210410425 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.201265676 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.284393175 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154708851 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243828743 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143521742 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145216344 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200527064 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172999636 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.227911879 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.119761977 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155723806 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20634858 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220770603 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.207621335 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152013007 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.320671937 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161963534 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.164350377 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193116149 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210266001 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238150789 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184807354 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.107376271 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.228042869 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202012843 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201029104 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.162685239 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.190836491 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139243099 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195929227 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.2157594 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200772688 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21256644 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.205932856 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147607195 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181077289 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187423875 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16919037 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197459869 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177928494 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.131433961 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138274867 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14988711 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140891391 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.200988732 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107435345 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253873809 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147923919 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.206763657 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22383872 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176149952 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176976349 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18134359 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185062968 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160394978 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.133046853 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159525106 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.177891295 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173273449 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116732626 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172290818 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159993128 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.142023201 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168337995 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.107675674 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175444107 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.148257798 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184614272 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182084492 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.144699969 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181167016 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165120867 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.176394531 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191240218 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205930527 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145327776 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117735327 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241862532 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174716031 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.124375838 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.220713516 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.210127314 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.184541749 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152104486 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190082155 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217064224 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156735835 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209959009 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157601908 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14616665 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.169043592 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175122013 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1742289 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.171187255 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113881982 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.170891238 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242259098 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.112510156 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149437616 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19379837 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140744221 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11314737 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15834273 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151329617 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.154863451 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.167693381 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.127592137 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173055916 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178229909 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17062633 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175367569 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156764286 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24861711 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118116247 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.176700896 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16194203 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.131779237 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.20526695 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205014405 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143975066 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20424557 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.191952636 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241027312 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181990933 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14287317 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199926088 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114472448 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.135267202 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18504384 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17923564 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180343855 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.204798052 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237415531 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.18953108 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.171783942 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164890565 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184921204 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.193749776 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175459429 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.161404604 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179065244 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187293079 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.13386417 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.110852785 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.143468605 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154861428 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143408719 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116741241 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230514057 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181839563 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204268636 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17800674 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154778969 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202331305 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.141321814 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182588046 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.194855077 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15240585 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.20792059 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200571543 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184583773 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157044528 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191632823 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.133555745 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13669154 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.121951766 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186034104 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147338494 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147585188 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158869225 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203309918 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194499417 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165488457 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247479751 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189841061 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214171265 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.134972565 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.151680443 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215447078 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173708421 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.176420118 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1445753 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.17877442 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198101617 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159203585 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213509124 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181277061 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18658059 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252142261 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.171945266 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14306161 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136126404 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215088698 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127311561 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183372125 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161105951 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151818958 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170583767 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.1509828 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113150806 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231703617 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156792015 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202039832 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.174073385 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194026312 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138896994 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159268447 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177366785 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159771468 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.102941597 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18764933 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239284853 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160729922 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173747867 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194077033 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115517012 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.356423466 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213673741 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204661518 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152341227 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158334068 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180571593 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176856895 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182846779 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200657609 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157654183 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200948093 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175216911 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.157821695 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12131605 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162921114 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165629546 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.170040632 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150661771 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.174619331 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.154781314 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207621765 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160874506 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175565206 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181200469 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.16264627 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143449149 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155590007 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220345189 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173854283 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227312832 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.171368999 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.187552548 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209207606 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107452413 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141091436 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.142160107 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203175297 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144581169 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177249863 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.197110187 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214312907 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174221571 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214449764 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123806233 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.138655314 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179120014 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163298918 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216156845 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157387715 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.152799513 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212937371 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.167361621 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143748705 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181247031 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300234674 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158311076 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19598261 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.103993529 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.316155825 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112433446 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145478756 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177238107 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190398117 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.164454634 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.198105265 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183958562 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130409032 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176384424 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152548547 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.233318439 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227735116 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191554638 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194623249 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.159443208 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17649697 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18072032 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194608485 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156763108 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.162018655 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179945687 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201805261 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.2095796 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.149581455 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180282087 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179758607 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176278919 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223532428 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118534907 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206074394 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14478041 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185634896 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155182643 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139398951 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174443918 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.197381031 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146857212 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197063477 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174160352 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143963267 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113632287 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167341833 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17563134 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159106355 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.142272826 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201838962 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.139041916 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178930272 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200286456 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114710851 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172901735 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160961493 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148553483 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156724338 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131116553 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149679561 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.183794224 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20328674 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.1482379 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196072112 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192947535 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183344979 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176234182 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159124111 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.679535151 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.143724835 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203162548 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133137881 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240920815 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164613474 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183761253 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176903909 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134845748 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217236442 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165250393 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.210805934 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213569484 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179939709 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115631327 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159470549 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160282129 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.147967162 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166637925 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180122956 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126414846 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154755806 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.177256219 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161712454 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.160428642 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151414909 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204893742 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162159963 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206074194 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203252524 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153473268 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185699607 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197694714 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141914435 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.18319562 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191206209 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158594548 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169448293 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.11753936 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.152088166 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19721101 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.136671109 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180581443 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177556827 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178491005 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179923015 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.150000367 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148110464 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156649182 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178178816 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142609337 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.176350501 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174727696 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145934946 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.114762729 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173257326 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176062852 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.174097126 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142798076 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.161132146 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228017523 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.10772065 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14863213 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300815286 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174910109 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214606651 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.171559289 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149956502 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15814794 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173149394 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.173749365 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176619816 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.115328573 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145125868 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.147858437 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.198489952 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.174874812 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171792669 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196332303 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179402873 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209751978 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.160872926 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.28528764 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123740684 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172495023 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.145624668 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.146498489 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126011927 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149797211 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161116817 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207575824 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197417569 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.167116754 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.160794256 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143347283 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.106296732 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146915692 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178902268 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171052819 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175191004 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161005872 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.102326971 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159765948 seconds)
  done (took 86.012999328 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17341978 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.151173186 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.157550789 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.20876025 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178267267 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268629905 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.217407688 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238710696 seconds)
  done (took 2.66512149 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.133979598 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.120154621 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.15237028 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.134822052 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.135635215 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.449197415 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.14454925 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.105255825 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.197173958 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.17223942 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.105698978 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.680686154 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.13063976 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.133798601 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.124906306 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.132043641 seconds)
  done (took 4.117119894 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.531487277 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.565492916 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.102458629 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.264540612 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.246162661 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.192696501 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.775288435 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.204784396 seconds)
  done (took 12.947242156 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.136331774 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.151502826 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.354151101 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.221857726 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.171700856 seconds)
  done (took 2.112391281 seconds)
done (took 130.347172901 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.109396502 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.154237842 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.109386352 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.155312293 seconds)
  done (took 1.594505613 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.156023529 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.122860535 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.095195238 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121007889 seconds)
  done (took 1.573238176 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.53957136 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.091831796 seconds)
  done (took 1.738447278 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.134849942 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.156849872 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.154970276 seconds)
  done (took 1.532862468 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.116817559 seconds)
  done (took 1.194915836 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.110472102 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.141030544 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.192713056 seconds)
  done (took 1.527795632 seconds)
done (took 10.241127953 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.131202756 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.436160094 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.422167786 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116526796 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.730696898 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.414186389 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.057486853 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165389402 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.148971978 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126884141 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14597091 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.679062124 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.045259485 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.378823208 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.002920992 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.379701124 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.681831032 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.129053118 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.133375848 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100362431 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.034799985 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096133091 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12836368 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.126319652 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.68046016 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.432188302 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098681336 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.393724367 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.124289428 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.10422018 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.416730403 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097103105 seconds)
  done (took 17.230538412 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.145119113 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.193239722 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135982008 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.099013141 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.131836703 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.127685524 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.110222161 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.142591288 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.192970323 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125857672 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119615236 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.126766632 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102851786 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.128596346 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.149996882 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.098562122 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.129831075 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100279465 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.135804836 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.127933769 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.119394332 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.126887404 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100116288 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.129856099 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.126122972 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.112697726 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.127573839 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.140973607 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.098589223 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132728995 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.10503012 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.128412835 seconds)
  done (took 5.160383609 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.149161197 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.203097677 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137941264 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.162024076 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.181956868 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.099566218 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.219842948 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.169184192 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.196430783 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.128223 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.148182644 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.098360567 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.16857275 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097893789 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.152058647 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12698852 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.102108193 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.129974677 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.133874805 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100779607 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.148742074 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098189856 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.130594377 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128920133 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098984088 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.142401803 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098274167 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.142879097 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.126597248 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.10404645 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.134178169 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099038968 seconds)
  done (took 5.443237 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.111032385 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.141016458 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.121155445 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.151418842 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.13498157 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.110364191 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.140532103 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.105051113 seconds)
  done (took 2.107954024 seconds)
done (took 31.024462571 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.124574212 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.147175643 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.118541438 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.140697546 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.203081858 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.10155083 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.144472683 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.130024839 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.11283712 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.148828741 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.097429464 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.133321611 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.117404365 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.138597426 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.187211831 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.140249051 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.190702058 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.185796315 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.104231591 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.140696932 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.104174167 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.191269078 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.140643987 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.103197496 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.196627905 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.132643872 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.183564865 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.138120471 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.107418463 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.129927528 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.184385697 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.109829934 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.133434751 seconds)
  done (took 5.741079101 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.202742079 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.213553822 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.10359148 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.135274016 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.214827957 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.10410119 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.232146223 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.104605296 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.132607063 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.103766976 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.131137674 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.203671399 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.211049529 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.223651159 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.244004775 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.215282322 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.201597436 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.211735476 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.198012373 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.214802476 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.202316996 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.132924377 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.213513629 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.215663247 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.102298726 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.133374635 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.238678814 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.210631456 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.237317513 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.199278991 seconds)
  done (took 6.581885549 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.113075583 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.14516412 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.124524473 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.202365477 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.1731118 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.143087245 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.11114038 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.152993121 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.155645169 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.099830215 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.139076636 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.138162513 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.147144744 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.138700722 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.105293475 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.149325078 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.153795614 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.101680013 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.13582105 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119690569 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.148000084 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.147245756 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.114944129 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.139786953 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.099725244 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.14070164 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.134627742 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.113203378 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.138122246 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.108302637 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.134146304 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.133659949 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.10322155 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.139466798 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.105750899 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.14236498 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.157815703 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.109404523 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.143494066 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.165528464 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.108730743 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.135217306 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.151157719 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.147773474 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.13162017 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.140096387 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.113406511 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.139329687 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.098239573 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.150822923 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.142065582 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.101277143 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.15180836 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.098630495 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.129094516 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137853552 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.101549909 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.132103137 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.109328321 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.135123977 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.154936449 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.108694954 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136712502 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.101890788 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.134894596 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.100177565 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.130541073 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.137627016 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.122955367 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.134846971 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161154074 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.10133675 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.140587 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.108177894 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.136212251 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.138601455 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.099954663 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136366144 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.108195649 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.13696414 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.109595106 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.134003981 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.133251022 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.12096189 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.153463001 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.144200874 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.111117615 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.141572583 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.103738601 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.132309288 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144126381 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.101129184 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.134646835 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109919933 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.131901128 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.132303098 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.111900699 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.139328583 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.098382851 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.148948284 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.135663836 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.099809316 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.146146348 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.102098536 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.134854684 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.110271554 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.143093986 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.130160151 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.10900029 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.141674258 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.0983382 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.13584405 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.133440794 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.100724667 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.147422045 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.110412715 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.134802299 seconds)
  done (took 16.216143322 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.305393967 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.315991415 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.210063384 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.405883096 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.124714566 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.233291128 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.279738744 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.230923663 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.132299395 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.175033261 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.1923487 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.271230908 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.099964169 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.165246257 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.311253671 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.381223077 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.163285613 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.176433054 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.17474894 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.12566563 seconds)
  done (took 5.586827595 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.124527848 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.173879865 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.163387293 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.164373897 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.107316358 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.145585367 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.128706049 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.127544064 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.140003572 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.136238745 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.099778831 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.145730705 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.108699804 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.139474907 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.149743892 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.148857566 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.136898651 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.136759285 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.124213787 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.13883627 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.141674781 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.160805817 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.111928266 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.159734987 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.147910694 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.115080729 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.129843294 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.136572147 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.103896234 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.136098895 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.107013748 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.153335309 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.13866589 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.10771886 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.140743599 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.112161924 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.133923207 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.131176144 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.103222056 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.134038041 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.119024179 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.14041636 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.104868478 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.127173179 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.115797823 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.134749568 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.142234003 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.111823052 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.143434242 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.116452242 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.143659323 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.143549228 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.107728657 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.151202918 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.102513886 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.148454226 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.145492952 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.142108289 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.108872742 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.130277136 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.099770932 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.135336864 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.10475225 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.143756891 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.140956352 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.126790719 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.148288017 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.133580662 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.107844174 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.135752677 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.104059526 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.151517884 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.160419844 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.136108873 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.104068378 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.153188176 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.104585094 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.122996219 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.111147978 seconds)
  done (took 11.478253973 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131968398 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.137123866 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.122330135 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.169635416 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.152693592 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.106772704 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.137182063 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.121435954 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.14382034 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.145720852 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.114279964 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.14505558 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157198057 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.114766227 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.136640103 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.146347102 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.111619358 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.176173971 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.150344398 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.137101815 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.148290263 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.136363812 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.11486319 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.144123832 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.166483106 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.113657064 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.16525519 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.14137477 seconds)
  done (took 5.019480473 seconds)
done (took 51.716032287 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.289390815 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.417898085 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.195364603 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.189755039 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.232044142 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.227065103 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.190902824 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.382801673 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.948336039 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.185750632 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.191892618 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.189712771 seconds)
done (took 27.755419955 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.25535046 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.802215427 seconds)
    (2/2) benchmarking "String"...
    done (took 1.503475176 seconds)
  done (took 4.417355439 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.184810476 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.185808785 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.433967358 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.187867282 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.210363464 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.207922298 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.203359209 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.192557508 seconds)
  done (took 15.734441905 seconds)
done (took 25.703835444 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.244360351 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.396185777 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.461377744 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.20577591 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.207477485 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.202111101 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.184276474 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.228295387 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.190558465 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.189763689 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.199108495 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.467071417 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.192918671 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.596590424 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.188880893 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.194111175 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.209026441 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.41147583 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.203784774 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.238218214 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.196388971 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.180642112 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.189083354 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.207553466 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.198036085 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.191172496 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.198886297 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.181492209 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.387240432 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.201364173 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.237557685 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.189580263 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.208848797 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.201194748 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.300417834 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.220211122 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.380534894 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.190457396 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.1864736 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.200067794 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.36948689 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.614020608 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.196521953 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.186385075 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.194310294 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.264427644 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.191459502 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.925514709 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.195702447 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.191598999 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.209213773 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.563897356 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.198219805 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.202765602 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.203680208 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.430694717 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.19482622 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.239398461 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.217332296 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.20596254 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.202146472 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.1917027 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.213137677 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.193430094 seconds)
  done (took 142.769668958 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.19213654 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.195469051 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.19528947 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.216801397 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.195909563 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.195265991 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.191153431 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.191134366 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.197457722 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.196008434 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.195693567 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.192044121 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.196558156 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.158600535 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.196493236 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.214181871 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.196562985 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.214660734 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.196531545 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.19406231 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.200960736 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.197344759 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.211460204 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.193639401 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.197825547 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.271527044 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.212103062 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.225731796 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.199278052 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.19428393 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.199545459 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.204256893 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.829634246 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.057383831 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.206080299 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.229466874 seconds)
  done (took 79.870279897 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.193070786 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.193957639 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.194257639 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.22820215 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.193981505 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.775384503 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.775660545 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.928669895 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.581109681 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.570513654 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.471515084 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.195914921 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.291000884 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.208689951 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.201042617 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.210694135 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.239706076 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.196434368 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.196456485 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.792467005 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.212046748 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.196111394 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.373833983 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.212234424 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.228736856 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.599768857 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.292688688 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.195921255 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.229960279 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.533543158 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.248169912 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196958113 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.615934123 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.297262683 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312960863 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.20015482 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.229914339 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.197140951 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.481485371 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.196436973 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.197300094 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.200638297 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.874407125 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.197807179 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.778422556 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.197857167 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.154623089 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.19798975 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.197232729 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.190806674 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.86873331 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.214881393 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.197660621 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.197300188 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.19938756 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.196483793 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.197755041 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.230280374 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.067755787 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.293274846 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.213883196 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.198479272 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.230247618 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.195733471 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.262390298 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.217278002 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.650726706 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.271382266 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.407329323 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.194009242 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.785251789 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.197996284 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.292118185 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.315290383 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.196338901 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.194627263 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.193956754 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.195356873 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.305646364 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.195172392 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.625216886 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.37183773 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.211928323 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.563787503 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.292275835 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.194506967 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.619413922 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.198721948 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.195188647 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.941528316 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.291906602 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.195010334 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.193270983 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196315245 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.620371203 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.760853259 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.446244683 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.197121884 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.358317823 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.196657201 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.615644605 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.193533562 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.747696646 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.866579347 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.194478395 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.306094466 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.36961347 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.211538102 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.192998759 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.570438995 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.198141507 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.251146087 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.200172639 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.592247552 seconds)
  done (took 366.56209678 seconds)
done (took 590.314478521 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.940551937 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.890504707 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.02408911 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.920937411 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.885687317 seconds)
  done (took 10.779030075 seconds)
done (took 11.89621864 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.38513598 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.384318669 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.254873581 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.389510332 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.227918977 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.404920532 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.36625339 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.213612744 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.298456573 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.276834805 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.298160507 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.249166802 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23049165 seconds)
  done (took 18.097725761 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.49157689 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.200177413 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.263890239 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.487733674 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.239021235 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.471711876 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.500668966 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.201173191 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.350003743 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.211716596 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.210747125 seconds)
  done (took 17.749079612 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.46936353 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.201775364 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.285130895 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.47860524 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240171889 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.467669255 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.515704688 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.202579899 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.344164507 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.212037646 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.210917383 seconds)
  done (took 17.748001668 seconds)
done (took 54.713606681 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.240071649 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.367649016 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.22966609 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.216712416 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.208144896 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.209458696 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.215770976 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.207874843 seconds)
  done (took 11.016449609 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.207585826 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.206772384 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.207401607 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.206640623 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.208425707 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.207050406 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.208227422 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.207362782 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.207855252 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.208219907 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.207140511 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.207709442 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.208023335 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.207815199 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.207416121 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.207604698 seconds)
  done (took 20.444273455 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.210614107 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.207700744 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.208419549 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.209360745 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.206601128 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.208369727 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.209813784 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.209401504 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.208479318 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.208583093 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.208889029 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.209398586 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.208473239 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.207405548 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.208062039 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.209503469 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.208225312 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.208912552 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.212643647 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.209774127 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.20905765 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.208295519 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.208869887 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.209583466 seconds)
  done (took 30.139623714 seconds)
done (took 62.720425454 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.199302576 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.200111389 seconds)
  done (took 5.52302769 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.270559625 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.269306864 seconds)
  done (took 3.664590833 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.209601628 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.208373727 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.211791209 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.209849389 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.208646883 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.208932884 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.209823679 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.209238981 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.208748655 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.208002722 seconds)
  done (took 13.216218899 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.21229325 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.210086265 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.210729917 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.209310673 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.209360721 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.209062859 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.211070743 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.209687048 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.212379083 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.20981769 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.210047822 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.209204993 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.209999257 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.209340839 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.21100847 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.209495681 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.210090371 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.210437405 seconds)
  done (took 22.909878977 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.223898119 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.231241773 seconds)
  done (took 3.579163359 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.350408528 seconds)
    (2/7) benchmarking "second"...
    done (took 1.252603715 seconds)
    (3/7) benchmarking "month"...
    done (took 1.328290035 seconds)
    (4/7) benchmarking "year"...
    done (took 1.316481187 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.252477969 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.233221421 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.252123728 seconds)
  done (took 10.108900411 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.213226492 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.408296674 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.518488025 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.760677718 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.212642712 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.256799904 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.061726798 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.256844744 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.245412584 seconds)
  done (took 14.058647342 seconds)
done (took 74.182649265 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.200142961 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.262007373 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.230204936 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.22517596 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.549217595 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.219889194 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.205509068 seconds)
done (took 16.017294967 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.202322875 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.197259115 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.198881461 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.211720962 seconds)
  done (took 9.93566046 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.202170483 seconds)
    (2/2) benchmarking "read"...
    done (took 1.558052523 seconds)
  done (took 4.885211645 seconds)
done (took 15.946146021 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213198004 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.21204 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.21349839 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.21290932 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.211234788 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.211336309 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.211718628 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.213427363 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.212407711 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.212433235 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.212578749 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.21300365 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213126772 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.213453612 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212800028 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213322044 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.212389195 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213035241 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212004995 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.212793519 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.212249592 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214265526 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.213515988 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.21282892 seconds)
  done (took 30.232544908 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.21575634 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.21392041 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.214538967 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.213221685 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.217536194 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.213968428 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.213934921 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.212954455 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.214356249 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.213585148 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213506028 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.213372854 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.21395823 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.216631397 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214808089 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.213630741 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.213364313 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21377166 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214299201 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.213766868 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.213750534 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215476963 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.212438256 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213584128 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.214696686 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214549904 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.214314425 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.214909265 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21321945 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.216294619 seconds)
  done (took 37.556523588 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.218660527 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.220882274 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.212573788 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.213846784 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.213156 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.213986209 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.215649101 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.21334147 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.213509345 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.214862331 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.214435655 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.214246885 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.213109735 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.213152639 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.215764256 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.2149102 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.212909848 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.213457332 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.213485834 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.213393952 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.213686098 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.214048182 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.214321819 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.214079174 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.21221831 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.21379106 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.212807318 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.213776097 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.213730636 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.214480275 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.214745628 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.216850938 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.214223065 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.214304663 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.214421951 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.215272163 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.217910232 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.221739926 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.214639975 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.216573164 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.21390766 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.213688175 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.213728786 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.214922088 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.213665549 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.214545593 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.214039353 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.214415069 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.21380589 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.215116157 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.21402429 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.215008515 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.214570108 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.215236799 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.213820152 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.214254423 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.216429688 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.213027339 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.214271223 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.213688813 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.214392177 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.215324153 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.214462866 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.215055438 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.217562873 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.213080979 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.21476004 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.2140116 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.214296088 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.214331174 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.21477047 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.215487549 seconds)
  done (took 88.581510212 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.215555557 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.214444432 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.214131152 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.215686372 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215059054 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.215068528 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.215577304 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215764328 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217772827 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.216811107 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215782694 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.216144106 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21511565 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.216180528 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.215042133 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.215372513 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.218202059 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214742213 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.214698264 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.216426368 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.215837409 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.216683006 seconds)
  done (took 27.877394738 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216462091 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.218962249 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.216593671 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.217346532 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.217265163 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.216242305 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.215829393 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.216070202 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215617567 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217289415 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214145925 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214457192 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.217893834 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214457733 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21534462 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.217231282 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214857334 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.21817033 seconds)
  done (took 23.022724901 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.215946316 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.21493001 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.214945463 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.214630255 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.215668596 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.215906858 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215295662 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.215586763 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.215936746 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.216947846 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.21690328 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216658901 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.215970397 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216033462 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215944015 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.216217863 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.217037084 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21609001 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.215899864 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.216923387 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.21615012 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.216020291 seconds)
  done (took 27.880551531 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217131633 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.216877647 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.215373814 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.215675634 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.21571719 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.217440677 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.218067236 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.217423772 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.217408812 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.216617848 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217818337 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.218046741 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.219300082 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.219174495 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.217484145 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218394506 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.21760069 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.21751947 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217960126 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.217559506 seconds)
  done (took 25.476816643 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.21882387 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.220021827 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.219533291 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.219917037 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.21959752 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.219074526 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.219385654 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.219558896 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.219026332 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.218385174 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.219878058 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.219853407 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.220430086 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.219062701 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.219789692 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.219851308 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.219892328 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.220296839 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.219366717 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.220136036 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.220774532 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.21921552 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.219578434 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.219866134 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.219826792 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.220351777 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.219404588 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.221020024 seconds)
  done (took 35.283318864 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220805794 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.219027249 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.219936477 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.221114159 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.22011017 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.219667967 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.221244149 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.21986355 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.218987717 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.220056657 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.219039688 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.219531472 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.219121818 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.220313586 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.220992498 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.220391471 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219846661 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.220599504 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22009795 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220886094 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.221171197 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221998581 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.220432531 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.219859087 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221309485 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.221052766 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221286516 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.220860278 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221236369 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.222188957 seconds)
  done (took 37.745825282 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.267657279 seconds)
    (2/2) benchmarking "in"...
    done (took 1.262524366 seconds)
  done (took 3.661578154 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.222524986 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220023635 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.220321517 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.221617396 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.220855162 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.22134838 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.222840142 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22108829 seconds)
  done (took 10.902365372 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.218441686 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.222664959 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.221071742 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.222045169 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.221292928 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.218230709 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.2249727 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.241298269 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.219386564 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.22046224 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.225784637 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.22572322 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.220787061 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.218294305 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.21907726 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.219844303 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.222540693 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.2224105 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.223873151 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.224227145 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.223053195 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.221380557 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.221524774 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.225367163 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.221226904 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.230084174 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.242287147 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.224430098 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.221321688 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.223106417 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.219848268 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.224848352 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.223319215 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.224075431 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.224448781 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.224757551 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.228860002 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239470427 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.22643238 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.245087891 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.225830161 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.224776476 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.220174396 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.220944864 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.220893765 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.22509702 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.224216535 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.224843157 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.220685459 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.223159748 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.232619627 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.21999393 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.224257516 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.222936761 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.222105072 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.22780528 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.243816432 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.224600691 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.23034491 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.231309737 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.252232104 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.244985736 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.222038579 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.225752541 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.231509807 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.243637871 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.229916298 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.245515423 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.227177454 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.225878984 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.228653251 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25272782 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.24726571 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.226273489 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.226715518 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.226801366 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.223455765 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227868131 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.230205814 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.243007971 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.224927616 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.22673556 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.231554104 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.243982648 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.223066689 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.226013902 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.227138826 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.227637979 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.224938296 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.233410275 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.246157047 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.228947515 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.222227815 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.225020555 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.225596111 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.228812319 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.223564117 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.225455941 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.227841565 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.228929279 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.228042367 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.227804074 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.233603153 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.227991925 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.229699166 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.230854241 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.248288252 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.22324594 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.230040876 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.229618638 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.227832844 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.227195477 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.23121426 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.228230718 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.227245259 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.233510693 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.229417236 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.226832911 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.229166118 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.229919593 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.234754687 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.250050998 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.229151763 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.229318341 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.230396518 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.240069424 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.230472638 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.228553294 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.230026786 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.230055842 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.228621098 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.226817731 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.230231548 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.226510638 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.22979872 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.226185733 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.229383558 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.230846621 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.229997544 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.227936892 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.227837211 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.227853221 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.22783197 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.227467135 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.230941455 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.227881452 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.231337628 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.244184145 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.228488273 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.228110412 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.231119524 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.230308647 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.228369575 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.231640034 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.227373511 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.230830916 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.228070276 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.23023543 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.233062193 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.231540645 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.230473257 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.227956732 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.231917467 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.231953771 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.2299437 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.228654929 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.233196498 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.23129162 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.231460553 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.228513289 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.233830857 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.227180596 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.231499647 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.240361866 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.233149454 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.23136138 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.230775477 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.232269714 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.232865255 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.232038987 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.231796972 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.236995945 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.232214926 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.236018251 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.250841154 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.232580893 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.232635296 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.230021588 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.228919797 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234488483 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.232010105 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.243048465 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.239609487 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.254847177 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.231112665 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.23820568 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.230061914 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.238923541 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.232889468 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.233899889 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.2344299 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.23478166 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.231174465 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.233463673 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.231974234 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.234093778 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.230337594 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.234712024 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.235873061 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.233713458 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.236587668 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.231502112 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.230826951 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.23421932 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.234868163 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.234773597 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.230941371 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.233376665 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.230864701 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.231490058 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.235365448 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.234338215 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.236988461 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.235586584 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.233058186 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.2326988 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.231953635 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.230410915 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.235405539 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.234309492 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.231367338 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.23865986 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.251406955 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.232794086 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.238065018 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.250294374 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.232100809 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.234563919 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.23640712 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.235072486 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.233951108 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.244300412 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.237210563 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.236161933 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.236927453 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.233065546 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.237355492 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.237921917 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.255953226 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.232791934 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.236385395 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.234363192 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.238213051 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.234222653 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.234651468 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.234848812 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.235985792 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.239095613 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.237292919 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.234329142 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.239042475 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.238209306 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.237611734 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.237657738 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.245951116 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.239911026 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.234683394 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.237150958 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.235845194 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.243423568 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.23466591 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.237928824 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.234756178 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246933297 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.263207511 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.240838762 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.25447361 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.239791544 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.239839172 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.254729784 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.239767393 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.2361941 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.235702066 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.238665749 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.235180817 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.240183198 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.235928819 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.23954561 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.236310142 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.235879952 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.24360194 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.239111002 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.235546844 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.239087951 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.239780213 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.240008436 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.23506976 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.240693786 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.237250957 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.236528315 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.235519217 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.236222566 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.732936645 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257031195 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.236232932 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.235942505 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.235751591 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.236874918 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.23781894 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.240827464 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.239261763 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.247027655 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.238744051 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.245473166 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.239101823 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.244787378 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.241383887 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.239399341 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.249013634 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.241161056 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.236311515 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.238089297 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.241924221 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.242875449 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.25994674 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.237658534 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.244314491 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240520943 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.24021894 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.241591317 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.24168445 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24149903 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.241070032 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245157888 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.255700957 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.239820386 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.239919014 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.241661912 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.240406854 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.243620623 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.236861757 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.241694114 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.241903406 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.238280649 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.23864727 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.2383175 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.243166441 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.242444985 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.242212081 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.242608575 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.242284445 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.244917356 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.259796805 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.246286904 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.243028838 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.24510508 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262062842 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.246126507 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.26302708 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.239492062 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.244181186 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.243313487 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.240629466 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.238951652 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.240657288 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.243548133 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.239902143 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.247879971 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.243533544 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.240241018 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.240277978 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.243967507 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.239292131 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.248572911 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.266358739 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.241413162 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249265778 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.24442001 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.242263486 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.248679988 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.24445 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.240306278 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.243384557 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.251237099 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252319992 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.240636857 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.243919886 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.240716214 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.24628125 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.244686316 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.244689704 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.244518301 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.243761132 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.241662201 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.244822163 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.243185957 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.244174095 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.241964013 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.243139431 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.243110508 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.250910966 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.264436184 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.242469877 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.244350525 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.24632274 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.241074566 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.243150959 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.245657501 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.243038801 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.246344562 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.242616159 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249053651 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.247597244 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.245266053 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.242676139 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.245561453 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.240666804 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.24376525 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.24685049 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.245691572 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.247851988 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.243437263 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.246455824 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.243259726 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.242011342 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.247857491 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.244475427 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247384761 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.246372888 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.250219948 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.244215357 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.247079755 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.247194666 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.247184947 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.241855004 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.244578627 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.250271614 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.265416279 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.254202666 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.252171053 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.252409118 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.244093477 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.246521047 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.252844699 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.243171127 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.245808356 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.248776895 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.245310201 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.245092346 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.246644269 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.248695537 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.250623553 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.26302118 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.245128829 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.252366824 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.264848842 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250622463 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.246596302 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.248787287 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.245454554 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.250059688 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.249707203 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.245243123 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.252349652 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.267372655 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.250703255 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.247570767 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.245005795 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.247338208 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.253959856 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25069217 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.247117791 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.250230107 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.246728763 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.248806682 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.249716543 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.251324219 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.246526076 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.245715024 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.248906012 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.252792854 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.250416668 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.248411908 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.247812041 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.247733864 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.250839242 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.250940818 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.250765284 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.251249642 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.247506699 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.250902523 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.246656256 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.251422849 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.247270251 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.248114252 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.254364893 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.251244759 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.250018443 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.257638243 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.257610518 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.252509963 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.247841964 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.248441782 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.250903602 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251906271 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.253039574 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.248906349 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.250062502 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.253324 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.252529732 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.253284972 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.251388809 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26445254 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.271346108 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249175597 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.249619366 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.251984367 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.252923707 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.2533845 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.254000998 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.251890012 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.251919999 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.259600913 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.253281901 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257366391 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.26977869 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.251130378 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.258668312 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.253246941 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.257633928 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.253044052 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.253377508 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.253911466 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.25454221 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.265403144 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255351203 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259318257 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.278186149 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.271038576 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.251261635 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.254091638 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.25006243 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.254596891 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.253287297 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.255531583 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.255250668 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.255964381 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.253660539 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.252253056 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.255888278 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.252045932 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.256869758 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.253929556 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.250883318 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.252846649 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.255825964 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.255795473 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.256783494 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.255490358 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.255414384 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.255496849 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.250917358 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.263261373 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.278373977 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.25636243 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.256789583 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.256854487 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.255224053 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.254496945 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.262066505 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.263575584 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.256144881 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.255015541 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.253024912 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.256449282 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.257125968 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.252859748 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.25344999 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.253255596 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.256980022 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.2652254 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.28357976 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.257284819 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.253290587 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258385906 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.257094061 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.253524299 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.257291831 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25763048 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.254398817 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.256783548 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.260798328 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.260081219 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.257882643 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.256789639 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.264772825 seconds)
  done (took 741.126610786 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.258838848 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.257627842 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.258639345 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.25744989 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.257976634 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258718676 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257957534 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.258341841 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.258684599 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.258856085 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.257902021 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258450137 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.259285318 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.258377957 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257976573 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.258639658 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258005398 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.259155718 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.259179708 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258795786 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.260968357 seconds)
  done (took 27.596348527 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.260089654 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.258078703 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.259545875 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.259729828 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.259428938 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.259248706 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.259955791 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260579661 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.26000603 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260017141 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.261007597 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260717487 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.25982743 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.260276084 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25932513 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.260240779 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.260757298 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.260759425 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.260326176 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.260746321 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.260496783 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.260789256 seconds)
  done (took 28.889665944 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.25979458 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.260821623 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.256072104 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.260212099 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.260397873 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.260666517 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.261188061 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.262845167 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.261823096 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.258603002 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.256957423 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.258802072 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.264222933 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.268825329 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.258975422 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.261888423 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.261769798 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.261559078 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.262897872 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.261440174 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.262659222 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.283705015 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.263386993 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.258472908 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.263004499 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.261903145 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.263743322 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.262856192 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.259552529 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.26530219 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.262870389 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.259395115 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.260990595 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.259238344 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.26086349 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.26730934 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.264095914 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.263443777 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.263732346 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.269289211 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.285288783 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.263871441 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.266412913 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.284387329 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.26427736 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.262996211 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.271766675 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.263087416 seconds)
  done (took 61.828014791 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.846923199 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.867012528 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.867377317 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.868368788 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.867257914 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.886725173 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.867938234 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.873005671 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.867948363 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.872356723 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.869685418 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.874647714 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.868923579 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.869507434 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.868143315 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.868904811 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.863885263 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.86522962 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.866433802 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.873558123 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.87002195 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.86843988 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.862740904 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.865204139 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.867398904 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.866233875 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.867123473 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.861721838 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.86944693 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.868801635 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.868335106 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.867922904 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.871564907 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.869500047 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.869437654 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.869962019 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.872667803 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.868241795 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.864448541 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.865922495 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.870502005 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.865502214 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.868859716 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.89414462 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.87672211 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.871778326 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.870469292 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.866748827 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.874599922 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.871789819 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.87101437 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.871716512 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.874796862 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.871733898 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.871233328 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.878634998 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.873044707 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.877167633 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.867577461 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.87134842 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.87174887 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.880202868 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.872488417 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.870557741 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.870953098 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.874995104 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.872030262 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.869969131 seconds)
  done (took 128.345647349 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.268076199 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.267390337 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.267972634 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.2685795 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.268904923 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.268391642 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.26861505 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.268181922 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.268004196 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.268785001 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.268729918 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.269477845 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.268773865 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.268935256 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.26824001 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.269248794 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.269707384 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.268613161 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.269350434 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.26951745 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.269512299 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.269299229 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.269754624 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.270636574 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.269871208 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.26882829 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.269731789 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.268846638 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.270244706 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.269162453 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.269580951 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.269994191 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.270267286 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.27073664 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.270364887 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.270370026 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.26928851 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270186336 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.271625298 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.271830259 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.269561962 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.270705299 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.270624304 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.271286299 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.269648745 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.270838384 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.27165472 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.270157878 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.270905442 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.271347369 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.270672136 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.270879915 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270957 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.27183155 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.270701919 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.272549195 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27173052 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.271175037 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271113964 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.271025812 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.271972022 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.272127656 seconds)
  done (took 79.916000133 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.272410769 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.274494521 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.271720563 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.272843433 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.27144055 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.273127289 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.271551119 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.27138596 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.272853175 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.272147663 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274387563 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.27333767 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274746351 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274494813 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.273196346 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274434076 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.273907066 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.273879028 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.273885644 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.273842506 seconds)
  done (took 26.64246354 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.273173866 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.273459475 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.273491662 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.273696749 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.273075448 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.274060537 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.273050307 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2737568 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273391976 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273823485 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.274423239 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.273744844 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273733853 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.274504861 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.274345506 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.273844423 seconds)
  done (took 21.558357258 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.274141504 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.27451105 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.274199601 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.273868144 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.275553809 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.275035979 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.274172884 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.274163584 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.273018967 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.276572598 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.274408058 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.275218444 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.275975872 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.275612747 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.275262036 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.277340535 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.276924811 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.275889737 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.275272614 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.276687656 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.277012774 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.276899189 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.275277184 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.275251091 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.276545948 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.276738959 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.276299907 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.276333824 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.277115965 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.275985868 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.276689942 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.276384426 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.277134236 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.277331029 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.277635413 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.2765297 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.276654432 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.27604366 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.277034983 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.277155278 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.277309253 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.278172032 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.278180623 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.276588861 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.277747334 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.276640767 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.276458644 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.276698322 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.276474532 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.27854236 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.276846219 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.276749222 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.277579593 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.277431971 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.278027435 seconds)
  done (took 71.377602834 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.277946586 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.277621974 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.278202031 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.277153069 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.277947218 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.274881444 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.276042186 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.276734139 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.274579135 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.274648739 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.275570289 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.276318357 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.274774419 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.275377106 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.275370389 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.274753617 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.275171984 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.275873894 seconds)
  done (took 24.153071869 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.275602727 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.275908038 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.27579378 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.276451683 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.277404078 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.276067298 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.275891903 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.274997632 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276353327 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.276887132 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276864831 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.277153856 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276705373 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.276324222 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.277997538 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276113123 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.27660295 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.277505927 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.277400189 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.277754064 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.276901344 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.278778239 seconds)
  done (took 29.268782646 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.271288644 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.27327699 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.271356081 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.287248785 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.293733271 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.272150315 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.272889111 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.272839874 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.294208447 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.340517902 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.334380188 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.293812681 seconds)
  done (took 16.660320111 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276731715 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277718515 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277323944 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278391866 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278032041 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279424234 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277723866 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278612609 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278793905 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278358307 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278723472 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279076256 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278843971 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278013224 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278213838 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278937491 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279398633 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280180668 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280030891 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279015604 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279103549 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279553245 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279105984 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279306929 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279789121 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278806142 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279384106 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279963468 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279354469 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280067521 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278609181 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27990136 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280578425 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280845367 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279206109 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28082239 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279934921 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279860784 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28034429 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279516076 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.281092859 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280109994 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280930586 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282017504 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279998874 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280704936 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280212128 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279890239 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280822136 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281788149 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279901371 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282050184 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281816951 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281104588 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280713693 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280874822 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281302446 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282572529 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283237391 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282301631 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282005393 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281852617 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28191753 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282253174 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28263276 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283149781 seconds)
  done (took 85.669831507 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282428422 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.281763946 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281952234 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282535535 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282978059 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281650186 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284110762 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283025862 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281622102 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283132244 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281846826 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282311368 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283600981 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282159522 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282737257 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282256691 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282499026 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28316916 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283634229 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283773783 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28355946 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284113108 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283413049 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285537779 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28507433 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283617825 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283253279 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283846518 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282934306 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284268416 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283732169 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284327481 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283604388 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.283583078 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283914429 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284508646 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285245052 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285209691 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284544634 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284827884 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284767003 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284176813 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284636616 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285114968 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284495797 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285211585 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28468262 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284179341 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284575701 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285295901 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28533911 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285805629 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285694737 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28434635 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284609139 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285215606 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285616509 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285370911 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285606537 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286737096 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286370735 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286132905 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286309347 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286613767 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285645704 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286492964 seconds)
  done (took 85.945926547 seconds)
done (took 1778.324600202 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.447737402 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.39869358 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.281239474 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.29296148 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.281739779 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.275911093 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.291412194 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.28160226 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.280780921 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.282420303 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.282151962 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.471524517 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.336545541 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.281887081 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.282194005 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.378542403 seconds)
  done (took 26.339047514 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.311291053 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.290051048 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.398569925 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.303744248 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.311535334 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.472253677 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.340288717 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.287512306 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.457835205 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.305748729 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.27797335 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.324251079 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.286265716 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.287185651 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.303391584 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.476062403 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.532232869 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.278205427 seconds)
  done (took 28.43510076 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.735831317 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.287770483 seconds)
  done (took 5.216188914 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.306331497 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.28575824 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.288208031 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.285509466 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.278305991 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.279433186 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.285622586 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.282251147 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.285466336 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.413827389 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.288517782 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.301737287 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.303819912 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.288141461 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.29034742 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.331351603 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.438299401 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.292888581 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.290598696 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.293358741 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.287372594 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.388104956 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.329191454 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.290497931 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.411374017 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.289165418 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.293566097 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.294704621 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.4155409 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.293015178 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.287813338 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.286310419 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.289949001 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.282525901 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.768941744 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.298202277 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.31336471 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.313654445 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.291375723 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.44901215 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.288399361 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.294628189 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.282017099 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.764644775 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.417877033 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.404831359 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.296426944 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.287079583 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.288980828 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.351867424 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.288735195 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.294486627 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.347825694 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.098963945 seconds)
  done (took 82.893579789 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.288065829 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.280082561 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.463910582 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.304207068 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.279411023 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.279977134 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.30038495 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.567818775 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.309232283 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.283198543 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.570896916 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.860257198 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.316284223 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.3367473 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.146828149 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.356971927 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.289487993 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.294240599 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.285392393 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.280327993 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.825036747 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.284073859 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.279893389 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.451270579 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.317074117 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.789155745 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.291382062 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.279784163 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.302087766 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.280580179 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.800390168 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.299540659 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.348723005 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.282122022 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.551030299 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.656345957 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.624910365 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.28423214 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.305895257 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.283099251 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.291663909 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.784250822 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.648233204 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.286304492 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.28216556 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.792892644 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.285474957 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.294740229 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.286876319 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.528671214 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.282260943 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.281279409 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.301385323 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.301843222 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.283469782 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.378102294 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.372749272 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.802714099 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.290436654 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.280910117 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.305455167 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.283370875 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.291475782 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.284023287 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.297409827 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.644500282 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.433780025 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.289035853 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.637866638 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.798680804 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.30038555 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.856452839 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.301896454 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.282422509 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.493573203 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.280266836 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.300717248 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.804912512 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.299879553 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.282780809 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.620901225 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.286390143 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.572652238 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.300263099 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.281585933 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.836312007 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.28990619 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.29527262 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.280592488 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.297587232 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.281738276 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.303741989 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.560724647 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.33363099 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.282620771 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.283706252 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.284169774 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.282687201 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.282653209 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.287341375 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.855633143 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.312772963 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.282031192 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.284187352 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.283482378 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.303012345 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.282287243 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.282229278 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.549607702 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.297549186 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.286790193 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.285487613 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.283726495 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.308575089 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.452950412 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.28812272 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.593257636 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.290916346 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.285676084 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.285021019 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.283969321 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.288036106 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.28509351 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.288149888 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.199011372 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.543616094 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.303543501 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.299687174 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.287342084 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.299744239 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.284808722 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.287200563 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.345195992 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.284728534 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.06657928 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.315245477 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.318380549 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.285465264 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.287619178 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.284534655 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.292119755 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.286820672 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.575194322 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.557064057 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.433272256 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.294730267 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.291674153 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.035992847 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.346290755 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.464177508 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.305045466 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.285325685 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.533788887 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.512156987 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.286755931 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.283384368 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.287009485 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.542008265 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.286670309 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.603059448 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.823666075 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.299236109 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.291828826 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.077394241 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.978212133 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.285739418 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.288591012 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.565352355 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.30233133 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.288725413 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.285955448 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.286610755 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.301868483 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.305902027 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.29280991 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.285964799 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.285251229 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.332832071 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.477657803 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.304131052 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.285909954 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.777917107 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.303881132 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.286080481 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.312136916 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.287405945 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.285481879 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.360853984 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.28945098 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.31405669 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.287619628 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.287732295 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.79419726 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.285985905 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.28780379 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.475332102 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.972651254 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.305437289 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.286377597 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.303006596 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.24928918 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.808604952 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.330348108 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.58359142 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.29902937 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.324565599 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.286176323 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.384381767 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.807414101 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.290372326 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.304137413 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.934161502 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.305260162 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.807488278 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.287490088 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.288164764 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.885589461 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.307844028 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.286674462 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.286615657 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.293182167 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.587460621 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.292304551 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.314874875 seconds)
  done (took 487.74013186 seconds)
done (took 631.813389492 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.286529417 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.286770487 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.283013121 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.292948357 seconds)
  done (took 10.347866489 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.303435392 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.294950528 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.299849059 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.293622453 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.301163221 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.294396324 seconds)
  done (took 8.988384708 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.288427781 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.288492724 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.292650506 seconds)
  done (took 8.070136022 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.485512746 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.309424206 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.599676123 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.308968022 seconds)
  done (took 8.904878214 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.300149369 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.300786612 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.30132353 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.303220049 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.303938554 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.304764891 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.303079411 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.30149662 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.303857077 seconds)
  done (took 12.922467015 seconds)
done (took 50.432640713 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.351281897 seconds)
    (2/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.476438235 seconds)
    (3/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.083200611 seconds)
    (4/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.219708314 seconds)
    (5/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.05488196 seconds)
    (6/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.328370656 seconds)
    (7/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.498150472 seconds)
    (8/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.542643854 seconds)
    (9/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.502322548 seconds)
    (10/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.286784292 seconds)
    (11/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.354363425 seconds)
    (12/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.389191599 seconds)
    (13/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.643180828 seconds)
    (14/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.341997894 seconds)
    (15/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.500605486 seconds)
    (16/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.303908381 seconds)
    (17/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.326570518 seconds)
    (18/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.331050864 seconds)
    (19/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.417826298 seconds)
    (20/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.444141197 seconds)
    (21/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.976599757 seconds)
    (22/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.327776014 seconds)
    (23/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.283839324 seconds)
    (24/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.483737213 seconds)
    (25/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.492150097 seconds)
    (26/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.421197491 seconds)
    (27/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.334801715 seconds)
    (28/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.385930961 seconds)
    (29/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.394053572 seconds)
    (30/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.34127458 seconds)
    (31/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.292176723 seconds)
    (32/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.615159877 seconds)
    (33/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.336587924 seconds)
    (34/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.401658077 seconds)
    (35/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.491885955 seconds)
    (36/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.49450298 seconds)
    (37/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.452031981 seconds)
    (38/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.427197489 seconds)
    (39/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.392356461 seconds)
    (40/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.450316105 seconds)
    (41/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.002260989 seconds)
    (42/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.438488793 seconds)
    (43/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.304335915 seconds)
    (44/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.470257983 seconds)
    (45/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.113198345 seconds)
    (46/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.373203229 seconds)
    (47/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.299937495 seconds)
    (48/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.290946795 seconds)
    (49/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.422122548 seconds)
    (50/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.207234429 seconds)
    (51/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.347454659 seconds)
    (52/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.426600014 seconds)
    (53/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.499148186 seconds)
    (54/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.164413815 seconds)
    (55/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.305748728 seconds)
    (56/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.292960297 seconds)
    (57/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.335841604 seconds)
    (58/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.419925256 seconds)
    (59/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.342082068 seconds)
    (60/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.319584352 seconds)
    (61/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.049878148 seconds)
    (62/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.353695755 seconds)
    (63/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.333858476 seconds)
    (64/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.475592723 seconds)
    (65/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.00153987 seconds)
    (66/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.456249051 seconds)
    (67/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.29878174 seconds)
    (68/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.357877035 seconds)
    (69/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.378515101 seconds)
    (70/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.467000987 seconds)
    (71/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.337625279 seconds)
    (72/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.311240695 seconds)
    (73/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.374723658 seconds)
    (74/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.342784731 seconds)
    (75/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.946885583 seconds)
    (76/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.320546099 seconds)
    (77/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.29567825 seconds)
    (78/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.302079446 seconds)
    (79/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.294631113 seconds)
    (80/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.29365756 seconds)
    (81/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.390861601 seconds)
    (82/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.332817509 seconds)
    (83/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.434186481 seconds)
    (84/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.386267882 seconds)
    (85/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.29581519 seconds)
    (86/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.303062918 seconds)
    (87/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.397884697 seconds)
    (88/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.196519035 seconds)
    (89/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.509609266 seconds)
    (90/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.434631402 seconds)
    (91/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.387424673 seconds)
    (92/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.35047564 seconds)
    (93/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.45728635 seconds)
    (94/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.396817024 seconds)
    (95/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.360138969 seconds)
    (96/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.447890269 seconds)
    (97/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.392929776 seconds)
    (98/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.396623011 seconds)
    (99/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.306163785 seconds)
    (100/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.407548121 seconds)
    (101/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.396009631 seconds)
    (102/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.378715213 seconds)
    (103/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.407129622 seconds)
    (104/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.078806962 seconds)
    (105/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.486880525 seconds)
    (106/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.366201889 seconds)
    (107/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.037193761 seconds)
    (108/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.496381607 seconds)
    (109/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.380783207 seconds)
    (110/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.062360496 seconds)
    (111/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.423878318 seconds)
    (112/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.335410265 seconds)
    (113/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.358256821 seconds)
    (114/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.30627903 seconds)
    (115/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.384269771 seconds)
    (116/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.357640089 seconds)
    (117/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.336150599 seconds)
    (118/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.116547281 seconds)
    (119/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.409274321 seconds)
    (120/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.335143291 seconds)
    (121/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.386044763 seconds)
    (122/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.406732387 seconds)
    (123/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.350820392 seconds)
    (124/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.498072319 seconds)
    (125/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.298659668 seconds)
    (126/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.435638968 seconds)
    (127/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.457840654 seconds)
    (128/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.412580689 seconds)
    (129/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.343379331 seconds)
    (130/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.642335251 seconds)
    (131/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.53446894 seconds)
    (132/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.497157325 seconds)
    (133/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.353374217 seconds)
    (134/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.954074198 seconds)
    (135/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.400158197 seconds)
    (136/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.391535234 seconds)
    (137/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.389377359 seconds)
    (138/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.33287445 seconds)
    (139/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.43674785 seconds)
    (140/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.443805255 seconds)
    (141/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.014843748 seconds)
    (142/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.322921246 seconds)
    (143/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.33858287 seconds)
    (144/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.297707688 seconds)
    (145/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.344006825 seconds)
    (146/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.331198572 seconds)
    (147/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.300660155 seconds)
    (148/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.494724204 seconds)
    (149/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.570130721 seconds)
    (150/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.407084528 seconds)
    (151/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.365985825 seconds)
    (152/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.413989297 seconds)
    (153/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.33985585 seconds)
    (154/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.340484643 seconds)
    (155/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.467902058 seconds)
    (156/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.444562962 seconds)
    (157/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.9576419 seconds)
    (158/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.523235581 seconds)
    (159/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.339217069 seconds)
    (160/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.343094969 seconds)
    (161/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.42598933 seconds)
    (162/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.375559978 seconds)
    (163/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.589476532 seconds)
    (164/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.389125705 seconds)
    (165/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.471169965 seconds)
    (166/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.340193355 seconds)
    (167/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.455750761 seconds)
    (168/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.452849385 seconds)
    (169/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.059119638 seconds)
    (170/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.428143508 seconds)
    (171/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.358203319 seconds)
    (172/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.410515404 seconds)
    (173/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.368688063 seconds)
    (174/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.310325733 seconds)
    (175/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.483061407 seconds)
    (176/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.335064144 seconds)
    (177/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.986452658 seconds)
    (178/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.353598219 seconds)
    (179/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.318314724 seconds)
    (180/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.337630031 seconds)
    (181/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.350067904 seconds)
    (182/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.337490056 seconds)
    (183/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.505749461 seconds)
    (184/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.404789193 seconds)
    (185/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.422652146 seconds)
    (186/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.330316156 seconds)
    (187/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.087835954 seconds)
    (188/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.519185468 seconds)
    (189/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.308116389 seconds)
    (190/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.436838359 seconds)
    (191/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.444320084 seconds)
    (192/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.968305066 seconds)
    (193/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.385270449 seconds)
    (194/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.406330674 seconds)
    (195/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.464595017 seconds)
    (196/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.352386766 seconds)
    (197/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.351167969 seconds)
    (198/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.439048689 seconds)
    (199/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.527680688 seconds)
    (200/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.481506907 seconds)
    (201/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.482693109 seconds)
    (202/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.384571989 seconds)
    (203/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.520328301 seconds)
    (204/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.39931355 seconds)
    (205/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.357264927 seconds)
    (206/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.384009931 seconds)
    (207/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.441756222 seconds)
    (208/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.295785079 seconds)
    (209/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.076669689 seconds)
    (210/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.0893921 seconds)
    (211/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.021337769 seconds)
    (212/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.554858681 seconds)
    (213/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.323540798 seconds)
    (214/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.452090143 seconds)
    (215/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.373680801 seconds)
    (216/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.363724682 seconds)
    (217/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.309014563 seconds)
    (218/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.452950671 seconds)
    (219/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.322887999 seconds)
    (220/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.420217898 seconds)
    (221/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.296575277 seconds)
    (222/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.350757952 seconds)
    (223/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.297883785 seconds)
    (224/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.464921315 seconds)
  done (took 364.95894859 seconds)
done (took 366.160684947 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.359337694 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.494756351 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.310836095 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.311612761 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.356511543 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.303826049 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.354464795 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.319892172 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.323069768 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.322438729 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.305340942 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.323476213 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.325750779 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.350660874 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.427387763 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.31998166 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.312520067 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.31848829 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.36221278 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.379012402 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.356877805 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.356870898 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.33252958 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.31308172 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.360368218 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.360921467 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.319396951 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.309668472 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.319734497 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.361103648 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.307114415 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.323970278 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.370095492 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.3714179 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.358110693 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.319358719 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.358459592 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.495932022 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.355653085 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.353966566 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.324879284 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.371920511 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.32520305 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.326266742 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.371096836 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.334235584 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.362772428 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.43812117 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.31524812 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.311347028 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.361147611 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.380752664 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.325575068 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.312776277 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.308293394 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.437204693 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.321612713 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.363591301 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.321888118 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.360380189 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.429116569 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364384448 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.38175827 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364380236 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.323355601 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.327554585 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.321647295 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.38207428 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.322382088 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.359938024 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.359946451 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.326741524 seconds)
done (took 106.342384354 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.44739488 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.316020857 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.457339135 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.321256692 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.482655476 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.468772441 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.319029791 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.320111643 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.320270881 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.145686787 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.320005075 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.321102222 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.31734342 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.320431049 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.444368838 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.320337516 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.318919251 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.033804379 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.320163278 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.457649189 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.314457195 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.321128419 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.320208861 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.141110968 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.316989531 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.312495394 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.459659676 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.321813262 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.033014816 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.311287691 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.315048977 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.03458147 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.490624504 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.340935386 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.333216066 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.331025472 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.485373496 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.340750447 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.448537001 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.44918705 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.459571107 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.360415017 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.313352036 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.316001438 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.323980902 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.324160078 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.324353737 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.352427248 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.319402112 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.323317267 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.037621129 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.333408904 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.332681399 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.324863822 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.323528475 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.343004975 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.324480307 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.323967985 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.463376129 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.324493764 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.448519889 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.1427306 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.150344262 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.324217301 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.316505182 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.32515528 seconds)
  done (took 107.6721545 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.387818111 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.401752241 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.428529417 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.339538064 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.373568216 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.434028072 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.338377751 seconds)
  done (took 10.926959083 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.326444434 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.325979558 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.369826273 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.369943819 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.323852395 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.476384538 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.323301658 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.33213401 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.324163516 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.373418951 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.325303604 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.324780608 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.334880056 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.320771199 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.369444071 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.333133451 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.437584737 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.323157704 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.327116819 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.473940029 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.326176512 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.337696057 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.373970221 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.334659554 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.327561467 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.328415035 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.094006038 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.328405466 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.329285582 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.328276179 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.327318602 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.376789539 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.326762689 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.32360277 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.32843482 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.440331633 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.326971909 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.328080358 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.327764999 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.323669873 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.327829852 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.327193992 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.327045736 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.328449759 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.326527738 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.348402474 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.328011343 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.327629849 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.328574919 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.328231446 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.37394388 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.327695744 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.327952574 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.328072475 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.37881909 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.339151339 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.32679854 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.327034025 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.328348623 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.328086977 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.475115922 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.372088732 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.327338696 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.372250023 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.328023845 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.328307159 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.328559811 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.329226134 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.416692787 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.328394331 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.372546862 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.329608932 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.507165711 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.347676182 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.330100088 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.327676188 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.328239909 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.328307708 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.321895867 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.331299905 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.328673385 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.326470491 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.33100859 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.328431976 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.329013835 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.482265247 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.433508383 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.329191848 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.338679243 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.332012505 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.330045236 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.377903617 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.328685041 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.329473662 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.378045315 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.44042122 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.379959576 seconds)
  done (took 136.819146844 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.338978507 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.339609313 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.331374729 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.355714882 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.329172342 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.328641878 seconds)
  done (took 9.251536475 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.327623895 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.334223338 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.330538863 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.330239783 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.331227536 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.332647543 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.330806072 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.328484215 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.334096984 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.3316002 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.332231226 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.333444713 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.334040121 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.332396133 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.332093596 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.333281355 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.333463932 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.331492299 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.33170078 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.333068982 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.328777667 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.332477868 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.332622374 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.329531368 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.337163935 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.332701867 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.350314414 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.333460236 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.332155407 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.334188611 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.350500286 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.332801616 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.329565887 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.334126999 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.336092419 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.331098112 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.336386232 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.33539452 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.33391182 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.334761056 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.334574711 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.333428332 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.334192053 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.336379101 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.330636653 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.335304296 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.339117378 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.351194322 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.334649111 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.335451354 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.33490253 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.333937855 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.3358378 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.335891164 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.332762674 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.35133549 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.339282218 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.335435851 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.335559764 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.332462576 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.338436075 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.336539928 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.333067624 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.337725697 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.336097846 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.33705201 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.332238453 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.337906146 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.335270706 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.336728 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.336068247 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.335160984 seconds)
  done (took 98.334177597 seconds)
done (took 364.222895942 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.196767789 seconds)
  done (took 4.429258059 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.433271176 seconds)
  done (took 3.668943653 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.27407303 seconds)
  done (took 22.516911754 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.373088293 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.349818924 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.362082975 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.333311208 seconds)
  done (took 10.652816599 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.738908557 seconds)
  done (took 3.972404778 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.330881517 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.340340086 seconds)
  done (took 5.908113034 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.60555152 seconds)
  done (took 3.839333172 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.843695546 seconds)
  done (took 4.084702725 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.330487048 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.344115843 seconds)
  done (took 5.917836902 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.334026637 seconds)
  done (took 3.568556911 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.970626229 seconds)
  done (took 38.206647992 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.342404892 seconds)
  done (took 3.579262144 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.352263938 seconds)
  done (took 3.587134647 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.86614399 seconds)
  done (took 6.100741391 seconds)
done (took 121.265197087 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.326731061 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.333311612 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.332158451 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.328803028 seconds)
  done (took 10.555726053 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.389734866 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.388835214 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.391462393 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.388827378 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.390689386 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.389858185 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.365061093 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.362791379 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.390761877 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.389436381 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.390296798 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.38954759 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.391161554 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.364033864 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.390137099 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.390947186 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.389286566 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.392205304 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.364595044 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.389342932 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.340295266 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.392407845 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.390098507 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.33967136 seconds)
  done (took 34.396958564 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.828494862 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.405683174 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.488813774 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.386849693 seconds)
  done (took 7.346193933 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.415496276 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.417373107 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.428222916 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.468273997 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.48166713 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.430597939 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.365802742 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.361305085 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.347289156 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.416279639 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.468226698 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.407945603 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.494166891 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.340316954 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.547238867 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.341646607 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.338955133 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.418876346 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.471243736 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.482000897 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.342039406 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.417266132 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.418652459 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.409001496 seconds)
  done (took 35.266787316 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.350245446 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.35697379 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.342160519 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.35834145 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.342172444 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.342658794 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.343374794 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.347334242 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.341751084 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.341985078 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.341614434 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.356166419 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.34622666 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.342472221 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.350322099 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.345240428 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.347788012 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.347046837 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.342828203 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.348828492 seconds)
  done (took 28.174871137 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.332353519 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.331321045 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.68327456 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.589145879 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.331340669 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.332104336 seconds)
  done (took 13.838096139 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.403675472 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.561394016 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.340545852 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.676422544 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.766816841 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.341187469 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.336870736 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.580967157 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.888277007 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.864241506 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.39682019 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.410972341 seconds)
  done (took 19.807965644 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.346314483 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.335297827 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.346088804 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.351062643 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.390303652 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.361476091 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.345466966 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.333843793 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.394797287 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.413345982 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.362572992 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.391893538 seconds)
  done (took 21.614147811 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431371178 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.338879569 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.337531055 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359764874 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338460223 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.181839139 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.362249074 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.03615678 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.363269637 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615042506 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352688501 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439906015 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.592480057 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339651773 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.363749076 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.337425839 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.567701387 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80579322 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341224191 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344845155 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376117144 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.338460867 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343993379 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.550306596 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.361517142 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339050008 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.602342974 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.341764946 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614041672 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.357283666 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350272242 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341139509 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616200453 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986215499 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456918151 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543704078 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378105444 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343403443 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.343510823 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.347688938 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348253352 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.347066484 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350614189 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340547396 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.341102089 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341109985 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.049042802 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.367196951 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.341966405 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.340213527 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.591411693 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444095611 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.347472652 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.341819894 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33737152 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341425163 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.347268534 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.473792301 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944780027 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351090744 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348134414 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.346663146 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.345857345 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350473835 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940111128 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.366633177 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.349429421 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.347322157 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342305829 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.348088979 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365268711 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343069042 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.369088271 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342893462 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032916935 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364376923 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362808481 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873018142 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345081145 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.363732843 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.574488779 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343640222 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342148099 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.342839757 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.343376295 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019041616 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351770156 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.330644941 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411310027 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.060762108 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.567602658 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384642871 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372923384 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.564710132 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.331875956 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343771212 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.347951991 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351370978 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364969769 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.04618632 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362335965 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.349867138 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599497777 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.554175416 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345978412 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.345284941 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.811816625 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362362226 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.366502371 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.344690821 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.554505384 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.927430984 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.378557326 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359090703 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364949249 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.344940554 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066008418 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347139244 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.451889407 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.358957275 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609209467 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.116901681 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348098509 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412301809 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351779352 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.345437544 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357374927 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351956321 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.34724572 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.544611475 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366675901 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.360630111 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.3475224 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347553883 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.359053445 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347515022 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.34920499 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.569121028 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346585582 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629867191 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348093389 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347664368 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346417904 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.569350846 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.357224026 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.690111406 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.608131842 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348279678 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.351156309 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.363119595 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36563486 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450572575 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369589131 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.347709176 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.606873843 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.354458275 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.354217946 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356216449 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.350969854 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352793297 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.355300736 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345822927 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917350046 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339563411 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.35571909 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.235064302 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.364138671 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414431883 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.355768279 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.554788082 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.383052654 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364604559 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.356333011 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.349047176 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.587787095 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.358598751 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.354989883 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428624924 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.813003357 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.933133034 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.380613451 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.349992554 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.349628213 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.34887318 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350056625 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349546934 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.35050661 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.556603542 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.383695459 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.364597632 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.922226714 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370283769 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.360492632 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.361458113 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.362563559 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.357764394 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350676201 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.35003196 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365882252 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374042904 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.365969224 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493101849 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.367612971 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.350595741 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.869438863 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.359450738 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.351286654 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.351361598 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386018213 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361457922 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.153972011 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.629876391 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353559775 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604813403 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.366151336 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.373332432 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.35122771 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358184947 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354200004 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.366014794 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375262539 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.362626487 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.359485017 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353913357 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930123851 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.06851646 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870460737 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37284753 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.355164481 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.358315529 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.060830603 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370225016 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35277654 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.584356634 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.073132632 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372257773 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.820599601 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.376294281 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.100872667 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608544231 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.588716541 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353835207 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.366074796 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.611123762 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.569561805 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387576063 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.356843318 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357093336 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.341674565 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89968799 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37210264 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437573937 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063708909 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380150255 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357587392 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.430284119 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.353325863 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.769315014 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.372118107 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354681181 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.360795819 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.360117495 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172665883 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.379833349 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355516694 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949996966 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371814472 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.84209206 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374588864 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.56403621 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.384770692 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.358947264 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.363326057 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.360127504 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.61120361 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606556711 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362356018 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.36910469 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87904351 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.2444494 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.36415681 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355627133 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074783727 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360080399 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.637633512 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.364276555 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.360533366 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377686816 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.356510836 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358152251 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.357398686 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.365692487 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329207826 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828566192 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.358408305 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387550933 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363132624 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361876987 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.611032276 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.37342616 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.923504514 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.60683084 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363001543 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383955857 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.363364947 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357228979 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.351572228 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.358040012 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.358224977 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42663088 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.580586509 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.358095799 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.345869853 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390626909 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.567029927 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.358571472 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.358127042 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599710481 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.381392647 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.363420825 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08790151 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410429831 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.361722903 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365805063 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.358515284 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405874171 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446761519 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568114537 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.391775804 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.368720109 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.757567468 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382002227 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36637626 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.375434543 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456022276 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359925739 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.382253325 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.14054801 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.939342418 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082401717 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.93887352 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633629656 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.366320601 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370215375 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361129662 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523009082 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359382007 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635533612 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36136489 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.388373291 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383760974 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36009976 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37041942 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575903143 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638525284 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361011426 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367405605 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365593823 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.361694789 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.371167035 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.57068508 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834222458 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899473187 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364448826 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.367562252 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.074570859 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655632076 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36324165 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36084053 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361265842 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.362705043 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.368953011 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.369785591 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371751809 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509868781 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.612823098 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022582818 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.389919888 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.393969272 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.88351578 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363740341 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.634267601 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36439768 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.574316678 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.954585708 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.067288527 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627974109 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433747204 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.572271394 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.384018677 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524461143 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.375412208 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.362932825 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364925098 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362681138 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.363524696 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.372118575 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.943576981 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644920666 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.369351636 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.373589613 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393471128 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.372733264 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.585858427 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.059249551 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587838547 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.373122056 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.370512839 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.364334522 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943403128 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.63708958 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366794668 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.371838841 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.601286427 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.383328139 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390518367 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.884998992 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.36700407 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899152083 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.336961962 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386819379 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373628502 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.063119558 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944124562 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.384098188 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844581006 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368264495 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375384904 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645707171 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.371665089 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.374397498 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647829674 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.371245197 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.374270281 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584397704 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.955362443 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.142203781 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.385762418 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384882031 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.38492913 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366860103 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441790287 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367187081 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369206174 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.780078517 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.385778407 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36773232 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.381935869 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.38038792 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374617408 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.372001469 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368680835 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.376486393 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.357872132 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.357383789 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.393940756 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504662872 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922657639 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388167463 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.049320742 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.693342033 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.622101855 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.378639955 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.360586614 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.375019145 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370362503 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368520011 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368869153 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378587282 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906023576 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.377412326 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.382510652 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.374079624 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.369441565 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579853232 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.370554788 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.58192865 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395356454 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.38939375 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.357392536 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369068476 seconds)
  done (took 966.805064226 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.411683654 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.409524766 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.391702691 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.411718955 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.430995656 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.499129034 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.430926086 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.384758364 seconds)
  done (took 20.639668305 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.369524271 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.37446603 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.366034259 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.37495026 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.366364956 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.833090391 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.39518384 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.375167882 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.391138152 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.373502617 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.367018628 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.358532231 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.38021449 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.369515438 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.364416306 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.379434803 seconds)
  done (took 32.715997351 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.302232125 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.503013314 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.1954441 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.398075987 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.410278631 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.380860491 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.579848559 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.38390243 seconds)
  done (took 26.425814378 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.377444272 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.376127171 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.377041702 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.377905109 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.378568855 seconds)
  done (took 8.157982519 seconds)
done (took 1226.981289445 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.376596846 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.376791604 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.377234466 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.376651351 seconds)
  done (took 6.777920187 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.35931591 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.364700464 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.364663656 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.375886123 seconds)
  done (took 9.735696517 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.052156394 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.978999719 seconds)
  done (took 5.30204753 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.849818895 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.867671256 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.857177412 seconds)
  done (took 6.846367521 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.656630981 seconds)
  done (took 2.928218703 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.255718782 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.370255176 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.044544872 seconds)
  done (took 7.942264582 seconds)
done (took 40.802430684 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.368891844 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.617951103 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.526654007 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.367978918 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.530432663 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.526441499 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.102683902 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.376706048 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.378753871 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.374592218 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.368233822 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.530650134 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.088368857 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.61953478 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.087906824 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.620508382 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.531370091 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.379184352 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.375313609 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.375628738 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.103080338 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.37548113 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.369936677 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.39171437 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.5308984 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.516580724 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.375491041 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.6198297 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.370850119 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.382193626 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.516385998 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.370735058 seconds)
  done (took 82.344521709 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.370861551 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.371118671 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.378897215 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.382875672 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.370201073 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.393970706 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.374022957 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.371108097 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.379405398 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.372581078 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.378259772 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.372468211 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.374164772 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.372429146 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.38759683 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.371756375 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.387597264 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.374851661 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.372429478 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.387792463 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.373793409 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.375173479 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.372979522 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.382750508 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.374789167 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.374255363 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.389106116 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.373026608 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.373255586 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.372750893 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.37279774 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.403329188 seconds)
  done (took 77.358621859 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.378215066 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.372951101 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.391966001 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.373337665 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.388225616 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.389700686 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.373671791 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.380630735 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.385345588 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.381765321 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.374143622 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.389869808 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.394834347 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.377793988 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.375261605 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.378163353 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.384945156 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.384570332 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.374533942 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.373700614 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.392922694 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.375489859 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.378558908 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.38350115 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.385762622 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.376631914 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.374129452 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.375778047 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.392930021 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.393839175 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.377524136 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.375879125 seconds)
  done (took 77.484798277 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.657568844 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.383834136 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.387500702 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.379695291 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.388063266 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.38476989 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.379421978 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.662881396 seconds)
  done (took 14.902114179 seconds)
done (took 253.362287796 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.385288593 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.869973171 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.421620912 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.384341134 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.4049399 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.407091204 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.596900629 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.420692222 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.601183987 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.397530227 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.400224235 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.394974574 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.16795059 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.525951769 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.217492676 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.322813788 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.248213339 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.389815201 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.93699901 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.663366358 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.410500901 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.377490726 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.236494367 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.277369963 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.381315736 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.461094823 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.478736709 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.601571722 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.54189073 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.462167961 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.883746661 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.391573627 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.382086241 seconds)
  done (took 64.323839433 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.382911774 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.507607548 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.387255412 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.388198259 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.514861972 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.40772305 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.382907384 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.387282897 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.386923973 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.388408217 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.38812917 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.389212364 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.390292645 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.440000428 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.51897384 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.401593645 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.384867998 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.507845316 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.384697285 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.382717572 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.436523235 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.388605747 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.390593901 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.440018507 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.38963414 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.388900695 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.511938876 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.410219464 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.391377321 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.508498698 seconds)
  done (took 43.859178844 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.38917081 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.965079842 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.123503434 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.396822467 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.387158366 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.391081158 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.666917581 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.395585568 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.389765068 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.390594469 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.877639522 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.412359018 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.420733042 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.147663059 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.389296578 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.391576506 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.390823898 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.38752452 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.973635518 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.398811355 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.686730397 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.396215087 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.667465404 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.402933147 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.409993534 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.388410597 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.393422074 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.212880824 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.411324628 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.878780115 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.174161336 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.66822965 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.163628566 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.162574935 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.157322538 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.398368918 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.393007578 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.882989222 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.412106494 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.388632885 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.667791467 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.39415931 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.135741054 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.080834211 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.412115373 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.393317653 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.23739758 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.903514896 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.646176908 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.401151284 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.15574809 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.396314978 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.394517551 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.391901207 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.627038678 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.398051629 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.390325254 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.251593484 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.419801975 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.671106824 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.399541875 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.390667216 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.972592506 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.395967548 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.968481941 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.397154277 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.399285948 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.410185681 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.136320689 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.399050737 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.098565038 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.410281543 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.394652561 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.880134398 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.990401979 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.296505334 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.393486228 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.976854852 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.194982752 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.690932858 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.399398708 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.198288596 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.698043063 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.399466251 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.39813631 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.396588236 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.397008151 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.472644613 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.669031696 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.033332254 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.092414651 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.274985044 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.699743562 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.405913086 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.394646315 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.256011598 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.421948234 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.396574996 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.132191922 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.10061229 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.412720695 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.400385121 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.105355901 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.416665842 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.676272348 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.403297001 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.146132596 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.399656466 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.474118008 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.397790969 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.401411484 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.417339994 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.675304574 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.401334882 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.397976128 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.08243862 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.915226561 seconds)
  done (took 195.147992817 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.387828674 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.40339991 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.387678071 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.403525411 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.38864126 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.395839925 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.389232592 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.389127766 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.394059848 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.388787109 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.388868796 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.397364783 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.39599386 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.391206136 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.38939989 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.390233217 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.388894435 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.394528952 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.389649726 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.388885123 seconds)
  done (took 45.13254423 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.400888875 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.949879068 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.931409865 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.403435081 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.39890302 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.396026606 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.449566906 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.415968268 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.400191295 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.688246294 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.564802884 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.417364434 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.40131884 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.401253673 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.913660174 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.395793878 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.693738984 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.956126473 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.404712629 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.952491239 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.396791736 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.401507219 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.395622394 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.943140274 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.710450491 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.676243818 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.45726952 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.967328509 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.420019963 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.401750667 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.951302296 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.405535004 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.398176225 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.950530805 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.420452259 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.414243318 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.401219141 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.453951127 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.47033736 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.711259701 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.041019491 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.703379841 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.418244793 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.571669164 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.403091278 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.392200586 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.958943737 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.422587748 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.392225021 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.403970959 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.406609781 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.922758366 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.420657913 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.923492509 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.423909102 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.401872473 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.954187035 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.92913747 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.938994234 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.572141083 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.413656728 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.677515757 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.40702161 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.960996116 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.423889603 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.403203217 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.40282417 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.569697692 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.973154317 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.682621935 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.703761254 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.702627154 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.409638304 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.462721162 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.42047429 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.771795237 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.466844085 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.794238037 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.701673212 seconds)
  done (took 127.126442593 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.667378754 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.514853501 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.801755861 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.018208971 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.403572593 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.536501843 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.513588714 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.654659584 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.404922176 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.493898949 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.02702661 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.513786935 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.199262243 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.486590255 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.517821492 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.542286899 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.805887639 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.397848077 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.118782637 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.023654452 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.408162018 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.520977453 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.969537479 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.610466545 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.414234853 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.015357639 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.370540423 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.061892414 seconds)
  done (took 54.30990297 seconds)
done (took 531.178149159 seconds)
SAVING RESULT...
DONE!
