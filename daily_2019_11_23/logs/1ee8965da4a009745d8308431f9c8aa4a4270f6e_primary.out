cset: moving following pidspec: 28445
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.423316089 seconds)
loading group "string"... done (took 0.581113146 seconds)
loading group "linalg"... done (took 7.315133255 seconds)
loading group "parallel"... done (took 0.157577824 seconds)
loading group "find"... done (took 1.174614885 seconds)
loading group "tuple"... done (took 1.849014501 seconds)
loading group "dates"... done (took 1.274664683 seconds)
loading group "micro"... done (took 0.298913969 seconds)
loading group "io"... done (took 0.956181779 seconds)
loading group "scalar"... done (took 39.364374685 seconds)
loading group "sparse"... done (took 12.559578475 seconds)
loading group "broadcast"... done (took 1.002301545 seconds)
loading group "union"... done (took 13.072068961 seconds)
loading group "simd"... done (took 4.863199905 seconds)
loading group "random"... done (took 9.940024995 seconds)
loading group "problem"... done (took 1.861037848 seconds)
loading group "array"... done (took 22.904584779 seconds)
loading group "misc"... done (took 1.793437851 seconds)
loading group "sort"... done (took 3.432173728 seconds)
loading group "collection"... done (took 18.389783333 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.52223544 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129016393 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.121209472 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123429703 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.150869639 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112678993 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123827053 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086853281 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.78535456 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.153222805 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.121611572 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.440968226 seconds)
done (took 5.19100473 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174469371 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083052226 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084533431 seconds)
  done (took 1.297921631 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066834866 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.123260846 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066070041 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068727741 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068733838 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068243641 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06775236 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068476885 seconds)
  done (took 1.664414134 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.079061499 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071505157 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069757743 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070309149 seconds)
  done (took 1.422964413 seconds)
done (took 5.767749079 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.801697693 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.204390485 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187894473 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.4138242 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.134180851 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.162564717 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.638353127 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.336747921 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.190129884 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080250562 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105220977 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.329138478 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.10898352 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.631566019 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077105495 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.092093226 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139705421 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.410880727 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067643254 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081748829 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088833061 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127605606 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088170243 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07666864 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146721383 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.06749927 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.137321369 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080452362 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066447284 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.213646741 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17245216 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.661556301 seconds)
  done (took 10.298009951 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097067078 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098442792 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06918483 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123271276 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096929467 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.06970029 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071423089 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067435329 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087132659 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128330238 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089458239 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102122439 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065490717 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068785449 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084516283 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203612836 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080497494 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081359131 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070509424 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074932119 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108010858 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078138093 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077563474 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077352886 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129106144 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.178697162 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095573167 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097372888 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068272832 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082885962 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117022451 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128567031 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06729806 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068062373 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128287218 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096434637 seconds)
  done (took 4.595360822 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.010625699 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.148339947 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093372599 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.139745588 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066591359 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.114020067 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067395679 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083710612 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.21760954 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.460148048 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.11531406 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.590697934 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110615051 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104287636 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067858988 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068410214 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066681672 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.501416489 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.096073306 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10782305 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081750645 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071075567 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069610267 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.354297604 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068090517 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064146392 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068570714 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.05778778 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126404532 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068651069 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.947580347 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126712911 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065892559 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100139096 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.167116623 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090406523 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.281269233 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070602716 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066371158 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.158223441 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071629357 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066524816 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087566609 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10610663 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116029513 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066840668 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069410822 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.166261366 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066977046 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081016395 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.647765899 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154983789 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079427444 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066265894 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.259995208 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.087584454 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069195866 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064291368 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.182572612 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137880876 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06696227 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069921634 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067897728 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07034113 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071693306 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.392639206 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066025189 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.881417034 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070604253 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079639803 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07148201 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069261821 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075853907 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072756575 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087270054 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066211553 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075129093 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065756024 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065928666 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066598324 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083551715 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.375445101 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067200241 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068062577 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064736306 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089149265 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096836321 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066570112 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065287957 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10215466 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064046991 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067906221 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065854283 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106651611 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06654764 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083654718 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063901278 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.06883023 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.1131202 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.166312415 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.090693552 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067549235 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099642795 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070250212 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098763743 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080222282 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072340414 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.418783677 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064576423 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064793091 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068318388 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065001038 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066911375 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066495865 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079611137 seconds)
  done (took 21.264612463 seconds)
done (took 38.301475248 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.247431042 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078011329 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078211723 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.080520729 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074090999 seconds)
  done (took 1.781851045 seconds)
done (took 2.986665285 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126244543 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103282802 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066641647 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099847367 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065806997 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.1051883 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103376003 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084266756 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103483736 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065995394 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100539705 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066171468 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065856374 seconds)
  done (took 2.379050637 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084487831 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086602019 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071378579 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086108219 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064561001 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085991774 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083956904 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.092282798 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08364669 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075214498 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065797801 seconds)
  done (took 2.078292387 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084382285 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086963009 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071300857 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088977602 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065534748 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084527483 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084516986 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089070498 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084484875 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076349183 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065425239 seconds)
  done (took 2.075117746 seconds)
done (took 7.722480293 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079900061 seconds)
  done (took 1.26391107 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.611261138 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.180139622 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081181509 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.113463594 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.195550959 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.122945987 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.281715693 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.089915722 seconds)
  done (took 9.056637043 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.091171874 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084287974 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.074095357 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074852299 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070570024 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073188049 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071240199 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071549248 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071671813 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072340031 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070132619 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073181413 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074073799 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07352358 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070843858 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070723351 seconds)
  done (took 2.451504493 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094679394 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094550626 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075394551 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075917606 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071702775 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07325498 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074818051 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073274509 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070678521 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073846459 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076813856 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075335679 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073464485 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06670244 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075656487 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07728804 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072446973 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07560825 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076996909 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076885367 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076639909 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065870137 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072932235 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075826341 seconds)
  done (took 3.120043666 seconds)
done (took 17.081055931 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114937594 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07221243 seconds)
  done (took 1.381177982 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081456806 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085870662 seconds)
  done (took 1.373103742 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084461917 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066562993 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093544888 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078231994 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066211657 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065663066 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089022788 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065909658 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065373982 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065748668 seconds)
  done (took 1.944329793 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070199636 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079705247 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072063148 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.083530372 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075889895 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06536262 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075289203 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069794954 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080647143 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063958202 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073056658 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084818336 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073583886 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086090122 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072119471 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068672171 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070910264 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066881961 seconds)
  done (took 2.538907693 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066727298 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067470128 seconds)
  done (took 1.338429069 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067444985 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064233623 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068391564 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068817636 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064903488 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064063096 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064788645 seconds)
  done (took 1.662894075 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.39451451 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.114851303 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.319167886 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072227092 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.084072286 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.260250056 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065640389 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070536496 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070898243 seconds)
  done (took 2.699885459 seconds)
done (took 14.147320257 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080141062 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085301718 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097322693 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.380554086 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09117817 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065458758 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11319025 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.1940692 seconds)
done (took 2.323604192 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.216085995 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.633863562 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.415871893 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212199094 seconds)
  done (took 2.47251473 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.342870299 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089739929 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060281998 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069409003 seconds)
  done (took 1.78358753 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066223081 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070606161 seconds)
  done (took 1.357678242 seconds)
done (took 7.052253876 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066417293 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08834053 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067453154 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065157031 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067559493 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064768267 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064913321 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064992091 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067224501 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067914771 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.070364861 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.067499821 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067838895 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065284323 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065322391 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.06522504 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067875611 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065292721 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065460129 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065172382 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067981082 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065359525 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065137068 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067774069 seconds)
  done (took 2.873516592 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084773674 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067549421 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073606146 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073764875 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072015698 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073474081 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073108066 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067429882 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.073866292 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069963461 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071418617 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071683083 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070251525 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07169288 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070505598 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071895325 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073387655 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068253369 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07019875 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071726355 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073066081 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068000005 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071301216 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072681818 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071328834 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073275412 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070512118 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067748777 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073096462 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071313095 seconds)
  done (took 3.382835366 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070436761 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064133259 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065424107 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073049267 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065411712 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065881463 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064941706 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065747933 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066375248 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065056501 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066144821 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064868529 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065249582 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066308532 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066751952 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069382408 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081675909 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06565826 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065540932 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066041108 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068206139 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064000812 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063791699 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064006392 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064302113 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063584233 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063349689 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063114346 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063895217 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063507774 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066236054 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066483357 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06291659 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069979401 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066625883 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062942379 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067632786 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063033703 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065161825 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06442588 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064265476 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064757815 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065349966 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072256709 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065349418 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066320797 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064720648 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06589459 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065462363 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067680718 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.181004542 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063137359 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066029317 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066170335 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069546109 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064454992 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065797547 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064145665 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065684276 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064731812 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064423974 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064426473 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067521133 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064998433 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080129521 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071727796 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064622592 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066589162 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065429246 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067488868 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066354284 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078646722 seconds)
  done (took 6.128794656 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090868695 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087191128 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065499102 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065223462 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06144025 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064923513 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071321955 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065815134 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067613036 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083705493 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065562315 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067295738 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066559964 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069142891 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06557947 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066705973 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07437217 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063175613 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065614291 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069029009 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065999582 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071589763 seconds)
  done (took 2.774727327 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.157094152 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070282333 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105471028 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075227584 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07003117 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074999281 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069449599 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069425327 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070243488 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069018063 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068055632 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071534801 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071587137 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069089683 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069635979 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069554012 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071283612 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068782689 seconds)
  done (took 2.622092589 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076944966 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066077608 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087102941 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065794163 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066337568 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067938787 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070832928 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074587848 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069670816 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067448822 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075770135 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070059216 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069870121 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067700274 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069488265 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067314838 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069649724 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067267052 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075154322 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071590102 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071680316 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075553069 seconds)
  done (took 2.79660709 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080028736 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068063783 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082597892 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070266909 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063424936 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065580876 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071803102 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067523522 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071493458 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06890205 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067033285 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065135577 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070035095 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066922299 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070143793 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066893007 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069470905 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067050478 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069064885 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062783127 seconds)
  done (took 2.61895558 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085789413 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068882985 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069098279 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077272546 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068184433 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068974227 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07692716 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068274706 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06824856 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090002378 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069002133 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068598637 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076871889 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074013612 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068944922 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076597903 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077022416 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076595256 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068728925 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069393484 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089495582 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068557451 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076617323 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068394248 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067592887 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067693854 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067858068 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073109377 seconds)
  done (took 3.283002541 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065776036 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065970881 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062899229 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063889087 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063390911 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063261666 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063570995 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063567894 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066007571 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062953379 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06610942 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065907099 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065329226 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065373142 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065375688 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065520838 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065684858 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063163638 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063296441 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063171333 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065548668 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06544387 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06562297 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063165634 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063394239 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065941634 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063126138 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062916047 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065487749 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062909765 seconds)
  done (took 3.178377381 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075357364 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073232772 seconds)
  done (took 1.389112029 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062594896 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080522045 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063064373 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069587004 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069815368 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066074818 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073138016 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06927832 seconds)
  done (took 1.791010625 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08174029 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077763053 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066906479 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080280646 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075936564 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084286802 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.136994731 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068804588 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074566457 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065556879 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081979515 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067053236 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074094557 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068725487 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073702027 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074541283 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065444301 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.074306547 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070127321 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066435904 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068555758 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077019241 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070141943 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063182456 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069041521 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091169985 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07918262 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067111949 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07053948 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075189584 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073556153 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061408671 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067439559 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068615583 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065455624 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077394042 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083297318 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070495261 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07659959 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068613668 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078969851 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062150957 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072833902 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07403185 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076903207 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066340221 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067489588 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062482847 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065490381 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.07018317 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062872966 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070963071 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062742855 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07503206 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071213087 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078614536 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066624375 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069376971 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069978793 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070080812 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074635802 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070252314 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070413036 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068013973 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077709806 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072835891 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07758251 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062838305 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061929977 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065549125 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078102048 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091680979 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073668435 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068948184 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069236317 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065474587 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071160126 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068759072 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074567248 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074313841 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067756449 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073925352 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075312743 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068121833 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070017252 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076133469 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065951264 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.07052915 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065807941 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084603726 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066526838 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065468382 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065601174 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078576645 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071449452 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067607494 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066401952 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07577195 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062066657 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068586838 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069015153 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068504319 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077615068 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069394995 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069879169 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07340653 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074142201 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067561323 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069898248 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063681583 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067699 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06600122 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074108235 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060850583 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069585938 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067208153 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067194865 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.07596398 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065047564 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06686872 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.200643144 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073182568 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064346082 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063746303 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069624223 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066714095 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069823733 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074650774 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065152017 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061078416 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060970187 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069155171 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066034853 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069825525 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071566315 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071324601 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062417758 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065925782 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073817543 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077580659 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068581284 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069160215 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074926671 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069520826 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067921936 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075811577 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071388887 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067490283 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074877737 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069239895 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063405918 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071951533 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070418813 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066359318 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071546104 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06928714 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.07049315 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069157887 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066719559 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076171362 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06895373 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06547877 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066192405 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065277098 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077036034 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067695751 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060863857 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063336369 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075878539 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064047476 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066274287 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065110723 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068820498 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066806473 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064524803 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065700919 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068300676 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076097192 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070293975 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067061487 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071274395 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076889068 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065460055 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067894116 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065579849 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067088669 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06653318 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075059705 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071757442 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071485868 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068799391 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062323974 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071310575 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073263324 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065031613 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063811519 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064751943 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070056354 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071952724 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070393375 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067079319 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06566632 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068579968 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071449763 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070730864 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06781247 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066835665 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074917208 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065937339 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074906232 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068969153 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07823637 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071102736 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062569709 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071137342 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065763461 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074295785 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063057438 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06543294 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067072278 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069140316 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066991609 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071246556 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06188994 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074908869 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075321605 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068611121 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067292438 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067765853 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074031896 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.0680752 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070500317 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069996552 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072732841 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077200657 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06638964 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070145507 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.077497173 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06643115 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061401987 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072742648 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065320713 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065527967 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065783601 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065101902 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.199610914 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077883569 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07513779 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063081548 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071015519 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066976333 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067605033 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064232837 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073378455 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071955517 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.070039738 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075678477 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069184011 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068957562 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072026136 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068387095 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069617853 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069583836 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071667935 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069275404 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070422318 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068282729 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071511438 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067732222 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066228624 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070430217 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069081947 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068211574 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074259288 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068195351 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068162877 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069889467 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067200296 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066746129 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066804676 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066948597 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069011915 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067027149 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066364271 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068652048 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061420375 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073512058 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066000426 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073886264 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067448227 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062965101 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073868804 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068900026 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072071698 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066668449 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066988081 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067911185 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065241575 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068645479 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073452919 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064092653 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077442692 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074128338 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066893251 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069191211 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068375371 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069773876 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068124186 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06915047 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068513248 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06824282 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067879764 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073049908 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070901241 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06862573 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069921044 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069030018 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06886831 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069667713 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06303344 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067621569 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067539308 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068061731 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078446001 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069061458 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067772015 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067048168 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069301219 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067015862 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064820129 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076637256 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076927326 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067879263 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074427071 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066810069 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069692388 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078688486 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.06194149 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066296909 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065420244 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065807781 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075384571 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068212316 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077767491 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06826878 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067190683 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064884658 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06868039 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06659775 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062073369 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065524542 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072188614 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06703215 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067044796 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068273447 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.07111719 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069337382 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077293627 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066128099 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067594374 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06682767 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064129224 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065765341 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065620394 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069312532 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067585157 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064491672 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063745973 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066388246 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067579325 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067972554 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069311636 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067993055 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.206026051 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067515777 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069226011 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069614091 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060898096 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069589339 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06602298 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065484371 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065865366 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069900906 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070303054 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067426495 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075385806 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066485303 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067986783 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066880457 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065281975 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066256867 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066021157 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066459561 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065136334 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068275917 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074969923 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063977157 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069895564 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067037498 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.0666079 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072612977 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067425745 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069863096 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073450527 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066380035 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.06941971 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075084587 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07030681 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071252708 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067676857 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068527357 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073032709 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065058811 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072955629 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066564665 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067227284 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068021778 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064832261 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066837497 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066421565 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065677692 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072356142 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067790514 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066342848 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066049754 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064183398 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067549092 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068882124 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074077811 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068985304 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069303037 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062615217 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063105781 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067566763 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066126636 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069651949 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070613508 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073801318 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070060293 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068302329 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066676157 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077703797 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073894006 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071929095 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06605584 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072104211 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068642236 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069858917 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068892438 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068049649 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069351526 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071644693 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069208353 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067263334 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075434161 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071120348 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068925633 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069496246 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069028967 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06808769 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062776497 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068370912 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069293076 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07125573 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070033079 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068552721 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079174831 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066034257 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068403049 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070922633 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067468615 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071397578 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062466416 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068935986 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068984745 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068908473 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06291373 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067404742 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066476286 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070215556 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066660575 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062416969 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077403813 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075632467 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071456938 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066515738 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065868 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062275592 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062395193 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066558803 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067952276 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068664739 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076231576 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064217799 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.063726171 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059729533 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064928577 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067531325 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067782489 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062189772 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059521385 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064105716 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.201785192 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072981674 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065075269 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068442108 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071829559 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069203723 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064052507 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069566259 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06260963 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07058091 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079154701 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066767118 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067708456 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073346938 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074504422 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067221877 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061538111 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066840717 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069646842 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067287858 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067202878 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068240542 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081207183 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069119451 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065705595 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065193884 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068691156 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06562931 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075103705 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067380402 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067455201 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070905205 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068509421 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075761465 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069732196 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073802939 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069345209 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069913363 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06540329 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06654304 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065294792 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065477879 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067389836 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067064025 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071844637 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074996342 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065812283 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077039918 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076073252 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068601781 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062800142 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065370055 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066127761 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062529836 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068190441 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064317387 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064853971 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065318658 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065360869 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068104439 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071872424 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067826548 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066149349 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065808347 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060335342 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068901413 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068261243 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066866345 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062841749 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06539735 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066386945 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070870591 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069380087 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063717078 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067249349 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06850969 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067063393 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06103122 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073183556 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064706267 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067830174 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065290993 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065869402 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066616097 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069224533 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070804979 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066986922 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068189155 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069633287 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068228072 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063813471 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063276028 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073391943 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065606979 seconds)
  done (took 43.044236775 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100171839 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062679249 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061848718 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061819636 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07372934 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062604617 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061178096 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062246274 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062637707 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064366238 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061336795 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061353173 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069821686 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07708054 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073029425 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065970907 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06133052 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062534745 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061184065 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062724939 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070486701 seconds)
  done (took 2.732272462 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07300373 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.07771406 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075516905 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082440088 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071030888 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070573248 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075061994 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069877081 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078272302 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072141008 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078540854 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069883643 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071807483 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07233508 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072123727 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070014128 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07951311 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070644523 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070471683 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074819612 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071227662 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074905369 seconds)
  done (took 2.93425934 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066783898 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064603771 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067111042 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060922917 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064940561 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061900013 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068969519 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063695205 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.077003413 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064667367 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064638652 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064539727 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066899611 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060486711 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065329841 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063448237 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107246946 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068333646 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065177431 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065771962 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061325873 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068101127 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061565002 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062598086 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065963157 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07055035 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066946176 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063807197 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065304891 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064418748 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065646568 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063075528 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066478342 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065576492 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06424416 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064373945 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064556446 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065040235 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060678187 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063206166 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065535961 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061111148 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065424199 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066240225 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063536528 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063602532 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067493139 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065070201 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060497251 seconds)
  done (took 4.539390277 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079093418 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113074322 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06936268 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091039426 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084654284 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074576955 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071162829 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091699284 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064557777 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065506267 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081070359 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079213725 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065109629 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070059808 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072325696 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064898537 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066094623 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063758512 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068817477 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064307543 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071000285 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.074056654 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081469358 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080194807 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070897762 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06560504 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066460308 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071566193 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079206101 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071241941 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070075926 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071748233 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081913772 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072547128 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066279966 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069264484 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083387118 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067284682 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069464779 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064466901 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069166875 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071283215 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073773754 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083812156 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067068153 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072484986 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067246181 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06383154 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079330997 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067901307 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072804901 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079461516 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069915744 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067057525 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071327368 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.082383045 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067049195 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065509474 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070145804 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079543176 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064679583 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070801432 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081035388 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068940197 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074169193 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.081071323 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072944783 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070797484 seconds)
  done (took 6.445792435 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07534139 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094075925 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083978296 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083591347 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074784622 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075372557 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074830172 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074792871 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074901887 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079668231 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075287436 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115283968 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070947626 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077633068 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074690318 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074938023 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.0752361 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075062779 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074827544 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074868441 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074780181 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082079739 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074585196 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082950953 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078743788 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070007699 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074397129 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074958321 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082403437 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075057166 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07937046 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075272485 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07515449 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.084335487 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080958455 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.076182959 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066244313 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076569449 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07664057 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.077050267 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.072363642 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08481279 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076854789 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.072365131 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076679575 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076679251 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08404243 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080826779 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079775398 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079740855 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07652523 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084669948 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076476052 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077268141 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.084707173 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.088215056 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08442508 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.084344319 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076972041 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.084549731 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084537714 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088187566 seconds)
  done (took 6.231589835 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08508748 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074532067 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08335056 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062811814 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06602604 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073899678 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065524273 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065758447 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076333781 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075593248 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077798982 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073231013 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07546292 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0773104 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072278981 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075424435 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073492062 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073737201 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076245304 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073748578 seconds)
  done (took 2.815902433 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075673599 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.085470136 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06943845 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074330502 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070483876 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073408483 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069691089 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070573549 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068253332 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070960179 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07837364 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078449704 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068686996 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072953684 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077695002 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07320368 seconds)
  done (took 2.510019469 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085481416 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074992245 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081385687 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.068075599 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068382749 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064030732 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.0675471 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062681689 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06339647 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079986403 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.067149293 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.077815583 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066948929 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065828446 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063593805 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.072904631 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063622035 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064667605 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066728196 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079870309 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071516059 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066112334 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070219309 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067327147 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070234385 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072065677 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066201964 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067352117 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.0647306 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067449637 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070455443 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070664267 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064367644 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064842124 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066262549 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064800893 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067107955 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067242894 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072069925 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066825751 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06530551 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06910985 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06705861 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067774385 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063212607 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067683698 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06346237 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069993802 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065297847 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069984095 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06711024 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069806372 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067740349 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074382532 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070411892 seconds)
  done (took 5.116638071 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079203713 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068470363 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062448419 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06548598 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.071048582 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068777041 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070253397 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067070335 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06669455 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063489353 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06717863 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068580633 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067038717 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06931445 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066839241 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069006571 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061307389 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067114573 seconds)
  done (took 2.567248236 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071323918 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066781769 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.075203011 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067995783 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067321563 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069634353 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063705524 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066200663 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066168735 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067182963 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067087014 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069557023 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065439747 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068220363 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065417675 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066674818 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068913685 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064148114 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065306334 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062135306 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069673537 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066197246 seconds)
  done (took 2.817773034 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094856 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084603307 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.144033301 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.08116124 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086384502 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073025832 seconds)
  done (took 1.908541683 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092396931 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101959031 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06807112 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070847762 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078209793 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071356064 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071373402 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071824424 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080686983 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077937152 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07183622 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080931422 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080734503 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079918325 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077797475 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078111984 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071800487 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071512211 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067697603 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086398369 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071791275 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080569029 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072010643 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071686142 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072096238 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079727616 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080516201 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078190517 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071278672 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080209672 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077548984 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07173208 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080105691 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077555857 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070512694 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080263177 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07199076 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085627334 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077798404 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07932245 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070533003 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078087156 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080114999 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076310498 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080174772 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071984513 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076614464 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071723332 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07165062 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087237323 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077288488 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079615302 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080352769 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080799783 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080162153 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087533933 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077744708 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079214396 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077685182 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077376637 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079519478 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077584038 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07919664 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077759139 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077803375 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079637256 seconds)
  done (took 6.456743977 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104158126 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067391981 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070210889 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07626212 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077320865 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069850603 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069867022 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069477127 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070104145 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066679719 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107841131 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070262547 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077788966 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077336101 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069897608 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069808379 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070672164 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078304559 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066655959 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08823228 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07091924 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078100941 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078480129 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078889122 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075643369 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07534458 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069796242 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069791865 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06956884 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069403985 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074615529 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069897771 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077543882 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066193821 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07721815 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070549135 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06999681 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075319882 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07158148 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077897105 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079782036 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085724768 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071888322 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071346721 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077663412 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072057015 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071868222 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068382386 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072511059 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068268917 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07752495 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07774506 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077704341 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079284424 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072145093 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07183124 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071842587 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071933559 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072009041 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077586952 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079595588 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071632848 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088214166 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071607175 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072212106 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080293774 seconds)
  done (took 6.296473536 seconds)
done (took 130.474409133 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.190600938 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165392146 seconds)
  done (took 1.695679727 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068554811 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.101243907 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.079683715 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132323547 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066338794 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100308904 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099343358 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077653414 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06619207 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066124382 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065871814 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068107917 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130687394 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066811344 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066158356 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068505174 seconds)
  done (took 2.676398695 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099858674 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.164834927 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104807106 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067534649 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102618781 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074530115 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065195472 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075506888 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070409393 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064899001 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072399045 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07045539 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065427212 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070553704 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070736876 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072391879 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064503269 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072178815 seconds)
  done (took 2.803009719 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101337649 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090530472 seconds)
  done (took 1.546543734 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159271662 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104495447 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.144851981 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.352273667 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166070819 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.127183297 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127746646 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127851113 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116521366 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123130436 seconds)
  done (took 2.90082372 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098859712 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.156159742 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.265757207 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116083167 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072482783 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094130416 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117943797 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078377711 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080157955 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080243846 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079841204 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076222632 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.09948614 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07366143 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073587617 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075974309 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103556033 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072647483 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074360695 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076276965 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100535325 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065611837 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073666608 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073160204 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077334723 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077563004 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065481771 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064853123 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07612727 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074374658 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078241363 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09596477 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07859169 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106542143 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.071364865 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109340519 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077275098 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073534742 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073944472 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075746518 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081086782 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081146025 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073675979 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078738721 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067322381 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078446374 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067242886 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067028963 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079987705 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068574737 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080469283 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081092807 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.109410503 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068708334 seconds)
  done (took 6.013788937 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103518722 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106323229 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071346895 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113701506 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10272682 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07292444 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102922073 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095886137 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104433494 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06974027 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068168794 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069795795 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082252642 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08288809 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.11485707 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106524971 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072982751 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071064766 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106888334 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105350242 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068692714 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096792791 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09070408 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10339894 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066772986 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069964904 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067157169 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.06989168 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076634442 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078442647 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069617509 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080266533 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084326021 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078023879 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066597274 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067404031 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068618837 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081659318 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079227435 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078499789 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077280215 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067291901 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067530158 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069028514 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069575339 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067951769 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078477131 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080532423 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078195385 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068941268 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070156924 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068156821 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06925177 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080494119 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07781394 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081398061 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080174069 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068176782 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068286431 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072071231 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080869922 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080156672 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080315812 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07046473 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080928637 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070541709 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083775263 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088131211 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070423185 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072164222 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070731008 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072060455 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071883029 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080078141 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.080990354 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071671681 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071854128 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070493314 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082457964 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080641692 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069662445 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078753315 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066814169 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067807745 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06999435 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069723058 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077313101 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079895627 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069386584 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068161539 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069052731 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068125647 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066970304 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07667098 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080380083 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078834202 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077145541 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068159431 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077681611 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077527712 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068671995 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078106805 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067091296 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068905058 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067976256 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076522182 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.206467487 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083177289 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070232861 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071085493 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.081984833 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082795654 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070057621 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080898471 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082494046 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07997435 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069080571 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081271307 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069973419 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080211762 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070185163 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080679027 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069291647 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080287278 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069158872 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068568384 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068842362 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079468225 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073787231 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069031656 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069717132 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069453713 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080779428 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082883074 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070103887 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078113945 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078913546 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070872802 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080064906 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069054826 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078859657 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069729222 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070462957 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06693292 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081771501 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06853499 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06801429 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06960417 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080728024 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069346166 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080431991 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078491464 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068210059 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081989139 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081031763 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07759882 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080731454 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069966433 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068944291 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067979946 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06951304 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077912239 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079864433 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070074799 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068303086 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078798397 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079525611 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06732778 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078534184 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078559177 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07904189 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068283198 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069585947 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081098397 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080644996 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078062651 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078082468 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078318036 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06781819 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077477494 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077610327 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067633831 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084860722 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067841548 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082880408 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079200446 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078006009 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079347644 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080571437 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.07999901 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080345997 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083220878 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067769671 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068061285 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079409932 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067833163 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069211152 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078179522 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069400904 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069138143 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083541253 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068765929 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.080810084 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068517917 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078493804 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065859439 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069066189 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082348505 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067065832 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068177719 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077805917 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068126007 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075679155 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078324686 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.209910817 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071432089 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072354456 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082803251 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.082209557 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070472298 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07070264 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072281636 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.081748314 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079739704 seconds)
  done (took 18.729436408 seconds)
done (took 37.729303795 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.21967912 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.158647506 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183430502 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119602214 seconds)
  done (took 2.140703566 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.118465813 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105471299 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.097054106 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067837144 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102898813 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067529796 seconds)
  done (took 1.946885085 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313760242 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212067571 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.189731259 seconds)
  done (took 2.105432564 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.209425075 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.196539286 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.426501987 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.265646602 seconds)
  done (took 2.609553221 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.15029276 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.092797074 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.070249552 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087121868 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.138953383 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.166212363 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.104294496 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.127409391 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079329566 seconds)
  done (took 2.46895316 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.151010549 seconds)
done (took 12.816755247 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.104610581 seconds)
    (2/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.196941734 seconds)
    (3/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.10018841 seconds)
    (4/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.214966319 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.171963885 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.074851272 seconds)
    (7/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.200636081 seconds)
    (8/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.240155259 seconds)
    (9/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.24773114 seconds)
    (10/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.079245786 seconds)
    (11/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.113049957 seconds)
    (12/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.237805866 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.085471458 seconds)
    (14/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.208500979 seconds)
    (15/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073401293 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079331044 seconds)
    (17/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.20813086 seconds)
    (18/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.203155176 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.118193446 seconds)
    (20/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.242550858 seconds)
    (21/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.136023079 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074932857 seconds)
    (23/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.196078387 seconds)
    (24/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069682045 seconds)
    (25/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.201103582 seconds)
    (26/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.082126057 seconds)
    (27/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.083604639 seconds)
    (28/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.077866297 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.097295362 seconds)
    (30/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.05172787 seconds)
    (31/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050415377 seconds)
    (32/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.08681009 seconds)
    (33/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.171968027 seconds)
    (34/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.163339044 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.109888347 seconds)
    (36/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069830189 seconds)
    (37/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.07318663 seconds)
    (38/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078478224 seconds)
    (39/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067519637 seconds)
    (40/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.159823891 seconds)
    (41/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082098009 seconds)
    (42/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.159841585 seconds)
    (43/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063083809 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071294134 seconds)
    (45/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.143222536 seconds)
    (46/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075658801 seconds)
    (47/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.153596295 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.090386749 seconds)
    (49/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076477138 seconds)
    (50/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.069421516 seconds)
    (51/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.108676794 seconds)
    (52/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.21771776 seconds)
    (53/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052574391 seconds)
    (54/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067663975 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073285512 seconds)
    (56/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.07215074 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.07247459 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.101095827 seconds)
    (59/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.18033919 seconds)
    (60/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.191882358 seconds)
    (61/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.15593664 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.090277571 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.110719933 seconds)
    (64/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.098989715 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066786254 seconds)
    (66/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077025409 seconds)
    (67/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071416825 seconds)
    (68/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091458699 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.107592632 seconds)
    (70/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080245314 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064222146 seconds)
    (72/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07271013 seconds)
    (73/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073628759 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.123433678 seconds)
    (75/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075799185 seconds)
    (76/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145018809 seconds)
    (77/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.144242163 seconds)
    (78/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074762867 seconds)
    (79/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.068145172 seconds)
    (80/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.102465117 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.134418058 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.116630099 seconds)
    (83/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.139315776 seconds)
    (84/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.185864694 seconds)
    (85/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.206354378 seconds)
    (86/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.070536072 seconds)
    (87/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.121748371 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.067792357 seconds)
    (89/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.155540072 seconds)
    (90/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.120584501 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.135239579 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.112082133 seconds)
    (93/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076562213 seconds)
    (94/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.05259163 seconds)
    (95/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.079657823 seconds)
    (96/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.053541899 seconds)
    (97/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.195435572 seconds)
    (98/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.186525389 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.099934224 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.179922416 seconds)
    (101/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067057318 seconds)
    (102/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.184835055 seconds)
    (103/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.077376884 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.09315563 seconds)
    (105/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083401918 seconds)
    (106/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.101370619 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.093771153 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.06597244 seconds)
    (109/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.195947978 seconds)
    (110/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.064179173 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.092920381 seconds)
    (112/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051946266 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073377351 seconds)
    (114/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070649724 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087934425 seconds)
    (116/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.1132298 seconds)
    (117/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073604004 seconds)
    (118/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.06282159 seconds)
    (119/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072845836 seconds)
    (120/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052244192 seconds)
    (121/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066229345 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.139669958 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065568772 seconds)
    (124/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.070157379 seconds)
    (125/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.091458168 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.137566755 seconds)
    (127/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.183447296 seconds)
    (128/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050125818 seconds)
    (129/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.171306862 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 0.137390988 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073518509 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066041828 seconds)
    (133/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060615672 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072258007 seconds)
    (135/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076446692 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.088773922 seconds)
    (137/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068221272 seconds)
    (138/309) benchmarking ("sort", Float32, false)...
    done (took 0.13222405 seconds)
    (139/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.098867895 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070924906 seconds)
    (141/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071494968 seconds)
    (142/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051148372 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071747046 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.09238046 seconds)
    (145/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065618356 seconds)
    (146/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05083976 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066032668 seconds)
    (148/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050517595 seconds)
    (149/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.155158169 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071842218 seconds)
    (151/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.073098214 seconds)
    (152/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.06607165 seconds)
    (153/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.153609637 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064964567 seconds)
    (155/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072442426 seconds)
    (156/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075173077 seconds)
    (157/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050821344 seconds)
    (158/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083456981 seconds)
    (159/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.051659362 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065386678 seconds)
    (161/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072951416 seconds)
    (162/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073019645 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065084054 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087528849 seconds)
    (165/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.100520419 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073277768 seconds)
    (167/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050015184 seconds)
    (168/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.38231977 seconds)
    (169/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052650433 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092851276 seconds)
    (171/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.161211162 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088902825 seconds)
    (173/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051465309 seconds)
    (174/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.053470095 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138514386 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065286843 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065456513 seconds)
    (178/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083157301 seconds)
    (179/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071756218 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064918496 seconds)
    (181/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.052823311 seconds)
    (182/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.099994015 seconds)
    (183/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076088924 seconds)
    (184/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050137969 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.104964126 seconds)
    (186/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.185290218 seconds)
    (187/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072023139 seconds)
    (188/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064222451 seconds)
    (189/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.099901573 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072047082 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089859798 seconds)
    (192/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071862048 seconds)
    (193/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.05334052 seconds)
    (194/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.157475131 seconds)
    (195/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.062070758 seconds)
    (196/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.062523127 seconds)
    (197/309) benchmarking ("sort", BigInt, false)...
    done (took 0.192478037 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075307663 seconds)
    (199/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051665379 seconds)
    (200/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.337730834 seconds)
    (201/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07566427 seconds)
    (202/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066881234 seconds)
    (203/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.08052045 seconds)
    (204/309) benchmarking ("sort", Int8, false)...
    done (took 0.143266322 seconds)
    (205/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087137638 seconds)
    (206/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074542245 seconds)
    (207/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089108059 seconds)
    (208/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.099381052 seconds)
    (209/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051216273 seconds)
    (210/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066857073 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064143917 seconds)
    (212/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.050811634 seconds)
    (213/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073474696 seconds)
    (214/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.110334622 seconds)
    (215/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072948084 seconds)
    (216/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080759618 seconds)
    (217/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074373416 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.114783079 seconds)
    (219/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050538355 seconds)
    (220/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062190585 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065612884 seconds)
    (222/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067740103 seconds)
    (223/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068111179 seconds)
    (224/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.078519484 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092325316 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087842974 seconds)
    (227/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.06464852 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073026776 seconds)
    (229/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074514245 seconds)
    (230/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051520143 seconds)
    (231/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050881332 seconds)
    (232/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052504363 seconds)
    (233/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.07035087 seconds)
    (234/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.155966826 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070851013 seconds)
    (236/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064419666 seconds)
    (237/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.052839465 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063953567 seconds)
    (239/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072517498 seconds)
    (240/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061297872 seconds)
    (241/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072849856 seconds)
    (242/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052461952 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136540481 seconds)
    (244/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050808734 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067184718 seconds)
    (246/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050643991 seconds)
    (247/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051015188 seconds)
    (248/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.04980557 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.08922489 seconds)
    (250/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088198884 seconds)
    (251/309) benchmarking ("sort", Float64, false)...
    done (took 0.131232753 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065426911 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066076202 seconds)
    (254/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06423811 seconds)
    (255/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064807791 seconds)
    (256/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072067161 seconds)
    (257/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051908374 seconds)
    (258/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067733029 seconds)
    (259/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050375105 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065287459 seconds)
    (261/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050888563 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090533985 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090661931 seconds)
    (264/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.052163192 seconds)
    (265/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050608013 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065012155 seconds)
    (267/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.195484984 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071440424 seconds)
    (269/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066678358 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073494754 seconds)
    (271/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.110120706 seconds)
    (272/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061219384 seconds)
    (273/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064837872 seconds)
    (274/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050739196 seconds)
    (275/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073113211 seconds)
    (276/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.140109696 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092605782 seconds)
    (278/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066906686 seconds)
    (279/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052183152 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.108932952 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.139916194 seconds)
    (282/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072504772 seconds)
    (283/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.05303847 seconds)
    (284/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079016503 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073305479 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.145283401 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066181419 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066108205 seconds)
    (289/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074541329 seconds)
    (290/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052549515 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075036138 seconds)
    (292/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070218663 seconds)
    (293/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.185597335 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073898029 seconds)
    (295/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062421007 seconds)
    (296/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052884287 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067092079 seconds)
    (298/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.066116568 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.091506662 seconds)
    (300/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.064023426 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093581524 seconds)
    (302/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068482074 seconds)
    (303/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.052921207 seconds)
    (304/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071302629 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072704786 seconds)
    (306/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072140931 seconds)
    (307/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.053001128 seconds)
    (308/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.053292596 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090830798 seconds)
  done (took 31.201291855 seconds)
done (took 32.610160436 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087922681 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095920621 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07447328 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095637345 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083574979 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077951044 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073872623 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079583919 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08225229 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082479867 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081257121 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056562501 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076541375 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076619589 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076538967 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094847054 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080852299 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074483509 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073153337 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064270145 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072610029 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066525739 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069222104 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055894535 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080694285 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073966437 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074367442 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073563263 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064831649 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065479829 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068961866 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073028924 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064572572 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078262835 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072015432 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072831541 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074990494 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076554463 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067672946 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065196563 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074417356 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065125918 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072674605 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073783058 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071695022 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071875188 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072537666 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077426148 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090817114 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067886972 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07430345 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075603942 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075606322 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072893289 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.06912294 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073008937 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070422733 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091342978 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073083084 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06724569 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073525349 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074300245 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071253857 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072180343 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072649037 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074776951 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075454426 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07154654 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074257865 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071410212 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064729324 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072680226 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068558917 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064876387 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075690914 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07625439 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063967037 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07136075 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072174041 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070601383 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064221688 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069993433 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068798507 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073768308 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069672752 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055509783 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.0714482 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073890428 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066653982 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075237124 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074002489 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074425294 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068764136 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077416205 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065400227 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070616108 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064896686 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065389085 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067721184 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071456705 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066819275 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07044629 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075604162 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066094865 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072780789 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078624049 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064876929 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072493424 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063953566 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064359309 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079663524 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074100499 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065158932 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067439637 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063951288 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07301123 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06458805 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066265327 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066407554 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067471236 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072987913 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066814064 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068299744 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072670167 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077089111 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063941191 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067461441 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065581724 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064362816 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069711493 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064000956 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063660519 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065750162 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06027582 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066396475 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063941615 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071149739 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.205343901 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075220146 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.0675466 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074362592 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070799553 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071431925 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071565683 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06444756 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059318807 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067853603 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067292241 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066577955 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065721416 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067494453 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06553482 seconds)
done (took 12.499990498 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068321734 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144513757 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099936618 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096009487 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085968733 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066030116 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075718993 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101034493 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067135463 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101452984 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087350792 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084789677 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112105804 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063939323 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06524039 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069443912 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067120077 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081416065 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101265896 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086056946 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.11580415 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065490169 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09434349 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.0887349 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087289664 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101246281 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069934019 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.06982135 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069063301 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090349723 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086511931 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06981194 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066015288 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.096609694 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.0926281 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083452158 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065547309 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081876242 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066088914 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065432005 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067237802 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098140145 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078919529 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079274794 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.07008836 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069207822 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066400497 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082674297 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088181162 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077780626 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.08607678 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102449058 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068316297 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.06524924 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063802891 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084776328 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064878433 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068766079 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065361459 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06790252 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065470067 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068205264 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080024655 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081149667 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068803208 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079343247 seconds)
  done (took 6.758865223 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086735742 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091192797 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083452125 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083916774 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065084143 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065701831 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065862934 seconds)
  done (took 2.026709227 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06936691 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089379639 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089726528 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088944988 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084867169 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088172514 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075276874 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066053762 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080322574 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066911238 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086907243 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101753728 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066807701 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072618735 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090465091 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066037588 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090244809 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065999211 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06970979 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090108151 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067781416 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082194372 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069314918 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066698854 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083350758 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068574604 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11764536 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073071586 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070148934 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071945574 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066579371 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.111449517 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081768091 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076108231 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065992285 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081039277 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082187276 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065153616 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08426538 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073020026 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079789693 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066375271 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067112529 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06399259 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070471191 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076191928 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06827974 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066475354 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068811828 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086182217 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067077893 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079812418 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.06931639 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068640902 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067497185 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069822824 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075995958 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066565272 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086544248 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067436894 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084192629 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085439357 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082445779 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08595063 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071501616 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083519824 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08277602 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070028058 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069654409 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070223645 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082692168 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064713479 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069447708 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079293912 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070565624 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092790312 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093697913 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070154654 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.078616655 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068919823 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068530086 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068658778 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092851241 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071494022 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068354184 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073238144 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071553253 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066898547 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067251265 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072295172 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066359836 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069952784 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071173056 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071981913 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071028131 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086650994 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070635484 seconds)
  done (took 8.855315969 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071539381 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069798725 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070211705 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067768462 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068099929 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067888411 seconds)
  done (took 1.923082034 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095785401 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068851605 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080411614 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072079262 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105150264 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086696786 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08699681 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07881651 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08342305 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078638621 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086912304 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088148046 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093379748 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072783962 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086609196 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071998241 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086879437 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075546275 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07827365 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0728348 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086385639 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072518153 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.0729032 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081383545 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076565653 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071721524 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066627764 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.0785947 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078420372 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077927782 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072027372 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075952923 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069950179 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077706384 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086973446 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070344317 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071469528 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07770883 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072091304 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075750906 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087750864 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07303381 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074606259 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077759972 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078000873 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070254957 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077572877 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076160905 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086922167 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076865154 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077153861 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071313615 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075578393 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076907957 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070234331 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077232384 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076867772 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086427791 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07200675 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070343252 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069126085 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075794271 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077505375 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07542291 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.07832503 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077216731 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070740911 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072677562 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072551673 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071479495 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077232238 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06866062 seconds)
  done (took 7.064069341 seconds)
done (took 28.099322511 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.534838829 seconds)
  done (took 2.002815264 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.619664326 seconds)
  done (took 2.116262047 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.577181386 seconds)
  done (took 8.082453603 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.405859228 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.497456804 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.726645819 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133343458 seconds)
  done (took 3.300876609 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.700064704 seconds)
  done (took 2.209021583 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.218095115 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.201694407 seconds)
  done (took 1.93931504 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377765379 seconds)
  done (took 1.884524421 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.136665019 seconds)
  done (took 2.645737664 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.261382136 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175477661 seconds)
  done (took 1.951000712 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.495455433 seconds)
  done (took 2.005448301 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.901971275 seconds)
  done (took 6.412682327 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.216161721 seconds)
  done (took 1.761016512 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.244777289 seconds)
  done (took 1.742362078 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.7181801 seconds)
  done (took 3.22638986 seconds)
done (took 42.78269476 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083540485 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.0841448 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.082285626 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079149506 seconds)
  done (took 1.810581602 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080688234 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075268302 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.07807788 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075293016 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.080573937 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076499955 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.077395907 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080082887 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.075370957 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.076315527 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075421737 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.075616338 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078422025 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.077883637 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07426977 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078157604 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.079090078 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076117153 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077606913 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072760389 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070616012 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075347401 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075204436 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071617716 seconds)
  done (took 3.335924357 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081638601 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074674479 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076020579 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071677305 seconds)
  done (took 1.810619677 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081121977 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.097502218 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090352242 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078143712 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092281891 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087145933 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069779021 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069427518 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070719936 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077658099 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06820675 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097183611 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088667767 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077735115 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079947474 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066392846 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067990209 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087721245 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078625675 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078466938 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070204764 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077583013 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068063746 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088951528 seconds)
  done (took 3.41164192 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080921739 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10648581 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078117063 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089223998 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09095854 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065082851 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074428608 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09156075 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127161 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065672382 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071229542 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065863933 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072752132 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065386855 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076559209 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107539953 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110912837 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068126318 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097106664 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065763807 seconds)
  done (took 3.183677705 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076032044 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072382862 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066746723 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069362631 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078044661 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07225808 seconds)
  done (took 1.951047801 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070974067 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070579074 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068537604 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066623694 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072178837 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067819272 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065840067 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067023009 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067245031 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067661146 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068550689 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066623627 seconds)
  done (took 2.331063185 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.208752836 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069177672 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068657559 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06660588 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070175402 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065974031 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082499005 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070164851 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.095190094 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069205708 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069235704 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071058451 seconds)
  done (took 2.519573767 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212819895 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078476628 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246635749 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1440151 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111989998 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119885922 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107580944 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118200058 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.147725468 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105437629 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174113616 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172940858 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109928747 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139616123 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089427514 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100726179 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156137817 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16530606 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108471227 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168206791 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147265705 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126556519 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149501808 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102246092 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112020215 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126383458 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074242033 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083722182 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176757097 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13832688 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148405929 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112622265 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093719732 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180102488 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176138536 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143518199 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139478852 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084666172 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.107578384 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.13565946 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202089883 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088217898 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161983188 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108789032 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.223952779 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14011556 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123409358 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.125022192 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.109607129 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09080655 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14780499 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18817266 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.13985474 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090087197 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118478509 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118994473 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.12082063 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107930701 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189741281 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168616843 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132129803 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.074127255 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102406589 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155735288 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135131477 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110263565 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127890542 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09369094 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137703423 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15769622 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121360646 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15092261 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.133933838 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089358979 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120723631 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141656075 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12950343 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162840886 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12555363 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072907585 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126129004 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103573528 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080923565 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.148902813 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077209216 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178018924 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099488613 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10967254 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115447209 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109505193 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109238587 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16102252 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148594204 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10650535 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064790134 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249359384 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.124619377 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149882422 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088497294 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110224564 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119979885 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07828832 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140115509 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07604082 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12460898 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078162663 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130029711 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131650681 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078193404 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125090853 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105134021 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102791474 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134688539 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162234218 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089853859 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082511603 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171839561 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123867347 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104858563 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146127713 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15848548 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102182198 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102692536 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1518573 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181884405 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089970067 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165610246 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108059222 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083964347 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088026464 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124861698 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112765477 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124781354 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082014511 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119530296 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170790582 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075194176 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096447224 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135390445 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080974718 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084135302 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109546879 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105527208 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095967267 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101846696 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105261635 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137932364 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124202626 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107789588 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12857343 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099541096 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.320933695 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089550937 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102645592 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106481078 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071011659 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138423961 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159737603 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080442809 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169042374 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.129392757 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111093987 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124818703 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088327339 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145821769 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083011715 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07371099 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151603604 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116011755 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114294594 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.156937818 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107773812 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128637943 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.122414768 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139138425 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137286172 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.136044411 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110115506 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092960404 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116987424 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131668427 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076555399 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.095657457 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083391464 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109650861 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101126234 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086652465 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147948052 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128704761 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105549196 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117023764 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100636092 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154698062 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079835368 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133857209 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.124681108 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099563313 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.156103087 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15414641 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134552606 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102309155 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140338016 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073077442 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07673915 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.092695857 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126888121 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084247606 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082395848 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.263648878 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152171065 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131992633 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139049656 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114152257 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121550868 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15849693 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070385302 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.11812401 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149567181 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123057779 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104347723 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091469796 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100456967 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146180386 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10986265 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183456227 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118132648 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127449255 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156554234 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101498942 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080047646 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103559739 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139226397 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109372198 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1508337 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104257287 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092607361 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114048585 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077155706 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10331781 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131983267 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122416605 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137426794 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.119144519 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133820645 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077893926 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118865889 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122552762 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1237058 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064128626 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121279402 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163797541 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097738034 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122017251 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155878914 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079460294 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.12880809 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179784865 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14484079 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.232369412 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114945947 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125569629 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135183978 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127285447 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146538076 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112934771 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143051649 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115172638 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.090316259 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093186685 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102701906 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109455128 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.099375604 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.113256334 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.120173581 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.100229544 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138280779 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109002181 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114960572 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123385991 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.102317935 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095326848 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100985979 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182922113 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121754766 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177591314 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.104071235 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.151577403 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169660537 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077915893 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082467178 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081978631 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145042542 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087832305 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133774312 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.10111188 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110679439 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129731994 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149276268 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099860131 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070697655 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113643919 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139472133 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118414973 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102899546 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.108828336 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165641636 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101631743 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079370811 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113829778 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106916572 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107542764 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175297848 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061325677 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099558724 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079355459 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084488548 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129169026 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14784151 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.078655991 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101899754 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11771004 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11027316 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125928284 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098794697 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098582839 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114132785 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146097098 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125144495 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087800916 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109611909 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144340176 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147706601 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100933857 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.092990862 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163449082 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146980363 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.151329444 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.084347931 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113363887 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109662127 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104548073 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130892822 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080831497 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154364878 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078626887 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12841843 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098708034 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084626656 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121801208 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.095670431 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084455336 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139081289 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112428397 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080089662 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074292793 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111647328 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114920087 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101281157 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.072525046 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130330893 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071062076 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125108259 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150172454 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07778776 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10328305 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092507012 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075434261 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101293495 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098142491 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084232356 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.335663992 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190415787 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.091517609 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155855721 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137181258 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116110627 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13911352 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108734945 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.647832845 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.084269096 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163401776 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124477971 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183920433 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107309608 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126957443 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117125774 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131030971 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151412386 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110183398 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.191402195 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138648736 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.122397837 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083032291 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104529233 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107942195 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.092969587 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112781691 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119890864 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121965136 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.098881339 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.121957075 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131241988 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086865176 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100805037 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164167088 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122784935 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150604703 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146724639 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090393162 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126173403 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144949821 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084072927 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.127807887 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159952406 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110450023 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102835311 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084236825 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.10642195 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166144107 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07680001 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166543174 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273021887 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111409812 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115746003 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115051309 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132679611 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108223637 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122479891 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094736541 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.112981796 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117644387 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08592893 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.080940322 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110556369 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116941423 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.10271274 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102570222 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.102258245 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159431988 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.075965042 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103873984 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108927368 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150485203 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180883805 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.09287384 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086770452 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12412952 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1141766 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11448864 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122766712 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079387939 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082402713 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081873044 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.078117312 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109808117 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114081782 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105518403 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111751422 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165311758 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083737753 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.232002845 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096140641 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105797291 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070410267 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078569258 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096583762 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100991389 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108523176 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102932275 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164497381 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.098891618 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.091954258 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093613376 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074695807 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083467244 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129939426 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111019831 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120716389 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100048151 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063060024 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112545324 seconds)
  done (took 59.880670482 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.113622634 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083550218 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098446799 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145154053 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.124647851 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204167287 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.153632634 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188876212 seconds)
  done (took 2.782646615 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071489736 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095800308 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105266246 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083370779 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06780431 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068935438 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.233716398 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083510528 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066643267 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.090168183 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081477914 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.07059344 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.43750194 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068605045 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.072290531 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.06361346 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067534867 seconds)
  done (took 3.47060079 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.391076073 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.61360365 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.383363341 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07395236 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.458784999 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092427738 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.144504781 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.131829517 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073396849 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536924185 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.702700926 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.127123022 seconds)
  done (took 18.371804538 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077965112 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072046127 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.087093728 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087244414 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.076737884 seconds)
  done (took 2.048406735 seconds)
done (took 108.461191361 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08364904 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.398007833 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055646989 seconds)
  done (took 2.12771575 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086903702 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088465545 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089460202 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086486798 seconds)
  done (took 2.017898965 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075067408 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078714852 seconds)
  done (took 1.812961456 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.236089854 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.170474162 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090938626 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087007914 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081937938 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081769882 seconds)
  done (took 1.901708458 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076156395 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077575787 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073350275 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077519557 seconds)
  done (took 1.950101759 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081012284 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054517885 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057204236 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.060180494 seconds)
  done (took 1.902104786 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090500901 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.082624837 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082887663 seconds)
  done (took 1.90554795 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107408648 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.089982008 seconds)
  done (took 1.846506727 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085984892 seconds)
  done (took 1.730783776 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.10321127 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.108802974 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.137628821 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.117007237 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14704118 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.115248824 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08896749 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08978461 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.080202317 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090946797 seconds)
  done (took 2.725523187 seconds)
done (took 22.149276864 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079029394 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.369613987 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361646486 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092256686 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670543797 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357025541 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.994268311 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09386677 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115855904 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068176811 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085159851 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.666002487 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.980977277 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323315938 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.969542432 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319780073 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.656333722 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068798119 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068254233 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067978322 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.97744522 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068196951 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067925666 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069038527 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648794085 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372782237 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068156904 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324442233 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067852341 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069543717 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355706842 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068559101 seconds)
  done (took 16.203237942 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073602426 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122437406 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073639916 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085575569 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073399373 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073232127 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074892441 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.07251254 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127919547 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070724864 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089791659 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070872031 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074578185 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072018996 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090655746 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07149656 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071355529 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071900891 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071552742 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071035285 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086844496 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068433828 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06928754 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07099587 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071452367 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083690663 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07158808 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071348581 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071702722 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073241251 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073777706 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07182601 seconds)
  done (took 4.14736457 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123219652 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.13379885 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077299097 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110074445 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119266297 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073671412 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.151470302 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098196627 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.135803562 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07134609 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.09007817 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070926739 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.107172853 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072511357 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092706686 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071436919 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071116059 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071608095 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070044801 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07096016 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090438584 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071381361 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07010456 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069316299 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071115364 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086776659 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070437822 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069281698 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068975533 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070765449 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072046777 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06914672 seconds)
  done (took 4.435900782 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076089379 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07904476 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087356526 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087704714 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.07259485 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075164273 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076817839 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.073185795 seconds)
  done (took 2.294934341 seconds)
done (took 28.734900839 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082699181 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072142812 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075879372 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085708709 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076749487 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082345072 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.07018153 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078401492 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075110222 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.077032522 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076782221 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069103339 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072124826 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06825667 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074665563 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070314296 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083099873 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.075405098 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082778591 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.083353199 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.07288269 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076598068 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078751035 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083231366 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083107636 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083672465 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081709447 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077332748 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072680457 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074754606 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.082258161 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.088311428 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072012228 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083347917 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071251989 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070987029 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075439095 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.07094201 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083318652 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.080764056 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073192319 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079832343 seconds)
  done (took 4.891504984 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.09156697 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096779224 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089494194 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064149661 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.071041164 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.068277192 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.093656088 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063456414 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062122767 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.092599913 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058145418 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063505179 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.067204553 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056631862 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.066709988 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059788739 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.065173626 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058388544 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.063036908 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.063141108 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.092995469 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056178513 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081643854 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.066697415 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058675284 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064378673 seconds)
  done (took 3.523918176 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07850892 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.089572768 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090915577 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130714188 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106254514 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079593695 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081288752 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096257024 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.089478219 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067628588 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071794408 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093847773 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092252859 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.077532757 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071723612 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.09114701 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.088501244 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072969871 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077921152 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100756088 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091665246 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.09024922 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.103396273 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08777575 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069979061 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073594852 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075644373 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086559294 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075449205 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082455101 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075287672 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074919658 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.073539857 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083833864 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074876454 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072699009 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.097439613 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08159311 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082868495 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071725817 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07492287 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071920203 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.095065284 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133945627 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068522775 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074557451 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076526103 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077398589 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067687469 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088612274 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079236464 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067195339 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070975498 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066965662 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067998017 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081391192 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070346562 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070164995 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077122916 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070863187 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.092546743 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07211907 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083530672 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067163228 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075785958 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066984987 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06865858 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066967201 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096305359 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069272301 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112097123 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071234106 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.07065623 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07824891 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075105277 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073375188 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068310069 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083001856 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077839162 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07406211 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07799737 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072456478 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070813651 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.091937344 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.072356864 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072004331 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071196361 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.076720735 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073162565 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071951031 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084055144 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069900604 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073086236 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088693194 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069873919 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.087310893 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076669621 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075146419 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069465953 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082491803 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074424477 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.07111006 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.08042149 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070273781 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073396014 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084004686 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076778131 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069019845 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.075096325 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07658142 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071000318 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071871269 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07343291 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.07240576 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.079188598 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077498568 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075340914 seconds)
  done (took 10.95827833 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.170995451 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.164801155 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073634334 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.154460239 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080684708 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083043247 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.157470401 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099909911 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.07103186 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071728693 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.07178739 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11596777 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.111480055 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.124193403 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083249852 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070975945 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.088297761 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.120786346 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.159250625 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.153125291 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.088830229 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080679107 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073139213 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072161584 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073641561 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082127514 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.091343525 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078524123 seconds)
  done (took 4.580623087 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084786634 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104305822 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077793852 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.095668026 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.095055501 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070891662 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073234947 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073071262 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.084957351 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081640369 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070515171 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076859126 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.078147786 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074380423 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072030618 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.078425686 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078700326 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072358792 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074840357 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07733512 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.081501408 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09602887 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075490738 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070748698 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075943494 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070672906 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066637556 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.087979183 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071731479 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.09830866 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067768923 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077651339 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083002557 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068994071 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069824805 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070515445 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070505811 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070670993 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072767646 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069075052 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069162083 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059874728 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069625066 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.082519113 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.077333409 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.058902457 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075805124 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075381016 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075820581 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066141817 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07063923 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070862978 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071188841 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075292066 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072901497 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072888019 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068952979 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.075324793 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076962184 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067663768 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065092588 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066228104 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.0724371 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.0655452 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076307817 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07270587 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066125589 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067910636 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069179066 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.076299525 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069999011 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073463615 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067605651 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072502586 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.075639281 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072154392 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071476361 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06885056 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069686298 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.07054702 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.057419559 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069544321 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053164807 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070861864 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065684799 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066197114 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067325603 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07246357 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.08038355 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069138551 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073717323 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068681131 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066646884 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070785936 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060169712 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071264549 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083682555 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08454984 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069087217 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06815811 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086139479 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075240524 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068012013 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056166305 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075980387 seconds)
  done (took 9.410354197 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093779623 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071854653 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088889846 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.096760836 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.091970426 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.078212808 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080890374 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072750886 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.087248597 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.077862919 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.081390784 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071412927 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08194049 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081075681 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.073608556 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081652045 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075942653 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08919818 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.086747901 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.07152661 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.079742243 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084690126 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.095105026 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086510979 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084686959 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086395567 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.09446231 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.075979174 seconds)
  done (took 4.037028485 seconds)
done (took 39.061954373 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.769635757 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.932919729 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.751553774 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.128336949 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.824054578 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.07272903 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.886510888 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.747722027 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.865480366 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.78590424 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.96423569 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.880283245 seconds)
done (took 65.292900692 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.829881769 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.89138777 seconds)
    (2/2) benchmarking "String"...
    done (took 2.020062205 seconds)
  done (took 5.599140578 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.040037613 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.729463391 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.998913077 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.751575565 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.752393958 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.08727707 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.554354457 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.275168083 seconds)
  done (took 30.841048659 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.867609388 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.972857955 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.433979238 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.467794617 seconds)
  done (took 15.479865694 seconds)
done (took 63.557607716 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.77252336 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.76985909 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.762429393 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.734747797 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.807671174 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.766280044 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.307938006 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.782924749 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.750267007 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.740992668 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.749977566 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.19323597 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.753008792 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.204829591 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.754971236 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.760654927 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.780626063 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.304668198 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.909391026 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.770973468 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.766005918 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.807214603 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.75172956 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.758202209 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.809823434 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.757191893 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.20358003 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.752550983 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.378057282 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.754953044 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.780421279 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.764732722 seconds)
  done (took 203.348192728 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.753020471 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.741493606 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.785342781 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.764788593 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.179547463 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.936734076 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.876646347 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.2206089 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.759120914 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.762740746 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.956619378 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.755097913 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.986970131 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.704783637 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.785086374 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.849411288 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.989181714 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.994406845 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.790735807 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.931469116 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.754592096 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.897982404 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.856025792 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.936387973 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.803509299 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.805857133 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.773735494 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.787928724 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.950791725 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.967654618 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.755179426 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.786780751 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.886300864 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.632168795 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.763458615 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.763432606 seconds)
  done (took 169.336355523 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.139621621 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.754619004 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.755534931 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.753851701 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.766284241 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.750549551 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.875447452 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.881563294 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.349209615 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.754820273 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.752163299 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.810276867 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.57871611 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.756954149 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.819916107 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.766282592 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.753679326 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.770262907 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.783937827 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.756150539 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.755407857 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.882839672 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.768408914 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.808754142 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.764762424 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.760189788 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.760520115 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.125478558 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.755091945 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.761574452 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.000763012 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.75522395 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.756588651 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.640339009 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.005127486 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 2.02890818 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.757434125 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.763972654 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.753598661 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.989187229 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.755160549 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.758685427 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.760715217 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.019696463 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.753866613 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.881238065 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.753873711 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.268348059 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.754650774 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.75890492 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.528334679 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.476888491 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.758819003 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.759371464 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.758307867 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.754647787 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.757381675 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.76221829 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.490229448 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.837514918 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.753580682 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.758199676 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.761630641 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.760978749 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.755211965 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.889881803 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.756961348 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.183855235 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.814741343 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.998596746 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.875662204 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.759758419 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.826748806 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.850278775 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.756639154 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.75881051 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.75858355 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.759400012 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.83933992 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.755661453 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 4.013409475 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.755626408 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.747429979 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.79588454 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.812933654 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.7413742 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.649154387 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.74319099 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.74443364 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.051903418 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.739238239 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.812369684 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.741540306 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.743318968 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.744621291 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.91615834 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.752977394 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.873394129 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.540789105 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.748578042 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.5178361 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.760511886 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.934962623 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.757208296 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.966846938 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.764895879 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.837254678 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.758927526 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.764735102 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.762054439 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.786872902 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.757529179 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.817143098 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.761843153 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.135378491 seconds)
  done (took 400.96886191 seconds)
done (took 777.53747279 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.437017847 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.384944705 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.495748474 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.409977535 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.385768395 seconds)
  done (took 13.810967243 seconds)
done (took 15.510385984 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.856519831 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.852702567 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.788251786 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.849792622 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.784436896 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.852735484 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.838193336 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.793093842 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.819386861 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.784910459 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.818747372 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.786628927 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.772776511 seconds)
  done (took 25.299745874 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.00266138 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.024393871 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.838807519 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.015202007 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.814193861 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.011104029 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.933688982 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.915153816 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.920973832 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.784908475 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.779069035 seconds)
  done (took 22.742912859 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.007042997 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.000169948 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.84671495 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.009864605 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.821213953 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.008740878 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.932957381 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.922999769 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.927849287 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.779635017 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.781108425 seconds)
  done (took 22.745948177 seconds)
done (took 72.492275486 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.772146159 seconds)
  done (took 3.473066934 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.797795397 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.954595226 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.784917089 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.776544293 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.772287974 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.773217023 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.777275324 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.775124603 seconds)
  done (took 16.112503615 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.777582486 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.775407558 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.778093016 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.776377855 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.773489416 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.775951126 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.772627996 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.77360668 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.776883764 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.777969239 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.773600253 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.776670246 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.77795644 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.778866738 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.774238112 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.770496601 seconds)
  done (took 30.112945382 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.775831571 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.772109837 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.77462341 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.773373447 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.773108274 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.771597665 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.773568753 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.76861109 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.771002363 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.77316399 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.774777939 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.773091792 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.772684501 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.769100589 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.778807473 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.776145203 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.77466714 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.777612727 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.781161166 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.777233138 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.77941974 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.774770942 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.775557146 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.776937863 seconds)
  done (took 44.300811792 seconds)
done (took 95.698277074 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.700016717 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.15743053 seconds)
  done (took 8.564258707 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.777718707 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.777276158 seconds)
  done (took 5.296534626 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.77729446 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.777478966 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.779012797 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.776106332 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.776059341 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.769958618 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.773399386 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.779945322 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.778724068 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.781635752 seconds)
  done (took 19.474344542 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.779716642 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.780490139 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.777641698 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.780230471 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.780815814 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.775549057 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.776170151 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.777341631 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.780158631 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.779192133 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.77583945 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.776759695 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.778277976 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.777191368 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.781694004 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.776904731 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.776583425 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.777953587 seconds)
  done (took 33.714630343 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.781331907 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.784326377 seconds)
  done (took 5.274144524 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.777874337 seconds)
    (2/7) benchmarking "second"...
    done (took 1.774827449 seconds)
    (3/7) benchmarking "month"...
    done (took 1.775597313 seconds)
    (4/7) benchmarking "year"...
    done (took 1.774117195 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.778571563 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.776955597 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.777308437 seconds)
  done (took 14.144316616 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.779226862 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.932254305 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.001690165 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.409776729 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.782484651 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.787352743 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.727466498 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.784473928 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.786396652 seconds)
  done (took 19.700240451 seconds)
done (took 107.866335824 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.626570861 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.776840394 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.134117959 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.823381299 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.826889322 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.069214254 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.807753658 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.08906403 seconds)
done (took 42.861352358 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.86525094 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.32177192 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.357981873 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.198600269 seconds)
  done (took 12.586931517 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.754546671 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.300589818 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.803156883 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.371764878 seconds)
  done (took 19.960143155 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.140399254 seconds)
    (2/2) benchmarking "read"...
    done (took 2.115107412 seconds)
  done (took 5.968010149 seconds)
done (took 47.090691738 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.777791158 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.776091544 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.778356366 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.774728096 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.777643673 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.776300166 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.77533408 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.774152576 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.7777789 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.7762618 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.778392911 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.776994831 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77864617 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.774099151 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774675533 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.774253393 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776677808 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.779575952 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.7756811 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.774766751 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.777831339 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.776155331 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.775560887 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.778138176 seconds)
  done (took 44.344445363 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.778710628 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.775735321 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.778426589 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.778485536 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.776436109 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.778748883 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.778666009 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.776421261 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.77965767 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.778526191 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.776687267 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.777004409 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.778371925 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.776922495 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.778282133 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.777256129 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.780021868 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777781066 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781730608 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.778426778 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.780953402 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778237784 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.776956524 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.783361239 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.779293322 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.779176239 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.779291266 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.778357405 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.780493537 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.777580727 seconds)
  done (took 55.064788352 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.785847514 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.78756599 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.779258508 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.781428629 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.779753658 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.780062252 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.781743899 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.780313678 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.780785835 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.779896663 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.780517089 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.780620916 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.781350187 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.781343187 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.780362469 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.781798111 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.781627098 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.781379422 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.780150869 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.780009477 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.780042168 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.780558218 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.78057852 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.780460345 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.783447557 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.781256921 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.781572558 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.781411417 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.782135912 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.78411483 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.781996106 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.780221369 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.780950801 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.781352858 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.780476629 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.78314253 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.787161585 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.794039221 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.781946919 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.783858291 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.782889859 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.781090263 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.782167656 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.781605189 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.783641311 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.784953435 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.783096155 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.78208922 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.78163427 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.781349615 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.784784554 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.783787613 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.782214948 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.783221547 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.781427688 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.782441773 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.781552255 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.783282845 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.783514311 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.782722 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.783118946 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.783391338 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.783928807 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.785030391 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.781777445 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.784408393 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.781270621 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.78525406 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.78346153 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.7835097 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.78190133 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.782739465 seconds)
  done (took 130.04122752 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.783788845 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.780315026 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.782153179 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.781840789 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.778919315 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.782004255 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.78117077 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.784641403 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.781468945 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.788089132 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785958871 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.780972616 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784017112 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.785777776 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.786418646 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.78444035 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.781518433 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.782302981 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.782768605 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.786148928 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.784982073 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.782460036 seconds)
  done (took 40.94663087 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.786317496 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.788151845 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.780379865 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.785550416 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.784462639 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.785598339 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.784381291 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.78590949 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.786974785 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.785899594 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.78263476 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785976551 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.781595975 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784484084 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.783819535 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.782440882 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.787046524 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.781889844 seconds)
  done (took 33.835147564 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.78240779 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.782815138 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.782245498 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.782760649 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.782331221 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.783902306 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.781620687 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.788951173 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.785208969 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.782552887 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.784204527 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.784822868 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.786566734 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.78475206 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785162244 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.782655871 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.786143432 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.780783622 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.784971327 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.78778199 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.781796237 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.791883011 seconds)
  done (took 40.970874536 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.783807374 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.787923628 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.784365458 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.778143525 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.786238705 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.786123513 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.784984139 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.783412575 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.786346006 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.790694132 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.784577847 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.786786571 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.784029195 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.782822732 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.783206611 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.784321971 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.785658556 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.78714526 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.786347177 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.784044205 seconds)
  done (took 37.413330655 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.781089824 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.78462961 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.784307699 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.78386928 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.781995414 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.784325139 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.781987743 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.784418199 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.784560947 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.782736186 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.784065442 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.785784578 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.782913939 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.783885281 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.785293195 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.784718437 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.789303071 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.785269072 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.781829285 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.78496641 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.787666837 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.785037338 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.785728008 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.786270039 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.785573326 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.786822588 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.784139051 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.793390182 seconds)
  done (took 51.696280103 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.772346338 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.773753434 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.771116469 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.77053982 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.774433623 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.769072883 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.769006211 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.771108783 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.772930495 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.768793217 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.778230685 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.773381557 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.773245071 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.772054239 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.774160199 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.776211038 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771107274 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.769605708 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.770255405 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768942477 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.771993003 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775328993 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.771320177 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.769759245 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.768961222 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.772783939 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.77062293 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.777412707 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.771774962 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.768864918 seconds)
  done (took 54.859041835 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.788822292 seconds)
    (2/2) benchmarking "in"...
    done (took 1.790392063 seconds)
  done (took 5.275000522 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.77009699 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.770464227 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.771195112 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.768085387 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.768856099 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.771146432 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.771093717 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.766856194 seconds)
  done (took 15.854213828 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.767999292 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.772209305 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.770532858 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.771748859 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.769794763 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.769657279 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.773685514 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.770908948 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.768493781 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.770007744 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.775871542 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.777654291 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.773339928 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.769265855 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.768358523 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.769639805 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.773207211 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.76880314 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.770517893 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.771900133 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.770184136 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.770066378 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.771232961 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.769083067 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.77075379 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.778899237 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.774371796 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.772498416 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.768792186 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.771800707 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.769575032 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.768588168 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.770520546 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.769603215 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.771146874 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.774700557 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.776930088 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.770203296 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.77480182 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.772433625 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.77732435 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.768542997 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.770042301 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.772380929 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.769835451 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.770211157 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.776764486 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.769825607 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.770489654 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.771061082 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.778241389 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.769234675 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.777026647 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.771286128 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.771671314 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.777037555 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.771701925 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.777114849 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.780356021 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.77924355 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.781261121 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.778676231 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.77056315 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.774737762 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.78299059 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.796605588 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.775524186 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.770839254 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.776345347 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.772832991 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.776657608 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.784676927 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.781626695 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.77102846 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.771299441 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.773490387 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.770774126 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.774891058 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.778307522 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.773448876 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.774737446 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.771885673 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.779493714 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.795771739 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.770522871 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.774323509 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.770693612 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.772217988 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.771680281 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.778466625 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.770875753 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.778631391 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.769758565 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.768997791 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.771196907 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.77037445 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.769608239 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.77316931 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.76711433 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.768886167 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.768750716 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.773382222 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.782369185 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.768608358 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.768805793 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.775070145 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.771861304 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.769561007 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.779361161 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.769925647 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.768351961 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.767155452 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.771990962 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.767398895 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.775165715 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.775158393 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.767824553 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.766947761 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.766613283 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.776833575 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.776091268 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.795804593 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.767992817 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.769547195 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.773350164 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.783145263 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.768456973 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.769182201 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.768201472 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.766842372 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.767831455 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.769553586 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.769428853 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.766761416 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.768267037 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.768332925 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.772215202 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.769115809 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.768389908 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.769355804 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.769437017 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.767225717 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.770404953 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.766364074 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.76776201 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.767410295 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.773238924 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.769424215 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.767329786 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.767707603 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.768838804 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.769605796 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.768300296 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.769771061 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.765675648 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.769084547 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.76749814 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.767223532 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.770331669 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.770463663 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.770240125 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.768408646 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.77233276 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.769395137 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.774591391 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.766278978 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.767417051 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.769644578 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.771169193 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.766228007 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.772534785 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.765890587 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.770101853 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.77502606 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.767964265 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.766318565 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.773770534 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.767175699 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.768072693 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.767127419 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.770880021 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.775921024 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.766966704 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.773142027 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.767401712 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.767011569 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.771098204 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.76813256 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.766680102 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.768822831 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.769988198 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.779014398 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.781287028 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.776144985 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.769100764 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.774251687 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.768456319 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.772743795 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.77156337 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.768218494 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.769664844 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.767152724 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.764953358 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.769009636 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.770299158 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.767826304 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.766550451 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.7698954 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.769881897 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.767466797 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.770579177 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.76977015 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.770877321 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.768708693 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.770742995 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.772922115 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.76845176 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.768649385 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.767438491 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.768581239 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.771084034 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.774480912 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.775782356 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.768165425 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.767884286 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.767893125 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.767670769 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.76737499 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.769408144 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.768770979 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.766772356 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.773342986 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.771428075 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.768064715 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.773947813 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.768007715 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.768290032 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.771409148 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.773477011 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.768034908 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.772481627 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.778875306 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.769266952 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.770376625 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.770137846 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.766742024 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.770714674 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.771810619 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.766465558 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.774554907 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.769514911 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.766584716 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.766835007 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.765111564 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.768206516 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.767544969 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.767189541 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.768253478 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.768192953 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.765816418 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.767006502 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.766519113 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.76515428 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.769491694 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.773952781 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.770309115 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.771030868 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.763319833 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.761617339 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.769828639 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.763957769 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.763300633 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.761443308 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.776727224 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.772621641 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.768549595 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.762733302 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.767649159 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.767752933 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.763164364 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.767922139 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.763242551 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.764300478 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.765829221 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.762282799 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.762003333 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.761804974 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.76525179 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.764886073 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.76586728 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.769721921 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.764870933 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.762003108 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.763212718 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.764696811 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.765652355 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.762105014 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.765733064 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.764330778 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.765954545 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.7640795 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.762515952 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.768659541 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.763502938 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.764096517 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.763756045 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.764213845 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.760690954 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.76429742 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.762074165 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.765351876 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.774133734 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.765817168 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.773547487 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.765286229 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.772080344 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.763752916 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.770983949 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.771888382 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.763529884 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.761758178 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.7619014 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.764237953 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.773768952 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.764525007 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.763753303 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.765531615 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.764409643 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.76729353 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.763279692 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.764236811 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.766481777 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.763052153 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.771321577 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.767111084 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.767332232 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.762896401 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.76438519 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.763678106 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.765037796 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.765069431 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.766228272 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.763339129 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.762772552 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.762228417 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.767265717 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.761899648 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.764652556 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.766397065 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.763846331 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.765774681 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.773932805 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.762616257 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.764963727 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.766009841 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.769552269 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.763245986 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.771025291 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.760945182 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.762115415 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.762815317 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.763493238 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.764892017 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.761418064 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.761312608 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.761678262 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.763168102 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.768172602 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.769812624 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.763762546 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.760415016 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.763273113 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.761489032 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.769923523 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.790614657 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.761892338 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.767245433 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.761828489 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.763681418 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.767452918 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.76163335 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.761866608 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.765804565 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.772865596 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.773398843 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.766403553 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.762340768 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.761265878 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.762134077 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.764146827 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.763511475 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.764512481 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.763340477 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.762048603 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.76145239 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.764996052 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.76488296 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.761367448 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.760895927 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.762774078 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.770631637 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.760616506 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.769054893 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.760691356 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.762436561 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.762228061 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.761620026 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.760341009 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.765041111 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.763517908 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.76331537 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.766266842 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.767458853 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.762832361 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.761242669 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.760836562 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.760651519 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.761054172 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.761251492 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.767751388 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.761463348 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.760350636 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.759965635 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.761472613 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.758639413 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.767183407 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.759769085 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.762324021 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.762665968 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.765458477 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.761374578 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.766948009 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.762020958 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.764777089 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.757836594 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.760085333 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.770834275 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.760034579 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.76790763 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.765263931 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.763165299 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.761446605 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.766507687 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.766626605 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.758725438 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.758940427 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.759485935 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.761653374 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.761830463 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.761892334 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.759860617 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.766902006 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.758688892 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.763353985 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.767150955 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.760975739 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.760989236 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.760930154 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.764075845 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.764415626 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.759309931 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.762698837 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.761048178 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.769060163 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.763676772 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.761253895 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.760228184 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.756298544 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.759556564 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.762072837 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.763285754 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.7592318 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.758388523 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.758141535 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.759190265 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.762724508 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.765730949 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.759652616 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.756709997 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.75915836 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.763548451 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.757446817 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.762874743 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.758292991 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.759034516 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.759045237 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.762668657 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.761175649 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.75918215 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.760266013 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.759528797 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.759055461 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.760696293 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.760114472 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.759154238 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.76184847 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.759638109 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.760931384 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.768193429 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.774517625 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.7599902 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.759804451 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.758500371 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.763278751 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.766024232 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.758633192 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.759716077 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.762690735 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.762392637 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.76003934 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.766783212 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.760247781 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.773519077 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.763521973 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.759791971 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.761287742 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.771202302 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.763461754 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.762880699 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.763028464 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.763527452 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.768051193 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.766477691 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.761760889 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.765082257 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.762301772 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.761989815 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.770573136 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.765000795 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.767389916 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.764449751 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.761551124 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.761392175 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.771439146 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.775978815 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.765064306 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.768202041 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.787526959 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.764926712 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.760550334 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.762187324 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.761520768 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.762779993 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.763615232 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.766807269 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.766410031 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.766672676 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.765226849 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.764987333 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.768010634 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.769506534 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.765588966 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.767306532 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.762200735 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.764367141 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.767967009 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.764212797 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.767374646 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.764809173 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.765419132 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.765195181 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.768734436 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.774976378 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.772956083 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.766836697 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.765068152 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.766356071 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.773220011 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.76721755 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.77278653 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.774268805 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.767229886 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.769289325 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.768385111 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.766973007 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.766357532 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.764823526 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.765776552 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.766294823 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.766694708 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.776381652 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.775487984 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.770442023 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.766440317 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.770983432 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.76891232 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.768102428 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.76594499 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.766150525 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.770878212 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.766240333 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.769816929 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.770500118 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.769415874 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.769046402 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.780844458 seconds)
  done (took 1055.239230873 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.76750771 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.767565981 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.767645571 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.767885289 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.769891839 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.76702314 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.768433493 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.768579815 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.768216185 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.770499557 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.76968455 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.76833918 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.767294012 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.770034148 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.769272201 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.775448693 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.767759041 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.766990746 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.769661273 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.768580654 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.768623445 seconds)
  done (took 38.843113928 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.771475613 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.770398639 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.769846196 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.773475839 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.772836628 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.773187349 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.768103895 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.770635803 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.770810732 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.76723461 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.773828997 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770910563 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.770595166 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.767154386 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769531355 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.771964662 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.773241985 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.769848935 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.771729927 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.771013418 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.772512751 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.773130551 seconds)
  done (took 40.665767054 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.771752785 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.770098936 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.772270041 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.769832279 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.778615557 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.769875679 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.771102112 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.773053631 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.773193493 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.771697414 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.772859531 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.771470236 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.775084821 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.776754286 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.771355728 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.779360723 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.916899117 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.770963346 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.772038239 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.772085433 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.769647611 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.775261605 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.77110156 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.770742321 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.769395892 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.772478476 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.778439439 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.770875129 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.77058918 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.773254043 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.775829254 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.77636449 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.773486172 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.773327191 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.770156588 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.770317671 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.777077911 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.772684845 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.776969781 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.773810386 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.780309915 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.791125868 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.772170427 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.782907237 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.774349644 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.774743709 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.774217058 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.780239765 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.772464295 seconds)
  done (took 88.766638969 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.77373634 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.773758969 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.771319801 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.772651268 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.774558392 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.776153485 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.774714689 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.775746788 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.771173517 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.770728227 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.776318958 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.770762361 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.770772238 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.776023371 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.776657516 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.770352643 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.779748564 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.770407268 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.771988735 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.771779043 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.774615199 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.77478399 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.77554997 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.771774653 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.774492493 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.772105318 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.77269393 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.779415252 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.773259603 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.772674108 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.776568573 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.77569188 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.776362345 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.776046113 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.775296325 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.777705879 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.777079747 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.775436694 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.778931898 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.773380264 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.775175891 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.776274399 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.774392657 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.77854118 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.779529852 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.772343947 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.774060078 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.771661294 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.772558794 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.77500395 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.776214149 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.774279007 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.776273741 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.775202513 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.775701378 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.781334195 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.772316688 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.773115839 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.775380512 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.774918529 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.77827308 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.780887752 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.775001066 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.778134267 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.776467907 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.775414401 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.774159205 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.780025198 seconds)
  done (took 122.402979676 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.773675835 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.773614715 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.775480425 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.776514922 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.776016933 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.774579122 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.774382501 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.775565484 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.774916275 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.780955643 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.773587811 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.777799005 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.775011873 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.777843289 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.774381907 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.778248898 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.773654463 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.772890765 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.777283141 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.775930693 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.780129459 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.774952274 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.776307854 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.774935397 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.774274329 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.777048311 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.778294194 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.775193442 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.773755964 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.774689902 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.777559389 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.776100669 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.775875792 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.77462676 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.776548018 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.775325786 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.775574642 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.778664394 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.776412124 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.774939452 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.773935026 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.775803729 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.774753857 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.778623123 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.775645559 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.776467913 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.774507276 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.775089448 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.783533119 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.774504381 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.776988525 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.777297619 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.775102458 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.776167106 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.777786978 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.778782266 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.77527918 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.776920781 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.775781791 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.77657917 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.776291836 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.775716391 seconds)
  done (took 111.822121189 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.775941243 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.778234678 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.776880337 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.775497913 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.77665639 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.775664156 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.777949624 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.7766648 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.785424458 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.776326918 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.780141942 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.775225516 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775688574 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.77925901 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.777762692 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.77820701 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.775366659 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.775954147 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.777491146 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.781338037 seconds)
  done (took 37.257112812 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.778508881 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.781697437 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.776279331 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.775623984 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.7831258 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.780330008 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.780209522 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.779003424 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.779038566 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.780999117 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.781285111 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.78183045 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778500054 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.77636597 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.780427321 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.78185908 seconds)
  done (took 30.180213556 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.778130659 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.781372206 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.777337509 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.775894676 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.779283901 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.777341644 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.780597524 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.778296637 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.779828609 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.786195741 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.77925183 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.782523403 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.780484482 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.779400474 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.781768991 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.786444621 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.778975519 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.787148314 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.783239656 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.783425924 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.787338371 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.783765666 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.790870331 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.789722969 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.786860075 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.7881233 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.787637218 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.785751335 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.786988624 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.787461285 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.784271192 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.782245464 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.781947376 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.782131978 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.782465634 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.781990841 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.783026793 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.790892165 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.784315934 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.783265643 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.782903593 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.785139968 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.789067339 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.79086585 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.787200393 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.785219651 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.783535412 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.781162075 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.787857156 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.791764292 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.789186098 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.785743127 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.790967102 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.790958095 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.793481388 seconds)
  done (took 99.849016179 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.792104119 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.791178568 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.787533936 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.79279051 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.790058974 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.788718566 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.788146111 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.785724287 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.790347055 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.793358192 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.790239213 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.789164709 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.787630179 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.788506451 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.788544235 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.791389539 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.790226545 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.788860727 seconds)
  done (took 33.937472992 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.787054903 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.788665942 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.788515941 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.784283974 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.785177174 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.786419912 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.785084462 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.788535444 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.786964095 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.784163113 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.783662173 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.78754837 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.787718155 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.789728785 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.786788784 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.785316878 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.787315364 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.788103076 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.78672894 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.786079372 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.788566713 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.788164419 seconds)
  done (took 41.030187326 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.785963222 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.787006427 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.799504988 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.799525606 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.803775626 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.811283505 seconds)
  done (took 12.505497326 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787300121 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.788590611 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.786085217 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786945595 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78776283 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789554035 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786049096 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786634233 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787961012 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786006265 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78549485 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790643876 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789421101 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787980066 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788991357 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789006955 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788464532 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78704 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.7862107 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789179963 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785836511 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789027808 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.790760581 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786922362 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787269833 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787262871 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789735961 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786904522 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789074049 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790612209 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790653423 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787395884 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791102015 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791181689 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790386488 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790513266 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787648093 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790008661 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791195212 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791921374 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.789764157 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79095354 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791632027 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788792348 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792858858 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788052623 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787498993 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.788314607 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788622932 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791313987 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792702104 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788461801 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790523964 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791216705 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792071406 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793512127 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791750812 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.788065041 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790766346 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789349654 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789529997 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790643388 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789218989 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78952072 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793319482 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790079711 seconds)
  done (took 119.810700613 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790620976 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.790095949 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789869939 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789543707 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789002887 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79034048 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790364232 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789624943 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789335777 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7902839 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792028972 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789461951 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790148376 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790460894 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.790016765 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791739615 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.791121991 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790327028 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790133923 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793204124 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790765063 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790647389 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791780045 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.790876331 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791010217 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79285226 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78986511 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790415493 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790557747 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79246867 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791170477 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790812893 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790775819 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.791328419 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791863357 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792461284 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792268562 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791960552 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792987216 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795144254 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791435682 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794236316 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792394559 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.790367622 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790558345 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790953987 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791676028 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79189175 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791173708 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792767553 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791795714 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792047418 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79264091 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791966924 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790646968 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791786509 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790880126 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790949775 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792383526 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794102388 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792274421 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.791085927 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794028352 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790789342 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790006248 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790986028 seconds)
  done (took 119.949463162 seconds)
done (took 2464.267277687 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.85247111 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.819927092 seconds)
  done (took 15.396140039 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.949931843 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.904600631 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.790154628 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.793795624 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.79429487 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.811799995 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.805843961 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.7901662 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.78926905 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.789394327 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.795842031 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.98099446 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.800956224 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.790901458 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.793791903 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.887838023 seconds)
  done (took 50.996632836 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.796563472 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.79790748 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.802895349 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.795984035 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.794707033 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.80633791 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.827242162 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.797054833 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.823944617 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.805135348 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.864388549 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.801142524 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.79316169 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.839445278 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.808110668 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.812375709 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.887078517 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.866259448 seconds)
  done (took 34.444064687 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.871316074 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.791622355 seconds)
  done (took 10.388145718 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.791999107 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.816151561 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.819259632 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.807813514 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.793444636 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.798726741 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.816696393 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.81213868 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.811679133 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.82030353 seconds)
  done (took 69.814762126 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.80035601 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.796834085 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.794321835 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.795070465 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.790288175 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.790164336 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.790861411 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.787362013 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.461380069 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.827655934 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.798690415 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.80462533 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.798116098 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.794453853 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.800467319 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.820485324 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.92906877 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.800515953 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.798645096 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.801434043 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.797145248 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.860560391 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.813306104 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.803140971 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.826940397 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.474340168 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.803927987 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.800522299 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.926603567 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.798805907 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.796676127 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.800748291 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.798281936 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.17463437 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.067158626 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.794616023 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.807948096 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.80518204 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.794513371 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.911879074 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.800347238 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.80438927 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.702048668 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.04918728 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.916078331 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.836717425 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.175004833 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.800288215 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.800335198 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.82757226 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.797674019 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.797230625 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.812881841 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.304908035 seconds)
  done (took 128.590358461 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.795561792 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.06901843 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.95105764 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.796163121 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.08431067 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.997168056 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.793676347 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.842266179 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.793686288 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.025383335 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.950213408 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.90221412 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.793799083 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.790558291 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.794710111 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.7896472 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.955210113 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.863690411 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.791050336 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.794648176 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.827343606 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.036872197 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.917786525 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.792647647 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.809450218 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.004895868 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.916182197 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.903704422 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.076882997 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.792548846 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.857178142 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.794722853 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.79830936 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.793325322 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.954012898 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.887114491 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.882322239 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.79817573 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.790083233 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.791120195 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.470636436 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.988091602 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.892610028 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.940806924 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.03859258 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.996538481 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.584984083 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.791825326 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.530419808 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.955648581 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.0270772 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.024457133 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.919018441 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.798314482 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.30986918 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.795683924 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.793867148 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.025816976 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.025889112 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.896121718 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.795829785 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.797653938 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.794614201 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.04081713 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.79714632 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.889334263 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.796619295 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.79284357 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.889482218 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.903179629 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.022255352 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.010453029 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.831363442 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.109830804 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.277832584 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.048750994 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.868343137 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.028540475 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.797059745 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.794363658 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.87890871 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.64327447 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.954273291 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.040983691 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.051854599 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.836821502 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.520993429 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.796752199 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.023709004 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.019248015 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.102449762 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.036281582 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.945721785 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.005221486 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.796158718 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.793536767 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.038041072 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.930477153 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.797988242 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.16166164 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.031189051 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.371371678 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.828111349 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.10533051 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.92923235 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.796466409 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.436064962 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.79586879 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.022359947 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.83924792 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.796478451 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.799142593 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.018787909 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.872273907 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.796112788 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.413607192 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.857550934 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.799810206 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.030717397 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.798419947 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.064709543 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.801191449 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.036270275 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.432855571 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.8316324 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.026862853 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.03593076 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.799493463 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.062078727 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.040152433 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.913615577 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.014043868 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.422821631 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.797145779 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.08902164 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.802489591 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.791713756 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.971505988 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.799436402 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.973766641 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.799443745 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.140531596 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.823408655 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.950640695 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.803929745 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.062293362 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.837322202 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.848507506 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.798646516 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.926755052 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.797652529 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.69072874 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.955267504 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.800616102 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.797590649 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.52156839 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.801119217 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.95822528 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.033217023 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.824712588 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.871435429 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.469761465 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.798495971 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.886880507 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.823888856 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.144034607 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.801232261 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.958089555 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.806136456 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.340307193 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.798005595 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.044062408 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.985737602 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.80445367 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.800668626 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.718702175 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.802769602 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.803402734 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.966896082 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.287657563 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.799367212 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.005379297 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.800478445 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.929824991 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.80369011 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.884274512 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.16141314 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.796350773 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.804419084 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.804368833 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.80200747 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.799610426 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.065411275 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.82978059 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.329484457 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.943888537 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.073602905 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.118304427 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.05335695 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.848524944 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.806388928 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.051062865 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.807987168 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.869720536 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.801500532 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.828213592 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.037009023 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.805611388 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.010323747 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.08565027 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.748208082 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.849810287 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.805938993 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.808183453 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.679784609 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.953040655 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.891436653 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.802785682 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.806100136 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.922414397 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.926544029 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.015654448 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.810972919 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.006653419 seconds)
  done (took 888.123139381 seconds)
done (took 1199.475007123 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.805748262 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.808181638 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.796212747 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.806674202 seconds)
  done (took 28.962191903 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.81036215 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.81113816 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.808725364 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.813475381 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.810470718 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.812870937 seconds)
  done (took 12.608402957 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.820433163 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.804958697 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.805847159 seconds)
  done (took 21.173267952 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.879696517 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.205660856 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.915757749 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.244688063 seconds)
  done (took 9.989976605 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.818886457 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.811639291 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.808966952 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.81939404 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.814863872 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.817582492 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.816140806 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.8151192 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.821168825 seconds)
  done (took 18.08602573 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.260331962 seconds)
done (took 96.819729491 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.696503098 seconds)
    (2/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.979102045 seconds)
    (3/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.837487045 seconds)
    (4/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.046681363 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.914351369 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.010658241 seconds)
    (7/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.937231079 seconds)
    (8/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.117649286 seconds)
    (9/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.848404765 seconds)
    (10/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.906033157 seconds)
    (11/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.833557809 seconds)
    (12/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.798015327 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.959747204 seconds)
    (14/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.007515837 seconds)
    (15/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.22877665 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.861856628 seconds)
    (17/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.311473496 seconds)
    (18/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.999860068 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.889026614 seconds)
    (20/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.799424709 seconds)
    (21/309) benchmarking ("sort", BigFloat, false)...
    done (took 8.255071644 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.846251597 seconds)
    (23/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.413655265 seconds)
    (24/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.88134701 seconds)
    (25/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.174094963 seconds)
    (26/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.821002464 seconds)
    (27/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.312487233 seconds)
    (28/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.916275441 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.106424273 seconds)
    (30/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.297741647 seconds)
    (31/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.988736819 seconds)
    (32/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.872545689 seconds)
    (33/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.847762333 seconds)
    (34/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.01757923 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.795501882 seconds)
    (36/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.972946652 seconds)
    (37/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.885505708 seconds)
    (38/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.831305652 seconds)
    (39/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.917955293 seconds)
    (40/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.800738699 seconds)
    (41/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 4.101728164 seconds)
    (42/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.920066902 seconds)
    (43/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.933785773 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.037890599 seconds)
    (45/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.140467852 seconds)
    (46/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.817699695 seconds)
    (47/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.165814591 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.199475058 seconds)
    (49/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.383570927 seconds)
    (50/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.40538802 seconds)
    (51/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.831498893 seconds)
    (52/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.805396663 seconds)
    (53/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.806776151 seconds)
    (54/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.985225993 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.930575307 seconds)
    (56/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.907979529 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.072848286 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.143835262 seconds)
    (59/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.752951433 seconds)
    (60/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.807820734 seconds)
    (61/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.929561809 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.095049356 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.803119059 seconds)
    (64/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.963075015 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.886459732 seconds)
    (66/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.821541017 seconds)
    (67/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.107279016 seconds)
    (68/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.822622577 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.89275927 seconds)
    (70/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.336187963 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.971381011 seconds)
    (72/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.256370257 seconds)
    (73/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.025379879 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.891195993 seconds)
    (75/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.924479542 seconds)
    (76/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.81853068 seconds)
    (77/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.807649506 seconds)
    (78/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 3.220760888 seconds)
    (79/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.691172662 seconds)
    (80/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.048484139 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.928066188 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.356673203 seconds)
    (83/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.928922003 seconds)
    (84/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.193044213 seconds)
    (85/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.285991986 seconds)
    (86/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.956884096 seconds)
    (87/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.363107779 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.482841982 seconds)
    (89/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.009745438 seconds)
    (90/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.8123691 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.002321649 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.806294112 seconds)
    (93/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.882225384 seconds)
    (94/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.894116068 seconds)
    (95/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.849302721 seconds)
    (96/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.156632615 seconds)
    (97/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.125562286 seconds)
    (98/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.827290133 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.886449293 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.822269636 seconds)
    (101/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.823031461 seconds)
    (102/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.280583688 seconds)
    (103/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.90405786 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.729047296 seconds)
    (105/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.404359943 seconds)
    (106/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.985339787 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.828846769 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 3.854659887 seconds)
    (109/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.811631667 seconds)
    (110/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.910908841 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.457855665 seconds)
    (112/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.806365293 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.049220859 seconds)
    (114/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.931876914 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.752085333 seconds)
    (116/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.04603228 seconds)
    (117/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.857360851 seconds)
    (118/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.888809595 seconds)
    (119/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.166010765 seconds)
    (120/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.077736878 seconds)
    (121/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.922628747 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.875076903 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.134843704 seconds)
    (124/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.019778286 seconds)
    (125/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.006986405 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.850783852 seconds)
    (127/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.13363512 seconds)
    (128/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.108245575 seconds)
    (129/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.826940422 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 2.272257958 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.852324913 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.20636347 seconds)
    (133/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.027546984 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.100621156 seconds)
    (135/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.82349025 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.185783996 seconds)
    (137/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.89697927 seconds)
    (138/309) benchmarking ("sort", Float32, false)...
    done (took 5.5934604 seconds)
    (139/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.959896989 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.041021542 seconds)
    (141/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.850430746 seconds)
    (142/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.038057883 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.080706494 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.885428316 seconds)
    (145/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.823216775 seconds)
    (146/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.785074844 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.835581408 seconds)
    (148/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.994840893 seconds)
    (149/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.936359039 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.944339251 seconds)
    (151/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.106160321 seconds)
    (152/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.824082504 seconds)
    (153/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.924929573 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.158094115 seconds)
    (155/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.859368743 seconds)
    (156/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.903121213 seconds)
    (157/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.008192366 seconds)
    (158/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.676914296 seconds)
    (159/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.827948687 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.05367111 seconds)
    (161/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.855429812 seconds)
    (162/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.850773607 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.196846429 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.737407059 seconds)
    (165/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.166398812 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.855974543 seconds)
    (167/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.006128066 seconds)
    (168/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.1336431 seconds)
    (169/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.808876724 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 3.827521463 seconds)
    (171/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.386782391 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.029437506 seconds)
    (173/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.172431496 seconds)
    (174/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.189146824 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.830073283 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.521269682 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.20374084 seconds)
    (178/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.645970552 seconds)
    (179/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.967492633 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.117174804 seconds)
    (181/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.716328533 seconds)
    (182/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.263920555 seconds)
    (183/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.846573432 seconds)
    (184/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.192497329 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.903102143 seconds)
    (186/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.828275299 seconds)
    (187/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.910389949 seconds)
    (188/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.229953034 seconds)
    (189/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.96599161 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.864778839 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.045548832 seconds)
    (192/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.859092152 seconds)
    (193/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.812275199 seconds)
    (194/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.95830807 seconds)
    (195/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.015774143 seconds)
    (196/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.334962442 seconds)
    (197/309) benchmarking ("sort", BigInt, false)...
    done (took 6.831456169 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.870226252 seconds)
    (199/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.082508147 seconds)
    (200/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.832669723 seconds)
    (201/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.375967132 seconds)
    (202/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.937965925 seconds)
    (203/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.767410599 seconds)
    (204/309) benchmarking ("sort", Int8, false)...
    done (took 4.806983889 seconds)
    (205/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.853869966 seconds)
    (206/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.400222729 seconds)
    (207/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.059095542 seconds)
    (208/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.059906573 seconds)
    (209/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.998381358 seconds)
    (210/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.81866373 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.985674554 seconds)
    (212/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.020508338 seconds)
    (213/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.917953801 seconds)
    (214/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.754969182 seconds)
    (215/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.915231464 seconds)
    (216/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.965589131 seconds)
    (217/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.84226042 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.925255455 seconds)
    (219/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.136189952 seconds)
    (220/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.113080257 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.16945336 seconds)
    (222/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.994606726 seconds)
    (223/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.190157201 seconds)
    (224/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.076367131 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.232766128 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.811604821 seconds)
    (227/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.951128437 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.056687438 seconds)
    (229/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.632384097 seconds)
    (230/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.80970334 seconds)
    (231/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.0434805 seconds)
    (232/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.822139231 seconds)
    (233/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.486228498 seconds)
    (234/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.027792092 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.853788613 seconds)
    (236/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.91326425 seconds)
    (237/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.813069093 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.956005823 seconds)
    (239/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.859139621 seconds)
    (240/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.999111377 seconds)
    (241/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.866145517 seconds)
    (242/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.388835787 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.714467559 seconds)
    (244/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.207208778 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.829470588 seconds)
    (246/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 3.587202323 seconds)
    (247/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.967582694 seconds)
    (248/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.461110842 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.953448373 seconds)
    (250/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.868381675 seconds)
    (251/309) benchmarking ("sort", Float64, false)...
    done (took 5.59687639 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.156711849 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.832127423 seconds)
    (254/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 3.402585638 seconds)
    (255/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.073855264 seconds)
    (256/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.167577824 seconds)
    (257/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.73447011 seconds)
    (258/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.015234238 seconds)
    (259/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.137327552 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.928539169 seconds)
    (261/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.204168417 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.518547257 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.647671079 seconds)
    (264/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.823922872 seconds)
    (265/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.155320703 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.085222155 seconds)
    (267/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.196612442 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.863282786 seconds)
    (269/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.915762957 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.192838912 seconds)
    (271/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.132253308 seconds)
    (272/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.335047099 seconds)
    (273/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.109284895 seconds)
    (274/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.931046567 seconds)
    (275/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.856551624 seconds)
    (276/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.832536813 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.639214635 seconds)
    (278/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.961185456 seconds)
    (279/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.305031207 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.825285752 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.865445899 seconds)
    (282/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.855163852 seconds)
    (283/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.97594321 seconds)
    (284/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.525004965 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.927760144 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.832126549 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.92567896 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.980545137 seconds)
    (289/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.863213935 seconds)
    (290/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.181237716 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.652039776 seconds)
    (292/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.8992284 seconds)
    (293/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.832148263 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.869218838 seconds)
    (295/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.005596501 seconds)
    (296/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.013148843 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.531760562 seconds)
    (298/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.088078059 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.888222235 seconds)
    (300/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.089950805 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.481560205 seconds)
    (302/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.870424682 seconds)
    (303/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.17125781 seconds)
    (304/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.859141221 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.854080529 seconds)
    (306/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.964594252 seconds)
    (307/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.447713733 seconds)
    (308/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.413452513 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.758096472 seconds)
  done (took 1002.923797808 seconds)
done (took 1004.952295574 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.869544914 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.861611934 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.844038749 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.867374488 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.958371391 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.873498729 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.85399166 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.848637586 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.891514807 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.89497186 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.845557749 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.874127371 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.847985035 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.846890932 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.844480363 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.861149168 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.157739961 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.879929032 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.865091356 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.853991046 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.86543778 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.846138801 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.896735558 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.873128571 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.850291005 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.846756694 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.850983313 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.865097129 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.959941229 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.850104175 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.848979435 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.860002006 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.15979263 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.875390477 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.842172671 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.867294368 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.858694317 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.853378006 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.850202009 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.879741206 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.301057219 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.854583101 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.84959012 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.847733415 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.847718922 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.850214761 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.848610752 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.855820013 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.862675445 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.860985703 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.296530578 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.871546511 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.851688247 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.848242499 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.857193324 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.849507516 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.85349224 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.865551461 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.869222976 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.865407068 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.150117352 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.882857202 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.849382149 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.865506361 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.855472138 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.333352395 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.84894476 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.853781189 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.305568741 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.86007344 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.336602356 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.865512046 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.848454706 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.864138795 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.88121406 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.159172784 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.875651019 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.846346219 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.858959706 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.85099495 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.858036383 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.863535663 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.85574041 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.850027085 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.863480187 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.878377061 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.861946173 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.852594613 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.858513286 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.869768119 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.859195068 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.861983627 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.852789882 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.845708749 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.857969744 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.857040826 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.855227046 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.853389431 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.855875993 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.860959141 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.302872945 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.873552044 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.845226686 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.847521136 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.849964309 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.864873563 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.303422331 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.859794064 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.872007124 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.896897369 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.853861856 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.152280393 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.886523858 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.86800139 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.858362821 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.85551191 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.845234794 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.151177743 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.33105184 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.875589662 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.853373025 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.851163745 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.868561724 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.854432362 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.849595618 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.163736407 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.88303262 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.868435547 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.974874811 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.860864731 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.883248641 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.85064737 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.855905724 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.880992488 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.869372424 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.884406761 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.854769386 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.867163427 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.870841711 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.849858852 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.864965069 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.863073239 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.854398259 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.860237545 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.846794396 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.882057696 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.864906458 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.866605909 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.873747646 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.975955636 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.850695425 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.153862075 seconds)
done (took 291.041544133 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.919603213 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.843221617 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.947657261 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.851815479 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.931270936 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.940059103 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.850624406 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.849277956 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.84754164 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.219086839 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.847929492 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.848820075 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.844841452 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.850234922 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.932511783 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.852216667 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.850319704 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.182875241 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.85171456 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.921893997 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.847984875 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.852030159 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.853393203 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.222991948 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.841356654 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.841470318 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.922481151 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.852704736 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.188904662 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.844020912 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.846606387 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.19256798 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.942917005 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.873744992 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.863721267 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.859157555 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.936318753 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.857146558 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.929964031 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.930811391 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.952233334 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.889622964 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.849202488 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.848659538 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.858229366 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.850798714 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.849298934 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.879934667 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.849843033 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.84956423 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.186516632 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.861465584 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.861175396 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.851773461 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.851022749 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.873368368 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.849804988 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.8543941 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.942331069 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.85193457 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.915095905 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.226115938 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.223645302 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.855744493 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.851420791 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.85122595 seconds)
  done (took 183.049386037 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.9190729 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.925715062 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.9182942 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.857268242 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.902324534 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.919500559 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.855877561 seconds)
  done (took 15.082136814 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.860764309 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.857061627 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.901389159 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.901480513 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.851881513 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.001097116 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.855507343 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.864129992 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.852253097 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.905365358 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.854139851 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.855425378 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.861908435 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.845915858 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.900835217 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.863241802 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.967606847 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.854891759 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.856087194 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.003619323 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.857742591 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.862601756 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.907210078 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.865122112 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.854898133 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.859685524 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.445062766 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.855308723 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.853749177 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.856147313 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.854057067 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.897664258 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.857429144 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.848148899 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.854759707 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.969880801 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.853853289 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.854273923 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.855136729 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.853585541 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.856316775 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.857298879 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.857352766 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.856010201 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.859541924 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.877101969 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.858199003 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.857656025 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.857429994 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.858708831 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.906647992 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.856738076 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.853855541 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.855507368 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.909848755 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.864636972 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.856834928 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.855161445 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.859488086 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.855980875 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.005545237 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.905019587 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.856962857 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.900138734 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.857877658 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.859298439 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.858272789 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.858662332 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.949481717 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.85964079 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.90444793 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.855893833 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.014489275 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.880909382 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.860574061 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.861718142 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.85726299 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.8571373 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.859529923 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.862028397 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.85496112 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.855157641 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.863955123 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.856788502 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.85590805 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.968618424 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.964964448 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.856015125 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.868057033 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.863783894 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.857871034 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.91016998 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.858309332 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.85471125 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.909645786 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.971268565 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.907776366 seconds)
  done (took 204.489678165 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.863473233 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.864900736 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.852101069 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.874306742 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.857141298 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.85881867 seconds)
  done (took 12.958975618 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.859971677 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.861783953 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.857864729 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.86124755 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.855329501 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.851388093 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.848897732 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.856633832 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.857849317 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.861699607 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.856492011 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.855589997 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.848911962 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.851276206 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.853927438 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.851733904 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.855343839 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.852879629 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.859629374 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.854080401 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.996646881 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.851789093 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.851465696 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.855424745 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.855473191 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.862113458 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.862760747 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.863733273 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.859679359 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.864849277 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.857890289 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.858934397 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.857340643 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.854575516 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.858200694 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.853046702 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.862705338 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.850756296 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.851370141 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.851882625 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.851431638 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.851387826 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.856396578 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.853283285 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.851521765 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.860585423 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.854734666 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.859490989 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.852200166 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.854604833 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.853058155 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.853406773 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.852510235 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.8565573 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.851764388 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.858919824 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.860373951 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.856445444 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.853482717 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.860636301 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.858591714 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.855614553 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.856293083 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.857329832 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.861904593 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.854963902 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.857382892 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.861096582 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.854286483 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.858248096 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.85247127 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.855929897 seconds)
  done (took 136.57024003 seconds)
done (took 553.945495068 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.949246329 seconds)
  done (took 8.73319319 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.953362828 seconds)
  done (took 8.824961576 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.516561489 seconds)
  done (took 10.30034971 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.858798333 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.885272317 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.850303784 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.856484549 seconds)
  done (took 29.24968728 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.190300475 seconds)
  done (took 8.970695732 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.866017761 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.845862463 seconds)
  done (took 15.564524917 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.879361501 seconds)
  done (took 8.664246866 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.969350008 seconds)
  done (took 8.774362193 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.885550023 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.888806062 seconds)
  done (took 15.570735538 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.833457903 seconds)
  done (took 8.616423229 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.532711294 seconds)
  done (took 11.324945605 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.856422736 seconds)
  done (took 8.64825592 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.911889866 seconds)
  done (took 8.690967075 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.10472881 seconds)
  done (took 9.88741147 seconds)
done (took 163.605542013 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.851984779 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.852506033 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.846568851 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.850944829 seconds)
  done (took 29.186865284 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.890603116 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.914655385 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.903607709 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.898944698 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.89090655 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.894322859 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.88434208 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.88905964 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.901735854 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.893223996 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.894505139 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.889734153 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.890504975 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.884410753 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.888222623 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.892805085 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.901349967 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.891550038 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.882497606 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.892705726 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.85800354 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.898419368 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.893013172 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.85943567 seconds)
  done (took 47.159267743 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.054395551 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.928445192 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.008068159 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.90685466 seconds)
  done (took 9.680078791 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.907870119 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.91040276 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.923972514 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.958372716 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.986874814 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.916984105 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.883222743 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.876660559 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.86237959 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.912541363 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.986064995 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.905308637 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.993901719 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.855721693 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.040034089 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.858172815 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.856745346 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.909523347 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.963547721 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.977452833 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.858732727 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.908918374 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.915720053 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.905018955 seconds)
  done (took 47.858814257 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.857186632 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.864157972 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.862920161 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.855782019 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.855956031 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.856894479 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.86539822 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.858864883 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.882221614 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.866226495 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.857406645 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.855680155 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.854553199 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.85865098 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.853699676 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.871645756 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.870891402 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.856244845 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.863616019 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.862749261 seconds)
  done (took 39.014235868 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.846608051 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.767338664 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.205141924 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.104127498 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.847721011 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.84781407 seconds)
  done (took 31.403906793 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.866040226 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.865391435 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.853397502 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.913275521 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.992760591 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.863573906 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.858693184 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.86994326 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.904095498 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.922732022 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.88257169 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.885461856 seconds)
  done (took 24.461401965 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.856742775 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.852998343 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.853711838 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.870108403 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.872298808 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.873795251 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.867728622 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.84884653 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.879321354 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.880277793 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.864789488 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.877734502 seconds)
  done (took 44.187523349 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954018813 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.750193798 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.881471285 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.54157452 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.334496412 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.077660097 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.382495063 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.193676674 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.870246077 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.131142445 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.905652142 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965027844 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.109041109 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858380543 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.878299941 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.340300184 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.154649509 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.084684641 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891756108 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.641964941 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914701278 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.476316545 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.695612698 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.917203036 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.072106882 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.99694277 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.121702399 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.819186942 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992406709 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904154404 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87501096 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.86031105 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.139821342 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233174319 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967283854 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872459043 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.47672405 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.577738007 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.8496532 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.615394393 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.62674847 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.980473148 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87154174 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864414893 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.794391463 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.433820142 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2492862 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.861148031 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.576929419 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.867091473 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.878169447 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950505988 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.865779443 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.684526304 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.786467981 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.140063711 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.859019396 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864060432 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.430855389 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.958897693 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.46996727 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.84371269 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.056990014 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.621019021 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248072189 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.009298262 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.870054731 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.86713205 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801331524 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.607988401 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913695037 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.009414576 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.884170077 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.517993035 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168646916 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.936090404 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.802532386 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146688221 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.1514529 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.847970981 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096593597 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.825130102 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798652362 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.730291311 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.798106284 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.126343599 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903576153 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.513195317 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902644962 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.199684621 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.876801305 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884581867 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872850274 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.09342044 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.748654291 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864445701 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.652849736 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.01096909 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886394997 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.201825203 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803655491 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.873536755 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125819659 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.076651217 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.182593418 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.400058854 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.019742211 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866176563 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.950701231 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.864435399 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.922793798 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.132287053 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926600651 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.957706455 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928296963 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.824219194 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159761612 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90046441 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.038053815 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.888269989 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.000561842 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.195349594 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.158023245 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931341492 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.877738403 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.868383851 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.732004446 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.418054098 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.137304647 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.864034846 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.451408434 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.926872729 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.867606484 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809470778 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.473973937 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.887549256 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.843781067 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.095170162 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.873730471 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184375718 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805778406 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.015407995 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.987365759 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.091079331 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.509582514 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.943115447 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128751708 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432356888 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.229639963 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923167935 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886994283 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99190853 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89316099 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.3744328 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.1619518 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.877152319 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.874366863 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.635403542 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.867262153 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872350002 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.874303692 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.623051156 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140915329 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.89620792 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.881167729 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.761780816 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.886387363 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93607121 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.874166159 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.88142917 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.414841736 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.574082069 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.87223288 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.489670535 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10192542 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87963694 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.606781414 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9836181 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.956937382 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.143100708 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923222188 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.805905224 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.583353895 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.564743443 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866722438 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.80358878 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.872722338 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880395656 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.887834612 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.245596072 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.144829268 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921048656 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.633577712 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.914007763 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.878223952 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.879512771 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874420656 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.447104605 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.96764998 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.487004016 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.928163867 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012229796 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.892134793 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.807108048 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.880738198 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.878749704 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.877046413 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.83205719 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929997362 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.635554773 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258384276 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.135178429 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.483542936 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.891793131 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.654941898 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.93367627 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.915055105 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.697918207 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890065313 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.919581384 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902975044 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.887345008 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.650379385 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.57329544 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.443515336 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184622059 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.176643143 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.310425944 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.450912132 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.190831856 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.215081992 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11218897 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.407484873 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.937419328 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.220997142 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821922189 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963598205 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.517495539 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228837781 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.893517064 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105760574 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.257796319 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.605174047 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.048681294 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.091371652 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912502113 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.881789517 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.847426247 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.082801806 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020380896 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.600776211 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.076231024 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213142324 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.545719665 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.992576844 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.880806698 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.546153057 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965191794 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.593378401 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.238531091 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.538876941 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.85881506 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346893813 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.887111565 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.323766344 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221783315 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.280994449 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.000086897 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816347007 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.891915094 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.890715804 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.878750918 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.911336039 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.732694103 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.12654785 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882574389 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110366988 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.222829007 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17039983 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.782955052 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.883078119 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875832404 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164467527 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.734126245 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040338515 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.400154833 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.439955425 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878128513 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.807416987 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808118529 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.56929613 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.879767598 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.8509778 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090095854 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.061300989 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.783481196 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.484754894 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120894624 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.128430491 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.887240251 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.145980485 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.15010635 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.589723871 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901707978 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.979596003 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.509990315 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.973905576 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.142948764 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.115754292 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.628344213 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.101122522 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.901872765 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.684388406 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.871570706 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.091495705 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.145391877 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.732447045 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093169519 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.599308977 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.889819805 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190579502 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934812819 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.740085703 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.020067887 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.068329428 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884610893 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963939879 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884619059 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.888325416 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.884805917 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921320414 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.737175008 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.986388389 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.88656594 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965843372 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.95908559 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.443457052 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.878817178 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146271196 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227409523 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.195735066 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936838331 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.880392096 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884535146 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813478198 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014330986 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.319099242 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.146521508 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.008287703 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.174213955 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900928777 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.521674558 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.312009109 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123090672 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.148665167 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.772973615 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876481736 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.896848688 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.141575667 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890535537 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.089191421 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.097760778 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.179296957 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344199291 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.193731779 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.246809657 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.149893334 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.248212678 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.875310891 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.472607841 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.887527006 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.558621592 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.913970783 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.73533675 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129278885 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88762175 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248163482 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.898518147 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.072984355 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.394689522 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.607794822 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.159171791 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.85816392 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.926101817 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.144888268 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.257493083 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181656279 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946570556 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888525706 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.582127985 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012364533 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.745116119 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.146715709 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.876430214 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090714647 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.586260911 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.885577391 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.148854546 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.1822905 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.873098466 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.738394546 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884572989 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.884446699 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.099510714 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.137336293 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.127152478 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886463725 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.878958064 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.696713606 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148034596 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932309751 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811442947 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.878571706 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976400189 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.125005642 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901097671 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.563808021 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.587107076 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167368934 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.793595919 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898995629 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.443987366 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.24018308 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.193486562 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.413705234 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096667492 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.435287006 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.87906035 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18176425 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.887417801 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.487959063 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.194037056 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.884425535 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.559978347 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92317324 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.146533207 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19547584 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.882934053 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.634103332 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.848390682 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104905809 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.440738774 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818997178 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.889719519 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.939697874 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.879758333 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.008988568 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.893798427 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.737321202 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.880293127 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.630401509 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373041805 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.884191639 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.863049795 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.582360978 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.56649717 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916400847 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024700793 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.888335083 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.599426717 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.175378491 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.136337983 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.555836875 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.888141912 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.884727712 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881356418 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.807716831 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.080607104 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.258878752 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174830161 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.404177979 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.923006078 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.884942469 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.10148889 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097123035 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.742341458 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008756225 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4501074 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.920418978 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.647202194 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.561779953 seconds)
  done (took 1688.252860251 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.915514328 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.924628471 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.921447971 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.945973423 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.937108122 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.897219266 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.941930602 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.927748441 seconds)
  done (took 57.223866522 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.87744961 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.080114982 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.889674389 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.881781813 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.890521932 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.880555522 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.049067742 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.890198791 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.887047118 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.890587361 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.882812999 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.878806076 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.195013323 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.901629914 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.884501805 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.877789392 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.885787774 seconds)
  done (took 74.567579451 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.884808587 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.103904906 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.917850366 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.896990829 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.840683616 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.8944203 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.883396533 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.892390904 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.885558701 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.108654908 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.521535277 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.903262012 seconds)
  done (took 90.545587028 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.892504621 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.889122321 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.890081001 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.888694455 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.892514404 seconds)
  done (took 11.272010064 seconds)
done (took 2196.624186514 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.314337719 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.106406417 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.11364909 seconds)
  done (took 6.032878722 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.032675425 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.077642846 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.198885164 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.201957895 seconds)
  done (took 10.328425895 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.178351226 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.265335887 seconds)
  done (took 6.257777859 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.29569808 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.885837448 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.280326586 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.885353857 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.887327753 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.88584026 seconds)
  done (took 22.474891253 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.892194806 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.892437106 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.890205781 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.893854775 seconds)
  done (took 9.382525885 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.868091483 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.562553793 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.87216269 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.88422646 seconds)
  done (took 21.004133988 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.63559418 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.28794418 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.637394967 seconds)
  done (took 9.376119112 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.320423759 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.76303526 seconds)
  done (took 8.902962803 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.148787582 seconds)
  done (took 3.963606733 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.019976371 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.16382248 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.398369844 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.392014228 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.485792782 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.748806585 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.211401327 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.13982224 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.287331638 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.320981235 seconds)
  done (took 24.979975752 seconds)
done (took 138.291353927 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.267799971 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.128656654 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.083721005 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.231188236 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.11848065 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.129757194 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.091579023 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.217899441 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.732052099 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.730185233 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.23336147 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.124336011 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.030562089 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.130543391 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.037034202 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.128341357 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.154429293 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.28479182 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.929835016 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.130862551 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.100681007 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.863726904 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.078206642 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.873695777 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.124038322 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.041379333 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.450502002 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.127886099 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.086223478 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.460982034 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.044461777 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.285154302 seconds)
  done (took 173.267777439 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.623743178 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.881598314 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.88671487 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.882900943 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.093954396 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.884109325 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.889142861 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.886359807 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.048926684 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.014163346 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.885952881 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.084414659 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.888566898 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.885795596 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.885064953 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.885533616 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.152980971 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.682228684 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.89471207 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.89713527 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.89674992 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.002248004 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.900168538 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.044647533 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.17439272 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.902456669 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.870392468 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.904532016 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.893634132 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.85561902 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.898376581 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.887073519 seconds)
  done (took 207.283115052 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.889417089 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.887367311 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.890070529 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.886676632 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.89246946 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.888634384 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.892124521 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.887946724 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.566418388 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.557547768 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.893996375 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.895556848 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.889427593 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.892162533 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.894847647 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.885894614 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.894610088 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.895270247 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.894226975 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.893881022 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.900849496 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.613452073 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.900417787 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.624968913 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.89471513 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.899197445 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.891929967 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.897691538 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.903300458 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.90451716 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.901602878 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.891268557 seconds)
  done (took 221.222914794 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.099680653 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.898437523 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.899057538 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.844285176 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.903303998 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.899887069 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.849247583 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.097666865 seconds)
  done (took 19.332615962 seconds)
done (took 622.934994421 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.380198246 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.231030684 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.076914472 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.928400103 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.17129438 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.956023826 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.918323721 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.98607033 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.647322772 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.98827338 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.612232078 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.935759604 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.704053147 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.93983335 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.048578278 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.975731127 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.500039019 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.598945161 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.092978623 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.988879744 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.089099908 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.854322039 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.995245206 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.659535783 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.713522395 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.899088261 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.099110911 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.506978215 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.927636541 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.079274627 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.684813314 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.301484838 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.927981897 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.917831391 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.975051497 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.957173085 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.273742887 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.928962598 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.040600027 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.661201415 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.978494105 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.533867215 seconds)
  done (took 104.51049751 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.888252303 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.890876055 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.888753028 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.888059708 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.889710628 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.885784084 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.88708446 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.886900728 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.887511788 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.886987975 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.889566828 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.888672122 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.88689568 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.892585697 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.890867753 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.885549706 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.883074414 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.894023979 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.889266545 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.887564859 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.886228985 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.887052097 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.90431316 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.888778146 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.890477811 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.887710798 seconds)
  done (took 50.947352096 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.906995077 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.064504983 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.146656762 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.916537425 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.898828949 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.905772385 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.918783031 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.91049221 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.904441964 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.906062158 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.011736568 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.906730047 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.914210848 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.147617103 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.912594758 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.899348471 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.900129451 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.894352782 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.069197047 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.912808269 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.917035795 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.903402871 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.91772893 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.909199658 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.899992173 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.895120102 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.902348966 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.376901373 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.908986161 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.004674646 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.940332207 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.918197472 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.3212517 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.15593845 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.949349946 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.906235555 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.902205969 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.013754389 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.907892693 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.89721001 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.918106159 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.907933961 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.143935438 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.381355063 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.909163323 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.899742309 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.391155336 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.016082803 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.938488195 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.912186927 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.144528425 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.913931444 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.901297729 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.900111282 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.93582887 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.908276472 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.896666944 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.240055439 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.908113481 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.916919665 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.90963904 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.899511143 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.071588516 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.906185466 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.060617451 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.907441461 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.904998163 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.901673318 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.142919262 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.914420206 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.389990486 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.911667505 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.905254469 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.003631968 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.067720488 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.413940208 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.910173193 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.075183711 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.338482031 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.922352243 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.905962653 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.370030036 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.926732397 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.90728733 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.907255811 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.904088592 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.904901825 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.948454332 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.91525581 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.315574047 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.389979861 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.255609414 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.926227003 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.915008009 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.901105798 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.253170017 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.910055769 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.903924353 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.141850713 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.395492469 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.912736681 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.908984579 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.372656794 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.91475126 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.920443937 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.910465923 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.14853811 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.914122194 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.949338264 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.90328501 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.906736424 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.905692125 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.923164692 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.906036365 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.904009327 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.36210065 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.027542322 seconds)
  done (took 235.854342889 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.894774071 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.901968899 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.895725678 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.905180857 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.895452366 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.900443203 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.894990226 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.89279169 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.900378886 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.895566845 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.894883958 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.900087093 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.896864213 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.900278988 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.940893493 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.901546092 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.50679188 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.896897715 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.894595946 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.894451343 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.545304868 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.900510935 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.895560164 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.910135744 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.895236375 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.898163863 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.899985058 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.93052621 seconds)
  done (took 168.308811798 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.90563825 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.014798695 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.918409702 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.931561544 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.912640185 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.902595717 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.926123799 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.917611338 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.906514177 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.902373351 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.904355002 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.963775965 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.913906392 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.005774573 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.932543441 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.934482428 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.005065688 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.910164359 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.905075407 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.905725757 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.93281655 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.898052586 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.962860708 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.027712723 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.922330531 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.018642722 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.908243911 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.909076068 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.903577206 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.020739355 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.919454118 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.966944642 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.930137114 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.921588355 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.023410489 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.020575259 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.010110557 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.933196153 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.906551156 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.906774056 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.905531645 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.891183179 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.021417415 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.925452752 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.906130251 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.010439563 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.926502011 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.908501973 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.91625329 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.905528426 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.915957453 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.919619801 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.967516793 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.038269637 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.939699739 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.930703675 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.928911447 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.218501935 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.912573817 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.003625875 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.894916956 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.023489616 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.928283897 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.89100303 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.906617642 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.911850124 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.934746096 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.937429816 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.006579095 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.907788689 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.002623427 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.938253041 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.911724422 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.906156537 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.909478725 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.02236235 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.018505869 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.941813148 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.941969864 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.932855064 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.898776245 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.906972687 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.896087801 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.923434976 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.910731187 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.024483754 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.023297807 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.913545315 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.911095187 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.913047306 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.909447721 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.932134067 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.026457118 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.939808278 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.999763267 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.970639328 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.979161691 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.924651934 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.921841869 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.908482622 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.968859862 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.923027916 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.92001384 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.270377145 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.973966991 seconds)
  done (took 206.343885749 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.386723081 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.958420844 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.962341066 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.231169356 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.322967656 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.78439642 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.952225328 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.956253938 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.976857384 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.148418546 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.031638985 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.978493485 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.941207131 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.925739934 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.955463696 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.977980014 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.975129377 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.267929321 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.088978876 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.071858734 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.936178726 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.268863681 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.266278917 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.395426112 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.988752883 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.282914801 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.625401469 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.203009183 seconds)
  done (took 62.700899557 seconds)
done (took 830.490566753 seconds)
SAVING RESULT...
DONE!
