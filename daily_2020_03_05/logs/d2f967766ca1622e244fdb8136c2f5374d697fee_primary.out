cset: moving following pidspec: 26502
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.315190154 seconds)
loading group "string"... done (took 0.635597882 seconds)
loading group "linalg"... done (took 7.70667264 seconds)
loading group "parallel"... done (took 0.161333177 seconds)
loading group "find"... done (took 1.13338437 seconds)
loading group "tuple"... done (took 1.850553436 seconds)
loading group "dates"... done (took 1.266387508 seconds)
loading group "micro"... done (took 0.221520862 seconds)
loading group "io"... done (took 0.901605608 seconds)
loading group "scalar"... done (took 37.725821389 seconds)
loading group "sparse"... done (took 12.03131696 seconds)
loading group "broadcast"... done (took 0.958052607 seconds)
loading group "union"... done (took 12.430540719 seconds)
loading group "simd"... done (took 4.561514783 seconds)
loading group "random"... done (took 9.152849843 seconds)
loading group "problem"... done (took 1.861738613 seconds)
loading group "array"... done (took 21.183507445 seconds)
loading group "misc"... done (took 1.74741784 seconds)
loading group "sort"... done (took 3.342272021 seconds)
loading group "collection"... done (took 17.531066407 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.542430474 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129482927 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.136456231 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.124082636 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.150340792 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119502058 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.129502729 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.089196136 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.82595402 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.1511538 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119237776 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.42196093 seconds)
done (took 5.382984767 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.178949545 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08785037 seconds)
    (2/2) benchmarking "String"...
    done (took 0.087976765 seconds)
  done (took 1.289368795 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.070675824 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128963105 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.070801786 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.071974934 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071482091 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.072135457 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.071540508 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.071381538 seconds)
  done (took 1.669717383 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077911023 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.073199397 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.071783152 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.073001025 seconds)
  done (took 1.406905921 seconds)
done (took 5.738706315 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.777923662 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.215823491 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.19030277 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.404153532 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133487821 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.178017798 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.645710754 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.312300378 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.194116527 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081316251 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.11309775 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.351665745 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.126727468 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.650820089 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079595695 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.094804306 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141226057 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.436590646 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071658865 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086839042 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094321774 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132581689 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089809654 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07866035 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.151492204 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.072602526 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.138186452 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.08382505 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.070729548 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.22156608 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.176806033 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.668952415 seconds)
  done (took 10.41290306 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.103914808 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.103160283 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.0730597 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130387569 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103041638 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073834537 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.079808978 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.072130564 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094792895 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.135543992 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.096111816 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.111013601 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.070258908 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.073132977 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.089275882 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213453238 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.084537518 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086669574 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074858122 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.082066736 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112673578 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082289997 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085245343 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.085164407 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132837002 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.184831347 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100127765 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.101375836 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071146783 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.087264145 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.119816542 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132615132 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.070338207 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070174461 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.134827456 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.099234211 seconds)
  done (took 4.775262098 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.999957761 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.146494262 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092879644 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.137593141 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.069123227 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.111516459 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.070887959 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084889097 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.212354521 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.459876744 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.615006498 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116180242 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110096342 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072209855 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.073652953 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.071637836 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.511176071 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.104148878 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111476985 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086268035 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075392825 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.074135956 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363616912 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072774476 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068608961 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073701071 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061677422 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126117654 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073482293 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.958126457 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.172560368 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07044226 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103948223 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.166188917 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.222817518 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.145148354 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073368846 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068597291 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.160294041 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074211377 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.116164801 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.070659413 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088313577 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107021118 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124070025 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06946318 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070278558 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172415589 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068991162 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082805729 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.1771515 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15882268 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081772788 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.070158629 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.276946704 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093251585 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074053049 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06957572 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.178497595 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129361574 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.071914063 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.072091704 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072861592 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.074075437 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.366218316 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070260711 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.884700348 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.075229997 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.081950115 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074132611 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073571265 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077164398 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079357695 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092783087 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.071992794 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079122605 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.070438222 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07103703 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071333848 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087710349 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.374455885 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.071053853 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071681336 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.069318199 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.093525975 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.201744062 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072887996 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.070103574 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104330507 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072361012 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.071256694 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.114289289 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070443024 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.069862095 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.068747845 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08758437 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.069360906 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073411055 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116865897 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070822425 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.099689492 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.071270867 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099614965 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073637646 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103170395 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084034066 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075120586 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.413640658 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.069850969 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.074169886 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072731691 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069605734 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071833446 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070798554 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.082910992 seconds)
  done (took 22.194265023 seconds)
done (took 39.493047632 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.255646607 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078496485 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078978265 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078916559 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078780411 seconds)
  done (took 1.777716015 seconds)
done (took 2.969060728 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.125095652 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102914568 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069102895 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103754331 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068894435 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105708511 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104115389 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081675517 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103395168 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.069085666 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100575614 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.069638356 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069180412 seconds)
  done (took 2.380841905 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087805001 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088195672 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073966315 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087560883 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067856398 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088290483 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086790948 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093842053 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.088273741 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077069142 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06809493 seconds)
  done (took 2.091412562 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086249178 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088374623 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073556148 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086359636 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06803814 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086767462 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086319261 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090555244 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086580552 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078950959 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069102718 seconds)
  done (took 2.083077529 seconds)
done (took 7.733109494 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081246564 seconds)
  done (took 1.25455107 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.574584608 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.936353856 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085879565 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.1143241 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.195195809 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.121866669 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.273954514 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.091232113 seconds)
  done (took 8.739732886 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.108205113 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.072839465 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.073434284 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.075216439 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.076879677 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072847192 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.075049267 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.074397566 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.077036072 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.076791492 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.075948786 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.0741891 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.07368639 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.074094029 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.075624158 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.074631042 seconds)
  done (took 2.47993396 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095924933 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095678322 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.077258592 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079826849 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.076850347 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075998217 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.078866459 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.078205997 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.075052572 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076862149 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.079139514 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07815868 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07683305 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.069331935 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07781171 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080631978 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.075499307 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078271209 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.079010076 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079618107 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.080007108 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.069293288 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075743591 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078797143 seconds)
  done (took 3.163432743 seconds)
done (took 16.819497537 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109237939 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072175445 seconds)
  done (took 1.359361025 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085199368 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086076479 seconds)
  done (took 1.357206984 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086071325 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.070075567 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093019182 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.082613684 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.070342186 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.070071166 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.091231292 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070242146 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.070758058 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.070801351 seconds)
  done (took 1.961342901 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072438073 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080690776 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073972158 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.085728261 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07821787 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.068595712 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076601665 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.072548185 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081131307 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.067202777 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075203306 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086788557 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.075283279 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088213159 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.076244899 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.073141421 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.075578393 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.07194038 seconds)
  done (took 2.567341863 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.070020127 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070989644 seconds)
  done (took 1.33093989 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070943697 seconds)
    (2/7) benchmarking "second"...
    done (took 0.068079582 seconds)
    (3/7) benchmarking "month"...
    done (took 0.07064348 seconds)
    (4/7) benchmarking "year"...
    done (took 0.071118445 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.067974081 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.067030374 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067687127 seconds)
  done (took 1.669885365 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.377436337 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120875544 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.315455911 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.076347143 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.085849119 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.25782984 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.070542207 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.075729011 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.075834281 seconds)
  done (took 2.683743143 seconds)
done (took 14.122708266 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.083775122 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.090781376 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.101486477 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.385334341 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095728091 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070965217 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.117945014 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.190146101 seconds)
done (took 2.337000697 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.214948364 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.674631278 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.43139804 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.210972865 seconds)
  done (took 2.512638856 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.340163198 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092731613 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.064413562 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.071857852 seconds)
  done (took 1.773666551 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.070743025 seconds)
    (2/2) benchmarking "read"...
    done (took 0.074142926 seconds)
  done (took 1.346496901 seconds)
done (took 7.048773162 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071123845 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.09005852 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.070669821 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.068215946 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.070842776 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.068804114 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.068242443 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.070605316 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.071664405 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.070758995 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.070047276 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.070124638 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.071302606 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071043462 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068092307 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068235488 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071300494 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.182708811 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068097004 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067989341 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070156766 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067959688 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06810316 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.068229557 seconds)
  done (took 3.036035796 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088952958 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.070907627 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.076959519 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075297766 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.074870096 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075731816 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.076339469 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.070910007 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07600976 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.073221396 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073972294 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.074824906 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.072958954 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.074525079 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073316328 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.074852718 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075625034 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070694648 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072849478 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.075438877 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.075634669 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071325866 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.074962118 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075500171 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.07462267 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074702859 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.073319366 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.071392066 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07647497 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.074422086 seconds)
  done (took 3.448561338 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07380805 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.067906569 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06897168 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074728132 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.068445329 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068918274 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067636685 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.068270724 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068998497 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.068971293 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.070001445 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06761285 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067946392 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.069043235 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068558964 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.071456825 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083397243 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.069305509 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.068617355 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068988574 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.071268354 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.070800571 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.068037801 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06777011 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.068313648 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.067968399 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.068408101 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067633131 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.068437849 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.068530641 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.071822299 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.071752758 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.067657759 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.075105463 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.072052972 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067746244 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.072057303 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.067287287 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068722826 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.067762771 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.067931282 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.067733803 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.067684265 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074996893 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.067672033 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.069879022 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068123132 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.069281834 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.068478119 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.071568483 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.068383622 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06825133 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.070072538 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.069644318 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.072922397 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06791441 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.069362987 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067686735 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.069997697 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.068688383 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06769116 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.067983299 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.070755011 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068741059 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.083054314 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.075301508 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.0681301 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069750052 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.069314073 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.07082373 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069868584 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.081859283 seconds)
  done (took 6.251106132 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093070736 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091625919 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070036222 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069970913 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066659414 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069124868 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07432827 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068801891 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071155793 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086326754 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068917774 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070636446 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07008932 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072637391 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068599698 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069885652 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077247658 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067022244 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.068769954 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072105498 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069187086 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074645671 seconds)
  done (took 2.8382385 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153014014 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074675661 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10898566 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080113476 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074990953 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079255916 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074772553 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074408021 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074420163 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071960138 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072667892 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075020156 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074413026 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07198542 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072078404 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072015544 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07418173 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072309098 seconds)
  done (took 2.669687043 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.08061954 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.07016207 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.090405115 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069854932 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.070889097 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.073199654 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074727356 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078576134 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.072452065 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.070171641 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.078499506 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073019811 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.07310975 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070614005 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07279116 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07092201 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072658977 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070961247 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078264513 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075187517 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074435972 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078589739 seconds)
  done (took 2.859956833 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082944459 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071678168 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085599931 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072480493 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066336769 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068395187 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.075152575 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.070797625 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.074243975 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.072243351 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070564197 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068809768 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073705875 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070440286 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073630518 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070155995 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072195368 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070061317 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072057632 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066229628 seconds)
  done (took 2.666494904 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090126233 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071992921 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071987554 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079078951 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072095577 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072128946 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07854535 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.0718798 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071947417 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092232004 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071864784 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072811137 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079272318 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075962839 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074862923 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079151513 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.0785946 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078957605 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071883211 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071935122 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092705071 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072088367 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079297131 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073280015 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072349757 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072025949 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071931623 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076330312 seconds)
  done (took 3.358506875 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072460305 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070096506 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.067525615 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067957338 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067444296 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067468915 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06812264 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.068695895 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070426644 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068154601 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.070410453 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.070398426 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06993042 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.070679804 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070010912 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.070969524 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070078609 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067954548 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068652393 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068722701 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069922328 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070446239 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069970372 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068047012 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067888415 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.071319628 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067928306 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068290047 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07020492 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068554617 seconds)
  done (took 3.30423101 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078934429 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077162851 seconds)
  done (took 1.381672963 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066851708 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084008741 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.067356448 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074251184 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073977349 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071521732 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077693919 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073801579 seconds)
  done (took 1.810106347 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085602597 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081076597 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071950821 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081837359 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.081054644 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087514762 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.138373249 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070979983 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076651651 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.068581438 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084040659 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070095838 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.077840166 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071376976 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07611689 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076860634 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.068808074 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075988116 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072706431 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068847706 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071216919 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079620733 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073345019 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066602451 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.072381995 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092874107 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.08241642 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070088328 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073933601 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07788436 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076766413 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.064794074 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070491411 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.071732151 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.069119199 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.080210827 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085551442 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074323724 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079606634 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071844385 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.081041459 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065845638 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.076165384 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077832265 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081424655 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.071707391 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.073148894 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.066024928 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.069266627 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.073890133 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066674941 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071087607 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.066133287 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078029031 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.075011511 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081735003 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069667472 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.073544643 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073745829 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.074566775 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077615611 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.073416947 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074119005 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070635926 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081367661 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.076307412 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079330688 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.066098645 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06482561 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.069355289 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.08124774 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094030824 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076984486 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.071219045 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07128172 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.068657524 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07456349 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072385545 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077478472 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.078081479 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070755763 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075999853 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078187636 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071341544 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07373308 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.078206793 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.069269782 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.073323619 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068900697 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085933651 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069712201 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06818619 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.068263164 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.083558768 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074153261 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069559083 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.068179976 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078029437 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064644743 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.070127574 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070482597 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070893395 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079727061 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073779149 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073823284 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077971624 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07674422 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06985058 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072425214 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.067237915 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.196129199 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.072032689 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.079239268 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.065412252 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074930928 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.072060722 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.070999049 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.079276552 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069057251 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070314454 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07815404 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075859754 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.069707749 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067959441 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.074254198 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.070526809 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073693303 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07889598 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069489407 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065676904 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.065778512 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073987493 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070411036 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074369314 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074643323 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073036977 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064991667 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068516522 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075466376 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078966298 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070777859 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071742169 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076270274 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071936436 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.069584189 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076992724 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073255666 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.07023634 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075492529 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.07167723 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065295265 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072713188 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073339929 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069360229 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.074797409 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073191223 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073752931 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070941978 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069147494 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.0774562 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071909212 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.070354891 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0708474 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069213666 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081936502 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.073245136 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06601767 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.068021922 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07899367 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.069185298 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.070140228 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.0703924 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072772047 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.070938964 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068535665 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.070446549 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072635671 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079728178 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073906742 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071521713 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.076615127 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.084080216 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.070287359 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073496543 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070284042 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071472547 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.072114468 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.079962997 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076893121 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074858509 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.073733624 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.067510759 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077097618 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079480831 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.070342723 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068540942 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.070055338 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074741103 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076579065 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074987331 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.07147255 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068262595 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071169294 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072778534 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.07269401 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070192098 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.070332132 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.076504873 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068198632 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.076885481 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070450119 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080185252 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073533113 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065119899 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071744112 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068035793 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076123853 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064591947 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067740228 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.070028014 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070496104 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.069039555 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07215586 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06433986 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.204907099 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079570295 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.072324305 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.071589979 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.071389161 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078123915 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.073215237 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074931246 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.074857877 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.077807307 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082034914 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.07108209 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.075057208 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081785814 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.071053258 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065119995 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.079243554 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.070415163 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.070008753 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070387753 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.069086688 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07417088 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077930884 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076983713 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064779436 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07361968 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069523663 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.070286215 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065585443 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07561877 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073944347 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.071976016 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077978124 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071107897 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070746965 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075721984 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070247352 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070610794 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.071595926 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07355126 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.07138613 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.07190089 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.070492842 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073070699 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.070394033 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068010248 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072678382 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070175809 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.071553746 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075240113 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.069677033 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070661655 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07320679 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070968527 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071066448 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.071738493 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.070447602 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074098575 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072013497 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071982466 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.074073227 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.067022137 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078979047 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06994607 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07826142 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071547788 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06746571 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.077062399 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.073259186 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075762557 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.07150978 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.07102976 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072514434 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070184044 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.074133027 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078167566 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068923007 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082423147 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079023905 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071886125 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073608124 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071350636 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.07286269 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.070373477 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.071941668 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071730698 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071500783 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070670819 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075361625 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073522451 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071604828 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073362728 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.072165786 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.07115008 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071848022 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065140098 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069976318 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.070214156 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.07018913 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080099137 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.07054686 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.071077402 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069340182 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071318137 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069908122 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066862239 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.077231078 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077509429 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.070435024 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076578366 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069799999 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.07116573 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079700099 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063982076 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067714584 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.068052854 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.198711571 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079667051 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.072231832 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.080755541 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.072340601 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.071276414 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.068108612 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071432344 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06943762 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.065460512 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.069484247 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074424899 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.070103203 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070334368 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.071101272 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073202588 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07216513 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080355507 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.069735223 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.07189728 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071110468 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.068242736 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.070893012 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069666093 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073826189 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070638018 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.068761643 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068521251 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070690785 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.071719932 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072836189 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070455245 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.073016337 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078279731 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07017935 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.07427834 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07289413 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065407966 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073688941 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069909829 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069841294 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.070392963 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074508601 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074746917 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071192642 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080136424 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070535041 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074469602 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07075488 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06842658 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069969738 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070078065 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070415202 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.070605354 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.072138373 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078547052 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.069140085 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.074270395 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070995021 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.071594308 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077750781 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071506975 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.074029136 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076703055 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.071651857 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072570852 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078860843 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074166046 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074016318 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071219921 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072512159 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076468557 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.070328084 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.077286415 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.072292758 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.07187357 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.073240186 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068865131 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071054802 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070732757 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070155103 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.077671518 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071312642 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.071064867 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.070460068 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068750634 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.072437817 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073886047 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078907043 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073318369 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073959602 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066165993 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.068082726 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07167169 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.069648921 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072462538 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072774275 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076532573 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072534376 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070955378 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069821131 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07976562 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075994306 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073979684 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068400131 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.0742818 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.071051685 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072740272 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.07138518 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070621388 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070934719 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073372237 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071422045 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068899582 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07693055 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073733365 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070021744 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.201523303 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.072702019 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.072439385 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.066545837 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.071836507 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.073535006 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076683093 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072918154 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070519995 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08132238 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.068593442 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.071083026 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073016918 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070349221 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.075972377 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066153419 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072072492 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071625082 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070919585 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.065615619 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.071467948 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.069329823 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073752544 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070384588 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065938526 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081368074 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.08076582 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074182462 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070347701 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070181713 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065531263 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065916981 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.07097623 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071695926 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071837198 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080344988 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069529966 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.070492219 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065846479 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070139018 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0735941 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074065357 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.068080392 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065597275 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.07037 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073780111 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076076911 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068877116 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070417706 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073726486 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.07332547 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068877932 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073435947 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067716002 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074914854 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083613038 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070737564 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071515146 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.077704085 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078087468 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071194715 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065967567 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070872231 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.074057935 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071362752 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071384956 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071512842 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086308051 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074550698 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.070206866 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069673871 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.074062297 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.070212327 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078658798 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071564563 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071105714 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07789167 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072222715 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078979644 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074119199 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078736894 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.074665974 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074844232 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.070282705 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071207567 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068599926 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.07035476 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.07170181 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070948728 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075594716 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.078229144 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.070472009 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081789826 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079558919 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.073122936 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067279989 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.07062568 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.070203679 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065607106 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070663219 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068375451 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068375755 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068369273 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069114172 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071393008 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076063954 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071402104 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070599673 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069572046 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064721229 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072994426 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.07307983 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071182941 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066900191 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.070017147 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070085317 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074156946 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.204779499 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.069631073 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.073484106 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.073570496 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072580126 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.066104816 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.078132414 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070004211 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072367931 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.070850328 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071171194 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.072133591 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074530846 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075390711 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071505308 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.073409588 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.074447788 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072326141 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.068159057 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.067629417 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075849091 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06892167 seconds)
  done (took 45.275466243 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103377506 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06720878 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065918362 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066838876 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076554416 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06727481 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066607831 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067782585 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067504109 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069650103 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066805899 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066235311 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074495316 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081725715 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076706648 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071239471 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066827836 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067182681 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066260703 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06742608 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074409208 seconds)
  done (took 2.807595095 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077059342 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.081646948 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080036992 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085311099 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0751562 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074209818 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.079600263 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073970171 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082114547 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076574902 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082055684 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07460201 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07677001 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.076638513 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076946718 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074327356 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082033809 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075246036 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.074179034 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079721252 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074123726 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079815461 seconds)
  done (took 3.013010153 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070681136 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.069851483 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072279962 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065088289 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069279259 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065651025 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072732017 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.0679027 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073303421 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069309857 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.069315496 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.069804242 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072167044 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065443707 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.070350283 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.068633548 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111638784 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073728258 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.069299323 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070882701 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.066591242 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072047475 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065949231 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066221563 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069492134 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073709172 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.071379761 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068187835 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.070129351 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.069703186 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070067479 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.068209493 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071957652 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070809225 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.070106274 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069469366 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.070065931 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.070617911 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065613137 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.068110616 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071718789 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.069072651 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070555782 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072042912 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068815931 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06902095 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072054458 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070718685 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065730996 seconds)
  done (took 4.760025573 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081753897 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111921123 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.071461738 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092875039 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083755601 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076153261 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.074328489 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093369888 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067462903 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068277262 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085248516 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083957419 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.070140916 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074638572 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.076888071 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069580022 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.07099197 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069224574 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073820216 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069482353 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073829548 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07661681 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.084207808 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082838378 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074473185 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068898551 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069269766 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074337633 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.082092678 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.074370233 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074396156 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074412946 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.085188122 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071766425 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069104983 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071662888 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085764722 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069842321 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072168297 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06761194 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071821266 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073624441 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076793665 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085263565 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.07073628 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.075400943 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069357274 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.067004271 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.083064636 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.072106118 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077636471 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.08407275 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073352255 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069761659 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074562531 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.08483929 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069573451 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068729164 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.073116142 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.08277253 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.068083234 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073653734 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.083551276 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071613461 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076400666 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.083624323 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.075704999 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073428001 seconds)
  done (took 6.616507309 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080230484 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.099065779 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085805989 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085964846 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079384037 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.079550824 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080503411 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.079159656 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079222187 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083833205 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.0800786 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.120513513 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.074962457 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081482593 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.088007392 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079458846 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.079490889 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079430522 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079343886 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079751218 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079997604 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086225224 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079555525 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086601404 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083015458 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07510694 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.079526721 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079919249 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086262078 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079374553 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082828149 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.0805471 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079674566 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086612227 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.082924014 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.079981383 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070089693 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079208015 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079951735 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079493369 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.074964859 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086863062 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.079467464 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.075425253 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079827408 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079249407 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087066004 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083037542 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081586203 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083835201 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079475273 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086037651 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079597968 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080245244 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086798535 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.089814806 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086271977 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087129957 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080026153 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.087182339 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086466665 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089382731 seconds)
  done (took 6.454263739 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085988313 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078046438 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.085554684 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065797299 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068392686 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07594762 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068491878 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.068718963 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077787773 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.0803115 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080269996 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075952972 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079093005 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080152708 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075691838 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07881735 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075934388 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076015678 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077960235 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075984319 seconds)
  done (took 2.859217745 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078188133 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086904841 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071089813 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074842869 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073796392 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075493533 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.073109222 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073775708 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072139636 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073288276 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.080501283 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080496043 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071712364 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075884618 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.079837962 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075480869 seconds)
  done (took 2.534522992 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.088205007 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.077895897 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083076565 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070282038 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.071860376 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066949604 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069830428 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065418971 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066551557 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082650973 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.070806753 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.080760169 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.07021757 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.069533717 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.067587581 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.074832349 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066890722 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067541261 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069779825 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.082017172 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07417747 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068795904 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.073615197 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070134041 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.073372201 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074688655 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069206026 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.070650325 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067644822 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070362 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.07385122 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073639725 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.067340933 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068040518 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.069243026 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067251958 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.070255525 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070422642 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.076487883 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.070241897 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068783224 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.072358159 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070362066 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071451459 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.066786238 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070683808 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.066873209 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.072371664 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068561597 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072956534 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069830806 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072488164 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070748823 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07694545 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073492405 seconds)
  done (took 5.264477588 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083907787 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07311712 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066443569 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067888324 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073120303 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071503374 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073217132 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071214719 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071835904 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068382612 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071658505 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07278633 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071761565 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07328639 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072255928 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073684878 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066157224 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072167914 seconds)
  done (took 2.624942648 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074916582 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07028378 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.077072358 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070409833 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.070592511 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072425075 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066855093 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.068579548 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069100388 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070720265 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070603408 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072518146 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068733409 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.073068189 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070475671 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071194138 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.072685113 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069619505 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070401379 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066448917 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073063896 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06880084 seconds)
  done (took 2.880699871 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.097039133 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085889604 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.14418519 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.082378212 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089244586 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.075208077 seconds)
  done (took 1.896437534 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093905548 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103086543 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070636227 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072893839 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079680659 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074632088 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07408847 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07488727 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081866543 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079416712 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074798573 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082298606 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082342085 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081929374 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079780123 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080046835 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074758401 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076720433 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071112609 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087810258 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07436464 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082452704 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074796268 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074010197 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074120746 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081487169 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081910521 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079887786 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07455109 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082514522 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079622404 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074134593 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08251003 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079625586 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073515275 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082867152 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074803446 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087212037 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080095321 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082078869 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073527162 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080323327 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082361726 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079460122 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08236565 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074373063 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078970925 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074504479 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075057108 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089157762 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079756571 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081710259 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080133397 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083520023 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082358952 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088678585 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079563433 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081599864 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080135841 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080396627 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081199151 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079737918 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082117834 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080623824 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080288706 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08180832 seconds)
  done (took 6.593345035 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107493454 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071291861 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074684574 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079324541 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081189206 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074294645 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074257895 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074323805 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074593094 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071245743 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111925165 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074386151 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081599845 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08179497 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075290817 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074731073 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074535221 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081674502 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07143314 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089018984 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074436233 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081293323 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081382166 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081437716 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080012231 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080528814 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074742068 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074740044 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07428248 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074272606 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07919621 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074947218 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081809035 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07175066 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081671201 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074830312 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074575967 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079846192 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074351932 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080360662 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082126561 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087721309 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07458194 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074591039 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0800678 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074327409 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075712749 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071444758 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074669645 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071873981 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080029625 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079952861 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079852784 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081832159 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074532013 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074763594 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074819313 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075305645 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075249545 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080316197 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081385585 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074168671 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089249974 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075155139 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074444363 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082010632 seconds)
  done (took 6.516989402 seconds)
done (took 134.922179045 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.199660897 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.176410439 seconds)
  done (took 1.695701845 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073167627 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.102719658 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081156054 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133341155 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070471582 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104927594 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103338064 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082464425 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.07086075 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071086531 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071156594 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073142853 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135507717 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071373234 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070717568 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073082257 seconds)
  done (took 2.722240276 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101342406 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.163595578 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104416421 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069308456 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101370861 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076562556 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069847199 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079974402 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075361483 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070281531 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077060118 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07504039 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069292464 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074662635 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.077282222 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076596093 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070129434 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076614121 seconds)
  done (took 2.845090124 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100993115 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094456381 seconds)
  done (took 1.531756432 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155041943 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.136285548 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.204781375 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.351614498 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.163229859 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.151298023 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.1464843 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.145762444 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117115483 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.141765469 seconds)
  done (took 3.046243324 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102714646 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.156373015 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.272492735 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120184415 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07711182 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097882332 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121476617 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.083201435 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084277419 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.084252076 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084296184 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080795307 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103176681 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077259932 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078278944 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080942682 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106176884 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077580633 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07873361 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.080043876 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.104240469 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070554712 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.0777871 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077271585 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.082721559 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081700085 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070116696 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070812594 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080633838 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.079094584 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080914845 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.097257601 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.082027719 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10936711 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076181157 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.110270302 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081577323 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.078225054 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078715793 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077401362 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.08281921 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082597542 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077406417 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.081345381 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070512679 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080708724 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070763804 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070878002 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082218358 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071675357 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.08247325 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080994934 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.110242601 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071251179 seconds)
  done (took 6.19061726 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110674549 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10984275 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074769734 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.116514689 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106695379 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073945084 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109671676 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.101143358 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.112130834 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074382756 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072309865 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074663107 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084691024 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085857763 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.120315921 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.111595798 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077254067 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073377207 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112682372 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111473267 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072635013 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104511711 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100577531 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110946203 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071482131 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074786935 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073106726 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074681931 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080485974 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081817066 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072340669 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083362732 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087829006 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082111633 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071756926 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072796654 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072380646 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.083258843 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082936004 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082844967 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081204686 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071916439 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072390012 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074250708 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073428182 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07217937 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081835043 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.084070709 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.082676042 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073405107 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074122089 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.073122687 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074042581 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083318897 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081393265 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.084286836 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083016492 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072560035 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072452516 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07607409 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084450309 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082724973 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08275136 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07370947 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.084170365 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072956941 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085011989 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087249604 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072473317 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073979967 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.0722782 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072670219 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.075898593 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080948719 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.081188115 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074541825 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073212591 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073191196 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083445909 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081705715 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072346407 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080906788 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071742406 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072062294 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073855318 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073994409 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.080318443 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.083152236 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073254504 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072029382 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072247178 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071272789 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070957862 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079251122 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081900879 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081284148 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.081139876 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072327045 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080293248 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.209827866 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07493004 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.082874587 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072977623 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074577925 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074177796 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081400313 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.08103234 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083698847 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072679964 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072930636 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.081331895 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083830902 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072403197 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080861761 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082832066 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.082005985 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071281362 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084061918 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072413018 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082815754 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072430464 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083321211 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072333141 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081859977 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071879012 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.0714026 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072752088 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.082331992 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073581819 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072011277 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073840793 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072319993 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081993205 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085098975 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073998922 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082126983 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.081389107 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073592134 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081335861 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072001759 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082018299 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073133466 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073540854 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071339209 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084961245 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072549751 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072713938 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072504201 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083645684 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072980546 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083219431 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081496732 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071992174 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084652361 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083100657 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080570766 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083966422 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074072883 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073199563 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072234231 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072407363 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081191016 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082492902 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074620894 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072621664 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081222384 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.083403578 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071306278 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.081328574 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081775041 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082473821 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072406997 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072830154 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08420059 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083562519 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081577899 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081156936 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081671783 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072645324 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08098051 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081615688 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07283263 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087879668 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072691739 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.085382214 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.082145395 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079853268 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081451699 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.083179611 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.083113708 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.083157337 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08546427 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071053555 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072017723 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080469691 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071613298 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071607202 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079877544 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072739066 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07257476 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084204745 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.204675674 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.083821388 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.072521912 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.082853698 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072690738 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074149284 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086492061 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073194637 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074681242 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.08186679 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072119311 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.080870723 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08421452 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081199704 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072426609 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073655131 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082649435 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.082300267 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074646271 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072827183 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073782314 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.081198958 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.080603274 seconds)
  done (took 19.472692944 seconds)
done (took 38.85308265 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207967966 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153190048 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.174396247 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.11871323 seconds)
  done (took 2.089827118 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.118077155 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102474417 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.096173068 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.069304675 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102033962 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06942165 seconds)
  done (took 1.92895403 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.297477469 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.204174807 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18341225 seconds)
  done (took 2.053453535 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.205157063 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190671289 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.430420262 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.267407962 seconds)
  done (took 2.570932492 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144974132 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.09154495 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071341058 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087932203 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133952545 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162128568 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102874469 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.127679675 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083528282 seconds)
  done (took 2.429397182 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149694105 seconds)
done (took 12.59546293 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.102152826 seconds)
    (2/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.078839887 seconds)
    (3/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.115223758 seconds)
    (4/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.081773996 seconds)
    (5/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.081203578 seconds)
    (6/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.174290574 seconds)
    (7/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.220512399 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.087452474 seconds)
    (9/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.08031026 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.082698832 seconds)
    (11/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.160863813 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078985509 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.150633573 seconds)
    (14/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.085073127 seconds)
    (15/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.177867053 seconds)
    (16/309) benchmarking ("sort", BigInt, false)...
    done (took 0.201226155 seconds)
    (17/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.076600341 seconds)
    (18/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.253084367 seconds)
    (19/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.078632439 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.110074642 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.124138547 seconds)
    (22/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.070610492 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173920357 seconds)
    (24/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.204527545 seconds)
    (25/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.094824948 seconds)
    (26/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.076309393 seconds)
    (27/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.234934277 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.11982968 seconds)
    (29/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.077096993 seconds)
    (30/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.098295465 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.092712254 seconds)
    (32/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.079175012 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.093982073 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.183495664 seconds)
    (35/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.219872745 seconds)
    (36/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.401953284 seconds)
    (37/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.099182219 seconds)
    (38/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.164980041 seconds)
    (39/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.20425429 seconds)
    (40/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.207885451 seconds)
    (41/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.070375494 seconds)
    (42/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.118752742 seconds)
    (43/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.07615574 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077330671 seconds)
    (45/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.076275526 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.148969422 seconds)
    (47/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.081774188 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.0774901 seconds)
    (49/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.191306497 seconds)
    (50/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.181237361 seconds)
    (51/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067017911 seconds)
    (52/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.179989411 seconds)
    (53/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077837223 seconds)
    (54/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072533218 seconds)
    (55/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073248372 seconds)
    (56/309) benchmarking ("sort", Int8, false)...
    done (took 0.15179715 seconds)
    (57/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.083935989 seconds)
    (58/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.116977868 seconds)
    (59/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.223824483 seconds)
    (60/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.140530899 seconds)
    (61/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.182270414 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173073199 seconds)
    (63/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.183190299 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.070878356 seconds)
    (65/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.116096789 seconds)
    (66/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.095927405 seconds)
    (67/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083759914 seconds)
    (68/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.085336857 seconds)
    (69/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.131143211 seconds)
    (70/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.078744849 seconds)
    (71/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.05594793 seconds)
    (72/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.099614744 seconds)
    (73/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.146163261 seconds)
    (74/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.12907396 seconds)
    (75/309) benchmarking ("sort", Int64, false)...
    done (took 0.070900439 seconds)
    (76/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.156190116 seconds)
    (77/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.156301889 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.111851975 seconds)
    (79/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.203041391 seconds)
    (80/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.079840603 seconds)
    (81/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.070916647 seconds)
    (82/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.083246547 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.094804759 seconds)
    (84/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.08505107 seconds)
    (85/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.081454391 seconds)
    (86/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.149585685 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.092817914 seconds)
    (88/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.055836114 seconds)
    (89/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.077374296 seconds)
    (90/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.090720316 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.070077549 seconds)
    (92/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.215157308 seconds)
    (93/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.112542979 seconds)
    (94/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074056071 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.12832519 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.125068617 seconds)
    (97/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.107741759 seconds)
    (98/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075441528 seconds)
    (99/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.163217082 seconds)
    (100/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075851855 seconds)
    (101/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.058274431 seconds)
    (102/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.103594372 seconds)
    (103/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.076226544 seconds)
    (104/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.069158554 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076488362 seconds)
    (106/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.112538061 seconds)
    (107/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.082936045 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.11444689 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14726787 seconds)
    (110/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.072111674 seconds)
    (111/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.067084107 seconds)
    (112/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.055786147 seconds)
    (113/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.069510173 seconds)
    (114/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.21276893 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.096192524 seconds)
    (116/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.168090969 seconds)
    (117/309) benchmarking ("sort", Float32, false)...
    done (took 0.1331667 seconds)
    (118/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.055610233 seconds)
    (119/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.057785025 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 0.148275093 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.078843509 seconds)
    (122/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.193019304 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.089694224 seconds)
    (124/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.081189604 seconds)
    (125/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.068231927 seconds)
    (126/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.076471614 seconds)
    (127/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076352049 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.102724339 seconds)
    (129/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.079883505 seconds)
    (130/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.06754933 seconds)
    (131/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.056697409 seconds)
    (132/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.056283176 seconds)
    (133/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.166177962 seconds)
    (134/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.15350194 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.127344381 seconds)
    (136/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.057754208 seconds)
    (137/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.06828371 seconds)
    (138/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.113775234 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.096868144 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.070944004 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076400897 seconds)
    (142/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.08330404 seconds)
    (143/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.06823448 seconds)
    (144/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.114458577 seconds)
    (145/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.121299748 seconds)
    (146/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.077601599 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069710778 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.078052922 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09442839 seconds)
    (150/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.081267317 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.0936385 seconds)
    (152/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.112900046 seconds)
    (153/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078394234 seconds)
    (154/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.056001384 seconds)
    (155/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.05642673 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.118217069 seconds)
    (157/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.148593145 seconds)
    (158/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.056801918 seconds)
    (159/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.073190162 seconds)
    (160/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.077862868 seconds)
    (161/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.071584897 seconds)
    (162/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.15939056 seconds)
    (163/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.056751465 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.115353962 seconds)
    (165/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.055500603 seconds)
    (166/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.16408858 seconds)
    (167/309) benchmarking ("sort", Float64, false)...
    done (took 0.132072969 seconds)
    (168/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093247883 seconds)
    (169/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.159190564 seconds)
    (170/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.15513479 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091608155 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.095752085 seconds)
    (173/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.055649866 seconds)
    (174/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.072093587 seconds)
    (175/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077986367 seconds)
    (176/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.055572187 seconds)
    (177/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.075509356 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093756769 seconds)
    (179/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076459889 seconds)
    (180/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.077303075 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076825492 seconds)
    (182/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.056847288 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.069422782 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.079425067 seconds)
    (185/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.224304864 seconds)
    (186/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.087040355 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.082632654 seconds)
    (188/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072391599 seconds)
    (189/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.05671519 seconds)
    (190/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.068111338 seconds)
    (191/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.175613127 seconds)
    (192/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.098383558 seconds)
    (193/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.069142334 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.143059183 seconds)
    (195/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.055664121 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.12621523 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.070753996 seconds)
    (198/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.072188929 seconds)
    (199/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.056419803 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.068581576 seconds)
    (201/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.056140265 seconds)
    (202/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.05629857 seconds)
    (203/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.076967593 seconds)
    (204/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.194120007 seconds)
    (205/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.05605293 seconds)
    (206/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.115018191 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.070531318 seconds)
    (208/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.057143656 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.148960935 seconds)
    (210/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.068760827 seconds)
    (211/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073938104 seconds)
    (212/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.059733971 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078726023 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076876705 seconds)
    (215/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.069634717 seconds)
    (216/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.076024017 seconds)
    (217/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.055905909 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.070453092 seconds)
    (219/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.0590296 seconds)
    (220/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.073622985 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.070173823 seconds)
    (222/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05557476 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.091555593 seconds)
    (224/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.151829594 seconds)
    (225/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.079401333 seconds)
    (226/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.069727892 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076010949 seconds)
    (228/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.083308609 seconds)
    (229/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.057338103 seconds)
    (230/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.055997873 seconds)
    (231/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.056877626 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.09844636 seconds)
    (233/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.057092811 seconds)
    (234/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.070111083 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068875441 seconds)
    (236/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.056311845 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.070407001 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126915383 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.09198178 seconds)
    (240/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.072092711 seconds)
    (241/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.057583164 seconds)
    (242/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.1233509 seconds)
    (243/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.080434333 seconds)
    (244/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.05618161 seconds)
    (245/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.057492928 seconds)
    (246/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.194749134 seconds)
    (247/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.056661969 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.096804132 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.141607486 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.093037005 seconds)
    (251/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.078182227 seconds)
    (252/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.078220757 seconds)
    (253/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.19365414 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091123986 seconds)
    (255/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.084407044 seconds)
    (256/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.057579106 seconds)
    (257/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.056673601 seconds)
    (258/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.058104015 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.070604793 seconds)
    (260/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.067433341 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091338724 seconds)
    (262/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076963295 seconds)
    (263/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.069786408 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.070856416 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.069866208 seconds)
    (266/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.069372899 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.077703608 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078189414 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.097044483 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.070811866 seconds)
    (271/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072952507 seconds)
    (272/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078588109 seconds)
    (273/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.056503178 seconds)
    (274/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094834301 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091746533 seconds)
    (276/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.074768624 seconds)
    (277/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.056459822 seconds)
    (278/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.180423441 seconds)
    (279/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.059011005 seconds)
    (280/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.056067781 seconds)
    (281/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.056193563 seconds)
    (282/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072658524 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077645018 seconds)
    (284/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.070876717 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.069360419 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.070421307 seconds)
    (287/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070867279 seconds)
    (288/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.070836065 seconds)
    (289/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.069549941 seconds)
    (290/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.056959148 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.068630405 seconds)
    (292/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.173500609 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.093188405 seconds)
    (294/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.055695524 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076932014 seconds)
    (296/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.056648836 seconds)
    (297/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071917863 seconds)
    (298/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075062848 seconds)
    (299/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.056383167 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093962936 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.100120221 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075930845 seconds)
    (303/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.072117476 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.070006592 seconds)
    (305/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.057696863 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.079245932 seconds)
    (307/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.056063071 seconds)
    (308/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.069299263 seconds)
    (309/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.23655368 seconds)
  done (took 32.270720158 seconds)
done (took 33.655820224 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087208924 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097250724 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.081208886 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097392859 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.086126118 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.081340098 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077861484 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.083102004 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.085271922 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.086651634 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.084947331 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.060301488 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.080042929 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.079814921 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.079684475 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096216054 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083848108 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.078224891 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077951979 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.069801678 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.078011128 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.07043602 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071999465 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.059147355 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.082966071 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076369921 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.079284334 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079558159 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.070216963 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.070310398 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073991221 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.078351712 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069843823 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.084804386 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.077728969 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077842871 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.080093771 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081501703 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.07196829 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.070233154 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.079100544 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069943283 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077486937 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.078209964 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076930309 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075669705 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.078079151 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081656124 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095607952 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072688245 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07997927 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080782972 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.081306529 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.077746088 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.074439322 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.078537771 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.0748983 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095640384 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077981371 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071861652 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.079228794 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.079678444 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.076052967 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07785296 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077730053 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.08038308 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.081481702 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075636517 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07947907 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076602069 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.070227064 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077597011 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.074049765 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.070334635 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080667357 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082775119 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06975617 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.076540279 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077445446 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.077774676 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06928891 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072433964 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.071628178 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076821372 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071792483 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.061172711 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.074205613 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076757454 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.069510727 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07905841 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.077265824 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.077321172 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071505609 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.081549539 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.069463924 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.075879906 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.071256482 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070668949 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.072186783 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.074539179 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069817882 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071586445 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.079838592 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071007947 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.076067517 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083568065 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069610711 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.076686265 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068690198 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.069022706 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.084218583 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.080189271 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069658025 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072091091 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068521161 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076981083 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06819633 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068663885 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068408725 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.069398515 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075268166 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068945307 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071062768 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076158313 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.219729846 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.070551956 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.074603145 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071881771 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.070400504 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.076164236 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.069950649 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070173971 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071442327 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.066295683 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071876153 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.069727128 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.076942828 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072169011 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.078014704 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071316278 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078615395 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.075223522 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075821116 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075299324 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068551514 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.063490443 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072377514 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072155044 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.072079714 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.070147943 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.07083776 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069898477 seconds)
done (took 13.123716684 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070476044 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.139989858 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099934803 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098791144 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.088919757 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.071279917 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079252999 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101873069 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.07162869 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103236427 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.09104999 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088989068 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.116429868 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069561565 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070516639 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.074705518 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071853061 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084975495 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.102510259 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.089673147 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117010262 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069994995 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095596579 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093198482 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091710502 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.097006298 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.071532271 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.074622633 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.073959058 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104995271 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.09145123 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.075034232 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.072151012 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.101218307 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.096582371 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087290045 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070769501 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086724712 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.071750197 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.070339718 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.072786635 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101850043 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084830801 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084591761 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.0739067 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.080758462 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071361364 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087698552 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.092868966 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.08287612 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.0893462 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10412355 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073138854 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.087826612 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069438521 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08946633 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080873636 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072687248 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070576935 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.077797439 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.070902103 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.07392403 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.08420068 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.084596238 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.075510906 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.088240409 seconds)
  done (took 7.072102152 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087369388 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.09448942 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086545907 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086555611 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.070048391 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070926474 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.071692754 seconds)
  done (took 2.059313576 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071050421 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091302894 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092561459 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093182335 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086247458 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091929487 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082528071 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.071288991 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092006161 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.072338488 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091381399 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10423712 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.074337036 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078014756 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094540272 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070805463 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094739897 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.071531552 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073740904 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094855307 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073034236 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.100760378 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07493357 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.071699972 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085149597 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.071955032 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117067631 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075821593 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073507323 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073942438 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069637659 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.110838463 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084985423 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079802416 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071226743 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086826556 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.086113947 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069772947 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087940469 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.08019792 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084844286 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071520274 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071766746 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069207537 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.075978677 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.08204389 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.072283912 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.072307306 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.07423171 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090574772 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071700321 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085221238 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.074335959 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.078217762 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072827292 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077974943 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081431274 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071899175 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090747841 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072784211 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08747153 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087802306 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085221453 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087868445 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073253017 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084760575 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085249156 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073781189 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072868924 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.075128249 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088083843 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069719611 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072907795 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081945735 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073924584 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094260104 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093487947 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072496597 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.084396098 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.07189837 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071840759 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071678505 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094227848 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077237873 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071212555 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075131919 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07498445 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069563656 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.07042938 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.075448825 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069312771 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.07283458 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.074871262 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.074050068 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074055605 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087911977 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.073931276 seconds)
  done (took 9.246450131 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073171267 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.072325693 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.07330602 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071966384 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071988211 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.071715993 seconds)
  done (took 1.945196183 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096582436 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.073023052 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083290278 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.075659732 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10662176 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090610651 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091427301 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.083085571 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086734082 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082610344 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090451622 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.091677805 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095576296 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.076969943 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.09073642 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.076181412 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091538561 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078793223 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082297453 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077116499 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090066721 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076429372 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076565195 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086351545 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.079631993 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075782648 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082738676 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.08321337 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.08260651 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082576761 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076578689 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.079726329 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074989587 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.082723393 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.092149451 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07496746 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07590641 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.081642918 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076725496 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.081003575 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.092049265 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076557663 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07794816 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.080932379 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.082445326 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074907001 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081183315 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083134661 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090716031 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.080935207 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.083142544 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075764017 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.079388959 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.0811927 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074985661 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.082196317 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.081087794 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091420966 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076859289 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075558158 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073520743 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080362393 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.082112568 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.080142764 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.082474933 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.081607009 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075221234 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076907437 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076843792 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07562782 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.080994825 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073007444 seconds)
  done (took 7.376149785 seconds)
done (took 29.168123568 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.538793744 seconds)
  done (took 2.008974257 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.621176072 seconds)
  done (took 2.116184846 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.502659103 seconds)
  done (took 7.9929899 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.401723746 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.506827488 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.743024902 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.141401221 seconds)
  done (took 3.332083726 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.722205876 seconds)
  done (took 2.22605893 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.240060293 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.229409707 seconds)
  done (took 1.980808392 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.386194892 seconds)
  done (took 1.880851622 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.127065929 seconds)
  done (took 2.621819904 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.253422891 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180834277 seconds)
  done (took 1.931610841 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.47303218 seconds)
  done (took 1.966245702 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.872762482 seconds)
  done (took 6.367153503 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.228150393 seconds)
  done (took 1.765061636 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241382778 seconds)
  done (took 1.736937508 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.769935578 seconds)
  done (took 3.265357094 seconds)
done (took 42.695928797 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.087292561 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.089842642 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.089489683 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.085397947 seconds)
  done (took 1.835599689 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.08165506 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077172105 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.080833571 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077330816 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081220434 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076985898 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.078940154 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080622891 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077436932 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077531062 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077305244 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077403795 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079513375 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079063314 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.0762704 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079372333 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.080578457 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076788743 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.079791497 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077693816 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.075204609 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079388789 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079655667 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076031738 seconds)
  done (took 3.38709094 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082164807 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.077229148 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.079197662 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07590008 seconds)
  done (took 1.820038735 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082018151 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.096329186 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093670934 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.082315671 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.097867675 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.091183894 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073808502 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.074033165 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.075343821 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.082102405 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.072565009 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100287598 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.093295188 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082471511 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.084123413 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070342514 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072792487 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092204265 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.083906089 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.083434347 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07521462 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082663269 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.07288184 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093944414 seconds)
  done (took 3.510697444 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.090724768 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104433891 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085548087 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.09401472 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096153293 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070353004 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.092539217 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097054051 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.128785291 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.070273329 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.076894099 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.07026651 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.078277313 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069913667 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.086537524 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.11104395 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.114072269 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.073725683 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102479751 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070039257 seconds)
  done (took 3.293693895 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076480097 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073997732 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.074646117 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069713774 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.08128566 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.077069964 seconds)
  done (took 1.964012872 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072996112 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.074049941 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.072093414 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071336957 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.075661904 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071351677 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070885271 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.072557701 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.072162554 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.07162862 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071465489 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.07044441 seconds)
  done (took 2.37299445 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.203660821 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072865187 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07371258 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070251399 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07521511 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.071485802 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085066894 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072546229 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.097618336 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071919684 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.071085489 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073362213 seconds)
  done (took 2.547532384 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209105526 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080348679 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239540633 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156969879 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116983988 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121761534 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117357333 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11770115 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.147358681 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10633618 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170561416 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170418425 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113385542 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141643784 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094054631 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.10499276 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162711796 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169224862 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111133144 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168986487 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151858228 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130836722 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150002177 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107268255 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111148404 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127211621 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07655025 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085240203 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174017939 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138970925 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150321318 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1197766 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098699067 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18081014 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172614745 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146327701 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153072441 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088956906 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.109471634 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135967009 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201604106 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093818824 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166246517 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255327133 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086226944 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136470936 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122039836 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.123064867 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108735435 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094300113 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149866933 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18760617 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.141969338 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092435361 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12672311 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118544358 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.119593642 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116755532 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180302285 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161320678 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131000976 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075613981 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114825872 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153858722 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134495945 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.113282726 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.12986469 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09706352 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141362657 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157894754 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128562773 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149337325 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.122217168 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093385582 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122850029 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144896215 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135582667 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163197947 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128257672 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077791658 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131337669 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107322864 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084386099 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.146905068 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079145046 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176673225 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103729238 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.11022422 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127348193 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112778333 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113987491 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166152254 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.290926879 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109146402 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.070821624 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110271317 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.123032154 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151653871 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091534586 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111215746 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120635668 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082002816 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144134619 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080012851 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125743434 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.080586184 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127153613 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13299647 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082646433 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125098768 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10841817 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.103946593 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13624288 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160715664 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091978234 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086231009 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166945474 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124880303 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.106671095 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146473355 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158588931 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.10395511 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106207694 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152274205 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17559897 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094240953 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165137107 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111333386 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088946063 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092272056 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127485701 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116718792 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.1290734 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086088094 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.122320767 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171444511 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079325714 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099986185 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137480724 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082547153 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084725218 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109983503 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110339235 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100960703 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.104612281 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.107310619 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142261313 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125557428 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107259184 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125617942 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100619034 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16469642 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090435284 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.103816328 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106876197 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072780318 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136206622 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157043461 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082034987 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157081925 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.117557484 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112786112 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115372718 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084259194 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134593412 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079778929 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072430157 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135281598 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108540941 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108917572 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.14272525 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113555046 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.122096415 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.115415025 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130195391 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126188172 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.124775269 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104685057 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087976472 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109614426 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124590683 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074246663 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089414356 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080104118 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104002115 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095079583 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083417897 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136188004 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118558561 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110741237 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109169375 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095620263 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140225327 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07646474 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124051658 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116093817 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094243891 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.145032336 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143341232 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127574177 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09772046 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129848643 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.329556016 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080465213 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.096574517 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129114916 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090023982 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090579552 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124308085 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150522444 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135076187 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143547881 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12859934 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125741073 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158889558 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07553784 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.122847947 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149155922 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125366336 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.111212177 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095618085 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.10535165 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145584276 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112639886 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18386214 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117690354 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127813094 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158072866 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.105591237 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085076042 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10725497 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14041628 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109829593 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146394175 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104000852 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093274923 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112994294 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079767777 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103710955 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132407379 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125894503 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138516723 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.118584964 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138904016 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082430309 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121092521 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127160915 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128084507 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.068894599 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123948899 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163085347 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099022861 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121341464 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15454942 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083268353 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.288319755 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175673504 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147279974 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089792928 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113419797 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123846692 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130254766 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122965752 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142788946 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112362158 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138590717 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114352173 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089162236 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092595634 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10184902 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109134062 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.099860122 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10976903 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.117652512 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.101319265 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136471849 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10875482 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11401878 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120909906 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.103032004 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096806263 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10153615 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175558765 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122720311 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1737001 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.103526521 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145889379 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165856855 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07937795 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084403718 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082612752 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143136878 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089128053 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134580394 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.116872041 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120909074 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127457857 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147065763 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100457087 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.0733916 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1112536 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138426644 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128155409 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102452437 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.108212026 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164623366 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.1037577 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08330855 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117897778 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118881701 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.255042071 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172098047 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.066692666 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109716951 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080812725 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085302167 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129251762 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153529163 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084404638 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104134896 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121959402 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116386494 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129711842 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105592452 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1161545 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128889603 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152366667 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133560211 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.095152948 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116069939 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131761321 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1592397 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106355171 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.102137148 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175925813 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153640041 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162150761 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.093511727 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117741745 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11690968 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114683046 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142117721 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088567738 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166226169 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086372025 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139343688 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1087433 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094086274 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136680835 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.115615635 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092704434 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150395468 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119992444 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086841282 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081842569 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121660913 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122543975 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109835515 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079882132 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143294967 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.077665396 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283008642 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160689528 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084517448 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108244779 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099691734 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084061145 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110567883 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106456913 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091164586 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.103123387 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17282882 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.091182396 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151597546 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136411066 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117929411 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138743077 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106550765 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.648459281 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081671352 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152992485 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121797896 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175496407 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104868074 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120930161 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113544088 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128325899 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147373804 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108224374 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179887882 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134509398 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.120221262 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084422059 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106958367 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109149318 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.093168491 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112697714 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117548663 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121758067 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.098006712 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.121119502 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128301028 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086463757 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101122323 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157743002 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122895173 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147935539 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142042416 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090003379 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120087795 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140922968 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08445237 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.124237189 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.301620264 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110906619 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1040216 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084359499 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.104826224 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15916154 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.077476102 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165674892 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122913752 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112582708 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115640813 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115133397 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136070739 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111540249 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124614255 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0967838 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111844836 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117024562 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085581173 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081149275 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108513845 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115182046 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.100922933 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101640941 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.102863809 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152383628 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.076453081 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103580796 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119581753 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151221379 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176050984 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.091799141 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087072608 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125311174 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121159548 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11716059 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124644606 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083477415 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086677124 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084853378 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.084815852 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111463109 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117660365 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118773317 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113687939 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166937564 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087280283 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.229920683 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100826805 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107709077 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074297292 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.082169287 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100090068 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103146026 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110420397 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116806591 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.308095638 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099163947 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.09490449 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096250503 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.078983343 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087611235 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129639711 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11310445 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12110614 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106368026 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066805398 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112899323 seconds)
  done (took 60.626911703 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111957783 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.086380244 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100526268 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148212618 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.127047317 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.20457274 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.160354733 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194113039 seconds)
  done (took 2.777382968 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072042633 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.098799536 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106898262 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.086586976 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.070646912 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.07379324 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.232462932 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.085389246 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.070615137 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099801839 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.083304064 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.073125402 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.439522589 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.07090034 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.072533958 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.067542144 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071203233 seconds)
  done (took 3.515776248 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.393837324 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.621961546 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.349131176 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.080832929 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.952616893 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.093449388 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.131522222 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137228536 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.08157849 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.526880682 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.41205983 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.132773654 seconds)
  done (took 18.562328898 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.084475687 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078802278 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.093258378 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.09281399 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081216528 seconds)
  done (took 2.075618265 seconds)
done (took 109.822894395 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085176972 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.620145393 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.058347244 seconds)
  done (took 2.350577727 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091066005 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089485949 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090389898 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087357114 seconds)
  done (took 2.013158254 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077752561 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.08000077 seconds)
  done (took 1.805629957 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.237894631 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.170655097 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.099927829 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086098021 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082096464 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.083001119 seconds)
  done (took 1.905686836 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075697072 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.0793875 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07633388 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.08063807 seconds)
  done (took 1.960797708 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080382766 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.057293178 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.059368434 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.062222321 seconds)
  done (took 1.909571436 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08975766 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085516536 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082167429 seconds)
  done (took 1.908981661 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105327818 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.089961813 seconds)
  done (took 1.844709863 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085768292 seconds)
  done (took 1.737252046 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098528521 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.103774551 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.134661519 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114113242 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.142836601 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.115397377 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089392177 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08975666 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.081025674 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090342888 seconds)
  done (took 2.710278835 seconds)
done (took 22.38383383 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081822445 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.374289725 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364132429 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094411869 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672692751 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360660923 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.973734521 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09709124 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119386578 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.0721889 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088908159 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.654145043 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.963928762 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.331891299 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.951974776 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.332066648 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654740423 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072562214 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072366674 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07217963 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.960338632 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072087179 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071979203 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073510575 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653595478 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.376084944 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072700769 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.327688168 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072703244 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074675387 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359508575 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073802789 seconds)
  done (took 16.231044979 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074486081 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.137336166 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076924128 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087975981 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073861029 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073735599 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075355718 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073077019 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124141771 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07224976 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089606401 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071741088 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075885887 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072646904 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091597699 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072586118 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073766051 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073193083 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072536262 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073090164 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090922894 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072836235 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072435615 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.0730931 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072623555 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084035815 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073912331 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072773902 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072746169 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075463165 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075945439 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073499047 seconds)
  done (took 4.209568251 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119891107 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12775474 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078899261 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108161723 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115594246 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07431488 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.145579252 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097716391 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131377178 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072650357 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089197882 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072554112 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105476678 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073683338 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092729169 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072789051 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074039856 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072789261 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073260672 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072808752 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092187953 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073403909 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072672951 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073417176 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072642671 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085973361 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072832966 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074168215 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072895128 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074549799 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076272603 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074192864 seconds)
  done (took 4.451272887 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076113847 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078971413 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087322731 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08798381 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.073906442 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075757441 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076742414 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.074299188 seconds)
  done (took 2.295951222 seconds)
done (took 28.844330129 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082693223 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07291504 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.076642891 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.092745859 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076962693 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082327125 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070629786 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.079257967 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076980162 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.077069873 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.078811679 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071689737 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074912999 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071057502 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.078274727 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.07196227 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084572707 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.075743943 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083066055 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084390595 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.0747115 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077220061 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.079223724 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083664266 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084090977 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083188774 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.08197251 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07772376 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072933101 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.075144809 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081956136 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.088750183 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072830402 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083742647 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.072894847 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.072311711 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.076271989 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072172051 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084449817 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.081199384 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073985336 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.081757423 seconds)
  done (took 4.939744518 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091174449 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.094967536 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08916713 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065830662 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.070122716 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.068802585 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.093369547 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063653088 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.064186427 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.092535642 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.06023279 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063931063 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066675054 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.058489399 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.063772881 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.06147463 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.065811523 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.060104563 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.064192476 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.063856799 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.093179649 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.058536297 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081341378 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.066781335 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.060554302 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065823612 seconds)
  done (took 3.523677342 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07839141 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086543336 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093582988 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144860087 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.11422488 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081296309 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082335826 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096174413 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09697374 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070929836 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074859663 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096030961 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092033037 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.077637832 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.072717916 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088866515 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.090123151 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073223669 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077797008 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095557866 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090125525 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088574383 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095009618 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085032373 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071584558 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073782256 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076260217 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085307091 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075455614 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.08102939 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074849417 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075605272 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.074431127 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083228543 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074808977 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073672799 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09832608 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084289807 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08173333 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.072601572 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.079636576 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.073021765 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.095867211 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12714933 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.071283715 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077859092 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07614828 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08267308 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.071022177 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097565583 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083518587 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.072475682 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.075386903 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070913527 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.071203467 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075696092 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.073454402 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.07538596 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080219499 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077366779 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.095168128 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076404936 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087611638 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.071873089 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.08029145 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.071024374 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.073022619 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070959044 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097523337 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073860818 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112745071 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.07250671 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072515286 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081403401 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080588842 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.078563289 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.072355201 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088389452 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082339292 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076147591 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.081444587 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075926048 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074658536 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099680253 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074186106 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.073954437 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.072545644 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077391409 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074441323 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.073456513 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084955901 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.071341705 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075554793 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08908304 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071855521 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.073993332 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.077343658 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.077408973 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.071721371 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083705474 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076087112 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.073334378 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081329553 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072656629 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074705113 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.083071857 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07789867 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070324608 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076185186 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.076970092 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072205436 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073406954 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074704494 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073593528 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080067888 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078381948 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075973221 seconds)
  done (took 11.147326591 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166428479 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.158011235 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.076269839 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150452898 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.082402693 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.084626988 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152286277 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09944331 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.072675985 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073771849 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.074354491 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11581404 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.110632886 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121367717 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.084442254 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.073082471 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.094896292 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.120148587 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154170682 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148042161 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.095614103 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.081922215 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075730737 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074347502 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075687387 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083587324 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.091131797 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.08195409 seconds)
  done (took 4.666714204 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084630779 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106058079 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.079202648 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094648026 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.094059274 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.073275147 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.075045249 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.074406216 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.088545088 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082780691 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072510924 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078558205 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.079258974 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.076692145 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.073576546 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079729292 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079602528 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.074657158 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075926435 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077513423 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.083474644 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097093213 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07676713 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071927941 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077711822 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072287207 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.069302195 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.08910331 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.07332186 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.097952721 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.071095587 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.078461095 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087079011 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.074684068 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.072917023 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072766377 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072672497 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.073376399 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.075463822 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.073444497 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.071568763 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.062975545 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.072040762 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084051527 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.08527762 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062274303 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077456534 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.077941771 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078370537 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.070898659 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.075948927 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.076005086 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075752036 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080587867 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.077112581 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.078011905 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074033142 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.079257214 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081441155 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073342698 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070323437 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.071594167 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.077759461 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.070739937 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.08778509 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07806983 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.071635387 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.0728242 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.075149377 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.086294711 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073239798 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.078039829 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.07076005 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.075574463 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077773916 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074876158 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.075611882 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.071550597 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.072974976 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073397499 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.061043658 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.072829821 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.058829183 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.076103493 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.071293525 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.07135798 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072970183 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.0774971 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084473142 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.074293485 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.079031002 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.074157664 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.0721109 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075559444 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065759521 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075517734 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083780095 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.087613303 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072951724 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.071016122 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086303665 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.077707607 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.072162525 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.061449499 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077029429 seconds)
  done (took 9.749428813 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094509983 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074345938 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086625774 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093653687 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.091331699 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.08008244 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082428537 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.074397187 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.088637109 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.078229013 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.081477049 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.073050831 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083083594 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082353696 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.074880987 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082308756 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07735343 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08765698 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087324093 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.073299753 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.081527449 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084871409 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094170348 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085585018 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083546206 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086032661 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.095081333 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082024848 seconds)
  done (took 4.058874576 seconds)
done (took 39.747075156 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.763454751 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.927937858 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.747960177 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.086334963 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.826052649 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.972139656 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.841016492 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.741363027 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.894081215 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.780800759 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.093279976 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.841259118 seconds)
done (took 65.319453179 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.773230769 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.882614182 seconds)
    (2/2) benchmarking "String"...
    done (took 1.97488365 seconds)
  done (took 5.533785807 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.941878292 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.321206888 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.985119237 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.739414023 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.745422703 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.034333055 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.550689734 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.252748422 seconds)
  done (took 30.306971836 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.858818787 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.964031063 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.450416138 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.463793517 seconds)
  done (took 15.466466965 seconds)
done (took 62.785775894 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.739504742 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.782281954 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.784025211 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.724534752 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.799555775 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.757872125 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.990177885 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.778065134 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.739332537 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.728878223 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.738007216 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.160535292 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.747928514 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.861374173 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.736454189 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.741813487 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.763159068 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.163174076 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.893622233 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.75850217 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.73933067 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.889621946 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.74381039 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.750646176 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.744810489 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.740224055 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.142979592 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.742154419 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.352607364 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.741664789 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.770233694 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.091155094 seconds)
  done (took 202.514810605 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.738628432 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.545895795 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.643485033 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.760906444 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.137901217 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.901663253 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.824396402 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.200608846 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.741217257 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.75134686 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.918249285 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.741358507 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.928260673 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.719816949 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.768275693 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.851968303 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.911817211 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.959177456 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.772009022 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.892362472 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.742102734 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.720822363 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.686984846 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.91254622 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.76488462 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.84277336 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.763199587 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.751932077 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.929249461 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.879964706 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.771050668 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.774506739 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.928255394 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.612554554 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.749348566 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.750184187 seconds)
  done (took 167.967314128 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.943255864 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.741067703 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.740350164 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.739755583 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.745974495 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.741522645 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.863500763 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.870082312 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.347987691 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.435590919 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.796548457 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.542050531 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.741231897 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.809197598 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.754138246 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.742031096 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.756310992 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.769126397 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.744531728 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.741430334 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.867754684 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.75645345 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.796396551 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.751590671 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.74133217 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.747363493 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.112699152 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.741794652 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.746831411 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.981242951 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.74268369 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.742377939 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.588549555 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.25442225 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.832589827 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.745507688 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.747449184 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.742930703 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.959807902 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.743502091 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.740966678 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.743636175 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.744930401 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.887880265 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.741470204 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.871242729 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.742714978 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.218977255 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.743343665 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.744531364 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.45375816 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.319303291 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.742436197 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.742454219 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.74588627 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.743994894 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.743029176 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.748778294 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.609254875 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.984958961 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.747566142 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.747932294 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.7584752 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.745370866 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.751627714 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.745501178 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.296305173 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.809170659 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.976529287 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.87280818 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.745991629 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.811491273 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.838927391 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.745076266 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.745266828 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.745690843 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.745796126 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.826980592 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.746588915 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.910836353 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.755579657 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.747637863 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.798957822 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.814498172 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.746927557 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.597712321 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.745612961 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.745631268 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.011307071 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.812484085 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.746775787 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.745582998 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.746043726 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.746297663 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.746923007 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.887575736 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.746362468 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.868396601 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.460056012 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.747440048 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.82886916 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.756760769 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.896038213 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.748399033 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.884147074 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.748279528 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.827711704 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.75212867 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.74855615 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.747479755 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.780693555 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.747841322 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.800506913 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.747200713 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.119409538 seconds)
  done (took 398.342433317 seconds)
done (took 772.498555787 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.417914298 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.384351238 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.494450576 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.406458313 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.380778245 seconds)
  done (took 13.767861334 seconds)
done (took 15.451283158 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.839524673 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.844600008 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.772490519 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.839399546 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.769502452 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.839467585 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.823684261 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.774046588 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.807313797 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.773393377 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.808487104 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.774131052 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.762554329 seconds)
  done (took 25.113685946 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.985223698 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.992915465 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.822058935 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.98945077 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.797089841 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.986894887 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.914788484 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.90649151 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.901316987 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.766840629 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.761155239 seconds)
  done (took 22.511176769 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.992207752 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.995552377 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.828881741 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.994035785 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.800811903 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.989326138 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.918325575 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.909816473 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.904117058 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.765954948 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.762599711 seconds)
  done (took 22.547554905 seconds)
done (took 71.856327862 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.758564214 seconds)
  done (took 3.444926421 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.786371171 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.95897417 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.765273179 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.761686749 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.758946148 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.758405979 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.762377308 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.757639758 seconds)
  done (took 15.997042853 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.75803166 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.754881256 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.755609056 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.758391056 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.758268214 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.755343687 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.759371081 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.756148118 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.758368553 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.758689787 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.758939014 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.756556304 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.757313172 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.756435728 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.75860017 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.756241786 seconds)
  done (took 29.805226719 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.758084753 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.756482553 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.756868404 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.757476126 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.757016315 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.757292448 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.758544771 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.756106716 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.756759322 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.758275889 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.757984516 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.757657748 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.758380017 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.757225302 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.758476776 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.75840953 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.757610252 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.758344596 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.762449172 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.756637686 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.757934416 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.756940909 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.756792645 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.758283969 seconds)
  done (took 43.87669313 seconds)
done (took 94.808871184 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.495032097 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.389896441 seconds)
  done (took 9.57365997 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.763070681 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.760410983 seconds)
  done (took 5.27629228 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.760453718 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.759407673 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.759440029 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.759570444 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.759516207 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.759741478 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.760700471 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.760520227 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.760634245 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.760638214 seconds)
  done (took 19.289731634 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.760305515 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.760928606 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.757847385 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.761697917 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.761010426 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.759439892 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.761588659 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.76097891 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.761217071 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.758424827 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.761050202 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.75944145 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.761475466 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.758696928 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.761852472 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.760136862 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.75898043 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.759840489 seconds)
  done (took 33.375597784 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.761710913 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.761431042 seconds)
  done (took 5.214278405 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.758885106 seconds)
    (2/7) benchmarking "second"...
    done (took 1.759058742 seconds)
    (3/7) benchmarking "month"...
    done (took 1.759731499 seconds)
    (4/7) benchmarking "year"...
    done (took 1.759452463 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.759651116 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.759546209 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.759347349 seconds)
  done (took 14.007944735 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.763536754 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.926992996 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.001012599 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.432497442 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.764299409 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.763252907 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.731526086 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.763028944 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.76373781 seconds)
  done (took 19.602024793 seconds)
done (took 108.027617088 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.602871093 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.754346435 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.995050647 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.816851155 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.810049984 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.095398609 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.756303708 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.062655423 seconds)
done (took 42.581477965 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.821753862 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.489833007 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.514668417 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.875135389 seconds)
  done (took 15.569389108 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.741503755 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.287180818 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.799142077 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.337083963 seconds)
  done (took 19.860670492 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.1256226 seconds)
    (2/2) benchmarking "read"...
    done (took 2.110268114 seconds)
  done (took 5.933390277 seconds)
done (took 49.874212478 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.762469102 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.763426219 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.762777273 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.761884447 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.763008429 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.760995321 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.760353644 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.763989536 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.763550285 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.763114705 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.760698493 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.763149216 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.763727855 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.763544056 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.761856484 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.761415572 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.763872091 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.761410061 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.761699138 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.761894491 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.765464664 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.762492623 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.762310903 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.761911116 seconds)
  done (took 43.993828428 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.765219437 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.762859253 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.766332718 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.764670063 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.762273517 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.764822883 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.765459863 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.762038465 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.765142869 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.765798322 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.762396424 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.763375454 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.767310605 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.763392218 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.76585331 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.763429106 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.765801746 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.763645869 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.765371004 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.762989493 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.766325602 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.763389748 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.764225918 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.767171512 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.763553104 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.762463317 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.766979878 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.764883872 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.766322556 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.764880077 seconds)
  done (took 54.632486796 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.769756096 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.772877342 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.765988578 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.766591059 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.765854732 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.76665234 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.766460316 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.766050175 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.766033391 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.767478917 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.76647753 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.767061739 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.766539623 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.767377439 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.766736955 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.767066485 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.767497041 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.767216275 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.766491603 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.766327852 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.7682237 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.766695741 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.766879974 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.767515406 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.766588779 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.76686064 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.768178252 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.767318131 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.767864754 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.767258569 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.768246214 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.76717 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.768945145 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.767709152 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.76859136 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.767545181 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.772478279 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.776141861 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.769060921 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.767481656 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.767592131 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.767818283 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.767133507 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.768678461 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.767913684 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.767798803 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.769575619 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.767826569 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.770824802 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.77065453 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.768439444 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.768511442 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.768785444 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.768854888 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.770280392 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.767784801 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.768820853 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.768466195 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.767884439 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.769284602 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.770020248 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.768101553 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.769630523 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.76878721 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.769174261 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.770078681 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.76919735 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.769075325 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.770610606 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.76996877 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.769720997 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.770435842 seconds)
  done (took 129.014553092 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.770510497 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.767473707 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.766993515 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.767949795 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.767759212 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.770516103 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.767784227 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.770834081 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766691798 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.770184045 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.769792698 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.768429746 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767514271 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.770904758 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.770680762 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.769190769 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.770736456 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.767365529 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.770055598 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.772559302 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.770473042 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.769455963 seconds)
  done (took 40.622616261 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.77098675 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.771524489 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.769187753 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.771588778 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.770014185 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.77166873 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.771642599 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.772242857 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771054681 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.769745564 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769630667 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.772279082 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.769806769 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769249698 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.769862579 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.770287552 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.771272435 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.770015796 seconds)
  done (took 33.571532156 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.769053135 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.769822488 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.771927073 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.768922474 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.769710657 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.7720226 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.769253032 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.773121744 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.772685266 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.769638169 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.772026019 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771540863 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.772333302 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.770041513 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.772314311 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.77062282 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.772288051 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769449903 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.773273493 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.770679497 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.7698634 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.772305637 seconds)
  done (took 40.664425363 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.772511562 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.773797479 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.770883998 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.769710015 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.770296749 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.773073332 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.773097444 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.770532472 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.773391135 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.773290483 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.770451608 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.77293945 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.772644328 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.772403227 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.7707816 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.771464158 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.774222651 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.77272214 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.774763521 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.771704429 seconds)
  done (took 37.146728576 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.775054371 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.775014324 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.775505286 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.775461631 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.775864905 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.774610738 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.774940277 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.774628337 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.775274821 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.77548452 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.775558438 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.776161652 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.775012793 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.774348407 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.775894749 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.775455692 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.775699581 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.775661711 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.775636824 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.776025524 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.777390814 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.775372973 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.776781934 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.776115364 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.775642774 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.776644089 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.776667069 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.77649454 seconds)
  done (took 51.422222788 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.775475431 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.775715963 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.773749707 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.773682689 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.77344355 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.77317088 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.773790291 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.773516928 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.775887532 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.77249502 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.775778286 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.775183088 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.775616797 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.776125736 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.776091117 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.776069201 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776068444 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.773614385 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.77367541 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77383895 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.775647227 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776459595 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.775876329 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.77395601 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.773708542 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.777520612 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.773844838 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.774245139 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.779270053 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.773743099 seconds)
  done (took 54.951730383 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.795798136 seconds)
    (2/2) benchmarking "in"...
    done (took 1.79530379 seconds)
  done (took 5.297195014 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.773751012 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.777353371 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.778079418 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.775183209 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.774522227 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.776650376 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.77731624 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.774600486 seconds)
  done (took 15.912932772 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.777227466 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.777273141 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.778464614 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.77907198 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.779469493 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.77758746 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.784048299 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.778230996 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.778706926 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.778472918 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.784244345 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.784603974 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.780027669 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.777587696 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.778107449 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.779962965 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.777849761 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.779115685 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.778581161 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.778303162 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.779000987 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.780964066 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.780344114 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.775619925 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.780004974 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.787610933 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.782111871 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.779222557 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.778061203 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.782046057 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.779771155 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.776424598 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.780806263 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.780908392 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.77948244 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.780730902 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.787177954 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.779418536 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.785752562 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.78082326 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.779872265 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.777310421 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.780929306 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.782285638 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.781604198 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.780740228 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.781437716 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.777345356 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.779491751 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.783749712 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.784364027 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.779215908 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.777352369 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.783513153 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.780231014 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.787270601 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.781400669 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.78296297 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.788081339 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.789844959 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.792923204 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.787486609 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.781392821 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.781543417 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.789404871 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.80206785 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.788633769 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.778798089 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.777834716 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.781680353 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.787382207 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.794979212 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.788960392 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.781102057 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.781643587 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.78068583 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.781477225 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.781974464 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.787905579 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.783685245 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.783209208 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.781589079 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.790249721 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.802368855 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.781132088 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.782237759 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.78342595 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.782440683 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.783006699 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.793174283 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.783088538 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.782802731 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.781289966 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.782104435 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.784146571 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.782862719 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.780902055 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.782678355 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.779907613 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.782934997 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.783378739 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.785914374 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.790318316 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.78372465 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.783554636 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.789853787 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.782728802 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.783363776 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.789788255 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.782949304 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.784289689 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.785225135 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.789738825 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.780729288 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.787355734 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.792089392 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.785385966 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.784382685 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.783985095 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.784678794 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.79195998 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.807230269 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.785943383 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.783785005 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.788042555 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.794717623 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.784055551 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.787222477 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.784666608 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.781596071 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.782114712 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.785070454 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.784614476 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.785013472 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.784751128 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.78577902 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.781807999 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.785207811 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.784921252 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.786028273 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.785784309 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.784996074 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.786414874 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.787359677 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.786988219 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.786388008 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.792036598 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.785382936 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.786143168 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.786612393 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.784206054 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.78543186 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.786562085 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.785989831 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.786512433 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.787743205 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.786159196 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.787060995 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.786517309 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.786242013 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.787744083 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.787242879 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.789677301 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.787136989 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.788978638 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.785360931 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.78383595 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.785939206 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.786432892 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.785198607 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.786653209 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.786269781 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.790202555 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.794593293 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.786844649 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.788180685 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.787994968 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.787626769 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.786854391 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.789902302 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.789896832 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.793022542 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.787860507 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.793525898 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.787030425 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.787841518 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.78788286 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.786403318 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.786687299 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.787882995 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.790417818 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.795350092 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.800110844 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.795542975 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.788412501 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.790930048 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.788300104 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.79173429 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.791397328 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.788909473 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.789147026 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.788799559 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.787461963 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.78886381 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.789707952 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.788785301 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.788425432 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.789340187 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.789315851 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.790682485 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.789293507 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.789811614 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.790181186 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.786185126 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.789225931 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.789914273 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.788974955 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.786865623 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.787322203 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.788364974 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.789475083 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.788944649 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.796047828 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.787021651 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.789579449 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790200996 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.789230089 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.789111048 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.790318151 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.790956713 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.789415158 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.796132645 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.789365837 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.790048306 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.79667588 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.788812121 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.789580724 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.791562122 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.790580147 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.786901211 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.791909619 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.797742563 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.790279739 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.791494963 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.790624159 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.790785953 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.791715985 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.796882086 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.788423163 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.789940039 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.792134254 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.7920028 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.787988977 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.792802479 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.791712476 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.791823245 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.792167579 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.791279966 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.791671859 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.791955068 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.791439107 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.791982385 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.792358672 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.794035044 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.799942672 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.796629655 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.792179332 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.793927203 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.793417378 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.795703402 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.792727637 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.792910578 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.791668272 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.806416798 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.800851539 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.798239682 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.794212924 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.791997894 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.79860872 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.79395186 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.795640486 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.792057351 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.793119966 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.791418641 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.793285075 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.790536896 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.793037694 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.793120877 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.793415027 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.79399195 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.795863615 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.7931029 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.793183724 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.793450628 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.793090133 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.793738658 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.792668702 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.793945542 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.794955918 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.79616503 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.793100738 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.793348519 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.798781867 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.794011423 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.794259649 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.792545661 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.793844107 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.793660904 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.794749215 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.794189257 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.797448688 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.801226917 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.797504918 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.803227784 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.795415468 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.803114982 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.794834677 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.798502419 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.802843861 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.792929886 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.793427939 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.793186048 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.7958451 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.802405349 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.796515145 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.795880265 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.800368467 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.796111885 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.797123743 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.794703709 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.796128619 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.795991916 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.795431498 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.803282669 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.796785228 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.799643171 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.7962984 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.792617067 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.795779827 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.795646053 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.795383916 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.798893808 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.796608741 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.796578664 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.794929975 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.796818543 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.796047101 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.795449722 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.796761191 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.793260488 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.796229004 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.802621737 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.797217021 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.800573463 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.797447175 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.804139246 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.796553677 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.803250041 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.797705322 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.796570412 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.79631215 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.797298176 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.797460253 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.797329445 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.797077023 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.798122854 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.797671215 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.801881506 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.796906921 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.799240236 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.797516025 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.798183077 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.797393757 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.806733967 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.819008105 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.798278049 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.801707247 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.795228153 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.79885229 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.80226707 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.79901081 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.795619922 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.800658572 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.807627625 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.80486434 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.798210877 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.799025814 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.799055825 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.799261123 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.798099447 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.798885921 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.798860434 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.799429992 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.799001582 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.799183953 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.802596153 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.797837325 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.799353285 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.799104113 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.798754818 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.807312351 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.79933446 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.799496253 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.799379418 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.7992305 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.798876223 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.798999458 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.799767076 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.800886539 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.79974985 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.800781428 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.8049306 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.8053877 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.801753033 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.798062171 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.799675817 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.799112664 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.79973373 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.801142434 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.799963403 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.80001237 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.802026625 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.800524825 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.802015137 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.799736588 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.800611203 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.800743584 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.800596315 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.803965134 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.806734791 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.800256784 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.797845819 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.800677144 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.80083246 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.800271409 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.80072123 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.807932624 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.803956016 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.810837553 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.809005927 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.805243517 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.800907486 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.80532214 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.809141515 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.799389399 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.801657799 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.801219603 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.80248067 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.803250863 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.803948253 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.801282227 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.808054512 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.801027058 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.80092073 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.809570828 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.802816515 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.80193684 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.802083205 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.805238946 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.802466101 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.799744947 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.802190084 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.801579182 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.809893348 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.80292463 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.803333157 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.803358116 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.800543375 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.803414879 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.806208196 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.803425544 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.803084487 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.799892406 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.802512871 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.802751089 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.802883888 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.800010697 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.802688281 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.802197557 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.805287375 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.809014284 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.800120518 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.805349375 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.803342428 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.803608793 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.804665706 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.80357111 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.801687009 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.802228942 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.804073322 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.804271369 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.803480147 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.806016983 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.803285015 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.804086046 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.804406279 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.80513279 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.807153382 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.813799029 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.810348607 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.80131369 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.803840968 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.804665224 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.806936638 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.805462052 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.805241808 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.804179987 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.806082739 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.804213556 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.804644118 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.804961979 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.807706868 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.819883629 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.805933919 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.804320199 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.803918919 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.807834161 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.805131973 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.802548925 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.805344022 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.807404745 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.808046614 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.812830473 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.805966262 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.811881329 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.805556374 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.805766835 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.809329004 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.807981597 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.812544695 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.807665823 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.80606552 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.808038531 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.809021015 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.820648065 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.806428425 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.814707789 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.833355712 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.806947998 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.807142533 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.807037584 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.806285032 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.807275669 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.807912165 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.8074694 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.807436266 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.807809479 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.807365169 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.808040695 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.812414268 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.808118158 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.807689746 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.807233303 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.807502705 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.808192238 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.80522692 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.807485824 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.807624856 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.808036532 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.807477789 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.808935465 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.806825891 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.819986977 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.816010641 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.807649431 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.808107345 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.804569224 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.81003349 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.80986841 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.816878611 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.815539622 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.80720966 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.808837783 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.808788645 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.808770351 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.805580215 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.808436739 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.80707471 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.806837392 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.805041801 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.82069585 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.816045422 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.813252386 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.807106342 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.808719524 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.809141299 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.810240367 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.809062728 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.80974001 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.809952972 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.808986603 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.813815228 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.810037618 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.809058434 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.811962008 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.817280517 seconds)
  done (took 1071.648600187 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.806361548 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.806698182 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.807357644 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.807256272 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.806859151 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.806419737 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.807120778 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.806759916 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.806651297 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.808144448 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.807483523 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.807970827 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.807865943 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.807355875 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.807395693 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.807554587 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.806890422 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.807216448 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.807165514 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.80678239 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.808157978 seconds)
  done (took 39.688754128 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.810128639 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.808718185 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.80793185 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.810170347 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.807785925 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.810911527 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.808003905 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.810753318 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.810784451 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.807664207 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.810650185 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.810724517 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.808551129 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.808666354 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.808445687 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.810761421 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.811445323 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.808578942 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.810490921 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.808211432 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.811555213 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.808191736 seconds)
  done (took 41.546885422 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.812376796 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.812400591 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.810424926 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.808637179 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.811458968 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.808648133 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.812897876 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.811852237 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.811346965 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.81130393 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.81027938 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.813462582 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.819109619 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.816926508 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.814782293 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.812766953 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.955347368 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.812174953 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.812802288 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.813706678 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.810555119 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.817651117 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.809812348 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.809872867 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.810917712 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.813887886 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.812978481 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.813405594 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.812584396 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.812975743 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.817259943 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.812371681 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.812400542 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.814210516 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.812700907 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.813727808 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.817305169 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.814126496 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.810898689 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.812960599 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.823603208 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.833547428 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.813864165 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.819447885 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.814279233 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.813531447 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.815685228 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.821791769 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.811075362 seconds)
  done (took 90.762910995 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.813736263 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.814030554 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.811491622 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.813119007 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.814133928 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.813913812 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.81438236 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.813859805 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.812215762 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.811239261 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.814550207 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.811306905 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.811929755 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.815766459 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.814946507 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.811641265 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.812565265 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.811604079 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.812972898 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.812878244 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.813286642 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.815756779 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.815725395 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.813739273 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.815895566 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.812568561 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.813082876 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.816320335 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.813073065 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.813186402 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.816081058 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.816011596 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.815855834 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.813677772 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.812945724 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.816111578 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.815582087 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.812750935 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.81570783 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.812815445 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.816067099 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.816374846 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.816488441 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.816393432 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.813538173 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.813399504 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.812947108 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.814147764 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.813620214 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.81640809 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.816444278 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.813596247 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.81608846 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.813553585 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.81662566 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.816971904 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.81422645 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.815845976 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.817315813 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.815722109 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.8152424 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.81715891 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.815960054 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.817837792 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.817982352 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.814950179 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.815176584 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.817225865 seconds)
  done (took 125.133740688 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.817614229 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.817734259 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.819142242 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.817942359 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.818816174 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.819710567 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.819038477 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.818826578 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.819313813 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.817705041 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.818483224 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.818407632 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.817911648 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.819111025 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.818970576 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.818376137 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.819063458 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.818166713 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.819813079 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.819304416 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.819558109 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.818831477 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.818654579 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.819198568 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.819670339 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.818900472 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.819474144 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.818612869 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.820072705 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.819962678 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.81921159 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.819464865 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.819400437 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.819472689 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.820448533 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.820017385 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.820169291 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.820790415 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.820121557 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.819883879 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.819604431 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.819630047 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.819606969 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.819869008 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.820679239 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.820774062 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.820370783 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.820089577 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.820049112 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.820375817 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.820999949 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.82007908 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.820329718 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.820174902 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.821856927 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.820450144 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.821298863 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.821362292 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.820891491 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.821693704 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.8211862 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.821880685 seconds)
  done (took 114.565695097 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.821319216 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.820538544 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.817843504 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.818489413 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.820840391 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.819456023 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.822458105 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.82197806 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.821150072 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.821777816 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.821241047 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.819278149 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.82055414 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.821375393 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.818824876 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.820700398 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.818513191 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.819512425 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.821925031 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.819362194 seconds)
  done (took 38.155680045 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.819376457 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.82210216 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.820320025 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.819991455 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.821532481 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.820335412 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.82287349 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822777931 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.820092842 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.822050173 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.822951668 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.823331585 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.819666206 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.819949701 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.823567972 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.819925799 seconds)
  done (took 30.8901386 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.819930758 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.823375176 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.823391988 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.823553538 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.819996244 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.820127945 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.822690415 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.82080995 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.819778292 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.823425854 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.823654292 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.824038462 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.823800743 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.824170795 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.820847399 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.823726841 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.821976417 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.822529873 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.824159269 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.825038186 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.823029058 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.821678252 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.824781466 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.823868919 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.821888645 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.821719099 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.82158824 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.82195983 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.821708581 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.824463512 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.821948377 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.824330927 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.822061222 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.822224858 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.825127461 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.822384273 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.824443396 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.824933944 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.82523032 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.824458634 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.824283003 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.823741687 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.825348209 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.824923458 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.822203586 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.826295281 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.823113728 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.821810229 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.823849036 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.823720259 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.825537161 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.826401098 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.826395226 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.827236711 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.825908192 seconds)
  done (took 102.03746541 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.826957534 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.825605483 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.82288377 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.82576097 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.825944628 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.824361307 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.825295857 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.822968098 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.823587285 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.825921943 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.824640556 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.826992998 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.823372636 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.82574002 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.825006631 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.826955803 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.823966135 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.824316464 seconds)
  done (took 34.604001354 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.824287229 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.825356871 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.827665404 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.824577216 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.824459401 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.82777185 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.824131068 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.827042193 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.826944892 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.824720118 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.825071874 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.827394548 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.827171623 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.827706222 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.824442713 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.824386799 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.827516507 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.827259883 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.824784167 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.825084295 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.827772488 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.828006165 seconds)
  done (took 41.927848106 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.826680722 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.826206846 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.844097209 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.847614308 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.848549465 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.861334739 seconds)
  done (took 12.809529943 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824950071 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827727333 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.826226018 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828826907 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827973931 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826465378 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826730338 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825690185 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828359862 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826761211 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825733182 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828864555 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828926201 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827048718 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830206477 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829757257 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826778851 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82658537 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827131664 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830402216 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82799386 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830038615 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827454547 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826819213 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826750016 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827620956 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82969526 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827624524 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826931518 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829614504 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830409071 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827588896 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829858355 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827559589 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830503226 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830449011 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827693145 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830802538 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830224884 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828187205 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.829708099 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830496827 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829541125 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8286012 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830374089 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827781642 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827763127 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828635314 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828445322 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83089934 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831566395 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828561096 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830721668 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83123291 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831375602 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832357093 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82791433 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829252166 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831835716 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828793664 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829245687 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832114588 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829272341 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830070672 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830698047 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828791063 seconds)
  done (took 122.457871467 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829383834 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.82982695 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829221365 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829891086 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830891878 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829241823 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829544869 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830148765 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830466681 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829550262 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83155949 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829626177 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829179 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830004896 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829662121 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829961699 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830287041 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830248987 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830337049 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832919708 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830165986 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830241801 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830572959 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829995648 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831034342 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833128995 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829767702 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829924127 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830765128 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830815237 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830161284 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830232369 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831372411 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.830509567 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83136723 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831014733 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83155514 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832041779 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831112492 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833160521 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832356817 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834106732 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831172213 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830827847 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831724229 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831663251 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831260776 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832228071 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831198185 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831964129 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832543805 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831757873 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832679304 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832486399 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831937384 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831854415 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832430268 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832069009 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832755704 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83471095 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832080322 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832915842 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835598346 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832032686 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833049383 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832775063 seconds)
  done (took 122.624005217 seconds)
done (took 2497.778416061 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.870970384 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.85870358 seconds)
  done (took 15.490862029 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.995712735 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.9514789 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.832931743 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.865007608 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.832449759 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.854510448 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.852176356 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.833060908 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.832512803 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.833560481 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.832290758 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.018327506 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.88871103 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.833250886 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.833620929 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.928413932 seconds)
  done (took 51.784481743 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.837511151 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.838040992 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.848970751 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.840501995 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.83741236 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.850559701 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.871409657 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.840893674 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.872734915 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.851420724 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.906137591 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.848021429 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.837019434 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.887522358 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.85069865 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.853824149 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.932207523 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.913879436 seconds)
  done (took 35.281679969 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.915752203 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.835926707 seconds)
  done (took 10.521680052 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.852597173 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.885981924 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.87591776 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.860178929 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.853872241 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.844153983 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.850572238 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.852688575 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.86454797 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.841853636 seconds)
  done (took 70.353102551 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.844722154 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.839551014 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.840772224 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.838124332 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.830472758 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.835505575 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.83827664 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.837558142 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.50007978 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.875068108 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.845762293 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.844025768 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.837884657 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.839599557 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.83759403 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.863175934 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.932556976 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.836535877 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.836096897 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.844611579 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.83934288 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.890831987 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.853077962 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.84216975 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.868164937 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.498814263 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.84718972 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.844101302 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.930079751 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.837004229 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.838708197 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.840771337 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.841202156 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.209256132 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.121390468 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.839852232 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.854272519 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.847325173 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.837421897 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.935233431 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.840674182 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.845861767 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.479278048 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.101693199 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.928815107 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.882696891 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.153761382 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.857064688 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.841916328 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.868835351 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.84380895 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.842909778 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.853658302 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.32183975 seconds)
  done (took 130.448007442 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.836680611 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.189786295 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.006767956 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.836490241 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.125868577 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.04638866 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.837802388 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.885879422 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.840149681 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.072828473 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.092990427 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.945375729 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.837120635 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.836589564 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.838717548 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.834417628 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.996278704 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.911164709 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.837950732 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.835570752 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.868555869 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.08242902 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.962198348 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.840268618 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.868850267 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.052963071 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.961937024 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.94449322 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.782025583 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.834663782 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.903101335 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.839114626 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.837543915 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.836611349 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.996507621 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.934308429 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.923622314 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.83863246 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.836482964 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.835322428 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.600920387 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.041169549 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.936980099 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.980401043 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.988814001 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.045741199 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.624950642 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.837900331 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.583005866 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.006945083 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.071001409 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.0750224 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.96284314 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.839478145 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.17929007 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.836843207 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.837563428 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.090935722 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.981763534 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.937992589 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.84111269 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.838089326 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.836617125 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.136919847 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.84115217 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.937318766 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.841566872 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.837822062 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.939295202 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.942880115 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.979780247 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.053693139 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.873195081 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.57785262 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.053297044 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.08979076 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.908423943 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.093124547 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.840965142 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.838192011 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.920525466 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.685562882 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.096022689 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.130576805 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.094845031 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.878777762 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.574270263 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.839667233 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.069086884 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.064089918 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.103163509 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.98886965 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.080598837 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.188345891 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.839109613 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.838476563 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.0502462 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.978852329 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.842290653 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.194185403 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.076076665 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.393145639 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.863691493 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.150225588 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.975691485 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.843181717 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.484486526 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.839343379 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.076133575 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.885515912 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.841858366 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.840503089 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.06373562 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.834993893 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.841845925 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.725234694 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.905488518 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.844265932 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.077367569 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.84448069 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.114279178 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.844951289 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.084564627 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.252461254 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.876694903 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.019783868 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.992011024 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.843059352 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.089707907 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.089343324 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.960424239 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.11558083 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.729087828 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.840725599 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.132134339 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.843046594 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.842184648 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.015360447 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.842918769 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.99043217 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.845087607 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.140289537 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.868220241 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.080828982 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.844846714 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.105656383 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.879687426 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.898321105 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.846569343 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.967478406 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.844145915 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.674802945 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.004088128 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.845398093 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.842161255 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.398400649 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.841377316 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.997085902 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.078825535 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.868650622 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.919835965 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.519320166 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.842594741 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.926812334 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.871800911 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.233877699 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.843540677 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.097434146 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.846487498 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.843037297 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.842582739 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.142675498 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.083203304 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.847683442 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.844208484 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.754137265 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.843335901 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.843821454 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.030029901 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.143260069 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.84396965 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.049436161 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.845751866 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.975333118 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.845693507 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.036351032 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.185381389 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.844428151 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.843282579 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.844001844 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.84351653 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.845041376 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.057813204 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.875054554 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.366875198 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.985176075 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.125165636 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.159562672 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.096267234 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.892842944 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.845923657 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.105680608 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.847445214 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.91130326 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.848303766 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.870616164 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.078873541 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.850343587 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.060539142 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.128418587 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.698812965 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.896743143 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.848744302 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.847785354 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.846190453 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.99572247 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.932732876 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.847434732 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.845534451 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.964512717 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.971109433 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.061445354 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.848309397 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.883502188 seconds)
  done (took 896.337521809 seconds)
done (took 1211.978909916 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.847130913 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.84730044 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.834990442 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.847932765 seconds)
  done (took 29.157491125 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.854427225 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.851684109 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.85409083 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.852164171 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.853823389 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.851974011 seconds)
  done (took 12.897844155 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.881898328 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.286023588 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.848750423 seconds)
  done (took 21.79661681 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.922291138 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.236190835 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.964454836 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.273361266 seconds)
  done (took 10.176300845 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.855695941 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.855491341 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.855272801 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.856648435 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.8558953 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.857184321 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.855591044 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.855964119 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.857112873 seconds)
  done (took 18.486305163 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.885241108 seconds)
done (took 98.178313534 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.95214048 seconds)
    (2/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.933178091 seconds)
    (3/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.160155604 seconds)
    (4/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.982996018 seconds)
    (5/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.194161365 seconds)
    (6/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.869705198 seconds)
    (7/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.955670379 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.984163876 seconds)
    (9/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.955934107 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.868811244 seconds)
    (11/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.850171272 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.879431304 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.942120294 seconds)
    (14/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.850708069 seconds)
    (15/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.121954811 seconds)
    (16/309) benchmarking ("sort", BigInt, false)...
    done (took 6.854386958 seconds)
    (17/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.937241979 seconds)
    (18/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.403740063 seconds)
    (19/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.883589304 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.089004393 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.791678366 seconds)
    (22/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.859134106 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.093069832 seconds)
    (24/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.058063099 seconds)
    (25/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.868079162 seconds)
    (26/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.16822945 seconds)
    (27/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.295062734 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.931067291 seconds)
    (29/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.94332605 seconds)
    (30/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.850889344 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.863959596 seconds)
    (32/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.879303251 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.169864397 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.853906982 seconds)
    (35/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.838341335 seconds)
    (36/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.929409364 seconds)
    (37/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.853464977 seconds)
    (38/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.109538863 seconds)
    (39/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.038213205 seconds)
    (40/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.14466375 seconds)
    (41/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.108758363 seconds)
    (42/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.684541883 seconds)
    (43/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.982172497 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.031855481 seconds)
    (45/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.067864877 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.951721044 seconds)
    (47/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.851594368 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.169900127 seconds)
    (49/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.090792048 seconds)
    (50/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.04086313 seconds)
    (51/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.001133542 seconds)
    (52/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.152352058 seconds)
    (53/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.886192631 seconds)
    (54/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.910073061 seconds)
    (55/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.915837473 seconds)
    (56/309) benchmarking ("sort", Int8, false)...
    done (took 4.727997938 seconds)
    (57/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.543656885 seconds)
    (58/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.091001664 seconds)
    (59/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.280893776 seconds)
    (60/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.855089586 seconds)
    (61/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.145773729 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.858715206 seconds)
    (63/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.855869727 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.854677768 seconds)
    (65/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.088578499 seconds)
    (66/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.377158351 seconds)
    (67/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.450816975 seconds)
    (68/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.703823074 seconds)
    (69/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.829433053 seconds)
    (70/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.930218104 seconds)
    (71/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 3.086489202 seconds)
    (72/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.864200283 seconds)
    (73/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.948555553 seconds)
    (74/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.079524411 seconds)
    (75/309) benchmarking ("sort", Int64, false)...
    done (took 5.556687887 seconds)
    (76/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.961338429 seconds)
    (77/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.08641492 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.127949749 seconds)
    (79/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 3.18430022 seconds)
    (80/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.945514616 seconds)
    (81/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.854339272 seconds)
    (82/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.064993811 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.12829991 seconds)
    (84/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.574633633 seconds)
    (85/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.860200612 seconds)
    (86/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.078469301 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.157706326 seconds)
    (88/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.120195456 seconds)
    (89/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.252009215 seconds)
    (90/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.016555299 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.150002677 seconds)
    (92/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.225483939 seconds)
    (93/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.019098702 seconds)
    (94/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.960898764 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.840348488 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.978359825 seconds)
    (97/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.038335257 seconds)
    (98/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.9446673 seconds)
    (99/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.056612244 seconds)
    (100/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.012365769 seconds)
    (101/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.024329582 seconds)
    (102/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.955849111 seconds)
    (103/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.953382589 seconds)
    (104/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.840298041 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.320455426 seconds)
    (106/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.299592696 seconds)
    (107/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.871794289 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.930081797 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.854512315 seconds)
    (110/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.000204576 seconds)
    (111/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.947455379 seconds)
    (112/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.14981824 seconds)
    (113/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.090586598 seconds)
    (114/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.843829639 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.16396724 seconds)
    (116/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.567500541 seconds)
    (117/309) benchmarking ("sort", Float32, false)...
    done (took 5.576394642 seconds)
    (118/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.995314292 seconds)
    (119/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.335897769 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 2.085104797 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.880666979 seconds)
    (122/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.429161596 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.114750277 seconds)
    (124/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.866616842 seconds)
    (125/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.385453728 seconds)
    (126/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.078986324 seconds)
    (127/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.11205815 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.930878714 seconds)
    (129/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.9421866 seconds)
    (130/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.006491649 seconds)
    (131/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.847912957 seconds)
    (132/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.005813844 seconds)
    (133/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.247064615 seconds)
    (134/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.997324218 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.882571312 seconds)
    (136/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.292531235 seconds)
    (137/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.848990243 seconds)
    (138/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.640823812 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.692854768 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.861863973 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.192302637 seconds)
    (142/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.867626394 seconds)
    (143/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.077505428 seconds)
    (144/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.11063001 seconds)
    (145/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.848078452 seconds)
    (146/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.86191238 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 3.571982635 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.889477038 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.672119411 seconds)
    (150/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.883756655 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.214035598 seconds)
    (152/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.993099291 seconds)
    (153/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.886334759 seconds)
    (154/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.963060685 seconds)
    (155/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.97865115 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.936468979 seconds)
    (157/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.143053125 seconds)
    (158/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.846286448 seconds)
    (159/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.593292756 seconds)
    (160/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.941973411 seconds)
    (161/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.858340764 seconds)
    (162/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.913945834 seconds)
    (163/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.809091801 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.849222452 seconds)
    (165/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 3.328473501 seconds)
    (166/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.365342943 seconds)
    (167/309) benchmarking ("sort", Float64, false)...
    done (took 5.626436654 seconds)
    (168/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.879380012 seconds)
    (169/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.037421385 seconds)
    (170/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.973176479 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.006327298 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.547346955 seconds)
    (173/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.295949356 seconds)
    (174/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.959274171 seconds)
    (175/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.884892976 seconds)
    (176/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.091731729 seconds)
    (177/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.141236053 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.520181869 seconds)
    (179/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.899100857 seconds)
    (180/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.961857078 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.871077654 seconds)
    (182/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.347041977 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.202453375 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.900022478 seconds)
    (185/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.879189293 seconds)
    (186/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.996938223 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.252044804 seconds)
    (188/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.970260514 seconds)
    (189/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.932064127 seconds)
    (190/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.848822665 seconds)
    (191/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.798499043 seconds)
    (192/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.906131774 seconds)
    (193/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.943034341 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.860792049 seconds)
    (195/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.973683493 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.954263849 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.191035307 seconds)
    (198/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.967297879 seconds)
    (199/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.966197336 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.925796691 seconds)
    (201/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.221239531 seconds)
    (202/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.789674726 seconds)
    (203/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.022894448 seconds)
    (204/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.297717038 seconds)
    (205/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.213856523 seconds)
    (206/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.056318426 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.171687016 seconds)
    (208/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.158653115 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.86595042 seconds)
    (210/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.019115968 seconds)
    (211/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.926795443 seconds)
    (212/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.288793125 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.794628162 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.088534672 seconds)
    (215/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.248208475 seconds)
    (216/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.880496066 seconds)
    (217/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.163802257 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.258439928 seconds)
    (219/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.850869324 seconds)
    (220/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.250953902 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.107431858 seconds)
    (222/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.032463553 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.827520705 seconds)
    (224/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.934360207 seconds)
    (225/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.880392712 seconds)
    (226/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.955678056 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.888355267 seconds)
    (228/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.374199998 seconds)
    (229/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.157379505 seconds)
    (230/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.439227834 seconds)
    (231/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.162538618 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.895278225 seconds)
    (233/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.205650996 seconds)
    (234/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.868503457 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.97653762 seconds)
    (236/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.044795809 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.196730924 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.962661944 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.817193065 seconds)
    (240/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.883286046 seconds)
    (241/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.847820479 seconds)
    (242/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.922720744 seconds)
    (243/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.866035992 seconds)
    (244/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.186568401 seconds)
    (245/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.95372727 seconds)
    (246/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.853160625 seconds)
    (247/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.053217247 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.584665553 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.851254838 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.809479963 seconds)
    (251/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.897161831 seconds)
    (252/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.891657381 seconds)
    (253/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.849923806 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 4.144644561 seconds)
    (255/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.807747659 seconds)
    (256/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.326401167 seconds)
    (257/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.98553323 seconds)
    (258/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.285839745 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.966903479 seconds)
    (260/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.017175321 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.022532625 seconds)
    (262/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.900751572 seconds)
    (263/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.007263224 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.256203111 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.489281203 seconds)
    (266/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.805588137 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.901071802 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.208896233 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.984919149 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.169301916 seconds)
    (271/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.936350274 seconds)
    (272/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.883092656 seconds)
    (273/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.881000255 seconds)
    (274/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.898894037 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.821434048 seconds)
    (276/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.261068127 seconds)
    (277/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.23226346 seconds)
    (278/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.873432709 seconds)
    (279/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.852287776 seconds)
    (280/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.003666389 seconds)
    (281/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.226067826 seconds)
    (282/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.973671507 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.974712847 seconds)
    (284/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.867883403 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.044854607 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.244926687 seconds)
    (287/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.869537227 seconds)
    (288/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 3.313806667 seconds)
    (289/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.229519384 seconds)
    (290/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.304353209 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.041222645 seconds)
    (292/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.86584444 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.970641826 seconds)
    (294/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.157460621 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.603587581 seconds)
    (296/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.836871203 seconds)
    (297/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 7.197563949 seconds)
    (298/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 3.067435194 seconds)
    (299/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.180777128 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.526062337 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.862063786 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.985954708 seconds)
    (303/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.254380396 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.637639253 seconds)
    (305/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.854055819 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.962012909 seconds)
    (307/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.97162937 seconds)
    (308/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.871084712 seconds)
    (309/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 3.205133369 seconds)
  done (took 1006.384498547 seconds)
done (took 1008.439722918 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.926815858 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.894319963 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.879195104 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.900988459 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.990002621 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.907000868 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.888479995 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.880797073 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.926114129 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.927416316 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.876393956 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.905146639 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.880565524 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.879388931 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.878175035 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.892949261 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.198961311 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.911487229 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.895810012 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.88788287 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.895648775 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.876467219 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.928695843 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.9059369 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.884042901 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.882890428 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.881807691 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.898451215 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.990683448 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.881969789 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.882713477 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.890652816 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.199072023 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.910575877 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.875181105 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.899634929 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.891443571 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.889979341 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.88377097 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.912595401 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.290323969 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.921389064 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.882693471 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.880924963 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.881859272 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.884238933 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.882499395 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.887055661 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.89310503 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.89446025 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.283450898 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.93780472 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.883495966 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.881637445 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.892386362 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.881998589 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.886641795 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.898042966 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.901536246 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.896638018 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.186094956 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.91828843 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.883704035 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.898514703 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.889947708 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.319203821 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.918601812 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.886344911 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.292704223 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.928027428 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.319218299 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.932987956 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.88425971 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.896647379 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.914572673 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.201338685 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.909558592 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.882345911 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.890246551 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.880652985 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.892834943 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.895676985 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.887548574 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.884052824 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.896040374 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.910849893 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.892890408 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.883670427 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.891817962 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.902764571 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.891518947 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.894685224 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.886416211 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.879701289 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.893486871 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.886962374 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.886455201 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.885536675 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.889469785 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.894323762 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.293510408 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.943035153 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.881104806 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.881301715 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.88394594 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.898102246 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.293532567 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.928173858 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.907702603 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.932549377 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.885208178 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.188331998 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.919402608 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.900279945 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.893524159 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.887234307 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.879458756 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.189745168 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.32145464 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.940284884 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.887463693 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.881727356 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.90052004 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.887437479 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.881926936 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.202978336 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.919367888 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.898792789 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.006515896 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.896031805 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.922630951 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.883308778 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.888935555 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.914161491 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.90209755 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.917321027 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.888975415 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.901887501 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.90242547 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.884149319 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.896390716 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.896670429 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.888308844 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.893187181 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.881456606 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.91595733 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.899883673 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.899053163 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.90764099 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.008092793 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.885808636 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.191116627 seconds)
done (took 296.077174114 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.956725544 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.875069095 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.98146771 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.883951341 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.964627402 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.970935817 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.8814171 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.880826943 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.880972273 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.281895848 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.88084838 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.891117588 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.877662949 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.881285908 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.966299558 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.88416507 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.881819277 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.222185403 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.885742974 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.956932291 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.884552435 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.882152886 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.884356238 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.264584756 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.884146234 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.878086124 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.956655543 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.885815197 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.228875132 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.879831029 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.879506786 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.228376819 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.97705272 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.903171737 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.894502419 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.892695344 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.967231888 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.891118724 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.967323264 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.968614515 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.985010882 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.925932652 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.884715281 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.880319035 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.889864726 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.886813343 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.883347186 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.923177758 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.885536439 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.883500144 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.224859231 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.896277643 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.88546938 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.883793753 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.883732417 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.916807295 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.883912104 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.887346824 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.977127565 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.886994909 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.949454425 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.266232191 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.283187778 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.886873724 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.881043894 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.884430949 seconds)
  done (took 185.400396157 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.953681281 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.963659632 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.95458764 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.891173639 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.936087549 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.954411106 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.891803298 seconds)
  done (took 15.356481808 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.893290258 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.888637378 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.940271188 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.940420097 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.887419944 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.036100494 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.887770304 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.897694649 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.885573585 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.938703582 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.888140229 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.887669523 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.893798988 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.889304016 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.93869169 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.899595205 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.005790705 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.889523414 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.889273973 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.039746158 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.886111438 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.895064506 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.942273332 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.899248017 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.890311035 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.894015044 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.472642417 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.889423786 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.886841808 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.889463586 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.886082794 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.929938788 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.890648199 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.886406062 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.886727717 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.004954734 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.88941849 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.886922194 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.88940013 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.884383698 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.889616752 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.89034039 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.889556054 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.887436228 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.88999121 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.911850997 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.889614472 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.889910507 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.889288492 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.890015055 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.94086215 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.890530725 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.887556799 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.888528217 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.945699463 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.897434091 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.891702238 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.887589764 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.891674632 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.887668571 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.041275999 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.941012536 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.890288378 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.940647618 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.890786554 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.892233786 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.890739852 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.890654687 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.988261998 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.890796392 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.941297778 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.888394505 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.050608634 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.914146744 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.892605731 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.893219361 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.894472408 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.891105275 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.885355302 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.897419526 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.888220425 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.892438287 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.897664216 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.889301988 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.890301961 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.003926364 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.999979254 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.889455152 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.905652135 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.899447613 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.889818438 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.944255513 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.892623544 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.890215219 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.950476436 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.010281403 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.947190991 seconds)
  done (took 207.826065387 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.897326155 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.899968712 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.893758862 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.909608477 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.893061892 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.892567267 seconds)
  done (took 13.203201516 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.896095945 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.893218899 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.891791964 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.892236312 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.892436923 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.893169599 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.892766456 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.8940613 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.895617035 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.892315705 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.891695879 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.893621752 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.892180139 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.893172802 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.892708373 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.891637196 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.89366128 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.888762437 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.892097373 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.892544516 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.049659359 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.891977508 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.892233574 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.892483614 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.895606454 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.891614267 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.900492451 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.891901369 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.891149955 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.897765349 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.895793719 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.892251696 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.892431084 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.898831089 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.897054013 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.892885188 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.896585063 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.893151347 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.88904832 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.892416526 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.89193182 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.892607676 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.89162902 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.892637908 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.893083071 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.895592826 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.896299224 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.899457512 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.890776569 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.890426562 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.891476307 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.889591686 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.891054767 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.891761123 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.891924014 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.896991556 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.895622184 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.89132406 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.889824985 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.890395474 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.891500154 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.890536729 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.890712626 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.894954332 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.887072977 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.890800488 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.890932549 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.893525636 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.890890474 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.889230402 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.890506436 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.88690181 seconds)
  done (took 139.252691857 seconds)
done (took 562.863929954 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.951246529 seconds)
  done (took 8.765899644 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.910446914 seconds)
  done (took 8.761704659 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.419312335 seconds)
  done (took 10.238380818 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.901246867 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.937582224 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.898677564 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.89763148 seconds)
  done (took 29.474327886 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.930581076 seconds)
  done (took 8.747716755 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.910668876 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.887109665 seconds)
  done (took 15.642669985 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.917981941 seconds)
  done (took 8.736392643 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.039809556 seconds)
  done (took 8.882568924 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.899744458 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.924308543 seconds)
  done (took 15.653651516 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.872173408 seconds)
  done (took 8.689299566 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.489298159 seconds)
  done (took 11.391021902 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.909763935 seconds)
  done (took 8.820026346 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.948035839 seconds)
  done (took 8.765512979 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.970068449 seconds)
  done (took 8.78709336 seconds)
done (took 163.168972867 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.889445699 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.886904844 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.885901518 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.887704622 seconds)
  done (took 29.36663222 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.926802929 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.926667105 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.928778997 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.938071799 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.930334424 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.927144231 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.920216288 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.919153244 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.938511291 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.9306331 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.929892723 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.928920548 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.92807613 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.91850874 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.930448711 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.92875074 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.937797037 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.928795863 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.920057253 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.931131013 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.894325738 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.938650693 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.930953435 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.893864837 seconds)
  done (took 48.044454559 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.093142827 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.965102236 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.048376929 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.947353711 seconds)
  done (took 9.87245512 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.945416311 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.947611441 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.959936802 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.998074213 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.020709748 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.956549272 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.920259481 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.914914797 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.90071699 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.948341789 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.022333536 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.942034965 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.032586321 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.893648458 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.081461165 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.894701368 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.893981018 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.947206251 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.997821961 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.012400908 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.89500305 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.945745274 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.948620829 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.942447936 seconds)
  done (took 48.781736592 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.893000004 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.900512009 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.899156966 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.892997576 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.892892328 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.894124235 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.899793705 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.894471229 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.915016036 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.894733388 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.892354612 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.89328024 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.89332294 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.894172138 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.89404336 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.906214733 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.907939938 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.893744873 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.897695873 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.900231521 seconds)
  done (took 39.767556628 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.889659782 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.742164027 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.239298153 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.144488875 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.888838166 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.88952086 seconds)
  done (took 31.612834319 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.907438052 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.899861885 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.894357751 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.952657907 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.039712135 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.904104993 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.893952662 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.906571348 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.944011926 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.96347421 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.915426437 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.923726091 seconds)
  done (took 24.965062346 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.890221989 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.893290083 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.890621345 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.909335353 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.90577873 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.902257511 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.900042727 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.888449982 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.907078339 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.913920154 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.903268549 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.906403212 seconds)
  done (took 44.633055816 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977987707 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.776312665 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.954186367 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.604918879 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.424987749 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.100892683 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.410728055 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.231921723 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.892769382 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.161818989 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.763992577 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124798819 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.149484764 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893742449 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.965106843 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.350839277 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.184871584 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12174052 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916332139 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.542538756 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003113775 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.48799032 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.581258208 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.012849454 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.10737204 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.028381982 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.154799724 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.851997646 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025611782 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927370538 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903709739 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.893548048 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.167308118 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.265984594 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025412807 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901632392 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.544405577 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.609834935 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.875696532 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.573705084 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.795925948 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.014933492 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900087722 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891384361 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.824902736 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.357845398 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341650441 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.894366633 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.592753559 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.887181569 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90080342 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977235177 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.890527783 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.701591001 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840999871 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.166731927 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.885003488 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889186503 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.456188818 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.950686273 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.457004101 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.943283013 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.988684303 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.567112038 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.360321584 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.048860149 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.900158892 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.900052322 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.83211018 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.583227945 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.012045828 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.042282054 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.91591125 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.546496236 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.193506123 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.921292702 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.967706684 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193458614 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.615032737 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.943973025 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.124351502 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.852776441 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832052861 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.733809928 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.830867408 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.16659916 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930246842 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.572569371 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933275156 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.23556795 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.905498986 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913421895 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900852683 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.1182656 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.777870295 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892308437 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.612275285 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.171087557 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920057714 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.235883538 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.83105313 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.900158319 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153208912 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.104989529 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.068454292 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.465565053 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047643239 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893261376 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.974713545 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.755489454 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.01243556 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.168426442 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.95426035 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.982792717 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021343947 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.855998547 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202695918 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926206281 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.071910496 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.870764518 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154717832 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.229301743 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.149832111 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983315559 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.900638462 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.89908485 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.636560045 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.517393991 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.123361325 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.900519664 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.330824378 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.021757587 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.901169884 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834181778 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.559273505 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.865413402 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.00915946 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.122708356 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.805907411 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.286160317 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.833241519 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.044511184 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.014651065 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.122809486 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.555696983 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.971787115 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.15942149 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335828837 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.197016928 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022705072 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919256388 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018869646 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922483324 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.281573701 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.26621032 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.904161218 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.903880596 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.634724255 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.968979868 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902568015 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.905466032 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.697105804 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189743159 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.932027537 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.900884765 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.837202162 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.915539339 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983945538 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.906907084 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.911129922 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.427825871 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.65336736 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.913999031 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.557094243 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.126969327 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911940967 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.571406108 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.079042904 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.985001457 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.177317242 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.965607419 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.836068284 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.605418038 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.605830781 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901710051 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.837274149 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.902845094 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91301717 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913751915 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.124854038 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.185174658 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.949158575 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.618095798 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.008326718 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913842056 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.907910343 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903634728 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.40380466 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.989284173 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.456607459 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.02462595 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040056315 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.917062298 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.836756731 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.907477478 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.908115741 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.903175675 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.859554991 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955482829 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.578053685 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348919028 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.163166077 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.548867932 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921810387 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.59373799 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.02378686 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.933128543 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.652374789 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934433634 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.015094646 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983433006 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.914599465 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.624081228 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.677958492 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.476359981 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217019122 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.228723553 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351315099 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.352491464 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.238437737 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.247964221 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140513315 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.434356386 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.967651811 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.255572274 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849012665 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989994723 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.558043114 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.256401674 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920530373 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132885343 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295322812 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.711270082 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.055982576 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.116915239 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940132931 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.795661879 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.943630048 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.579674595 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05971988 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.720992751 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.126197903 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243412256 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.643312513 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.999051803 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.904465067 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.621519956 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989760443 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.616476662 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.267973209 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.379453213 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.980450271 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3921256 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.907366042 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.35215759 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.264818942 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.182190363 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.104661073 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842816807 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.918566762 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.918221245 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.908084608 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.887113571 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.802473995 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.179033469 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918153043 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142685033 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.117494891 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.289007789 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.81816889 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.913354514 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908115585 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210049803 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.706270157 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151271012 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.310689844 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.49712954 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920081955 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.843723766 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843558509 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.610883087 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.908706035 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.884799056 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136395663 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.017073026 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.863823957 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.345025609 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.229186546 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.164064824 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.922957864 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.188972457 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.189357025 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.675787713 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938306095 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.010138993 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.655132461 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.643627 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.131485779 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.145063584 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.708281065 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.140356774 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.981409972 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.88304211 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.909911588 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.125350476 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.132473095 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.881870343 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151214812 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.63450971 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.922586516 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28995138 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973813505 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.877044838 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.113689148 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.001785723 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920609908 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9901505 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920347848 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.922363788 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.92188013 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958252272 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.884345705 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.036159831 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.924103711 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001699697 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.00307567 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.492963751 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.921948176 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195775481 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273037771 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.250654614 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97498768 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.91159036 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.912019721 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845825702 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051677343 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.355869927 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.185687606 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.041229371 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.052891622 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936708594 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.662469833 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.248782858 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233483884 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186791406 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.806633092 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.912166559 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.999783468 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.136231409 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923716542 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.124705825 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.144651751 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231649743 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.381459356 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.109569523 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361948004 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187648674 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.280711919 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.913103566 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.502562952 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.929464942 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.699954004 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.952553014 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.887647782 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19106031 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924470842 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.301480798 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.935550069 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.109783647 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.366131079 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.587739822 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.269969397 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.904383921 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.970041085 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.196289192 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.313297076 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230857861 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99608483 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92488682 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.616092003 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05183076 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.846105071 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.168205452 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.914000674 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125468158 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.626532519 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.925035155 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198283464 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229059089 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.912569514 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.873534242 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965441666 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.924423947 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.139658989 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.187132318 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.166238293 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925211778 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.914975267 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.732702943 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.195838203 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977936162 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84958833 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.919475051 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014451875 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.164213324 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936012308 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.4321698 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.618664462 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218975261 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.833678817 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937408267 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400050892 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.370259915 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252638946 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.448338469 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.150827975 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.474682844 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.821605156 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.297499141 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.921213695 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.375357009 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.301268862 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.920267882 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.477565514 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035989388 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.195125313 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.245676567 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.92708184 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.711378191 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.954094572 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140934836 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.511330587 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860565779 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.921085046 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.979227059 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.917207875 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.049488604 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.928537086 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.907818956 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.850690085 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.765636014 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.410467262 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.924107144 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.908946511 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.673083482 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.534608633 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031241734 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074381595 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923736223 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.650181677 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.210536313 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.173991465 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.478009035 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.996871001 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.921483034 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917873657 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.846931171 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.114911207 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.115962309 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220451362 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.321641595 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.035571023 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.922101178 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.134064245 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130335164 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.87658697 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067514873 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358885589 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.03829425 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.849801058 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.633076867 seconds)
  done (took 1704.674473406 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.941211772 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.936317294 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.919089801 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.941276211 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.93938945 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.928832192 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.915508174 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.912007964 seconds)
  done (took 57.281338638 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.90231478 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.120764708 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.909246549 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.900321947 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.925626652 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.89770082 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.097656939 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.91052325 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.931528584 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.905565376 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.895541223 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.908880126 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.226527776 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.918267436 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.892072773 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.911031299 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.906662885 seconds)
  done (took 75.001375758 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.888923454 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.06461527 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.905770871 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.912701641 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.787796581 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.883909895 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.834236581 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.902201243 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.886091643 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.058337175 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.219723686 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.891402621 seconds)
  done (took 90.053876317 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.89876904 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.889754271 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.889114773 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.890165484 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.890266421 seconds)
  done (took 11.279010379 seconds)
done (took 2217.163113557 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.121185543 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.11085046 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.116478158 seconds)
  done (took 6.040150372 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.030491275 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.078613009 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.198879262 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.204796033 seconds)
  done (took 10.328066274 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.176307822 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.254099559 seconds)
  done (took 6.242133673 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.210405526 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.917671167 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.304910681 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.882283989 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.883865286 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.883925679 seconds)
  done (took 22.468134826 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.887919608 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.889357067 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.886223516 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.888539813 seconds)
  done (took 9.364599495 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.866630921 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.626770177 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.871353087 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.888117306 seconds)
  done (took 21.064731747 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.633356134 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.009234096 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.630677606 seconds)
  done (took 9.085962415 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.483973472 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.537544681 seconds)
  done (took 9.833952205 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.173537887 seconds)
  done (took 4.015873629 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.945704388 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.18853764 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.466245947 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.496581999 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.577901817 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.174774902 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.264340363 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.15322181 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.367826176 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.406681743 seconds)
  done (took 25.884402447 seconds)
done (took 139.694371309 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.464953232 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.962483502 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.114889499 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.292094785 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.164897235 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.115226145 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.136401682 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.294737701 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.821441712 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.805733071 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.287981577 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.156122806 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.083862915 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.955752176 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.093339357 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.953113447 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.147351314 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.291457392 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.972181706 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.189922269 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.149288976 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.929665966 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.125027523 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.943109215 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.151317988 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.069471999 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.474574914 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.956874387 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.117512923 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.483643064 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.070948474 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.329566871 seconds)
  done (took 169.949128559 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.910724859 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.911681037 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.910177977 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.906436269 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.384018361 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.905684909 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.904548331 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.90203216 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.192433749 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.177948994 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.901074829 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.36429438 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.900941497 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.898799909 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.897633886 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.897927266 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.359379646 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.894226684 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.891778904 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.896127484 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.894763125 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.203871465 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.893863185 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.237046531 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.359844033 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.900285923 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.879876704 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.898243702 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.899223002 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.899086891 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.901808641 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.87863327 seconds)
  done (took 209.700898911 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.876795508 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.880678758 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.879269439 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.878843293 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.888063532 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.886744377 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.881054166 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.87874305 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.473205664 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.476959651 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.895438884 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.889257554 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.914878721 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.87891919 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.894597825 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.879150295 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.895663214 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.889328741 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.892062103 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.891719307 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.895406493 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.568465382 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.896820812 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.56565585 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.890471651 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.886890538 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.881146184 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.892754973 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.894303931 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.893058191 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.898081689 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.880483687 seconds)
  done (took 220.797502292 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.074619218 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.886583663 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.888068036 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.821379144 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.888402669 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.886492263 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.882190339 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.070972329 seconds)
  done (took 19.229476687 seconds)
done (took 621.527888607 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.381214316 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.227998597 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.074000849 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.911774005 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.151403735 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.946967691 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.906707942 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.974886379 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.64143498 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.984352658 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.55896761 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.93165692 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.647280053 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.937302768 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.037147924 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.964729492 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.455901559 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.545811561 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.085802235 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.972756469 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.087486799 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.875499006 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.994079486 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.665304399 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.670077373 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.92273425 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.08444304 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.465338763 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.919779646 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.076766317 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.667928391 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.298831971 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.923742271 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.906595905 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.965809731 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.942573841 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.257418383 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.922585849 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.033675595 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.675426458 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.977654551 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.528364611 seconds)
  done (took 104.011116878 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.878100341 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.87639405 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.876105905 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.877577391 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.877870117 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.877160181 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.87613524 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.876222414 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.87753726 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.875728857 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.87707367 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.878318183 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.876625304 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.877969717 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.877470123 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.876340137 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.877889851 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.879904322 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.877956334 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.876092963 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.87788953 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.876503119 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.890735508 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.877612031 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.87820299 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.877949458 seconds)
  done (took 50.647984068 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.890554182 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.052687951 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.130152568 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.913617464 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.889748493 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.893508444 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.908689867 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.897176636 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.89226104 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.891900672 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.995696622 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.898301037 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.911126757 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.129353241 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.909587732 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.891798719 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.891111602 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.891599182 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.060864308 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.909070802 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.911822508 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.896760697 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.912139866 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.902086698 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.890280694 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.889470143 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.891812661 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.334442468 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.895678504 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.988740321 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.945420925 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.910861505 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.254660435 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.133135441 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.943219842 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.8943316 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.884526315 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.993179856 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.885516401 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.8794572 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.898548534 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.885780079 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.118561869 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.384038857 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.893417107 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.878983973 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.330432036 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.995674391 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.918284975 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.887524502 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.114948905 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.896185175 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.87806627 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.876664664 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.912515822 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.882090347 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.876339215 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.174806001 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.889999888 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.894259215 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.882566305 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.876300721 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.051617286 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.885024251 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.035530468 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.884475519 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.881002608 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.8748561 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.110316723 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.890324229 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.373512069 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.887573724 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.870782345 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.974579837 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.035677243 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.351040573 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.882394589 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.045058695 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.252345752 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.893370999 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.874807586 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.300724433 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.896641543 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.875329631 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.869013078 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.868616957 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.869004045 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.915260236 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.884852978 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.298893691 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.376231447 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.185561254 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.895935349 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.883656912 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.868919021 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.165724963 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.877352024 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.867917519 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.098723036 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.382634961 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.884376553 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.874943733 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.358125253 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.884668416 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.887298387 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.875711876 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.108258041 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.886714712 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.915481087 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.868599858 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.873836081 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.87000916 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.887502596 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.875069759 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.868334292 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.348751758 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.994358029 seconds)
  done (took 232.948566842 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.862395074 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.887759975 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.861810129 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.892378041 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.861470586 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.867213507 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.862402292 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.859160961 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.866155776 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.856450281 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.857199883 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.856113502 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.851866021 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.861815318 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.974449923 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.858601819 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.461491767 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.850394559 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.851373639 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.856622166 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.524763406 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.859457193 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.851528513 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.865071962 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.853710502 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.854875401 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.86190348 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.964778963 seconds)
  done (took 167.389000512 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.857143916 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.972907923 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.878252289 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.884799149 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.869024217 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.854977242 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.87950596 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.872910023 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.862249761 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.85589622 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.855651018 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.918526099 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.869636796 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.955233241 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.889200825 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.888888873 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.960956458 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.865059762 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.856499278 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.855144758 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.886224998 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.852979735 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.917755009 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.985909244 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.877610664 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.974799797 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.864929781 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.859965237 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.85745679 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.979127759 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.874678187 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.92036736 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.887988153 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.876636115 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.981444565 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.977048293 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.964766949 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.889075359 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.862821523 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.857170098 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.857474951 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.846232526 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.975109589 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.881533154 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.8603104 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.96871164 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.880635457 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.859750928 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.868988768 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.85735599 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.87228121 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.876655224 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.926140596 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.994031497 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.896638586 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.883446178 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.883241601 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.14362196 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.868230539 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.957903605 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.852807277 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.97948802 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.882948616 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.847028942 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.859503846 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.864408575 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.888595282 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.89084918 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.962832093 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.86754472 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.958511387 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.896120028 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.867276664 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.85858808 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.861199267 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.977678917 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.979901178 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.896480175 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.897494353 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.89260252 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.855554229 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.8587851 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.848342257 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.878206559 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.864862933 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.978286769 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.981845668 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.869154103 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.862067427 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.863208673 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.862412682 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.885956674 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.985896073 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.899544419 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.956044071 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.928333766 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.937375011 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.87695126 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.87344066 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.864616885 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.924159667 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.878686306 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.872473816 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.192708978 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.932433401 seconds)
  done (took 201.508622664 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.315560636 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.918256331 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.918232867 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.189248835 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.293389379 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.664298919 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.910672168 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.913004172 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.934800561 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.096863868 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.984192398 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.930106648 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.898518038 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.885282899 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.910868975 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.931718919 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.929428499 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.240247727 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.036692539 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.02967255 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.893710422 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.203815116 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.227839996 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.308876617 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.947962104 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.257918499 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.588398385 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.055423494 seconds)
  done (took 61.209759275 seconds)
done (took 819.524143754 seconds)
SAVING RESULT...
DONE!
